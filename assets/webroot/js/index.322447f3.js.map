{"version":3,"file":"js/index.322447f3.js","mappings":"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KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,GAAI,GAAI,IAAK,KACd,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,EAAG,IAAK,KACb,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,EAAG,GAAI,KACb,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,IAAK,EAAG,IAAK,KACd,CAAC,IAAK,IAAK,IAAK,KAChB,CAAC,IAAK,EAAG,GAAI,KACb,CAAC,IAAK,GAAI,IAAK,KACf,CAAC,IAAK,EAAG,GAAI,KACb,CAAC,IAAK,GAAI,GAAI,KACd,CAAC,GAAI,EAAG,GAAI,KACZ,CAAC,GAAI,GAAI,GAAI,KACb,CAAC,GAAI,EAAG,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","sources":["webpack:///webpack/runtime/chunk loaded","webpack:///../../core/src/Factory.ts","webpack:///../../core/src/ObjectId.ts","webpack:///../../core/src/filer/HCFiler.ts","webpack:///../../core/src/filer/DeepCloneFiler.ts","webpack:///../../core/src/utils/array.ts","webpack:///../../core/src/EventDispatcher.ts","webpack:///../../core/src/history/EraseEntityData.ts","webpack:///../../core/src/BaseObject.ts","webpack:///../../core/src/history/CreateObjectData.ts","webpack:///../../core/src/history/HistoryRecord.ts","webpack:///../../core/src/history/RemoveObjectData.ts","webpack:///../../core/src/database/ObjectCollection.ts","webpack:///../../core/src/history/AllObjectData.ts","webpack:///../../core/src/history/ObjectAllDataHistoryRecord.ts","webpack:///../../core/src/history/CommandHistoryRecord.ts","webpack:///../../core/src/history/HistoricManager.ts","webpack:///../../core/src/database/BaseDatabase.ts","webpack:///../../aop/src/index.ts","webpack:///../../core/src/database/BlockTableRecord.ts","webpack:///../../core/src/records/Record.ts","webpack:///../../core/src/records/RecordTable.ts","webpack:///../../engine/src/polyfill/index.ts","webpack:///../../engine/src/app/appConfig.ts","webpack:///../../engine/src/loaders/hc3d/HC3DLoader.ts","webpack:///../../engine/src/loaders/hc3d/HC3DFileLoader.ts","webpack:///../../engine/src/enums/UpdateFlag.ts","webpack:///../../engine/src/enums/event.ts","webpack:///../../engine/src/utils/utils.ts","webpack:///../../engine/src/record/autoRecord.ts","webpack:///../../engine/src/record/MaterialRecord.ts","webpack:///../../engine/src/types/selectControl.ts","webpack:///../../engine/src/types/event.ts","webpack:///../../engine/src/types/camera.types.ts","webpack:///../../engine/src/types/animation.types.ts","webpack:///../../engine/src/types/editor.types.ts","webpack:///../../engine/src/types/entity.types.ts","webpack:///../../engine/src/types/eventSystem.types.ts","webpack:///../../engine/src/types/renderTypes.ts","webpack:///../../engine/src/types/interaction.types.ts","webpack:///../../engine/src/types/viewer.types.ts","webpack:///../../engine/src/utils/keyenum.ts","webpack:///../../engine/src/utils/file.ts","webpack:///../../engine/src/utils/array.ts","webpack:///../../engine/src/utils/math.ts","webpack:///../../engine/src/utils/Box3.ts","webpack:///../../engine/src/utils/texture.ts","webpack:///../../engine/src/utils/gui.ts","webpack:///../../engine/src/utils/color.ts","webpack:///../../engine/src/utils/ocean.ts","webpack:///../../engine/src/utils/logUtils.ts","webpack:///../../engine/src/utils/curveUtils.ts","webpack:///../../engine/src/utils/setDracoConfig.ts","webpack:///../../engine/src/utils/metadata.ts","webpack:///../../engine/src/utils/renderPoints.ts","webpack:///../../engine/src/utils/vector.ts","webpack:///../../engine/src/animates/Animation.ts","webpack:///../../engine/src/animates/MoveAnimation.ts","webpack:///../../engine/src/animates/AnimationGroup.ts","webpack:///../../engine/src/animates/PathAnimation.ts","webpack:///../../engine/src/animates/RotateAnimation.ts","webpack:///../../engine/src/core/AppEvent.ts","webpack:///../../engine/src/entitys/Entity.ts","webpack:///../../engine/src/app/AppStore.ts","webpack:///../../engine/src/core/BaseDom.ts","webpack:///../../engine/src/editor/GuiSelectTool.ts","webpack:///../../engine/src/app/AppCache.ts","webpack:///../../engine/src/core/BaseTextureRecord.ts","webpack:///../../engine/src/utils/babylonUtils.ts","webpack:///../../engine/src/utils/regx.ts","webpack:///../../engine/src/record/TextureRecord.ts","webpack:///../../engine/src/record/types.ts","webpack:///../../engine/src/record/utils.ts","webpack:///../../engine/src/record/PBRMaterialRecord.ts","webpack:///../../engine/src/entitys/ImportEntity.ts","webpack:///../../engine/src/utils/zIndex.ts","webpack:///../../engine/src/editor/interface.ts","webpack:///../../engine/src/guis/MultiLine2.ts","webpack:///../../engine/src/guis/Gui.ts","webpack:///../../engine/src/ui/SelectMarquee.ts","webpack:///../../engine/src/editor/select/SelectBox.ts","webpack:///../../engine/src/editor/select/SelectBase.ts","webpack:///../../engine/src/editor/select/SelectSet.ts","webpack:///../../engine/src/editor/SelectControl.ts","webpack:///../../engine/src/editor/gizmo/Gizmos.ts","webpack:///../../engine/src/editor/gizmo/AxisDragGizmo.ts","webpack:///../../engine/src/editor/gizmo/PlaneDragGizmo.ts","webpack:///../../engine/src/editor/gizmo/PositionGizmo.ts","webpack:///../../engine/src/editor/gizmo/PlaneRotationGizmo.ts","webpack:///../../engine/src/editor/gizmo/RotationGizmo.ts","webpack:///../../engine/src/editor/gizmo/AxisScaleGizmo.ts","webpack:///../../engine/src/editor/gizmo/ScaleGizmo.ts","webpack:///../../engine/src/editor/gizmo/GizmoManager.ts","webpack:///../../engine/src/editor/TransformControl.ts","webpack:///../../engine/src/editor/KeyboardControl.ts","webpack:///../../engine/src/editor/MouseControl.ts","webpack:///../../engine/src/core/autoUpdate.ts","webpack:///../../engine/src/core/autoRecord.ts","webpack:///../../engine/src/core/BaseComponent.ts","webpack:///../../engine/src/core/Factory.ts","webpack:///../../engine/src/core/HCFiler.ts","webpack:///../../engine/src/core/BaseWidget.ts","webpack:///../../engine/src/editor/services/GetPointService.ts","webpack:///../../engine/src/editor/DragPointsManager.ts","webpack:///../../engine/src/editor/DragControl.ts","webpack:///../../engine/src/editor/Editor.ts","webpack:///../../engine/src/contants/constants.ts","webpack:///../../engine/src/editor/HighlightManager.ts","webpack:///../../engine/src/viewer/cameras/framingBehavior.ts","webpack:///../../engine/src/viewer/cameras/BaseCamera.ts","webpack:///../../engine/src/viewer/cameras/CustomArcRotateCameraPointersInput.ts","webpack:///../../engine/src/viewer/cameras/trackpadInput/trackpadUtils.ts","webpack:///../../engine/src/viewer/cameras/trackpadInput/ArcRotateCameraTrackpadInput.ts","webpack:///../../engine/src/viewer/cameras/trackpadInput/FreeCameraTrackpadInput.ts","webpack:///../../engine/src/viewer/cameras/ArcRotateCameraControl.ts","webpack:///../../engine/src/utils/os.ts","webpack:///../../engine/src/viewer/cameras/FreeCameraControl.ts","webpack:///../../engine/src/viewer/cameras/CameraManager.ts","webpack:///../../engine/src/utils/sceneEnv.ts","webpack:///../../engine/src/utils/antimationUtils.ts","webpack:///../../engine/src/viewer/scenes/Scene.ts","webpack:///../../engine/src/viewer/scenes/SceneEffectManager.ts","webpack:///../../engine/src/viewer/ViewHelperAxes.ts","webpack:///../../engine/src/viewer/scenes/SceneHelper.ts","webpack:///../../engine/src/viewer/Viewer.ts","webpack:///../../engine/src/materials/commonMaterials.ts","webpack:///../../engine/src/entitys/Solid3D.ts","webpack:///../../engine/src/entitys/Box.ts","webpack:///../../engine/src/entitys/curves/Curve.ts","webpack:///../../engine/src/entitys/curves/Lines.ts","webpack:///../../engine/src/entitys/curves/Line.ts","webpack:///../../engine/src/entitys/curves/Polyline.ts","webpack:///../../engine/src/entitys/Sphere.ts","webpack:///../../engine/src/entitys/Cylinder.ts","webpack:///../../engine/src/entitys/Plane.ts","webpack:///../../engine/src/entitys/Capsule.ts","webpack:///../../engine/src/entitys/Torus.ts","webpack:///../../engine/src/entitys/Ground.ts","webpack:///../../engine/src/entitys/lights/Light.ts","webpack:///../../engine/src/entitys/lights/PointLight.ts","webpack:///../../engine/src/entitys/lights/HemisphericLight.ts","webpack:///../../engine/src/entitys/lights/SpotLight.ts","webpack:///../../engine/src/entitys/lights/DirectionalLight.ts","webpack:///../../engine/src/entitys/Tube.ts","webpack:///../../engine/src/entitys/building/Door.ts","webpack:///../../engine/src/entitys/building/tools.ts","webpack:///../../engine/src/entitys/building/Windows.ts","webpack:///../../engine/src/entitys/building/WallPlane.ts","webpack:///../../engine/src/entitys/building/Wall.ts","webpack:///../../engine/src/particleSystem/Particle.ts","webpack:///../../engine/src/database/DataBindTable.ts","webpack:///../../engine/src/database/GroupTableRecord.ts","webpack:///../../engine/src/database/InteractionTable.ts","webpack:///../../engine/src/database/Database.ts","webpack:///../../engine/src/app/Application.ts","webpack:///../../engine/src/viewer/CustomLoadingScreen.ts","webpack:///../../engine/src/viewer/FilePreviewer.ts","webpack:///../../engine/src/viewer/MaterialViewer.ts","webpack:///../../engine/src/command/undo.ts","webpack:///../../engine/src/command/CommandManager.ts","webpack:///../../engine/src/command/CommandRegister.ts","webpack:///../../engine/src/command/CommandWrapper.ts","webpack:///../../engine/src/record/StandardMaterialRecord.ts","webpack:///../../engine/src/actions/MoveAction.ts","webpack:///../../engine/src/actions/Actions.ts","webpack:///../../engine/src/animates/MaterialAnimation.ts","webpack:///../../engine/src/interaction/widgets/OpenWidget.ts","webpack:///../../engine/src/interaction/widgets/MoveWidget.ts","webpack:///../../engine/src/utils/eval.ts","webpack:///../../engine/src/interaction/widgets/RotateWidget.ts","webpack:///../../engine/src/interaction/widgets/DisplayWidget.ts","webpack:///../../engine/src/interaction/widgets/ScaleWidget.ts","webpack:///../../engine/src/interaction/widgets/MoveCameraWidget.ts","webpack:///../../engine/src/interaction/widgets/SetVariableWidget.ts","webpack:///../../engine/src/interaction/widgets/WaitWidget.ts","webpack:///../../engine/src/interaction/widgets/SelectWidget.ts","webpack:///../../engine/src/interaction/widgets/DataFeedbackWidget.ts","webpack:///../../engine/src/interaction/widgets/HighlightWidget.ts","webpack:///../../engine/src/utils/interactionUtils.ts","webpack:///../../engine/src/interaction/widgets/DispatchWidget.ts","webpack:///../../engine/src/interaction/widgets/OpacityWidget.ts","webpack:///../../engine/src/interaction/Interaction.ts","webpack:///../../engine/src/interaction/conditions/Compare.ts","webpack:///../../engine/src/interaction/conditions/Condition.ts","webpack:///../../engine/src/dataBind/DataBind.ts","webpack:///../../engine/src/utils/fetch.ts","webpack:///../../engine/src/guis/StackPanelGui.ts","webpack:///../../engine/src/guis/Video.ts","webpack:///../../engine/src/guis/VideoGui.ts","webpack:///../../engine/src/guis/CanvasControl.ts","webpack:///../../engine/src/particleSystem/SubEmitter.ts","webpack:///../../engine/src/particleSystem/emiters/Emiter.ts","webpack:///../../engine/src/particleSystem/emiters/ConeEmiter.ts","webpack:///../../engine/src/particleSystem/emiters/RadiusEmiter.ts","webpack:///../../engine/src/particleSystem/emiters/CylinderEmitter.ts","webpack:///../../engine/src/particleSystem/emiters/DirectedCylinderEmitter.ts","webpack:///../../engine/src/particleSystem/emiters/HemisphericEmiter.ts","webpack:///../../engine/src/particleSystem/emiters/SphereEmiter.ts","webpack:///../../engine/src/particleSystem/emiters/types.ts","webpack:///../../engine/src/particleSystem/ParticleSystem.ts","webpack:///../../engine/src/particleSystem/ParticleSystemGroup.ts","webpack:///../../engine/src/records/CollectionRecord.ts","webpack:///../../engine/src/records/GroupRecord.ts","webpack:///../../engine/src/loaders/dxf/createArcForLWPolyline.ts","webpack:///../../engine/src/loaders/dxf/DXFLoader.ts","webpack:///../../engine/src/loaders/dxf/utils.ts","webpack:///./utils/utils.ts","webpack:///./commands/commandEnum.ts","webpack:///./apis/index.ts","webpack:///./utils/message.ts","webpack:///./utils/auth.ts","webpack:///./utils/axios.ts","webpack:///./intance.ts","webpack:///./utils/importScript.ts","webpack:///./extension/ht.ts","webpack:///./utils/common.ts","webpack:///./extension/HC2DDom.ts","webpack:///./extension/Hc2DGui.ts","webpack:///./extension/HC2DTexture.ts","webpack:///./utils/component.ts","webpack:///./deploy.tsx","webpack:///./utils/loadFile.ts","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/jsonp chunk loading","webpack:///webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import { BaseObject } from \"./BaseObject\";\n\n/**\n * 对象工厂,通过注册 和暴露的创建方法,动态创建对象\n */\nexport class HCFactory {\n  private constructor() {\n    //不能实例化\n  }\n  private objectNameMap = new Map<string, any>();\n  private static factory = new HCFactory();\n  static RegisterObject(C: typeof BaseObject) {\n    const key = C.type;\n    if (!key) {\n      throw new Error(C.name + \"实体缺少注册类型\");\n    }\n    if (!this.factory.objectNameMap.has(key)) {\n      this.factory.objectNameMap.set(key, C);\n    } else {\n      console.warn(\"无需重复注册\" + key);\n    }\n  }\n  static RegisterObjectAlias(C: any, name: string) {\n    this.factory.objectNameMap.set(name, C);\n  }\n  static CreateObject<T = BaseObject>(name: string, option?: any): T {\n    let C = this.factory.objectNameMap.get(name);\n    if (C) return new C(option);\n  }\n  static isRegister(type: string) {\n    return this.factory.objectNameMap.has(type);\n  }\n  static RegisterComponent(C: typeof BaseObject) {\n    this.factory.objectNameMap.set(C.type, C);\n  }\n  static RemoveComponent(type: string) {\n    this.factory.objectNameMap.delete(type);\n  }\n}\n\n//可以通过添加装饰器 在类前面(@Factory),自动注册工厂的序列化\nexport function Factory(target: any) {\n  HCFactory.RegisterObject(target);\n}\n","import { BaseObject } from \"./BaseObject\";\n\n/*\n对象拥有Id属性,用来记录引用关系.\n通过id可以得到对应的关联实体,或者记录实体的关联关系.\n\nObjectId必须使用 Database分配(db里面会存id的列表,以便同时更新id指向实体)\n*/\nexport class ObjectId<T extends BaseObject = BaseObject> {\n  private index: number;\n  private object?: T;\n\n  //对外隐藏构造函数,如果需要构造一个id,请使用 Create 静态方法.\n  constructor(index = -1, obj?: T) {\n    this.index = index;\n    this.object = obj;\n  }\n\n  get isErase(): boolean {\n    return !this.object || this.object.IsErase;\n  }\n  set Object(v: T | undefined) {\n    this.object = v;\n  }\n  get Object(): T | undefined {\n    return this.object;\n  }\n  get Index(): number {\n    return this.index;\n  }\n  set Index(index: number) {\n    this.index = index;\n  }\n  toJSON() {\n    return this.index;\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { HCFactory } from \"../Factory\";\nimport { ObjectId } from \"../ObjectId\";\nimport { BaseDatabase } from \"../database/BaseDatabase\";\nimport { ISerialize } from \"../types/iSerialize.types\";\nimport { IVector3 } from \"../types/math.types\";\n\n/**海创文件数据 */\nexport class HCFiler {\n  database?: BaseDatabase;\n  private readIndex = 0;\n  constructor(protected _datas: any[] = []) {}\n  get Data(): any[] {\n    return this._datas;\n  }\n  set Data(data: any[]) {\n    this._datas = data;\n    this.reset();\n  }\n  clear() {\n    this._datas.length = 0;\n    return this.reset();\n  }\n  reset() {\n    this.readIndex = 0;\n    return this;\n  }\n  write(data: any) {\n    if (data instanceof ObjectId) this._datas.push(data.Index);\n    else this._datas.push(data);\n\n    return this;\n  }\n\n  read(): any {\n    return this._datas[this.readIndex++];\n  }\n\n  //------------------------ID序列化------------------------\n  /*\n     Id关联分为三种情况:\n      1.普通关联:关联对象未被拷贝时,关联到空对象.\n      2.软关联  :关联对象未被拷贝时,关联到原先的对象.\n      3.硬关联  :对象被拷贝时,被关联的对象必须也被拷贝.\n    */\n\n  // 普通关联\n  writeObjectId(id: ObjectId): this {\n    if (id) this.write(id.Index);\n    else this.write(0);\n    return this;\n  }\n  readObjectId<T extends BaseObject = BaseObject>(): ObjectId<T> | undefined {\n    let index = this.read();\n    if (this.database) {\n      return this.database.getObjectId(index) as ObjectId<T>;\n    }\n  }\n\n  //-------2.软关联\n  writeSoftObjectId(id: ObjectId): this {\n    return this.writeObjectId(id);\n  }\n  readSoftObjectId(): ObjectId | undefined {\n    return this.readObjectId();\n  }\n\n  /**硬关联 */\n  writeHardObjectId(id: ObjectId): this {\n    return this.writeObjectId(id);\n  }\n  readHardObjectId() {\n    return this.readObjectId();\n  }\n\n  writeObject(obj: ISerialize) {\n    if (!obj) {\n      this.write(\"\");\n      return;\n    }\n    this.writeString(obj.constructor[\"type\"] || obj.constructor.name);\n    obj.writeFile(this);\n\n    return this;\n  }\n\n  readObject(obj?) {\n    let className = this.readString();\n    if (className) {\n      if (obj === undefined) {\n        obj = HCFactory.CreateObject(className);\n\n        if (!obj && className.startsWith(\"CustomComponent\")) {\n          obj = HCFactory.CreateObject(\"Component\");\n          console.error(className + \"已丢失\");\n        }\n\n        if (this.database !== undefined && \"_SetDefaultDb\" in obj)\n          obj._SetDefaultDb(this.database);\n      }\n      obj.readFile(this);\n      return obj;\n    }\n  }\n  writeString(str: string) {\n    this._datas.push(str);\n    return this;\n  }\n\n  readString(): string {\n    return this._datas[this.readIndex++] as string;\n  }\n  writeArray(arr: (string | number)[]) {\n    this.write(arr.length);\n    for (const a of arr) {\n      this.write(a);\n    }\n  }\n  readArray(count: number) {\n    let arr = this._datas.slice(this.readIndex, this.readIndex + count);\n    this.readIndex += count;\n    return arr;\n  }\n  writeAnyArray<T>(arr: T[], callback: (a: T) => void) {\n    this.write(arr.length);\n    for (const a of arr) {\n      callback.call(this, a);\n    }\n  }\n  readAnyArray<T>(callback: () => void) {\n    const count = this.read();\n    for (let i = 0; i < count; i++) {\n      callback.call(this);\n    }\n  }\n  readAnyArrayAndPush<T>(arr: T[], read: () => T) {\n    arr.length = 0;\n    const count = this.read();\n    for (let i = 0; i < count; i++) {\n      const en = read.call(this);\n      arr.push(en);\n    }\n  }\n  writeVector3(v: IVector3) {\n    this.write(v?.x);\n    this.write(v?.y);\n    this.write(v?.z);\n  }\n  readVector3(source: IVector3) {\n    const x = this.read();\n    const y = this.read();\n    const z = this.read();\n    source.x = x;\n    source.y = y;\n    source.z = z;\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { ObjectId } from \"../ObjectId\";\nimport { HCFiler } from \"./HCFiler\";\n\n/**\n * 深度拷贝文件读写\n */\nexport class DeepCloneFiler extends HCFiler {\n  constructor(public idMaping = new Map<number, ObjectId>()) {\n    super();\n  }\n\n  override readObjectId<T extends BaseObject = BaseObject>():\n    | ObjectId<T>\n    | undefined {\n    let index = this.read();\n    if (index <= 0) return;\n\n    let id = this.idMaping.get(index);\n    if (id) return id as ObjectId<T>;\n\n    id = new ObjectId<BaseObject>();\n    this.idMaping.set(index, id);\n\n    return id as ObjectId<T>;\n  }\n\n  readSoftObjectId() {\n    let id = this.readObjectId();\n    return id;\n  }\n\n  readHardObjectId() {\n    let id = this.readObjectId();\n    return id;\n  }\n\n  hardObjectIds: Set<number> = new Set();\n  cloned: Set<number> = new Set();\n  writeHardObjectId(id: ObjectId) {\n    if (id && id.Index >= 100 && !this.cloned.has(id.Index))\n      //当存在id时,表示对象正在被拷贝,或者已经拷贝完成\n      this.hardObjectIds.add(id.Index);\n\n    return this.writeObjectId(id);\n  }\n}\n","export function arrayLast<T>(arr: T[]): T {\n  return arr[arr.length - 1];\n}\n\nexport function removeOne<T>(arr: T[], v: T) {\n  let j = 0;\n  for (let i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] !== v) {\n      arr[j++] = arr[i];\n    }\n  }\n  arr.length = j;\n\n  return arr;\n}\n\nexport function arrayRemoveIf<T>(\n  arr: Array<T>,\n  checkFuntion: (e: T) => boolean\n): Array<T> {\n  let j = 0;\n  for (let i = 0, l = arr.length; i < l; i++) {\n    if (!checkFuntion(arr[i])) {\n      arr[j++] = arr[i];\n    }\n  }\n  arr.length = j;\n\n  return arr;\n}\n","import { EventCallback, IEvent, IEventOptions } from \"./types/event.types\";\nimport { arrayRemoveIf } from \"./utils/array\";\n\nexport class EventDispatcher {\n  protected _listeners: Map<string, EventCallback[]> = new Map();\n  on(\n    type: string,\n    listener: EventCallback,\n    option?: IEventOptions\n  ): () => void {\n    let listents = this._listeners.get(type);\n\n    if (!listents) {\n      listents = [];\n      this._listeners.set(type, listents);\n    }\n\n    if (listents.indexOf(listener) === -1) {\n      if (option) listener[\"__customOption__\"] = option;\n      listents.push(listener);\n    }\n    return () => this.off(type, listener);\n  }\n  once(type: string, listener: EventCallback, option?: IEventOptions) {\n    listener[\"__isOnce__\"] = true;\n    return this.on(type, listener, option);\n  }\n\n  hasEventListener(type: string, listener: EventCallback) {\n    let ls = this._listeners.get(type);\n\n    if (!ls) return false;\n\n    return ls.indexOf(listener) !== -1;\n  }\n\n  off(type: string, listener: EventCallback) {\n    let ls = this._listeners.get(type);\n\n    if (ls) {\n      const index = ls.indexOf(listener);\n      if (index !== -1) {\n        ls.splice(index, 1);\n      }\n    }\n  }\n\n  trigger(event: IEvent) {\n    let ls = this._listeners.get(event.type);\n    if (ls) {\n      if (!event.target) event.target = this as any;\n\n      // 避免事件被移除了\n      const array = ls.slice(0);\n      for (let i = 0, l = array.length; i < l; i++) {\n        const customOption = array[i][\"__customOption__\"] as IEventOptions;\n\n        if (customOption) {\n          if (customOption.userData) {\n            event.data = customOption.userData;\n          }\n          if (!customOption.condition?.(event)) {\n            continue;\n          }\n        }\n        array[i].call(this, event);\n      }\n\n      //移除一次性事件\n      arrayRemoveIf(ls, (l) => l[\"__isOnce__\"]);\n    }\n  }\n}\n","import { HCFiler } from \"../filer/HCFiler\";\nimport { ISerialize } from \"../types/iSerialize.types\";\n\nexport class EraseEntityData implements ISerialize {\n  constructor(public isErase = true) {}\n  readFile(file: HCFiler): this {\n    this.isErase = file.read();\n    return this;\n  }\n  writeFile(file: HCFiler): this {\n    file.write(this.isErase);\n    return this;\n  }\n}\n","import { EventDispatcher } from \"./EventDispatcher\";\nimport { BaseDatabase } from \"./database/BaseDatabase\";\nimport { ObjectId } from \"./ObjectId\";\nimport { HCFiler } from \"./filer/HCFiler\";\n\nimport { ISerialize } from \"./types/iSerialize.types\";\nimport { EraseEntityData } from \"./history/EraseEntityData\";\n\n/**\n * 数据库储存对象基类\n *\n * @export\n * @abstract\n * @class BaseObject\n * @extends {EventDispatcher}\n * @implements {ISerialize}\n */\nexport abstract class BaseObject extends EventDispatcher implements ISerialize {\n  static type = \"\";\n  protected _ver: number;\n  protected _Owner: ObjectId;\n  protected _db: BaseDatabase;\n  protected _id: ObjectId<this>;\n  protected _erase = false;\n  protected _name: string;\n\n  /**@hidden */\n  set Owner(owner: ObjectId) {\n    this._Owner = owner;\n  }\n  /**@hidden */\n  get Owner() {\n    return this._Owner;\n  }\n  get IsErase() {\n    return this._erase;\n  }\n  get ObjectId() {\n    return this._id;\n  }\n  /**@hidden */\n  set ObjectId(id: ObjectId<this>) {\n    this._id = id;\n  }\n  get Id() {\n    return this._id?.Index;\n  }\n  /**@hidden */\n  get DB() {\n    return this._db;\n  }\n  get Name() {\n    return this._name;\n  }\n  get Type() {\n    //@ts-ignore\n    return this.constructor.type;\n  }\n  /**\n   * 删除对象\n   * @param e 删除还是取消删除\n   * @returns\n   */\n  erase(e = true) {\n    if (this._erase === e) return;\n    this._erase = e;\n    const r = this.UndoRecord;\n    if (r) {\n      r.createEraseHistory(this, e);\n    }\n  }\n  clone() {\n    //@ts-ignore\n    const cloneC = new this.constructor();\n    const backId = this._id;\n    this._id = null;\n    let filer = new HCFiler();\n    filer.database = this._db;\n    this.writeFile(filer);\n    cloneC.readFile(filer);\n    cloneC._db = undefined;\n    cloneC._id = null;\n    this._id = backId;\n    return cloneC;\n  }\n  /**\n   * 从其他同类实体中拷贝数据\n   * @param obj\n   * @returns\n   */\n  copyFrom(obj: this) {\n    let idBak = this._id;\n    let ownerBak = this._Owner;\n    this.writeSnapshoot();\n    let f = new HCFiler();\n    obj.writeFile(f);\n    this.readFile(f);\n    this._id = idBak;\n    this._Owner = ownerBak;\n    return this;\n  }\n  replace(...arg: any) {}\n  destory(all?: boolean) {\n    this._db = undefined;\n  }\n  /**@hidden */\n  writeFile(filer: HCFiler) {\n    filer.write(3);\n    filer.writeObjectId(this._id);\n    filer.write(this._erase);\n    filer.writeObjectId(this._Owner);\n  }\n  /**@hidden */\n  readFile(filer: HCFiler) {\n    this._ver = filer.read();\n    const id = filer.readObjectId() as ObjectId<this>;\n    if (!this._id && id) {\n      this._id = id;\n      this._id.Object = this;\n    }\n    this._erase = filer.read();\n    this._Owner = filer.readObjectId();\n  }\n  //私有的方法,暴露给Db的添加对象,方法使用.\n  //只用对象加入到db中,我们才初始化ObjectId.\n  //从db池中分配id给自身使用. 除非你创建对象往db里面加,否则不要调用该方法\n  _SetOwnerDatabase(db: BaseDatabase) {\n    if (!this._db) {\n      this._db = db;\n      this._id = db.allocateId() as ObjectId<this>;\n      this._id.Object = this;\n    } else console.warn(\"重复设置源Database!\");\n\n    return this;\n  }\n  _SetDefaultDb(db: BaseDatabase) {\n    if (!this._db) this._db = db;\n    else console.warn(\"重复设置默认Database!\");\n\n    return this;\n  }\n  _SetDatabase(db: BaseDatabase) {\n    this._db = db;\n  }\n\n  /*实体修改撤销*/\n  _applyHistoryRecord(record: ISerialize) {\n    if (record instanceof EraseEntityData) {\n      this._erase = record.isErase;\n    }\n  }\n  //获取最近一条历史记录表\n  protected get UndoRecord() {\n    if (!this._db) return;\n    const hm = this._db.HistoryManager;\n\n    return hm.LastCmdRecord;\n  }\n  protected writeSnapshoot() {\n    const record = this.UndoRecord;\n    if (record) {\n      record.writeObjectSnapshoot(this);\n    }\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { BaseDatabase } from \"../database/BaseDatabase\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { ISerialize } from \"../types/iSerialize.types\";\n\nexport class CreateObjectData implements ISerialize {\n  private filer = new HCFiler();\n  constructor(public Object?: BaseObject) {}\n  save() {\n    if (this.Object && this.filer.Data.length === 0) {\n      this.filer.writeObject(this.Object);\n    }\n    return this;\n  }\n\n  getObject(db: BaseDatabase): BaseObject {\n    this.filer.reset();\n    this.filer.database = db;\n    this.Object = this.filer.readObject();\n    this.filer.reset();\n    return this.Object;\n  }\n\n  readFile(file: HCFiler) {\n    file.read();\n    let data = file.read();\n    this.filer.Data = data;\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this.filer.Data);\n  }\n}\n","import { ISerialize } from \"../types/iSerialize.types\";\n\n/**实体变更历史记录 */\nexport class HistoryRecord implements ISerialize {\n  //指定撤销时所需要的数据\n  undoData: ISerialize;\n  //制定重做时所需要的数据\n  redoData: ISerialize;\n  writeFile(filter) {}\n  readFile(f) {}\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { ISerialize } from \"../types/iSerialize.types\";\n\nexport class RemoveObjectData implements ISerialize {\n  private index: number;\n  removeObject: BaseObject; //用于记录被删除的对象\n  constructor(index?: number) {\n    this.index = index;\n  }\n  get Index() {\n    return this.index;\n  }\n  readFile(file: HCFiler) {\n    file.read(); //ver\n    this.index = file.read();\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this.index);\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { Factory } from \"../Factory\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { CreateObjectData } from \"../history/CreateObjectData\";\nimport { HistoryRecord } from \"../history/HistoryRecord\";\nimport { RemoveObjectData } from \"../history/RemoveObjectData\";\n\nexport interface CollectionWriteFileOptions<T = unknown> {\n  sort?: (a: T, b: T) => number;\n}\n\n@Factory\nexport class ObjectCollection<T extends BaseObject> extends BaseObject {\n  static type = \"ObjectCollection\";\n  objects: T[] = [];\n  append(object: T) {\n    if (this._db && !object.ObjectId) {\n      object._SetOwnerDatabase(this._db);\n    } else {\n      object._SetDatabase(this._db);\n    }\n    object.Owner = this._Owner;\n    this.objects.push(object);\n\n    //加入撤销重做的历史数据\n    let undoRec = this.UndoRecord;\n    if (undoRec) {\n      let hisRec = new HistoryRecord();\n      hisRec.redoData = new CreateObjectData(object).save();\n      hisRec.undoData = new RemoveObjectData(this.objects.length - 1);\n\n      undoRec.writeObjectHistoryPath(this, hisRec);\n    }\n    this.appendEvent(object);\n\n    return object.ObjectId;\n  }\n  appendEvent(object: T) {\n    //注入\n  }\n  remove(obj: T) {\n    let index = this.objects.indexOf(obj);\n    this.removeIndex(index);\n  }\n\n  removeIndex(index: number) {\n    if (index === -1) return;\n    let obj = this.objects[index];\n    this.objects.splice(index, 1);\n\n    if (obj) obj.destory();\n    return obj;\n  }\n  /**实体替换功能\n   * # 不允许单独调用\n   * 请使用Database的方法进行模型替换\n   * @hiddren\n   */\n  replace(source: T, target: T) {\n    const index = this.objects.indexOf(source);\n    if (index > -1) {\n      this.objects[index] = target;\n      source.replace(target);\n      this.appendEvent(target);\n    }\n  }\n  destory() {\n    super.destory();\n    for (const e of this.objects) {\n      e.destory(true);\n    }\n    this.objects.length = 0;\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    let cout = file.read();\n    this.objects = [];\n    for (let i = 0; i < cout; i++) {\n      let obj = file.readObject() as T;\n      if (obj) {\n        this.objects.push(obj);\n      }\n    }\n  }\n  //对象将自身数据写入到文件.\n  writeFile(file: HCFiler, options?: CollectionWriteFileOptions<T>) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.objects.length);\n\n    const objects = [...this.objects];\n\n    if (options?.sort) {\n      objects.sort(options.sort);\n    }\n\n    for (let obj of objects) file.writeObject(obj);\n  }\n  _applyHistoryRecord(record: BaseObject) {\n    if (record instanceof CreateObjectData) {\n      let obj = record.getObject(this._db) as T;\n      this.objects.push(obj);\n      this.appendEvent(obj);\n    } else if (record instanceof RemoveObjectData) {\n      let obj = this.removeIndex(record.Index);\n      record.removeObject = obj;\n    }\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { ISerialize } from \"../types/iSerialize.types\";\n\nexport class AllObjectData implements ISerialize {\n  filer = new HCFiler();\n  constructor(obj?: BaseObject) {\n    if (obj) {\n      this.filer.database = obj.DB;\n      obj.writeFile(this.filer);\n    }\n  }\n  get Filer() {\n    const file = new HCFiler(this.filer.Data);\n    file.database = this.filer.database;\n    return file;\n  }\n  readFile(file: HCFiler) {\n    file.read();\n    this.filer.Data = file.read();\n    this.filer.reset();\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this.filer.Data);\n  }\n}\n","import { HistoryRecord } from \"./HistoryRecord\";\nimport { AllObjectData } from \"./AllObjectData\";\nimport { ObjectId } from \"../ObjectId\";\nimport { HCFiler } from \"../filer/HCFiler\";\n\n/**对象所有数据记录 */\nexport class ObjectAllDataHistoryRecord extends HistoryRecord {\n  constructor(private id: ObjectId) {\n    super();\n    this.writeUndo();\n  }\n  writeUndo() {\n    this.undoData = new AllObjectData(this.id.Object);\n  }\n  writeRedo() {\n    this.redoData = new AllObjectData(this.id.Object);\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.writeObjectId(this.id);\n  }\n  readFile(file: HCFiler) {\n    file.read();\n    this.id = file.readObjectId();\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { Factory } from \"../Factory\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { ObjectId } from \"../ObjectId\";\nimport { CreateObjectData } from \"./CreateObjectData\";\nimport { EraseEntityData } from \"./EraseEntityData\";\nimport { HistoryRecord } from \"./HistoryRecord\";\nimport { ObjectAllDataHistoryRecord } from \"./ObjectAllDataHistoryRecord\";\n\n/**\n * 命令的历史记录\n * 对象快照？\n *\n */\n@Factory\nexport class CommandHistoryRecord extends BaseObject {\n  static type = \"CommandHistoryRecord\";\n  //历史记录表\n  private _HistoryList = new Map<ObjectId, HistoryRecord[]>();\n  //新生成的对象\n  private _CreateObjects = new Map<BaseObject, HistoryRecord>();\n  constructor(public commandName = \"\") {\n    super();\n  }\n  get HistoryList(): Map<ObjectId, HistoryRecord[]> {\n    return this._HistoryList;\n  }\n  //获取对象快照记录(如果有的话)\n  getObjectAllDataRecord(\n    historyList: HistoryRecord[]\n  ): ObjectAllDataHistoryRecord[] {\n    let hs: ObjectAllDataHistoryRecord[] = [];\n    for (const h of historyList) {\n      if (h instanceof ObjectAllDataHistoryRecord) {\n        hs.push(h);\n      }\n    }\n    return hs;\n  }\n\n  writeObjectSnapshoot(obj: BaseObject): void {\n    if (!obj.ObjectId) {\n      console.warn(\"生成对象数据错误，对象还没分配ID\");\n      return;\n    }\n\n    if (this._CreateObjects.has(obj)) return;\n\n    let hrs = this.getObjectHistoryList(obj.ObjectId);\n    if (this.getObjectAllDataRecord(hrs)?.length) return;\n\n    let hr = new ObjectAllDataHistoryRecord(obj.ObjectId);\n    hrs.push(hr);\n  }\n  private getObjectHistoryList(id: ObjectId) {\n    if (!this._HistoryList.has(id)) this._HistoryList.set(id, []);\n    return this._HistoryList.get(id);\n  }\n  createEraseHistory(obj: BaseObject, isErase: boolean) {\n    let hr = new HistoryRecord();\n    hr.undoData = new EraseEntityData(!isErase);\n    hr.redoData = new EraseEntityData(isErase);\n    this.writeObjectHistoryPath(obj, hr);\n  }\n\n  //对象写入历史记录\n  writeObjectHistoryPath(obj: BaseObject, history: HistoryRecord) {\n    if (this._CreateObjects.has(obj)) return;\n\n    let hrs = this.getObjectHistoryList(obj.ObjectId);\n    if (this.getObjectAllDataRecord(hrs)?.length) return;\n\n    if (history.redoData instanceof CreateObjectData) {\n      this._CreateObjects.set(history.redoData.Object, history);\n    }\n\n    hrs.push(history);\n  }\n  destory() {\n    //\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this.commandName);\n  }\n  readFile(file: HCFiler) {\n    file.read();\n    this.commandName = file.read();\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { CommandHistoryRecord } from \"./CommandHistoryRecord\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { ObjectAllDataHistoryRecord } from \"./ObjectAllDataHistoryRecord\";\nimport { arrayLast } from \"../utils/array\";\n\n/**\n * 历史记录管理\n * 创建实体记录\n * 删除实体记录\n * 更新实体记录\n * */\nexport class HistoricManager extends BaseObject {\n  public historyRecordList: CommandHistoryRecord[] = [];\n  public doing = false;\n  public cursor = -1;\n  public isEnable = true;\n  public startCmd(cmdName: string) {\n    this.historyRecordList.splice(\n      this.cursor + 1,\n      this.historyRecordList.length - (this.cursor + 1)\n    );\n    this.historyRecordList.push(new CommandHistoryRecord(cmdName));\n    this.cursor = this.historyRecordList.length - 1;\n  }\n  public endCmd() {\n    let lastRec = this.historyRecordList[this.cursor];\n\n    if (lastRec) {\n      for (const [, hs] of lastRec.HistoryList) {\n        for (const h of hs) {\n          if (h instanceof ObjectAllDataHistoryRecord) {\n            h.writeRedo();\n          }\n        }\n      }\n      this.endCmdEvent(true);\n      return true;\n    }\n    this.endCmdEvent(false);\n    return false;\n  }\n  get HasUndo() {\n    return !!this.historyRecordList[this.cursor];\n  }\n  get HasRedo() {\n    return !!this.historyRecordList[this.cursor + 1];\n  }\n  endCmdEvent(res) {}\n  undo() {\n    let historyRec = this.historyRecordList[this.cursor];\n    if (!historyRec) return false;\n    this.doing = true;\n    for (let [id, recList] of historyRec.HistoryList) {\n      for (let i = recList.length; i--; ) {\n        id.Object._applyHistoryRecord(recList[i].undoData);\n      }\n    }\n    this.cursor--;\n    this.doing = false;\n    this.undoEvent(historyRec);\n    return true;\n  }\n  undoEvent(record: CommandHistoryRecord) {}\n  public redo() {\n    let historyRec = this.historyRecordList[this.cursor + 1];\n    if (!historyRec) return false;\n    this.doing = true;\n    for (let [id, recList] of historyRec.HistoryList) {\n      for (let i = recList.length; i--; ) {\n        id.Object._applyHistoryRecord(recList[i].redoData);\n      }\n    }\n    this.cursor++;\n    this.doing = false;\n    this.redoEvent(historyRec);\n    return true;\n  }\n  redoEvent(record: CommandHistoryRecord) {}\n  public clear() {\n    this.historyRecordList.length = 0;\n    this.cursor = -1;\n  }\n  public destory() {\n    super.destory();\n    for (const h of this.historyRecordList) {\n      h.destory();\n    }\n    this.historyRecordList.length = 0;\n    this.cursor = -1;\n  }\n  get LastCmdRecord() {\n    if (this.doing || !this.isEnable) return;\n    return arrayLast(this.historyRecordList);\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this.historyRecordList.length);\n    for (const h of this.historyRecordList) {\n      h.writeFile(file);\n    }\n  }\n  readFile(file: HCFiler) {\n    file.read();\n    const count = file.read();\n    this.historyRecordList.length = 0;\n    for (let i = 0; i < count; i++) {\n      const h = new CommandHistoryRecord();\n      h.readFile(file);\n      this.historyRecordList.push(h);\n    }\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { ObjectId } from \"../ObjectId\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { HistoricManager } from \"../history/HistoricManager\";\n\n/**\n * 数据库基类\n */\nexport class BaseDatabase {\n  /**id 索引 */\n  protected idIndex = 1;\n  /**对象id池 */\n  protected idMap = new Map<number, ObjectId>();\n  HistoryManager: HistoricManager;\n  constructor(protected preview = false) {\n    this.HistoryManager = new HistoricManager()._SetOwnerDatabase(this);\n    //保留100个id内部对象使用\n    this.idIndex = 100;\n  }\n  get AllObjects() {\n    const objects: BaseObject[] = [];\n    for (const [id, objectId] of this.idMap) {\n      if (id < 100) continue;\n      objects.push(objectId.Object);\n    }\n    return objects;\n  }\n  /**关联id */\n  allocateId() {\n    return this.getObjectId(this.idIndex++);\n  }\n  getObjectId(index: number) {\n    //id 从1开始,0被保留作为空id\n    if (index === 0) return undefined;\n\n    let id = this.idMap.get(index);\n    if (id) return id;\n\n    id = new ObjectId(index);\n    this.idMap.set(index, id);\n\n    return id;\n  }\n  /**\n   * 根据id获取数据库对象\n   * @param id\n   * @returns 场景中的对象\n   */\n  findObjectById(id: number) {\n    return this.idMap.get(id)?.Object;\n  }\n  /**\n   * 根据名称获取数据库中的对象\n   * @param name\n   * @param isLike 是否模糊查询 可选参数\n   * @param filter 过滤查找，返回true时跳过，可选参数\n   * @returns BaseObject[] 目标对象数组\n   * @example app.Database.findObjectByName(\"box\",true,(o)=>!(o intanceof GUI)) 查找数据库中名字包含box的GUI\n   */\n  findObjectByName(\n    name: string,\n    isLike = true,\n    filter?: (o: BaseObject) => boolean\n  ): BaseObject[] {\n    const objects: BaseObject[] = [];\n    if (!filter) filter = (o) => false;\n    for (const [, oid] of this.idMap) {\n      if (oid.isErase) continue;\n      if (!oid.Object?.Name || filter(oid.Object)) continue;\n      if (isLike) {\n        if (oid.Object.Name.includes(name)) {\n          objects.push(oid.Object);\n        }\n      } else {\n        if (oid.Object.Name === name) {\n          objects.push(oid.Object);\n        }\n      }\n    }\n    return objects;\n  }\n  /**重置数据库 */\n  reset() {}\n  /**写入数据 */\n  writeFile(filer?: HCFiler) {\n    return filer;\n  }\n  /**读取数据 */\n  readFile(filer: HCFiler) {\n    return this;\n  }\n  /**回收数据 */\n  destory() {}\n}\n","export type InjectFun = (...arg) => () => void;\nexport type InjectObj = Record<string | symbol, any>;\n\nenum InjectType {\n  begin = \"__begin__\",\n  end = \"__end__\",\n}\n\n/**\n * 初始化注入.\n */\nfunction initInjectFunctionArray(\n  obj: InjectObj,\n  funcName: symbol\n): InjectFun[] {\n  if (!obj.hasOwnProperty(funcName)) {\n    obj[funcName] = [];\n  }\n  return obj[funcName];\n}\n\nfunction callInjectFunctionList(\n  target: InjectObj,\n  funcName: string,\n  type: InjectType,\n  ...args\n) {\n  const name = getInjectFunctionArrayName(funcName, type);\n  let funcList: InjectFun[] = target[name];\n  if (funcList) {\n    for (let f of funcList) {\n      if (f.call(target, ...args))\n        //如果函数返回true 那么结束注入.\n        return;\n    }\n  }\n}\n\nfunction initInjectReplace(target: InjectObj, funcName: string) {\n  const key = Symbol.for(\"__aopinit__\" + funcName);\n  if (!target.hasOwnProperty(key)) {\n    target[key] = true;\n    let oldFunction: InjectFun = target[funcName];\n    target[funcName] = function (...args) {\n      callInjectFunctionList(target, funcName, InjectType.begin, ...args);\n      let res = oldFunction.call(target, ...args);\n      args.push(res);\n      callInjectFunctionList(target, funcName, InjectType.end, ...args);\n      return res;\n    };\n  }\n}\n\n/**\n * 注入方法到对象方法\n * @param injectType\n * @returns 移除方法 remove\n */\nfunction inject(injectType: InjectType): InjectFun {\n  return function injectObject(\n    obj: InjectObj,\n    func: InjectFun,\n    injectFunction: InjectFun\n  ) {\n    let name = getFunctionName(obj, func);\n    let beginName = getInjectFunctionArrayName(name, injectType);\n    initInjectReplace(obj, name);\n\n    let functionArr: InjectFun[] = initInjectFunctionArray(obj, beginName);\n    functionArr.unshift(injectFunction);\n\n    if (functionArr.length > 20)\n      console.warn(\"aop注入函数个数超过20\", injectFunction);\n\n    return function () {\n      let index = functionArr.indexOf(injectFunction);\n      if (index !== -1) functionArr.splice(index, 1);\n    };\n  };\n}\n\nexport function getFunctionName(target: InjectObj, func: InjectFun): string {\n  if (func.name) return func.name;\n  for (let key in target) {\n    if (target[key] === func) {\n      return key;\n    }\n  }\n}\n\n/**\n * 获得注入的函数名称.\n */\nfunction getInjectFunctionArrayName(name: string, type: InjectType): symbol {\n  return Symbol.for(type + name);\n}\n\n/**往函数体前注入函数 */\nexport const begin = inject(InjectType.begin);\n/**往函数体后注入函数 */\nexport const end = inject(InjectType.end);\n","import { end } from \"@hc/aop\";\nimport { BaseObject } from \"..//BaseObject\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { BaseDatabase } from \"./BaseDatabase\";\nimport {\n  CollectionWriteFileOptions,\n  ObjectCollection,\n} from \"./ObjectCollection\";\n\nexport class BlockTableRecord<T extends BaseObject> extends BaseObject {\n  static ObjectType: typeof BaseObject[] = [];\n  private entityCol = new ObjectCollection<T>();\n  private checkout: (en: T) => boolean;\n  constructor() {\n    super();\n    end(this.entityCol, this.entityCol.appendEvent, (e) => {\n      this.appendEvent(e);\n    });\n  }\n  get Entitys(): T[] {\n    return this.entityCol.objects.slice();\n  }\n  IsVaildObject(Object: BaseObject) {\n    return BlockTableRecord.ObjectType.some((O) => Object instanceof O);\n  }\n  setCheckout(callback: (e: T) => boolean) {\n    this.checkout = callback;\n    return this;\n  }\n  append(e: T) {\n    if ((!this.checkout || this.checkout(e)) && this.IsVaildObject(e))\n      this.entityCol.append(e);\n    else console.error(\"加入的实体和此块表不匹配\");\n  }\n  appendEvent(e: T) {\n    //inject\n  }\n  remove(object: T) {\n    this.entityCol.remove(object);\n  }\n  _SetOwnerDatabase(db: BaseDatabase) {\n    super._SetOwnerDatabase(db);\n    this.entityCol._SetOwnerDatabase(db);\n    this.entityCol.Owner = this.ObjectId;\n    return this;\n  }\n  /**实体替换功能\n   * # 不允许单独调用\n   * 请使用Database的方法进行模型替换\n   * @hiddren\n   */\n  replace(source: T, target: T) {\n    this.entityCol.replace(source, target);\n  }\n  writeFile(file: HCFiler, options?: CollectionWriteFileOptions<T>) {\n    super.writeFile(file);\n    file.write(1);\n    this.entityCol.writeFile(file, options);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    let ver = file.read();\n    this.entityCol.readFile(file);\n  }\n  destory() {\n    super.destory();\n    this.entityCol.destory();\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { HCFiler } from \"../filer/HCFiler\";\n\nexport class ObjectRecord extends BaseObject {\n  protected _name = \"\";\n  get Name() {\n    return this._name;\n  }\n  set Name(n: string) {\n    this._name = n;\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this._name);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    if (this._ver < 3) return;\n    let ver = file.read();\n    this._name = file.read();\n  }\n}\n","import { BaseObject } from \"../BaseObject\";\nimport { HCFiler } from \"../filer/HCFiler\";\nimport { arrayRemoveIf } from \"../utils\";\nimport { ObjectRecord } from \"./Record\";\n\n/**记录表 */\nexport class RecordTable extends BaseObject {\n  private records: ObjectRecord[] = [];\n  get Objects() {\n    return [...this.records];\n  }\n  append(record: ObjectRecord, isCheck = true) {\n    if (!isCheck) {\n      record._SetDefaultDb(this.DB);\n    } else {\n      record._SetOwnerDatabase(this.DB);\n    }\n    record.Owner = this.ObjectId;\n    this.add(record);\n  }\n  add(record: ObjectRecord) {\n    this.records.push(record);\n  }\n  remove(id: number) {\n    return arrayRemoveIf(this.records, (r) => r.Id === id);\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.records.length);\n    for (const record of this.records) {\n      file.writeObject(record);\n    }\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    if (this._ver < 2) return;\n    let ver = file.read();\n    this.records.length = 0;\n    const size = file.read();\n    for (let i = 0; i < size; i++) {\n      const record = file.readObject();\n      this.records.push(record);\n    }\n  }\n  destory() {\n    super.destory();\n    for (const o of this.Objects) {\n      o.destory();\n    }\n    this.Objects.length = 0;\n  }\n}\n","/**ios 不支持 简单模拟 requestIdleCallback*/\nwindow.requestIdleCallback =\n  window.requestIdleCallback ||\n  function (cb) {\n    const start = Date.now();\n    return setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start));\n        },\n      });\n    }, 1) as any;\n  };\n\nwindow.cancelIdleCallback =\n  window.cancelIdleCallback ||\n  function (id) {\n    clearTimeout(id);\n  };\n","export const AppConfig = {\n  debugger: false,\n  loadPlugins: new Set(),\n  assetURL: \"\",\n  Texture_URL: \"\",\n  SkyBox_URL: \"\",\n  lowPerformance: false,\n  isEncrypt: true,\n  /**需要禁止缓存的资源关键字 */\n  clearCacheKeys: [] as { key: string; timestamp: string }[],\n};\n","import {\n  ISceneLoaderAsyncResult,\n  SceneLoader,\n} from \"@babylonjs/core/Loading/sceneLoader\";\nimport { AppConfig } from \"../../app/appConfig\";\nimport {\n  AssetContainer,\n  IDisposable,\n  ISceneLoaderProgressEvent,\n  Nullable,\n  Scene,\n} from \"../../babylon\";\nimport type { HC3DFileLoader } from \"./HC3DFileLoader\";\n\nexport type TModType = \"glb\" | \"gltf\" | \"STL\" | \"obj\";\n\nconst BufferDecoder = new TextDecoder(\"utf-8\");\n\n/* \nInterface that contains the data for the glTF asset.\n */\nexport interface IHC3DLoaderData {\n  /**\n   * 加密文件入口.\n   */\n  entry: string;\n  version: string;\n  type: TModType;\n}\n\n/** @internal */\nexport interface IHC3DLoader extends IDisposable {\n  importMeshAsync: (\n    meshesNames: any,\n    scene: Scene,\n    data: any,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ) => Promise<ISceneLoaderAsyncResult>;\n  loadAsync: (\n    scene: Scene,\n    data: any,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ) => Promise<void>;\n  loadAssetContainerAsync(\n    scene: Scene,\n    data: IHC3DLoaderData,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ): Promise<AssetContainer>;\n}\n\nexport class HC3DLoader implements IHC3DLoader {\n  /** @internal */\n  public readonly _completePromises = new Array<Promise<any>>();\n\n  /** @internal */\n  public _assetContainer: Nullable<AssetContainer> = null;\n  private readonly _parent: HC3DFileLoader;\n  private _disposed = false;\n  private _rootUrl: Nullable<string> = null;\n  private _babylonScene: Scene;\n  constructor(parent: HC3DFileLoader) {\n    this._parent = parent;\n  }\n  async loadAssetContainerAsync(\n    scene: Scene,\n    data: IHC3DLoaderData,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void\n  ): Promise<AssetContainer> {\n    this._rootUrl = rootUrl;\n    this._babylonScene = scene;\n    if (AppConfig.isEncrypt) {\n      const file = await this._loadAsync(rootUrl, data);\n      return SceneLoader.LoadAssetContainerAsync(\n        rootUrl,\n        file,\n        scene,\n        onProgress\n      );\n    } else {\n      const url = data.entry.replace(\".mod\", \".\" + data.type);\n      return SceneLoader.LoadAssetContainerAsync(\n        rootUrl,\n        url,\n        scene,\n        onProgress\n      );\n    }\n  }\n  /**\n   * @internal\n   */\n  public async importMeshAsync(\n    meshesNames: any,\n    scene: Scene,\n    data: any,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ): Promise<ISceneLoaderAsyncResult> {\n    this._rootUrl = rootUrl;\n    this._babylonScene = scene;\n    const file = await this._loadAsync(rootUrl, data);\n    return SceneLoader.ImportMeshAsync(\n      meshesNames,\n      rootUrl,\n      file,\n      scene,\n      onProgress\n    );\n  }\n\n  /**\n   * @internal\n   */\n  public async loadAsync(\n    scene: Scene,\n    data: IHC3DLoaderData,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ): Promise<void> {\n    this._rootUrl = rootUrl;\n    this._babylonScene = scene;\n    const file = await this._loadAsync(rootUrl, data);\n\n    return SceneLoader.LoadAsync(\n      rootUrl,\n      file,\n      scene.getEngine(),\n      onProgress\n    ).then();\n  }\n  private _loadAsync(rootUrl: string, data: IHC3DLoaderData): Promise<File> {\n    return this.loadModFile(data).catch((error) => {\n      if (!this._disposed) {\n        this._parent.onErrorObservable.notifyObservers(error);\n        this._parent.onErrorObservable.clear();\n\n        this.dispose();\n      }\n\n      throw error;\n    });\n  }\n  dispose(): void {\n    if (this._disposed) {\n      return;\n    }\n\n    this._disposed = true;\n\n    this._completePromises.length = 0;\n\n    this._parent.dispose();\n  }\n  private async loadModFile(mod: IHC3DLoaderData) {\n    const Decode = await this._parent.constructor[\"LoadPromise\"];\n    const json = await this._babylonScene._loadFileAsync(\n      this._rootUrl + mod.entry,\n      () => {},\n      true,\n      true\n    );\n    const data: Uint8Array = Decode(\n      new Uint8Array(json as ArrayBuffer),\n      \"hctest\"\n    );\n\n    if (mod.type !== \"glb\") {\n      const decodeData = BufferDecoder.decode(data);\n      return new File([decodeData], \"temp.\" + mod.type);\n    } else {\n      return new File([data], \"temp.\" + mod.type);\n    }\n  }\n}\n","import { AssetContainer } from \"@babylonjs/core/assetContainer\";\nimport {\n  ISceneLoaderAsyncResult,\n  ISceneLoaderPlugin,\n  ISceneLoaderPluginAsync,\n  ISceneLoaderPluginExtensions,\n  ISceneLoaderPluginFactory,\n  ISceneLoaderProgressEvent,\n  SceneLoader,\n} from \"@babylonjs/core/Loading/sceneLoader\";\nimport { IFileRequest } from \"@babylonjs/core/Misc/fileRequest\";\nimport { Tools } from \"@babylonjs/core/Misc/tools\";\nimport { IDisposable, Scene } from \"@babylonjs/core/scene\";\nimport { OBJFileLoader } from \"@babylonjs/loaders\";\nimport { GLTFFileLoader } from \"@babylonjs/loaders/glTF/glTFFileLoader\";\nimport { Nullable, Observable } from \"../../babylon\";\nimport { HC3DLoader, IHC3DLoader } from \"./HC3DLoader\";\n\nfunction loadWasm(path: string) {\n  const go = new window.Go();\n  go.importObject.env[\"syscall/js.finalizeRef\"] = () => {};\n  return new Promise((resolve, reject) => {\n    WebAssembly.instantiateStreaming(fetch(path), go.importObject)\n      .then((result) => {\n        go.run(result.instance);\n        resolve(result.instance);\n      })\n      .catch((error) => {\n        reject(error);\n      });\n  });\n}\n\ninterface IFileRequestInfo extends IFileRequest {\n  _lengthComputable?: boolean;\n  _loaded?: number;\n  _total?: number;\n}\n\n/**\n * HC3D文件加载器，解析hc3d,mod文件\n */\nexport class HC3DFileLoader\n  implements IDisposable, ISceneLoaderPluginAsync, ISceneLoaderPluginFactory\n{\n  //TODO:没文档可用的地址作为默认配置\n  static DecodeConfig = {\n    exec_url: \"\",\n    wasm_url: \"\",\n  };\n  static Decode: (buf: ArrayBuffer) => any;\n  static LoadPromise: Promise<(buf: ArrayBuffer) => any>;\n  static LoadWasm() {\n    if (!this.DecodeConfig.exec_url) throw new Error(\"wasm执行文件丢失\");\n    if (!this.DecodeConfig.wasm_url) throw new Error(\"wasm文件丢失\");\n    this.LoadPromise = new Promise((res) => {\n      Tools.LoadScript(this.DecodeConfig.exec_url, () => {\n        loadWasm(this.DecodeConfig.wasm_url).then(() => {\n          this.Decode = window.decode;\n          res(this.Decode);\n        });\n      });\n    });\n  }\n  private _gltfLoader: GLTFFileLoader;\n  private _objLoader: OBJFileLoader;\n  private _requests = new Array<IFileRequestInfo>();\n  private _loader: Nullable<IHC3DLoader> = null;\n\n  name = \"hc3d\";\n  extensions: string | ISceneLoaderPluginExtensions = \".hc3d\";\n  /**\n   * Observable raised when an error occurs.\n   */\n  public readonly onErrorObservable = new Observable<any>();\n  constructor() {\n    this._loader = new HC3DLoader(this);\n  }\n  get GLTFLoader() {\n    if (!this._gltfLoader) this._gltfLoader = new GLTFFileLoader();\n\n    return this._gltfLoader;\n  }\n  get OBJLoader() {\n    if (!this._objLoader)\n      this._objLoader = new OBJFileLoader().createPlugin() as OBJFileLoader;\n\n    return this._objLoader;\n  }\n  createPlugin(): ISceneLoaderPluginAsync | ISceneLoaderPlugin {\n    return new HC3DFileLoader();\n  }\n\n  public getFileLoader(type: string) {\n    switch (type) {\n      case \"gltf\":\n      case \"glb\":\n        return this.GLTFLoader;\n      case \"obj\":\n        return this.OBJLoader;\n      default:\n        return null;\n    }\n  }\n  loadAssetContainerAsync(\n    scene: Scene,\n    data: string,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ): Promise<AssetContainer> {\n    return this._loader.loadAssetContainerAsync(\n      scene,\n      JSON.parse(data),\n      rootUrl,\n      onProgress\n    );\n  }\n  importMeshAsync(\n    meshesNames: any,\n    scene: Scene,\n    data: any,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void\n  ): Promise<ISceneLoaderAsyncResult> {\n    return this._loader.importMeshAsync(\n      meshesNames,\n      scene,\n      JSON.parse(data),\n      rootUrl,\n      onProgress\n    );\n  }\n  loadAsync(\n    scene: Scene,\n    data: any,\n    rootUrl: string,\n    onProgress?: (event: ISceneLoaderProgressEvent) => void,\n    fileName?: string\n  ): Promise<void> {\n    return this._loader.loadAsync(\n      scene,\n      JSON.parse(data),\n      rootUrl,\n      onProgress,\n      fileName\n    );\n  }\n  dispose(): void {\n    if (this._loader) {\n      this._loader.dispose();\n      this._loader = null;\n    }\n\n    for (const request of this._requests) {\n      request.abort();\n    }\n\n    this._requests.length = 0;\n  }\n}\n\nSceneLoader.RegisterPlugin(new HC3DFileLoader());\n","export enum UpdateFlag {\n  None = 0b000,\n  Matrix = 0b001,\n  Geometry = 0b010,\n  Material = 0b100,\n  All = 0b1111111,\n}\n","export enum EventEnum {\n  /**更新材质时 */\n  UpdateMaterial = \"update-material\",\n  /**实体更新时 */\n  Update = \"update\",\n  AddAnimation = \"addAnimation\",\n  UpdateMatrix = \"matrix\",\n  /**删除实体时 */\n  Remove = \"remove\",\n  /**修改名字时 */\n  UpdateName = \"updateName\",\n  /**加载文件时 */\n  LoadFile = \"loadFile\",\n  /**加载完成时 */\n  LoadComplete = \"loadComplete\",\n  /**开始加载时 */\n  StartLoad = \"startLoad\",\n  /**新建场景时 */\n  NewFile = \"newFile\",\n  /**更新可见度时 */\n  UpdateVisiable = \"updateVisiable\",\n  /**更新阴影时 */\n  UpdateShadow = \"update-shadow\",\n  Load = \"load\",\n  Loading = \"loading\",\n  /**更新环境 */\n  UpdateScene = \"UpdateScene\",\n  /**广播服务状态 */\n  ServiceStatus = \"ServiceStatus\",\n}\n","import { Node, StringTools } from \"../babylon\";\nimport { Entity } from \"./../entitys/Entity\";\n\nexport function getEntity<T extends Node>(mesh: T): Entity {\n  while (mesh && !mesh.metadata?.Entity) {\n    mesh = mesh.parent as T;\n  }\n  return mesh?.metadata?.Entity;\n}\n\nexport function getRoot<T extends Node>(mesh: T) {\n  while (mesh.parent) {\n    mesh = mesh.parent as T;\n  }\n  return mesh;\n}\n\nexport function isTextureAsset(name: string): boolean {\n  const queryStringIndex = name.indexOf(\"?\");\n  if (queryStringIndex !== -1) {\n    name = name.substring(0, queryStringIndex);\n  }\n\n  return (\n    StringTools.EndsWith(name, \".ktx\") ||\n    StringTools.EndsWith(name, \".ktx2\") ||\n    StringTools.EndsWith(name, \".png\") ||\n    StringTools.EndsWith(name, \".jpg\") ||\n    StringTools.EndsWith(name, \".jpeg\")\n  );\n}\n\nexport function equaln(v1: number, v2: number, fuzz = 1e-5) {\n  return Math.abs(v1 - v2) <= fuzz;\n}\n\nexport function sleep(t: number) {\n  return new Promise((res) => setTimeout(res, t));\n}\n\nexport function b64toBlob(dataURI: string) {\n  const mimeString = dataURI.split(\",\")[0].split(\":\")[1].split(\";\")[0]; // mime类型\n  const byteString = atob(dataURI.split(\",\")[1]); //base64 解码\n  const arrayBuffer = new ArrayBuffer(byteString.length); //创建缓冲数组\n  const intArray = new Uint8Array(arrayBuffer); //创建视图\n\n  for (let i = 0; i < byteString.length; i++) {\n    intArray[i] = byteString.charCodeAt(i);\n  }\n  return new Blob([intArray], { type: mimeString });\n}\n\nexport function simpleObjectEqual(\n  o1: Record<string, number | string>,\n  o2: Record<string, number | string>\n) {\n  for (const k1 in o1) {\n    if (o2.hasOwnProperty(k1)) {\n      if (o1[k1] !== o2[k1]) return false;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function updateQueryStringParameter(\n  uri: string,\n  key: string,\n  value: string\n) {\n  if (value === undefined) {\n    return uri;\n  }\n  const re = new RegExp(\"([?&])\" + key + \"=.*?(&|$)\", \"i\");\n  const separator = uri.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  if (uri.match(re)) {\n    return uri.replace(re, \"$1\" + key + \"=\" + value + \"$2\");\n  } else {\n    return uri + separator + key + \"=\" + value;\n  }\n}\n\nexport function isNone(v: number | undefined | null) {\n  return typeof v === \"undefined\" || (!v && v !== 0);\n}\n\n/**首字母小写 */\nexport function firstLower(str: string) {\n  return str.replace(str[0], str[0].toLowerCase());\n}\n\n/**首字母大写 */\nexport function firstUpper(str: string) {\n  return str.replace(str[0], str[0].toUpperCase());\n}\n","import { firstLower } from \"../utils/utils\";\nimport { MaterialRecord } from \"./MaterialRecord\";\n\nexport function autoRecordMaterialFilter(\n  old2new?: (v) => any,\n  new2old?: (v) => any\n) {\n  return (target, property) =>\n    autoRecordMaterial(target, property, old2new, new2old);\n}\n\nexport function autoRecordMaterial<T = MaterialRecord>(\n  target: T,\n  property: string,\n  fun?: (v: any) => any,\n  fun2?: (v: any) => any\n) {\n  if (!fun) fun = (v) => v;\n  if (!fun2) fun2 = (v) => v;\n\n  const privateKey = \"_\" + firstLower(property);\n  const recordKey = firstLower(property);\n\n  Object.defineProperty(target, property, {\n    set: function (value) {\n      let oldv = this[privateKey];\n      value = fun2(value);\n      if (oldv !== value) {\n        this.writeSnapshoot();\n        this[privateKey] = value;\n        if (!this.init) {\n          if (this.isOwn) {\n            let diff = this.entity.diffMaterials.get(this.material.id);\n            if (!diff) {\n              diff = {};\n              this.entity.diffMaterials.set(this.material.id, diff);\n            }\n            diff[property] = value;\n          }\n          this.update();\n        } else {\n          if (this.isOwn) {\n            const v = this.material[recordKey];\n            this[privateKey] = fun(v);\n          }\n        }\n      }\n    },\n    get: function () {\n      return this[privateKey];\n    },\n    enumerable: true,\n    configurable: true,\n  });\n}\n","import { HCFiler, ObjectId, ObjectRecord } from \"@hc/core\";\n\nimport { Material } from \"../babylon\";\nimport type { Entity } from \"../entitys\";\nimport { firstUpper } from \"../utils/utils\";\nimport { TextureRecord } from \"./TextureRecord\";\nimport { autoRecordMaterial } from \"./autoRecord\";\n\n// 新建实体默认的材质\n// 导入实体 自带材质\n// 用户自定义的材质库\n// 用户可以修改自带的材质\n// 可以用材质库的材质替换现有的材质\n// 材质可快速定位到网格 mesh.showBoundingBox=true\n// 保存已有材质修改的值\n\nexport class MaterialRecord<\n  T extends Material = Material\n> extends ObjectRecord {\n  @autoRecordMaterial\n  BackFaceCulling = false;\n  isOwn = false;\n  linkEntitys = new Set<Entity>();\n  protected material: T;\n  protected init = false;\n  constructor(mat?: T, protected entity?: Entity) {\n    super();\n    this.init = true;\n    this.material = mat;\n    if (mat) {\n      this._name = mat.name;\n    }\n    this.isOwn = !!mat;\n  }\n  get Material() {\n    return this.material;\n  }\n  get AllTextures(): TextureRecord[] {\n    return [];\n  }\n  get Name() {\n    return this._name;\n  }\n  set Name(v) {\n    this._name = v;\n    if (this.material) {\n      this.material.name = v;\n    }\n  }\n  updateFromDiff() {\n    const diff = this.entity.diffMaterials.get(this.material.id);\n    if (diff) {\n      for (const k in diff) {\n        if (k in this) {\n          if (k.includes(\"Texture\")) {\n            if (typeof diff[k] === \"number\")\n              this[k] = this.entity.DB.getObjectId(diff[k]);\n            else {\n              this[k] = diff[k];\n            }\n          } else this[k] = diff[k];\n        } else {\n          if (k.endsWith(\"Texture\")) {\n            const textureID = this[firstUpper(k)] as ObjectId<TextureRecord>;\n            if (textureID.Object && diff[k]) {\n              for (const k1 in diff[k]) {\n                textureID.Object.Texture[k1] = diff[k][k1];\n              }\n              textureID.Object.readFromTexture();\n            }\n          }\n        }\n      }\n      this.update();\n    }\n  }\n  updateMaterial() {\n    this.material.backFaceCulling = this.BackFaceCulling;\n  }\n  update() {\n    this.updateMaterial();\n  }\n  async waitRender() {\n    return true;\n  }\n  initByOwnMaterial(mtl: Material) {\n    for (let k in this) {\n      const recordKey = k.slice(1);\n      const propery = firstUpper(recordKey);\n      if (k.startsWith(\"_\") && propery in this) {\n        this[propery] = mtl[recordKey];\n      }\n    }\n  }\n  readFile(filer: HCFiler) {\n    super.readFile(filer);\n    filer.read();\n    this.BackFaceCulling = filer.read();\n  }\n  writeFile(filer: HCFiler) {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.write(this.BackFaceCulling);\n  }\n  showMeshBox(status?: boolean) {\n    const meshes = this.material.getBindedMeshes();\n    meshes.forEach((m) => (m.showBoundingBox = status ?? !m.showBoundingBox));\n  }\n  destory() {\n    super.destory();\n    if (this.material) {\n      this.material.dispose();\n    }\n  }\n  protected importOwnTextures() {}\n}\n","export enum SelectType {\n  None = 0,\n  /**全部包括才选中 */\n  C = 1,\n  /**选中部分就选中 */\n  W = 2,\n}\n","import {\n  AbstractMesh,\n  ActionManager,\n  PickingInfo,\n  PointerEventTypes,\n} from \"../babylon\";\nimport { IEvent, IVector3 } from \"@hc/core\";\n\nexport { PointerEventTypes } from \"../babylon\";\n\nexport interface IPointerEvent extends IEvent {\n  screenX: number;\n  screenY: number;\n  worldPoint: IVector3;\n  object: AbstractMesh;\n  /**实际选中的网格 */\n  pickedMesh: AbstractMesh;\n  pickInfo: PickingInfo;\n}\n\nexport type PointerCallback = (event: IPointerEvent) => void;\n\nexport const PointTypeEnum = {\n  [PointerEventTypes.POINTERDOWN]: \"pointerDown\",\n  [PointerEventTypes.POINTERUP]: \"pointerUp\",\n  [PointerEventTypes.POINTERMOVE]: \"pointerMove\",\n  [PointerEventTypes.POINTERPICK]: \"pointerPick\",\n  [PointerEventTypes.POINTERWHEEL]: \"pointerWheel\",\n  [PointerEventTypes.POINTERTAP]: \"pointerTap\",\n  [PointerEventTypes.POINTERDOUBLETAP]: \"pointerDoubleTap\",\n};\n\nexport interface IEventOptions {\n  userData?: Record<string, any>;\n  condition?: (event: IEvent) => boolean;\n}\n\nexport type EventCallback = (e: IEvent) => void;\n\nexport const ActionManagerType = {\n  pointerOver: ActionManager.OnPointerOverTrigger,\n  pointerOut: ActionManager.OnPointerOutTrigger,\n  pointerLongPress: ActionManager.OnLongPressTrigger,\n};\n","export enum CameraEnable {\n  None = 0b000,\n  Pan = 0b001,\n  Roate = 0b010,\n  Zoom = 0b100,\n  All = 0b111,\n}\n\nexport enum CameraViewMode {\n  Up = 1,\n  Down = 2,\n  Left = 3,\n  Right = 4,\n  Front = 5,\n  Back = 6,\n  SW = 7,\n}\n","import { IVector3, ObjectId } from \"@hc/core\";\n\nimport { Animation } from \"../babylon\";\nimport { Curve } from \"../entitys\";\nimport { Entity } from \"../entitys/Entity\";\nimport type { Lines } from \"../entitys/curves/Lines\";\n\nexport interface IAnimationOption {\n  name?: string;\n  loop?: boolean;\n  loopCount?: number;\n  time?: number; //秒\n  frame?: number;\n  meshId?: string;\n  speed?: number;\n  complete?: () => void;\n}\n\nexport interface IMovePathOption extends IAnimationOption {\n  path: IVector3[] | Lines;\n}\n\nexport type Vec3Array = [number, number, number];\n\nexport interface IRotationOption extends IAnimationOption {\n  from?: number;\n  angle: number;\n  angles: number[];\n  origin?: IVector3;\n  dir?: IVector3;\n}\nexport interface IScaleOption extends IAnimationOption {\n  scale?: IVector3;\n}\nexport interface IPathOption extends IAnimationOption {\n  path?: IVector3[];\n  curve?: ObjectId<Curve>;\n  forward?: IVector3;\n}\n\nexport interface IAnimateReturn {\n  restart: () => void;\n  stop: () => void;\n  pause: () => void;\n  reset: () => void;\n  clear: () => void;\n}\nexport interface IAnimation {\n  name: string;\n  defaultStart?: boolean;\n  start?: (loop?: boolean, speed?: number) => void;\n  restart: () => void;\n  stop: () => void;\n  pause: () => void;\n  reset: () => void;\n  clear?: () => void;\n}\n\nexport interface ICameraAnimateOption extends IAnimationOption {\n  target: IVector3 | Entity;\n  position?: IVector3;\n}\n\nexport interface ICameraRotationAnimation extends IAnimationOption {\n  angleX?: number;\n  angleY?: number;\n  target?: IVector3;\n}\n\nexport enum EDataType {\n  FLOAT = Animation.ANIMATIONTYPE_FLOAT,\n  COLOR = Animation.ANIMATIONTYPE_COLOR3,\n  COLOR4 = Animation.ANIMATIONTYPE_COLOR4,\n}\n\nexport interface IMaterialAnimationOption extends IAnimationOption {\n  targetKey: string;\n  dataType: EDataType;\n  range: [number, number] | [string, string];\n  defaultStart?: boolean;\n}\n","export enum TransformMode {\n  None = 0b000,\n  Translate = 0b001,\n  Rotate = 0b010,\n  Scale = 0b100,\n  All = 0b111,\n}\n","export enum CenterType {\n  Center = 0,\n  Bottom = 1,\n  Top = 2,\n  Left = 3,\n  Right = 4,\n  Front = 5,\n  Back = 6,\n  LFB = 351,\n  RFB = 451,\n  LBB = 361,\n  RBB = 461,\n}\n","export enum EConditionType {\n  Equal = 0,\n  Greater = 1,\n  Less = 2,\n  GreEqu = 3,\n  LessEqu = 4,\n}\n","/**\n * 场景的渲染类型.\n */\nexport enum RenderType {\n  /**\n   * 线框模式\n   */\n  Wireframe = 1,\n  /**\n   * 概念\n   */\n  Conceptual = 2,\n\n  /**\n   * 物理着色PBR\n   */\n  Physical = 3,\n}\n","export enum MoveType {\n  Offset = 0,\n  To = 1,\n}\n\nexport type IVariableOption = {\n  key: string;\n  value: any;\n  desc?: string;\n};\n\nexport type ValueType =\n  | \"value\"\n  | \"param\"\n  | \"entity\"\n  | \"text\"\n  | \"keycode\"\n  | \"boolean\";\n\nexport type WidgetValue<T = any> = {\n  type: ValueType;\n  value: T;\n  entityKey?: string;\n};\n\nexport interface ISetParam {\n  key: string;\n  value: WidgetValue;\n}\n\nexport enum CompareType {\n  Equal = 0,\n  UnEqual = 1,\n  Great = 2,\n  Less = 3,\n  GtEqual = 4,\n  LessEqual = 5,\n  Include = 6,\n  UnInclude = 7,\n  Is = 8,\n  IsNot = 9,\n}\n","export enum SkyboxMode {\n  None = 0,\n  Sun = 1,\n  Image = 2,\n  Env = 3,\n  Skybox = 4,\n}\n","//鼠标类型\nexport enum MouseKey {\n  Left = 0,\n  Middle = 1,\n  Right = 2,\n}\n\nexport enum KeyBoard {\n  // 数字\n  Digit1 = 49,\n  Digit2 = 50,\n  Digit3 = 51,\n  Digit4 = 52,\n  Digit5 = 53,\n  Digit6 = 54,\n  Digit7 = 55,\n  Digit8 = 56,\n  Digit9 = 57,\n  Digit0 = 58,\n  // 字母\n  KeyA = 65,\n  KeyB = 66,\n  KeyC = 67,\n  KeyD = 68,\n  KeyE = 69,\n  KeyF = 70,\n  KeyG = 71,\n  KeyH = 72,\n  KeyI = 73,\n  KeyJ = 74,\n  KeyK = 75,\n  KeyL = 76,\n  KeyM = 77,\n  KeyN = 78,\n  KeyO = 79,\n  KeyP = 80,\n  KeyQ = 81,\n  KeyR = 82,\n  KeyS = 83,\n  KeyT = 84,\n  KeyU = 85,\n  KeyV = 86,\n  KeyW = 87,\n  KeyX = 88,\n  KeyY = 89,\n  KeyZ = 90,\n\n  // 符号\n  /**\n   * 逗号\n   */\n  Comma = 188,\n  CommaChrome = 229,\n  /**\n   * 句号\n   */\n  Period = 190,\n  /**\n   * 分号\n   */\n  Semicolon = 186,\n  /**\n   * 引号\n   */\n  Quote = 222,\n  /**\n   * 左括号\n   */\n  BracketLeft = 219,\n  /**\n   * 右括号\n   */\n  BracketRight = 220,\n  /**\n   * 反引号\n   */\n  Backquote = 192,\n  /**\n   * 反斜杠\n   */\n  Backslash = 220,\n  /**\n   * 减号\n   */\n  Minus = 189,\n  /**\n   * 等号\n   */\n  Equal = 187,\n  IntlRo = 193,\n  IntlYen = 255,\n  // 功能键\n  Alt = 18,\n  /**\n   * 大写锁定\n   */\n  CapsLock = 20,\n  Control = 17,\n  /**\n   * win左键\n   */\n  OSLeft = 91,\n  /**\n   * win右键\n   */\n  OSRight = 92,\n  Shift = 16,\n\n  ContextMenu = 93,\n  Enter = 13,\n  Space = 32,\n  Backspace = 8,\n  Tab = 9,\n  Delete = 46,\n  End = 35,\n  Home = 36,\n  Insert = 45,\n  PageDown = 34,\n  PageUp = 33,\n  ArrowDown = 40,\n  ArrowLeft = 37,\n  ArrowRight = 39,\n  ArrowUp = 38,\n  Escape = 27,\n  PrintScreen = 44,\n  ScrollLock = 145,\n  Pause = 19,\n\n  // F数字\n  F1 = 112,\n  F2 = 113,\n  F3 = 114,\n  F5 = 116,\n  F6 = 117,\n  F7 = 118,\n  F8 = 119,\n  F9 = 120,\n  F10 = 121,\n  F11 = 122,\n  F12 = 123,\n\n  //数字键盘\n  NumLock = 114,\n  Numpad0 = 96,\n  Numpad1 = 97,\n  Numpad2 = 98,\n  Numpad3 = 99,\n  Numpad4 = 100,\n  Numpad5 = 101,\n  Numpad6 = 102,\n  Numpad7 = 103,\n  Numpad8 = 104,\n  Numpad9 = 105,\n  NumpadAdd = 107,\n  NumpadDivide = 111,\n  NumpadEqual = 12,\n  NumpadMultiply = 106,\n  NumpadSubtract = 109,\n  NumpadDot = 110,\n  NumpadDot1 = 190,\n}\n\nexport enum KeyCode {\n  // 数字\n  Digit1 = \"Digit1\",\n  Digit2 = \"Digit2\",\n  Digit3 = \"Digit3\",\n  Digit4 = \"Digit4\",\n  Digit5 = \"Digit5\",\n  Digit6 = \"Digit6\",\n  Digit7 = \"Digit7\",\n  Digit8 = \"Digit8\",\n  Digit9 = \"Digit9\",\n  Digit0 = \"Digit0\",\n  // 字母\n  KeyA = \"KeyA\",\n  KeyB = \"KeyB\",\n  KeyC = \"KeyC\",\n  KeyD = \"KeyD\",\n  KeyE = \"KeyE\",\n  KeyF = \"KeyF\",\n  KeyG = \"KeyG\",\n  KeyH = \"KeyH\",\n  KeyI = \"KeyI\",\n  KeyJ = \"KeyJ\",\n  KeyK = \"KeyK\",\n  KeyL = \"KeyL\",\n  KeyM = \"KeyM\",\n  KeyN = \"KeyN\",\n  KeyO = \"KeyO\",\n  KeyP = \"KeyP\",\n  KeyQ = \"KeyQ\",\n  KeyR = \"KeyR\",\n  KeyS = \"KeyS\",\n  KeyT = \"KeyT\",\n  KeyU = \"KeyU\",\n  KeyV = \"KeyV\",\n  KeyW = \"KeyW\",\n  KeyX = \"KeyX\",\n  KeyY = \"KeyY\",\n  KeyZ = \"KeyZ\",\n\n  // 符号\n  /**\n   * 逗号\n   */\n  Comma = \"Comma\",\n  CommaChrome = \"CommaChrome\",\n  /**\n   * 句号\n   */\n  Period = \"Period\",\n  /**\n   * 分号\n   */\n  Semicolon = \"Semicolon\",\n  /**\n   * 引号\n   */\n  Quote = \"Quote\",\n  /**\n   * 左括号\n   */\n  BracketLeft = \"BracketLeft\",\n  /**\n   * 右括号\n   */\n  BracketRight = \"BracketRight\",\n  /**\n   * 反引号\n   */\n  Backquote = \"Backquote\",\n  /**\n   * 反斜杠\n   */\n  Backslash = \"Backslash\",\n  /**\n   * 减号\n   */\n  Minus = \"Minus\",\n  /**\n   * 等号\n   */\n  Equal = \"Equal\",\n  IntlRo = \"IntlRo\",\n  IntlYen = \"IntlYen\",\n  // 功能键\n  Alt = \"Alt\",\n  AltLeft = \"AltLeft\",\n  /**\n   * 大写锁定\n   */\n  CapsLock = \"CapsLock\",\n  Control = \"Control\",\n  ControlLeft = \"ControlLeft\",\n\n  /**\n   * win左键\n   */\n  OSLeft = \"OSLeft\",\n  /**\n   * win右键\n   */\n  OSRight = \"OSRight\",\n  Shift = \"Shift\",\n  ShiftLeft = \"ShiftLeft\",\n  ShiftRight = \"ShiftRight\",\n\n  ContextMenu = \"ContextMenu\",\n  Enter = \"Enter\",\n  Space = \"Space\",\n  Backspace = \"Backspace\",\n  Tab = \"Tab\",\n  Delete = \"Delete\",\n  End = \"End\",\n  Home = \"Home\",\n  Insert = \"Insert\",\n  PageDown = \"PageDown\",\n  PageUp = \"PageUp\",\n  ArrowDown = \"ArrowDown\",\n  ArrowLeft = \"ArrowLeft\",\n  ArrowRight = \"ArrowRight\",\n  ArrowUp = \"ArrowUp\",\n  Escape = \"Escape\",\n  PrintScreen = \"PrintScreen\",\n  ScrollLock = \"ScrollLock\",\n  Pause = \"Pause\",\n\n  // F数字\n  F1 = \"F1\",\n  F2 = \"F2\",\n  F3 = \"F3\",\n  F5 = \"F5\",\n  F6 = \"F6\",\n  F7 = \"F7\",\n  F8 = \"F8\",\n  F9 = \"F9\",\n  F10 = \"F10\",\n  F11 = \"F11\",\n  F12 = \"F12\",\n\n  //数字键盘\n  NumLock = \"NumLock\",\n  Numpad0 = \"Numpad0\",\n  Numpad1 = \"Numpad1\",\n  Numpad2 = \"Numpad2\",\n  Numpad3 = \"Numpad3\",\n  Numpad4 = \"Numpad4\",\n  Numpad5 = \"Numpad5\",\n  Numpad6 = \"Numpad6\",\n  Numpad7 = \"Numpad7\",\n  Numpad8 = \"Numpad8\",\n  Numpad9 = \"Numpad9\",\n  NumpadAdd = \"NumpadAdd\",\n  NumpadDivide = \"NumpadDivide\",\n  NumpadEqual = \"NumpadEqual\",\n  NumpadMultiply = \"NumpadMultiply\",\n  NumpadSubtract = \"NumpadSubtract\",\n  NumpadDot = \"NumpadDot\",\n  NumpadDot1 = \"NumpadDot1\",\n}\n","export namespace FileSystem {\n  export function writeFile(fname: string, data: BlobPart) {\n    let blob = new Blob([data], { type: \"octet/stream\" });\n\n    let download = document.createElement(\"a\");\n    download.download = fname;\n    download.href = window.URL.createObjectURL(blob);\n    download.style.display = \"none\";\n    download.onclick = function () {\n      document.body.removeChild(download);\n    };\n    document.body.appendChild(download);\n\n    download.click();\n  }\n\n  let chooserInput: HTMLInputElement;\n\n  export function chooseFile({\n    filter,\n    multiple = false,\n    callback,\n  }: {\n    filter?: string;\n    multiple?: boolean;\n    callback: (filelist: FileList) => void;\n  }) {\n    if (chooserInput) chooserInput.remove();\n\n    chooserInput = document.createElement(\"input\");\n    chooserInput.type = \"file\";\n    chooserInput.style.display = \"none\";\n    document.body.appendChild(chooserInput);\n\n    chooserInput.accept = filter;\n    chooserInput.onchange = () => {\n      if (chooserInput.files.length > 0) callback(chooserInput.files);\n    };\n    chooserInput.multiple = multiple;\n    chooserInput.click();\n  }\n}\n","export function arrayLast<T>(arr: T[]): T {\n  return arr[arr.length - 1];\n}\n\nexport function removeOne<T>(arr: T[], v: T) {\n  let j = 0;\n  for (let i = 0, l = arr.length; i < l; i++) {\n    if (arr[i] !== v) {\n      arr[j++] = arr[i];\n    }\n  }\n  arr.length = j;\n\n  return arr;\n}\n\nexport function arrayRemoveIf<T>(\n  arr: Array<T>,\n  checkFuntion: (e: T) => boolean\n): Array<T> {\n  let j = 0;\n  for (let i = 0, l = arr.length; i < l; i++) {\n    if (!checkFuntion(arr[i])) {\n      arr[j++] = arr[i];\n    }\n  }\n  arr.length = j;\n\n  return arr;\n}\n","import { Tools } from \"../babylon\";\n\nexport function deg2rad(v: number) {\n  return Tools.ToRadians(v);\n}\n\nexport function rad2Deg(v: number) {\n  return Tools.ToDegrees(v);\n}\n","import {\n  BoundingBox,\n  DeepImmutableObject,\n  Matrix,\n  Size,\n  Vector3,\n} from \"../babylon\";\n\nexport class Box3 extends BoundingBox {\n  static GetCenterFromPoints(points: Vector3[]) {\n    if (points.length <= 1) return points[0];\n    const min = getMin(points[0], points[1]);\n    const max = getMax(points[0], points[1]);\n    const box3 = new Box3(min, max);\n    if (points.length > 2) {\n      box3.setFromPoints(points.slice(2));\n    }\n    return box3.center;\n  }\n  constructor(\n    min = Vector3.Zero(),\n    max = Vector3.Zero(),\n    mtx?: DeepImmutableObject<Matrix>\n  ) {\n    super(min, max, mtx);\n  }\n  get Size() {\n    return this.extendSize.scale(2);\n  }\n  get SizeWorld() {\n    return this.extendSizeWorld.scale(2);\n  }\n  union(box: BoundingBox) {\n    const oldV = this.minimumWorld.clone();\n    const newV = box.minimumWorld.clone();\n\n    oldV.set(\n      Math.min(oldV.x, newV.x),\n      Math.min(oldV.y, newV.y),\n      Math.min(oldV.z, newV.z)\n    );\n\n    const oldM = this.maximumWorld.clone();\n    const newM = box.maximumWorld.clone();\n\n    oldM.set(\n      Math.max(oldM.x, newM.x),\n      Math.max(oldM.y, newM.y),\n      Math.max(oldM.z, newM.z)\n    );\n\n    this.reConstruct(oldV, oldM);\n\n    return this;\n  }\n\n  expandByPoint(point: Vector3) {\n    this.min(this.minimum, point);\n    this.max(this.maximum, point);\n    this.reConstruct(this.minimum, this.maximum, this.getWorldMatrix());\n    return this;\n  }\n  setFromPoints(points: Vector3[]) {\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n    this.reConstruct(this.minimum, this.maximum, this.getWorldMatrix());\n    return this;\n  }\n  private min(sp: Vector3, tp: Vector3) {\n    sp.x = Math.min(sp.x, tp.x);\n    sp.y = Math.min(sp.y, tp.y);\n    sp.z = Math.min(sp.z, tp.z);\n\n    return this;\n  }\n  private max(sp: Vector3, tp: Vector3) {\n    sp.x = Math.max(sp.x, tp.x);\n    sp.y = Math.max(sp.y, tp.y);\n    sp.z = Math.max(sp.z, tp.z);\n\n    return this;\n  }\n}\n\n/**联合2包围盒，改变b1包围盒的大小 */\nexport function unionBoundbox(b1: BoundingBox, b2: BoundingBox) {\n  const oldV = b1.minimum;\n  const newV = b2.minimum;\n\n  b1.minimum.set(\n    Math.min(oldV.x, newV.x),\n    Math.min(oldV.y, newV.y),\n    Math.min(oldV.z, newV.z)\n  );\n\n  const oldM = b1.maximum;\n  const newM = b2.maximum;\n\n  b1.maximum.set(\n    Math.max(oldM.x, newM.x),\n    Math.max(oldM.y, newM.y),\n    Math.max(oldM.z, newM.z)\n  );\n  return b1;\n}\n\nexport function getMin(sp: Vector3, tp: Vector3) {\n  const result = new Vector3();\n  result.x = Math.min(sp.x, tp.x);\n  result.y = Math.min(sp.y, tp.y);\n  result.z = Math.min(sp.z, tp.z);\n  return result;\n}\nexport function getMax(sp: Vector3, tp: Vector3) {\n  const result = new Vector3();\n  result.x = Math.max(sp.x, tp.x);\n  result.y = Math.max(sp.y, tp.y);\n  result.z = Math.max(sp.z, tp.z);\n  return result;\n}\n","import {\n  DynamicTexture,\n  Matrix,\n  Mesh,\n  MirrorTexture,\n  PBRMaterial,\n  Plane,\n  Scene,\n  StandardMaterial,\n  Texture,\n  Vector3,\n  VideoTexture,\n} from \"../babylon\";\n\nexport function getCanvasTexture(\n  name: string,\n  canvas: HTMLCanvasElement,\n  scene: Scene\n) {\n  return new DynamicTexture(name, canvas, scene);\n}\nexport function getVideoTexture(\n  name: string,\n  source: string | HTMLVideoElement,\n  scene: Scene\n) {\n  return new VideoTexture(name, source, scene);\n}\n\nexport function mirrorMaterial(target: Mesh, source: Mesh[], scene: Scene) {\n  const material = target.material as StandardMaterial | PBRMaterial;\n  if (!material) return;\n  scene.blockMaterialDirtyMechanism = false;\n  const glass_worldMatrix = target.getWorldMatrix();\n  //Obtain normals for plane and assign one of them as the normal\n  const glass_vertexData = target.getVerticesData(\"normal\");\n  let glassNormal0 = new Vector3(\n    glass_vertexData[0],\n    glass_vertexData[1],\n    glass_vertexData[2]\n  );\n  //Use worldMatrix to transform normal into its current value\n  let glassNormal = Vector3.TransformNormal(glassNormal0, glass_worldMatrix);\n  const reflector = Plane.FromPositionAndNormal(\n    target.absolutePosition,\n    glassNormal.scale(-1)\n  );\n  const texture = new MirrorTexture(\"mirror\" + this.Id, 1024, scene, true);\n  material.reflectionTexture = texture;\n  texture.mirrorPlane = reflector;\n  texture.renderList = source;\n  texture.level = 1;\n  scene.blockMaterialDirtyMechanism = true;\n}\n\nexport function getImageTexture(url: string, scene: Scene) {\n  return new Texture(url, scene);\n}\n","import { Container } from \"../babylon\";\n\nexport { Container };\n\nexport function getGuiContainer(name?: string) {\n  return new Container(name);\n}\n","import { Color3, Color4 } from \"../babylon\";\nimport { IColor } from \"@hc/core\";\n\nexport { Color4, Color3 };\n\nexport const ColorPalette = [\n  [0, 0, 0, 0], //----- 0 - lets make it red for an example\n  [255, 0, 0, 255], //----- 1 - Red\n  [255, 255, 0, 255], //----- 2 - Yellow\n  [0, 255, 0, 255], //----- 3 - Green\n  [0, 255, 255, 255], //----- 4 - Cyan\n  [0, 0, 255, 255], //----- 5 - Blue\n  [255, 0, 255, 255], //----- 6 - Magenta\n  [255, 255, 255, 255], //----- 7 - White\n  [128, 128, 128, 255], //----- 8\n  [192, 192, 192, 255], //----- 9\n  [255, 0, 0, 255], //----- 10\n  [255, 127, 127, 255], //----- 11\n  [165, 0, 0, 255], //----- 12\n  [165, 82, 82, 255], //----- 13\n  [127, 0, 0, 255], //----- 14\n  [127, 63, 63, 255], //----- 15\n  [76, 0, 0, 255], //----- 16\n  [76, 38, 38, 255], //----- 17\n  [38, 0, 0, 255], //----- 18\n  [38, 19, 19, 255], //----- 19\n  [255, 63, 0, 255], //----- 20\n  [255, 159, 127, 255], //----- 21\n  [165, 41, 0, 255], //----- 22\n  [165, 103, 82, 255], //----- 23\n  [127, 31, 0, 255], //----- 24\n  [127, 79, 63, 255], //----- 25\n  [76, 19, 0, 255], //----- 26\n  [76, 47, 38, 255], //----- 27\n  [38, 9, 0, 255], //----- 28\n  [38, 23, 19, 255], //----- 29\n  [255, 127, 0, 255], //----- 30\n  [255, 191, 127, 255], //----- 31\n  [165, 82, 0, 255], //----- 32\n  [165, 124, 82, 255], //----- 33\n  [127, 63, 0, 255], //----- 34\n  [127, 95, 63, 255], //----- 35\n  [76, 38, 0, 255], //----- 36\n  [76, 57, 38, 255], //----- 37\n  [38, 19, 0, 255], //----- 38\n  [38, 28, 19, 255], //----- 39\n  [255, 191, 0, 255], //----- 40\n  [255, 223, 127, 255], //----- 41\n  [165, 124, 0, 255], //----- 42\n  [165, 145, 82, 255], //----- 43\n  [127, 95, 0, 255], //----- 44\n  [127, 111, 63, 255], //----- 45\n  [76, 57, 0, 255], //----- 46\n  [76, 66, 38, 255], //----- 47\n  [38, 28, 0, 255], //----- 48\n  [38, 33, 19, 255], //----- 49\n  [255, 255, 0, 255], //----- 50\n  [255, 255, 127, 255], //----- 51\n  [165, 165, 0, 255], //----- 52\n  [165, 165, 82, 255], //----- 53\n  [127, 127, 0, 255], //----- 54\n  [127, 127, 63, 255], //----- 55\n  [76, 76, 0, 255], //----- 56\n  [76, 76, 38, 255], //----- 57\n  [38, 38, 0, 255], //----- 58\n  [38, 38, 19, 255], //----- 59\n  [191, 255, 0, 255], //----- 60\n  [223, 255, 127, 255], //----- 61\n  [124, 165, 0, 255], //----- 62\n  [145, 165, 82, 255], //----- 63\n  [95, 127, 0, 255], //----- 64\n  [111, 127, 63, 255], //----- 65\n  [57, 76, 0, 255], //----- 66\n  [66, 76, 38, 255], //----- 67\n  [28, 38, 0, 255], //----- 68\n  [33, 38, 19, 255], //----- 69\n  [127, 255, 0, 255], //----- 70\n  [191, 255, 127, 255], //----- 71\n  [82, 165, 0, 255], //----- 72\n  [124, 165, 82, 255], //----- 73\n  [63, 127, 0, 255], //----- 74\n  [95, 127, 63, 255], //----- 75\n  [38, 76, 0, 255], //----- 76\n  [57, 76, 38, 255], //----- 77\n  [19, 38, 0, 255], //----- 78\n  [28, 38, 19, 255], //----- 79\n  [63, 255, 0, 255], //----- 80\n  [159, 255, 127, 255], //----- 81\n  [41, 165, 0, 255], //----- 82\n  [103, 165, 82, 255], //----- 83\n  [31, 127, 0, 255], //----- 84\n  [79, 127, 63, 255], //----- 85\n  [19, 76, 0, 255], //----- 86\n  [47, 76, 38, 255], //----- 87\n  [9, 38, 0, 255], //----- 88\n  [23, 38, 19, 255], //----- 89\n  [0, 255, 0, 255], //----- 90\n  [127, 255, 127, 255], //----- 91\n  [0, 165, 0, 255], //----- 92\n  [82, 165, 82, 255], //----- 93\n  [0, 127, 0, 255], //----- 94\n  [63, 127, 63, 255], //----- 95\n  [0, 76, 0, 255], //----- 96\n  [38, 76, 38, 255], //----- 97\n  [0, 38, 0, 255], //----- 98\n  [19, 38, 19, 255], //----- 99\n  [0, 255, 63, 255], //----- 100\n  [127, 255, 159, 255], //----- 101\n  [0, 165, 41, 255], //----- 102\n  [82, 165, 103, 255], //----- 103\n  [0, 127, 31, 255], //----- 104\n  [63, 127, 79, 255], //----- 105\n  [0, 76, 19, 255], //----- 106\n  [38, 76, 47, 255], //----- 107\n  [0, 38, 9, 255], //----- 108\n  [19, 38, 23, 255], //----- 109\n  [0, 255, 127, 255], //----- 110\n  [127, 255, 191, 255], //----- 111\n  [0, 165, 82, 255], //----- 112\n  [82, 165, 124, 255], //----- 113\n  [0, 127, 63, 255], //----- 114\n  [63, 127, 95, 255], //----- 115\n  [0, 76, 38, 255], //----- 116\n  [38, 76, 57, 255], //----- 117\n  [0, 38, 19, 255], //----- 118\n  [19, 38, 28, 255], //----- 119\n  [0, 255, 191, 255], //----- 120\n  [127, 255, 223, 255], //----- 121\n  [0, 165, 124, 255], //----- 122\n  [82, 165, 145, 255], //----- 123\n  [0, 127, 95, 255], //----- 124\n  [63, 127, 111, 255], //----- 125\n  [0, 76, 57, 255], //----- 126\n  [38, 76, 66, 255], //----- 127\n  [0, 38, 28, 255], //----- 128\n  [19, 38, 33, 255], //----- 129\n  [0, 255, 255, 255], //----- 130\n  [127, 255, 255, 255], //----- 131\n  [0, 165, 165, 255], //----- 132\n  [82, 165, 165, 255], //----- 133\n  [0, 127, 127, 255], //----- 134\n  [63, 127, 127, 255], //----- 135\n  [0, 76, 76, 255], //----- 136\n  [38, 76, 76, 255], //----- 137\n  [0, 38, 38, 255], //----- 138\n  [19, 38, 38, 255], //----- 139\n  [0, 191, 255, 255], //----- 140\n  [127, 223, 255, 255], //----- 141\n  [0, 124, 165, 255], //----- 142\n  [82, 145, 165, 255], //----- 143\n  [0, 95, 127, 255], //----- 144\n  [63, 111, 127, 255], //----- 145\n  [0, 57, 76, 255], //----- 146\n  [38, 66, 76, 255], //----- 147\n  [0, 28, 38, 255], //----- 148\n  [19, 33, 38, 255], //----- 149\n  [0, 127, 255, 255], //----- 150\n  [127, 191, 255, 255], //----- 151\n  [0, 82, 165, 255], //----- 152\n  [82, 124, 165, 255], //----- 153\n  [0, 63, 127, 255], //----- 154\n  [63, 95, 127, 255], //----- 155\n  [0, 38, 76, 255], //----- 156\n  [38, 57, 76, 255], //----- 157\n  [0, 19, 38, 255], //----- 158\n  [19, 28, 38, 255], //----- 159\n  [0, 63, 255, 255], //----- 160\n  [127, 159, 255, 255], //----- 161\n  [0, 41, 165, 255], //----- 162\n  [82, 103, 165, 255], //----- 163\n  [0, 31, 127, 255], //----- 164\n  [63, 79, 127, 255], //----- 165\n  [0, 19, 76, 255], //----- 166\n  [38, 47, 76, 255], //----- 167\n  [0, 9, 38, 255], //----- 168\n  [19, 23, 38, 255], //----- 169\n  [0, 0, 255, 255], //----- 170\n  [127, 127, 255, 255], //----- 171\n  [0, 0, 165, 255], //----- 172\n  [82, 82, 165, 255], //----- 173\n  [0, 0, 127, 255], //----- 174\n  [63, 63, 127, 255], //----- 175\n  [0, 0, 76, 255], //----- 176\n  [38, 38, 76, 255], //----- 177\n  [0, 0, 38, 255], //----- 178\n  [19, 19, 38, 255], //----- 179\n  [63, 0, 255, 255], //----- 180\n  [159, 127, 255, 255], //----- 181\n  [41, 0, 165, 255], //----- 182\n  [103, 82, 165, 255], //----- 183\n  [31, 0, 127, 255], //----- 184\n  [79, 63, 127, 255], //----- 185\n  [19, 0, 76, 255], //----- 186\n  [47, 38, 76, 255], //----- 187\n  [9, 0, 38, 255], //----- 188\n  [23, 19, 38, 255], //----- 189\n  [127, 0, 255, 255], //----- 190\n  [191, 127, 255, 255], //----- 191\n  [82, 0, 165, 255], //----- 192\n  [124, 82, 165, 255], //----- 193\n  [63, 0, 127, 255], //----- 194\n  [95, 63, 127, 255], //----- 195\n  [38, 0, 76, 255], //----- 196\n  [57, 38, 76, 255], //----- 197\n  [19, 0, 38, 255], //----- 198\n  [28, 19, 38, 255], //----- 199\n  [191, 0, 255, 255], //----- 200\n  [223, 127, 255, 255], //----- 201\n  [124, 0, 165, 255], //----- 202\n  [145, 82, 165, 255], //----- 203\n  [95, 0, 127, 255], //----- 204\n  [111, 63, 127, 255], //----- 205\n  [57, 0, 76, 255], //----- 206\n  [66, 38, 76, 255], //----- 207\n  [28, 0, 38, 255], //----- 208\n  [33, 19, 38, 255], //----- 209\n  [255, 0, 255, 255], //----- 210\n  [255, 127, 255, 255], //----- 211\n  [165, 0, 165, 255], //----- 212\n  [165, 82, 165, 255], //----- 213\n  [127, 0, 127, 255], //----- 214\n  [127, 63, 127, 255], //----- 215\n  [76, 0, 76, 255], //----- 216\n  [76, 38, 76, 255], //----- 217\n  [38, 0, 38, 255], //----- 218\n  [38, 19, 38, 255], //----- 219\n  [255, 0, 191, 255], //----- 220\n  [255, 127, 223, 255], //----- 221\n  [165, 0, 124, 255], //----- 222\n  [165, 82, 145, 255], //----- 223\n  [127, 0, 95, 255], //----- 224\n  [127, 63, 111, 255], //----- 225\n  [76, 0, 57, 255], //----- 226\n  [76, 38, 66, 255], //----- 227\n  [38, 0, 28, 255], //----- 228\n  [38, 19, 33, 255], //----- 229\n  [255, 0, 127, 255], //----- 230\n  [255, 127, 191, 255], //----- 231\n  [165, 0, 82, 255], //----- 232\n  [165, 82, 124, 255], //----- 233\n  [127, 0, 63, 255], //----- 234\n  [127, 63, 95, 255], //----- 235\n  [76, 0, 38, 255], //----- 236\n  [76, 38, 57, 255], //----- 237\n  [38, 0, 19, 255], //----- 238\n  [38, 19, 28, 255], //----- 239\n  [255, 0, 63, 255], //----- 240\n  [255, 127, 159, 255], //----- 241\n  [165, 0, 41, 255], //----- 242\n  [165, 82, 103, 255], //----- 243\n  [127, 0, 31, 255], //----- 244\n  [127, 63, 79, 255], //----- 245\n  [76, 0, 19, 255], //----- 246\n  [76, 38, 47, 255], //----- 247\n  [38, 0, 9, 255], //----- 248\n  [38, 19, 23, 255], //----- 249\n  [84, 84, 84, 255], //----- 250\n  [118, 118, 118, 255], //----- 251\n  [152, 152, 152, 255], //----- 252\n  [186, 186, 186, 255], //----- 253\n  [220, 220, 220, 255], //----- 254\n  [255, 255, 255, 255], //----- 255\n  [0, 0, 0, 0], //----- ByLayer - White\n];\n\nexport function getColor3(v: IColor) {\n  if (typeof v === \"string\") return Color3.FromHexString(v);\n  else {\n    return Color3.FromHexString(v.toString());\n  }\n}\nexport function getColor4(v: IColor) {\n  if (typeof v === \"string\") return Color4.FromHexString(v);\n  else {\n    return Color4.FromHexString(v.toString());\n  }\n}\n\nexport interface IColorObj {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\n/**\n * 255颜色值转16进制颜色值\n * @param n 255颜色值\n * @returns hex 16进制颜色值\n */\nexport const toHex = (n: number) => `${n > 15 ? \"\" : 0}${n.toString(16)}`;\n\n/**\n * 颜色对象转化为16进制颜色字符串\n * @param colorObj 颜色对象\n */\nexport const toHexString = (colorObj: IColorObj) => {\n  const { r, g, b, a = 1 } = colorObj;\n  return `#${toHex(r)}${toHex(g)}${toHex(b)}${\n    a === 1 ? \"\" : toHex(Math.floor(a * 255))\n  }`;\n};\n\n/**\n * 颜色对象转化为rgb颜色字符串\n * @param colorObj 颜色对象\n */\nexport const toRgbString = (colorObj: IColorObj) => {\n  const { r, g, b } = colorObj;\n  return `rgb(${r},${g},${b})`;\n};\n\n/**\n * 颜色对象转化为rgba颜色字符串\n * @param colorObj 颜色对象\n */\nexport const toRgbaString = (colorObj: IColorObj, n = 10000) => {\n  const { r, g, b, a = 1 } = colorObj;\n  return `rgba(${r},${g},${b},${Math.floor(a * n) / n})`;\n};\n\n/**\n * 16进制颜色字符串解析为颜色对象\n * @param color 颜色字符串\n * @returns IColorObj\n */\nexport const parseHexColor = (color: string) => {\n  let hex = color.slice(1);\n  let a = 1;\n  if (hex.length === 3) {\n    hex = `${hex[0]}${hex[0]}${hex[1]}${hex[1]}${hex[2]}${hex[2]}`;\n  }\n  if (hex.length === 8) {\n    a = parseInt(hex.slice(6), 16) / 255;\n    hex = hex.slice(0, 6);\n  }\n  const bigint = parseInt(hex, 16);\n  return {\n    r: (bigint >> 16) & 255,\n    g: (bigint >> 8) & 255,\n    b: bigint & 255,\n    a,\n  } as IColorObj;\n};\n\n/**\n * rgba颜色字符串解析为颜色对象\n * @param color 颜色字符串\n * @returns IColorObj\n */\nexport const parseRgbaColor = (color: string) => {\n  const arr = color.match(/(\\d(\\.\\d+)?)+/g) || [];\n  const res = arr.map((s: string) => parseInt(s, 10));\n  return {\n    r: res[0],\n    g: res[1],\n    b: res[2],\n    a: parseFloat(arr[3] ?? \"1\"),\n  } as IColorObj;\n};\n\n/**\n * 颜色字符串解析为颜色对象\n * @param color 颜色字符串\n * @returns IColorObj\n */\nexport const parseColorString = (color: string) => {\n  if (color.startsWith(\"#\")) {\n    return parseHexColor(color);\n  } else if (color.startsWith(\"rgb\")) {\n    return parseRgbaColor(color);\n  } else if (color === \"transparent\") {\n    return parseHexColor(\"#00000000\");\n  }\n  throw new Error(`color string error: ${color}`);\n};\n\n/**\n * 颜色字符串解析为各种颜色表达方式\n * @param color 颜色字符串\n * @returns IColorObj\n */\nexport const getColorInfo = (color: string) => {\n  const colorObj = parseColorString(color);\n  const hex = toHexString(colorObj);\n  const rgba = toRgbaString(colorObj);\n  const rgb = toRgbString(colorObj);\n  return {\n    hex,\n    rgba,\n    rgb,\n    rgbaObj: colorObj,\n  };\n};\n\n/**\n * 16进制颜色字符串转化为rgba颜色字符串\n * @param hex 16进制颜色字符串\n * @returns rgba颜色字符串\n */\nexport const hexToRgba = (hex: string) => {\n  const colorObj = parseColorString(hex);\n  return toRgbaString(colorObj);\n};\n\n/**\n * rgba颜色字符串转化为16进制颜色字符串\n * @param rgba rgba颜色字符串\n * @returns 16进制颜色字符串\n */\nexport const rgbaToHex = (rgba: string) => {\n  const colorObj = parseColorString(rgba);\n  return toHexString(colorObj);\n};\n","import {\n  Color3,\n  CreateDisc,\n  CreateGround,\n  DefaultRenderingPipeline,\n  Effect,\n  Mesh,\n  MeshBuilder,\n  NodeMaterial,\n  Scene,\n  ShaderMaterial,\n  Texture,\n  Vector2,\n  Vector3,\n  WaterMaterial,\n} from \"../babylon\";\n\nexport async function generateOcean(scene, size) {\n  // Our built-in 'ground' shape.\n  const ground = MeshBuilder.CreateGround(\n    \"ground\",\n    { width: 1, height: 1, subdivisions: 128 },\n    scene\n  );\n  ground.scaling = new Vector3(size, size, size);\n  ground.position.y = -size / 4;\n\n  const material = await NodeMaterial.ParseFromFileAsync(\n    \"waterMaterial\",\n    \"https://hcwl-cdn.cdn.bcebos.com/hc3d/envs/water.json\",\n    scene\n  );\n  console.log(\"material: \", material);\n\n  ground.material = material;\n\n  const pipeline = new DefaultRenderingPipeline(\n    \"defaultPipeline\", // The name of the pipeline\n    false, // Do you want the pipeline to use HDR texture?\n    scene, // The scene instance\n    [scene.activeCamera] // The list of cameras to be attached to\n  );\n\n  pipeline.bloomEnabled = true;\n  pipeline.bloomThreshold = 0;\n  pipeline.bloomKernel = 0.35;\n  pipeline.bloomScale = 0.5;\n\n  pipeline.grainEnabled = true;\n  pipeline.grain.intensity = 8;\n  pipeline.grain.animated = true;\n\n  pipeline.chromaticAberrationEnabled = true;\n  pipeline.chromaticAberration.aberrationAmount = 65.1;\n  pipeline.chromaticAberration.radialIntensity = 2;\n\n  pipeline.sharpenEnabled = true;\n  pipeline.sharpen.edgeAmount = 0.15;\n\n  return ground;\n}\n\nEffect.ShadersStore[\"myshaderVertexShader\"] = `\n         attribute vec3 position;                \n         uniform mat4 world;                    \n         uniform mat4 view;                    \n         uniform mat4 viewProjection;          \n         varying float fFogDistance;\n         void main(void) {\n                 vec4 worldPosition = world * vec4(position, 1.0);\n                 fFogDistance = (view * worldPosition).z;\n                 gl_Position =  viewProjection * worldPosition;\n         }`;\n\nEffect.ShadersStore[\"myshaderFragmentShader\"] = `\n      #ifdef GL_ES\n  precision mediump float;\n  #endif\n  \n  uniform float time;\n  uniform vec2 mouse;\n  uniform vec2 resolution;\n  \n  // \"Seascape\" by Alexander Alekseev aka TDM - 2014\n  // License Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported License.\n  \n  const int NUM_STEPS = 12;\n  const float PI\t \t= 3.1415;\n  const float EPSILON\t= 1e-3;\n  float EPSILON_NRM\t= 0.;\n  \n  // sea\n  const int ITER_GEOMETRY = 3;\n  const int ITER_FRAGMENT = 5;\n  const float SEA_HEIGHT = 0.6;\n  const float SEA_CHOPPY = 4.0;\n  const float SEA_SPEED = 0.8;\n  const float SEA_FREQ = 0.16;\n  const vec3 SEA_BASE = vec3(0.1,0.19,0.22);\n  const vec3 SEA_WATER_COLOR = vec3(0.8,0.9,0.6);\n  float SEA_TIME = 0.;\n  mat2 octave_m = mat2(1.6,1.2,-1.2,1.6);\n  \n  // math\n  mat3 fromEuler(vec3 ang) {\n      vec2 a1 = vec2(sin(ang.x),cos(ang.x));\n      vec2 a2 = vec2(sin(ang.y),cos(ang.y));\n      vec2 a3 = vec2(sin(ang.z),cos(ang.z));\n      mat3 m;\n      m[0] = vec3(a1.y*a3.y+a1.x*a2.x*a3.x,a1.y*a2.x*a3.x+a3.y*a1.x,-a2.y*a3.x);\n      m[1] = vec3(-a2.y*a1.x,a1.y*a2.y,a2.x);\n      m[2] = vec3(a3.y*a1.x*a2.x+a1.y*a3.x,a1.x*a3.x-a1.y*a3.y*a2.x,a2.y*a3.y);\n      return m;\n  }\n  float hash( vec2 p ) {\n      float h = dot(p,vec2(127.1,311.7));\t\n      return fract(sin(h)*43758.5453123);\n  }\n  float noise( in vec2 p ) {\n      vec2 i = floor( p );\n      vec2 f = fract( p );\t\n      vec2 u = f*f*(3.0-2.0*f);\n      return -1.0+2.0*mix( mix( hash( i + vec2(0.0,0.0) ), \n                       hash( i + vec2(1.0,0.0) ), u.x),\n                  mix( hash( i + vec2(0.0,1.0) ), \n                       hash( i + vec2(1.0,1.0) ), u.x), u.y);\n  }\n  \n  // lighting\n  float diffuse(vec3 n,vec3 l,float p) {\n      return pow(dot(n,l) * 0.4 + 0.6,p);\n  }\n  float specular(vec3 n,vec3 l,vec3 e,float s) {    \n      float nrm = (s + 8.0) / (3.1415 * 8.0);\n      return pow(max(dot(reflect(e,n),l),0.0),s) * nrm;\n  }\n  \n  // sky\n  vec3 getSkyColor(vec3 e) {\n      e.y = max(e.y,0.0);\n      vec3 ret;\n      ret.x = pow(1.0-e.y,2.0);\n      ret.y = 1.0-e.y;\n      ret.z = 0.6+(1.0-e.y)*0.4;\n      return ret;\n  }\n  \n  // sea\n  float sea_octave(vec2 uv, float choppy) {\n      uv += noise(uv);        \n      vec2 wv = 1.0-abs(sin(uv));\n      vec2 swv = abs(cos(uv));    \n      wv = mix(wv,swv,wv);\n      return pow(1.0-pow(wv.x * wv.y,0.65),choppy);\n  }\n  \n  float map(vec3 p) {\n      float freq = SEA_FREQ;\n      float amp = SEA_HEIGHT;\n      float choppy = SEA_CHOPPY;\n      vec2 uv = p.xz; uv.x *= 0.75;\n      \n      float d, h = 0.0;    \n      for(int i = 0; i < ITER_GEOMETRY; i++) {        \n          d = sea_octave((uv+SEA_TIME)*freq,choppy);\n          d += sea_octave((uv-SEA_TIME)*freq,choppy);\n          h += d * amp;        \n          uv *= octave_m; freq *= 1.9; amp *= 0.22;\n          choppy = mix(choppy,1.0,0.2);\n      }\n      return p.y - h;\n  }\n  \n  float map_detailed(vec3 p) {\n      float freq = SEA_FREQ;\n      float amp = SEA_HEIGHT;\n      float choppy = SEA_CHOPPY;\n      vec2 uv = p.xz; uv.x *= 0.75;\n      \n      float d, h = 0.0;    \n      for(int i = 0; i < ITER_FRAGMENT; i++) {        \n          d = sea_octave((uv+SEA_TIME)*freq,choppy);\n          d += sea_octave((uv-SEA_TIME)*freq,choppy);\n          h += d * amp;        \n          uv *= octave_m; freq *= 1.9; amp *= 0.22;\n          choppy = mix(choppy,1.0,0.2);\n      }\n      return p.y - h;\n  }\n  \n  vec3 getSeaColor(vec3 p, vec3 n, vec3 l, vec3 eye, vec3 dist) {  \n      float fresnel = 1.0 - max(dot(n,-eye),0.0);\n      fresnel = pow(fresnel,3.0) * 0.65;\n          \n      vec3 reflected = getSkyColor(reflect(eye,n));    \n      vec3 refracted = SEA_BASE + diffuse(n,l,80.0) * SEA_WATER_COLOR * 0.12; \n      \n      vec3 color = mix(refracted,reflected,fresnel);\n      \n      float atten = max(1.0 - dot(dist,dist) * 0.001, 0.0);\n      color += SEA_WATER_COLOR * (p.y - SEA_HEIGHT) * 0.18 * atten;\n      \n      color += vec3(specular(n,l,eye,60.0));\n      \n      return color;\n  }\n  \n  // tracing\n  vec3 getNormal(vec3 p, float eps) {\n      vec3 n;\n      n.y = map_detailed(p);    \n      n.x = map_detailed(vec3(p.x+eps,p.y,p.z)) - n.y;\n      n.z = map_detailed(vec3(p.x,p.y,p.z+eps)) - n.y;\n      n.y = eps;\n      return normalize(n);\n  }\n  \n  float heightMapTracing(vec3 ori, vec3 dir, out vec3 p) {  \n      float tm = 0.0;\n      float tx = 1000.0;    \n      float hx = map(ori + dir * tx);\n      if(hx > 0.0) return tx;   \n      float hm = map(ori + dir * tm);    \n      float tmid = 0.0;\n      for(int i = 0; i < NUM_STEPS; i++) {\n          tmid = mix(tm,tx, hm/(hm-hx));                   \n          p = ori + dir * tmid;                   \n          float hmid = map(p);\n          if(hmid < 0.0) {\n              tx = tmid;\n              hx = hmid;\n          } else {\n              tm = tmid;\n              hm = hmid;\n          }\n      }\n      return tmid;\n  }\n  \n  // main\n  void main() {\n      EPSILON_NRM = 0.1 / resolution.x;\n      SEA_TIME = time * SEA_SPEED;\n      \n      vec2 uv = gl_FragCoord.xy / resolution.xy;\n      uv = uv * 2.0 - 1.0;\n      uv.x *= resolution.x / resolution.y;  \n      float time2 = 0.0;\n      time2 = time * 0.1 + (mouse.x*10.0);\n          \n      // ray\n      vec3 ang = vec3(sin(time2*3.0)*0.1,sin(time2)*0.2+0.3,time2);    \n      vec3 ori = vec3(0.0,3.5,time*5.0);\n      vec3 dir = normalize(vec3(uv.xy,-2.0)); \n      dir.z += length(uv) * 0.15;\n      dir = normalize(dir) * fromEuler(ang);\n      \n      // tracing\n      vec3 p;\n      heightMapTracing(ori,dir,p);\n      vec3 dist = p - ori;\n      vec3 n = getNormal(p, dot(dist,dist) * EPSILON_NRM);\n      vec3 light = normalize(vec3(0.0,1.0,0.8)); \n               \n      // color\n      vec3 color = mix(\n          getSkyColor(dir),\n          getSeaColor(p,n,light,dir,dist),\n          pow(smoothstep(0.0,-0.05,dir.y),0.3));\n          \n      // post\n      gl_FragColor = vec4(pow(color,vec3(0.75)), 1.0);\n  }`;\n\nexport function getOcean(size, scene) {\n  let ground = MeshBuilder.CreateGround(\n    \"ground\",\n    { width: size, height: size },\n    scene\n  );\n  let boxMaterial = new ShaderMaterial(\n    \"test\",\n    scene,\n    {\n      vertex: \"myshader\",\n      fragment: \"myshader\",\n    },\n    {\n      needAlphaBlending: true,\n      attributes: [\"position\"],\n      uniforms: [\n        \"world\",\n        \"view\",\n        \"viewProjection\",\n        \"vFogInfos\",\n        \"vFogColor\",\n        \"time\",\n        \"mouse\",\n        \"resolution\",\n      ],\n      samplers: [],\n    }\n  );\n\n  ground.material = boxMaterial;\n\n  let t = 0.1;\n  boxMaterial.onBind = function (mesh) {\n    let effect = boxMaterial.getEffect();\n    effect.setFloat(\"time\", (t += 0.001));\n    effect.setVector2(\"mouse\", new Vector2(0.8, 0.5));\n    effect.setVector2(\"resolution\", new Vector2(1024, 1024));\n  };\n}\n\nexport function getWaterPlane(\n  scene: Scene,\n  radius: number,\n  nodes: Mesh[] = [],\n  baseColor?: [string, string?]\n) {\n  const waterMesh = CreateDisc(\"waterMesh\", { radius: radius }, scene);\n  waterMesh.rotation.x = Math.PI / 2;\n  const water = new WaterMaterial(\"water\", scene, new Vector2(512, 512));\n  water.backFaceCulling = true;\n  water.bumpTexture = new Texture(\n    \"https://hcwl-cdn.cdn.bcebos.com/hc3d/textures/waterbump.png\",\n    scene\n  );\n  water.windForce = -10;\n  water.waveHeight = 2.0;\n  water.bumpHeight = 0.2;\n  water.windDirection = new Vector2(1, 0);\n  water.waterColor = new Color3(0.1, 0.1, 0.6);\n  water.colorBlendFactor = 0.0;\n  nodes.forEach((n) => water.addToRenderList(n));\n\n  if (baseColor?.[0]) {\n    water.waterColor = Color3.FromHexString(baseColor[0]);\n  }\n  if (baseColor?.[1]) {\n    water.waterColor2 = Color3.FromHexString(baseColor[1]);\n  }\n\n  waterMesh.material = water;\n\n  return [waterMesh, water];\n}\n","import { Tools } from \"../babylon\";\n\nexport function Log(msg: string) {\n  Tools.Log(msg);\n}\nexport function Error(msg: string) {\n  Tools.Error(msg);\n}\nexport function Warn(msg: string) {\n  Tools.Warn(msg);\n}\n","import { IVector2 } from \"@hc/core\";\nimport { Vector2, Vector3 } from \"@babylonjs/core/Maths/math.vector\";\nimport { equaln } from \"./utils\";\n\nexport function getPolylineCenter(\n  p1: Vector2,\n  p2: Vector2,\n  bulge: number\n): Vector2 {\n  const arc2d = new Arc2d(p1, p2, bulge);\n  return arc2d.MidPoint;\n}\n\nexport class Arc2d {\n  StartAngle: number;\n  EndAngle: number;\n  StartPoint: Vector2;\n  EndPoint: Vector2;\n  Center: Vector2;\n  Radius: number;\n  MidPoint: Vector2;\n  constructor(p1: Vector2, p2: Vector2, public bul: number) {\n    this.StartPoint = p1.clone();\n    this.EndPoint = p2.clone();\n\n    let vec: Vector2 = p2.subtract(p1);\n    let len = vec.length();\n    let an = angle(vec);\n\n    this.Radius = Math.abs(len / Math.sin(2 * Math.atan(bul)) / 2);\n    let delDis = Math.abs((bul * len) / 2);\n    let toDis = this.Radius - delDis;\n    an += Math.PI * 0.5 * Math.sign(bul);\n\n    this.Center = Vector2.Center(p1, p2);\n    this.MidPoint = this.Center.clone();\n    polar(this.Center, an, toDis);\n    polar(this.MidPoint, an + Math.PI, delDis);\n\n    this.StartAngle = angle(p1.clone().subtract(this.Center));\n    this.EndAngle = angle(p2.clone().subtract(this.Center));\n    if (bul < 0) {\n      this.StartAngle -= Math.PI;\n      this.EndAngle -= Math.PI;\n    }\n  }\n  // get MidPoint() {\n  //   const vec1 = asVector3(this.StartPoint.subtract(this.Center)).normalize();\n  //   const vec2 = asVector3(this.EndPoint.subtract(this.Center)).normalize();\n\n  //   if (isParallelTo(vec1, vec2)) {\n  //     const angle = this.AllAngle / 2;\n  //     vec1.applyRotationQuaternionInPlace(\n  //       Quaternion.RotationAxis(Axis.Z, angle)\n  //     );\n\n  //     return this.Center.add(asVector2(vec1).scale(this.Radius));\n  //   } else {\n  //     const vec3 = vec1.add(vec2).normalize().scale(this.Radius);\n  //     const v1 = vec1.cross(vec3).normalize();\n\n  //     if (v1.z === Math.sign(this.bul)) {\n  //       return this.Center.add(asVector2(vec3));\n  //     } else {\n  //       return this.Center.add(asVector2(vec3.negate()));\n  //     }\n  //   }\n  // }\n  get AllAngle() {\n    return Math.atan(this.bul) * 4;\n  }\n}\n\n/**\n * 按照极坐标的方式移动一个点\n *\n * @export\n * @template\n * @param {T} v 向量(2d,3d)\n * @param {number} an 角度\n * @param {number} dis 距离\n * @returns {T}\n */\nexport function polar<T extends Vector2 | Vector3>(\n  v: T,\n  an: number,\n  dis: number\n): T {\n  v.x += Math.cos(an) * dis;\n  v.y += Math.sin(an) * dis;\n  return v;\n}\n\nexport function angle(vec: Vector2 | Vector3) {\n  return Math.atan2(-vec.y, -vec.x) + Math.PI;\n}\n\nexport function isParallelTo(v1: Vector3, v2: Vector3, fuzz = 1e-8): boolean {\n  return v1.clone().cross(v2).lengthSquared() < fuzz;\n}\n\nexport function asVector3(vec: Vector2) {\n  return new Vector3(vec.x, vec.y);\n}\nexport function asVector2(vec: Vector3) {\n  return new Vector2(vec.x, vec.y);\n}\n\nexport function getOrthPoint(basePt: IVector2, targetPt: IVector2) {\n  const p1 = new Vector2(basePt.x, basePt.y);\n  const p2 = new Vector2(targetPt.x, targetPt.y);\n\n  const vec = p2.subtract(p1);\n\n  const an = angle(vec);\n\n  if (an <= Math.PI / 4 || an >= (Math.PI * 7) / 4) {\n    //修正到X\n    targetPt.y = basePt.y;\n  } else if (an > Math.PI / 4 && an <= (Math.PI * 3) / 4) {\n    //修正到正Y\n    targetPt.x = basePt.x;\n  } else if (an > (Math.PI * 3) / 4 && an <= (Math.PI * 5) / 4) {\n    //修正到正-X\n    targetPt.y = basePt.y;\n  } else {\n    //修正到正-Y\n    targetPt.x = basePt.x;\n  }\n\n  return targetPt;\n}\n\n//  获取点到直线的距离\nexport function getPointToLineDistance(\n  list: [Vector2 | Vector3, Vector2 | Vector3],\n  point: Vector2 | Vector3\n) {\n  let [p1, p2] = list;\n  if (p1.x === p2.x) {\n    return Math.abs(point.x - p1.x);\n  } else if (p1.y === p2.y) {\n    return Math.abs(point.y - p1.y);\n  }\n\n  return (\n    Math.abs(\n      (p1.y - p2.y) * point.x +\n        (p2.x - p1.x) * point.y +\n        p1.x * p2.y -\n        p1.y * p2.x\n    ) / Math.sqrt((p1.y - p2.y) * (p1.y - p2.y) + (p1.x - p2.x) * (p1.x - p2.x))\n  );\n}\n\n/**获取最近点信息 */\nexport function getClosestPoint(sp: Vector2, ep: Vector2, target: Vector2) {\n  if (sp.equalsWithEpsilon(target) || ep.equalsWithEpsilon(target)) {\n    return {\n      closestPt: target,\n      dist: 0,\n    };\n  }\n\n  const dir = ep.subtract(sp);\n\n  let length = dir.length();\n\n  if (equaln(length, 0)) {\n    return {\n      closestPt: sp,\n      dist: 0,\n    };\n  }\n\n  dir.scaleInPlace(1 / length);\n\n  let diff = target.subtract(sp);\n  let param = Vector2.Dot(dir, diff);\n\n  const closestPt = sp.add(dir.scale(param));\n  return {\n    closestPt,\n    dist: Vector2.Distance(target, closestPt),\n  };\n}\n\n/**\n * 将角度调整为0-2pi之间\n */\nexport function clampRad(an: number) {\n  an = an % (Math.PI * 2);\n  if (an < 0) an += Math.PI * 2;\n  return an;\n}\n\nexport function getDeterminantFor2V(\n  v1: Vector3 | Vector2,\n  v2: Vector2 | Vector3\n) {\n  return v1.x * v2.y - v1.y * v2.x;\n}\n\n/**计算平面点区域的面积，不考虑圆弧的情况 */\nexport function getAreaByPoints(points: Vector3[]) {\n  let area = 0;\n  for (let i = 0; i < points.length - 1; i++) {\n    let startV = points[i];\n    let endV = points[i + 1];\n\n    area += getDeterminantFor2V(startV, endV);\n  }\n\n  return area;\n}\n","import { DracoCompression } from \"@babylonjs/core\";\n\nexport function setDracoConfig(url: string) {\n  DracoCompression.Configuration = {\n    decoder: {\n      wasmUrl: url + \"libs/draco/draco_wasm_wrapper_gltf.js\",\n      wasmBinaryUrl: url + \"libs/draco/draco_decoder_gltf.wasm\",\n      fallbackUrl: url + \"libs/draco/draco_decoder_gltf.js\",\n    },\n  };\n}\n","export function setNodeMetaData(\n  node: { metadata?: any },\n  key: string,\n  value: any\n) {\n  if (!node.metadata) {\n    node.metadata = { [key]: value };\n  } else {\n    if (typeof node.metadata === \"object\") {\n      node.metadata[key] = value;\n    }\n  }\n}\nexport function getNodeMetaData(node: { metadata?: any }, key: string) {\n  if (!node.metadata) {\n    return null;\n  } else {\n    if (typeof node.metadata === \"object\") {\n      return node.metadata[key];\n    }\n  }\n  return null;\n}\n","import { Color4, Scene, PointsCloudSystem, Vector3 } from \"../babylon\";\n\nlet pcs: PointsCloudSystem;\n/**渲染点 */\nexport function renderPoints(points: Vector3[], scene: Scene) {\n  // if (pcs?.mesh) pcs.dispose();\n  let pcs = new PointsCloudSystem(\"pcs\", 12, scene);\n  function myfunc(particle, i) {\n    particle.position = points[i];\n    particle.color = new Color4(\n      Math.random(),\n      Math.random(),\n      Math.random(),\n      Math.random()\n    );\n    particle.pivot = Vector3.Zero();\n  }\n  pcs.addPoints(points.length, myfunc);\n  pcs.buildMeshAsync();\n}\n\nexport function disposePoint() {\n  pcs && pcs.dispose();\n}\n","import { IVector3, IVector2 } from \"@hc/core\";\nimport { Vector2, Vector3 } from \"../babylon\";\nimport { equaln } from \".\";\n\nexport const MaxVector = new Vector3(Infinity, Infinity, Infinity);\nexport const MinVector = new Vector3(-Infinity, -Infinity, -Infinity);\n\nexport const TempVector = new Vector3();\n\nexport function iVector2Vector(v: IVector3) {\n  return Vector3.FromArray([v.x ?? 0, v.y ?? 0, v.z ?? 0]);\n}\n\nexport function setVecLike2Vector(\n  sourc: Vector3 | Vector2,\n  target: IVector3 | IVector2\n) {\n  sourc.x = target.x ?? sourc.x;\n  sourc.y = target.y ?? sourc.y;\n  if (\"z\" in sourc && \"z\" in target) sourc.z = target.z ?? sourc.z;\n}\n\nexport function equlnVector3(v1: IVector3, v2: IVector3) {\n  return equaln(v1.x, v2.x) && equaln(v1.y, v2.y) && equaln(v1.z, v2.z);\n}\n\nexport function vec2Vec3Like(pt: Vector3) {\n  return { x: pt.x, y: pt.y, z: pt.z } as IVector3;\n}\nexport function vec2Vec2Like(pt: Vector2) {\n  return { x: pt.x, y: pt.y } as IVector2;\n}\n","import { IAnimation } from \"./../types/animation.types\";\nimport { HCFiler } from \"@hc/core\";\nimport {\n  Animatable,\n  Animation as BAnimation,\n  AnimationGroup,\n  Observer,\n} from \"../babylon\";\nimport { Entity } from \"../entitys/Entity\";\nimport { removeOne } from \"../utils\";\nimport { IAnimationOption } from \"../types\";\n\nexport class Animation implements IAnimation {\n  protected _name = \"未命名\";\n  protected _animation: BAnimation | AnimationGroup;\n  protected _animatable: Animatable;\n  protected _entity?: Entity;\n  protected _speedRadio = 1;\n  protected _time = 1;\n  protected _loop = false;\n  protected _frame = 30;\n  protected _loopCount: number;\n  protected _speed;\n  protected completeCallback: () => void;\n  protected _meshId?: string;\n  constructor(entity: Entity, option: IAnimationOption) {\n    let { time = 1, loop = false, frame = 30, loopCount } = option;\n    this.completeCallback = option?.complete;\n    this._meshId = option?.meshId;\n    this._entity = entity;\n    this._time = time;\n    this._loop = loop;\n    this._frame = frame;\n    this._loopCount = loopCount;\n  }\n  get Animation() {\n    return this._animation;\n  }\n  get name() {\n    return this._name;\n  }\n  set name(v: string) {\n    this._name = v;\n  }\n  getNodeByMeshId(meshId) {\n    const meshs = this._entity.DrawObject.getChildMeshes();\n    const mesh = meshs.find((m) => m.name.includes(meshId));\n    return mesh;\n  }\n  get Target() {\n    if (this._meshId) {\n      return this.getNodeByMeshId(this._meshId);\n    } else {\n      return this._entity?.isPart\n        ? this._entity.RenderObject\n        : this._entity.DrawObject;\n    }\n  }\n  init() {}\n  start() {\n    if (!this.Target?.getScene?.()) return;\n    this._animatable = this.Target.getScene().beginAnimation(\n      this.Target,\n      0,\n      this._time * this._frame,\n      this._loop,\n      this._speedRadio\n    );\n\n    if (this.completeCallback) {\n      this._animatable.onAnimationEndObservable.add(this.completeCallback);\n    }\n\n    if (this._loopCount && this._loop) {\n      this.setLoopCount(this._loopCount);\n    }\n  }\n  pause() {\n    if (this._animatable) {\n      this._animatable.pause();\n    }\n  }\n  restart() {\n    if (this._animatable) {\n      this._animatable.restart();\n    }\n  }\n  stop() {\n    if (this._animatable) {\n      this._animatable.stop();\n    }\n  }\n  reset() {\n    if (this._animatable) {\n      this._animatable.reset();\n    }\n  }\n  clear() {\n    const renderObject = this._entity?.RenderObject;\n    if (renderObject) {\n      removeOne(renderObject.animations, this._animation);\n    }\n  }\n\n  writeFile(file: HCFiler) {\n    file.write(1);\n    file.write(this._name);\n    file.write(this._time);\n    file.write(this._loop);\n    file.write(this._frame);\n    file.write(this._speedRadio);\n    file.write(this._loopCount);\n  }\n  readFile(file: HCFiler) {\n    file.read(); // 版本\n    this._name = file.read();\n    this._time = file.read();\n    this._loop = file.read();\n    this._frame = file.read();\n    this._speedRadio = file.read();\n    this._loopCount = file.read();\n  }\n  private setLoopCount(loopCount: number) {\n    let loopObserable: Observer<Animatable>;\n    if (loopCount) {\n      let count = 0;\n      loopObserable = this._animatable.onAnimationLoopObservable.add((data) => {\n        count++;\n        if (count === loopCount) {\n          data.stop();\n          this._animatable.onAnimationEndObservable.remove(loopObserable);\n        }\n      });\n    }\n    return () => {\n      loopObserable &&\n        this._animatable.onAnimationEndObservable.remove(loopObserable);\n    };\n  }\n}\n","import { Animation } from \"./Animation\";\nimport type { Entity } from \"./../entitys/Entity\";\nimport { IMovePathOption } from \"../types\";\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport { Animation as BAnimation, IAnimationKey, Vector3 } from \"../babylon\";\n\n@Factory\nexport class MoveAnimation extends Animation {\n  static type = \"MoveAnimation\";\n  protected _name = \"未命名移动\";\n  private _points: IVector3[] = [];\n  constructor(entity: Entity, option: IMovePathOption) {\n    super(entity, option);\n    let { path, time = 1, loop = false, frame = 30, loopCount, speed } = option;\n    this._time = time;\n    this._loop = loop;\n    this._frame = frame;\n    this._loopCount = loopCount;\n    this._speed = speed;\n    this._points = Array.isArray(path) ? path : path.Points;\n    if (option.name) this._name = option.name;\n    this.init();\n  }\n  init() {\n    this._entity.removeAnimation(this._name);\n    const renderMesh = this.Target;\n\n    const animate = new BAnimation(\n      this._name,\n      \"position\",\n      this._frame,\n      BAnimation.ANIMATIONTYPE_VECTOR3\n    );\n    const keyFrames: IAnimationKey[] = [];\n\n    // let i = 0;\n    // const n = this._time / this._points.length;\n    let n;\n\n    const pos = this._points;\n    if (this._speed) {\n      this._time = this.totalDistance(this._points) / this._speed;\n    }\n    for (let i = 0; i < pos.length; i++) {\n      n =\n        (this.totalDistance(this._points.slice(0, i + 1)) /\n          this.totalDistance(this._points)) *\n        this._time;\n      keyFrames.push({\n        frame: this._frame * n,\n        value: new Vector3(pos[i].x, pos[i].y, pos[i].z),\n      });\n    }\n    // for (const pos of this._points) {\n    //   keyFrames.push({\n    //     frame: this._frame * n * i++,\n    //     value: new Vector3(pos.x, pos.y, pos.z),\n    //   });\n    // }\n    animate.setKeys(keyFrames);\n    renderMesh.animations.push(animate);\n    this._animation = animate;\n  }\n  private totalDistance(path) {\n    let total = 0;\n    for (let i = 0; i < path.length - 1; i++) {\n      total =\n        total +\n        this.distance(\n          new Vector3(path[i].x, path[i].y, path[i].z),\n          new Vector3(path[i + 1].x, path[i + 1].y, path[i + 1].z)\n        );\n    }\n    return total;\n  }\n  private distance(d1, d2) {\n    return Vector3.Distance(d1, d2);\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this._points.length);\n    for (const p of this._points) {\n      file.write(p.x);\n      file.write(p.y);\n      file.write(p.z);\n    }\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    file.read(); // 版本\n    const count = file.read();\n    this._points.length = 0;\n    for (let i = 0; i < count; i++) {\n      const p = { x: 0, y: 0, z: 0 };\n      p.x = file.read();\n      p.y = file.read();\n      p.z = file.read();\n      this._points.push(p);\n    }\n  }\n}\n","import { BaseObject, Factory, HCFiler, ISerialize } from \"@hc/core\";\n\nimport {\n  Animation as BAnimation,\n  AnimationGroup as BAnimationGroup,\n  Camera,\n  TransformNode,\n} from \"../babylon\";\nimport type { Entity } from \"./../entitys/Entity\";\nimport { IAnimation } from \"./../types/animation.types\";\nimport { Animation } from \"./Animation\";\n\n//https://playground.babylonjs.com/#9WUJN#1965\n\n@Factory\nexport class AnimationGroup implements IAnimation, ISerialize {\n  static type = \"AnimationGroup\";\n  private _animation: Animation[] = [];\n  protected _group: BAnimationGroup;\n  protected _name = \"动画组\";\n  constructor(protected _entity?: Entity | Camera) {\n    this.init();\n  }\n  get AnimationGroup() {\n    return this._group;\n  }\n  get Target() {\n    if (this._entity instanceof Camera) {\n      return this._entity;\n    }\n    return (\n      (this._entity.RenderObject.parent as TransformNode) ||\n      this._entity.RenderObject\n    );\n  }\n  protected init() {\n    const group = new BAnimationGroup(this.name);\n    for (const n of this._animation) {\n      group.addTargetedAnimation(n.Animation as BAnimation, this.Target);\n    }\n    this._group = group;\n  }\n  get name() {\n    return this._name;\n  }\n  set name(v: string) {\n    this._name = v;\n  }\n  /**\n   * 开启动画\n   */\n  start() {\n    this._group.start();\n  }\n  /**\n   * 异步开始动画组,如果动画存在循环,那会无法出循环状态,需要手动停止\n   * @returns\n   */\n  startAync() {\n    this.start();\n    return new Promise((res) => {\n      this._group.onAnimationGroupEndObservable.add(res);\n    });\n  }\n  pause() {\n    this._group.pause();\n  }\n  restart() {\n    this._group.restart();\n  }\n  stop() {\n    this._group.stop();\n  }\n  reset() {\n    this._group.reset();\n  }\n  append(animate: Animation) {\n    this._group.addTargetedAnimation(\n      animate.Animation as BAnimation,\n      this.Target\n    );\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    const isCamera = this._entity instanceof Camera;\n    file.write(isCamera);\n    if (!isCamera) file.writeHardObjectId((this._entity as Entity).ObjectId);\n    file.writeAnyArray(this._animation, file.writeObject);\n  }\n  readFile(file: HCFiler) {\n    file.read(); // 版本\n    let isCamera = file.read();\n    if (!isCamera) {\n      const obj = file.readHardObjectId();\n      this._entity = obj.Object as Entity;\n    }\n\n    file.readAnyArrayAndPush(this._animation, file.readObject);\n\n    this.init();\n  }\n}\n","import { Matrix } from \"@babylonjs/core/Maths/math.vector\";\n\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\n\nimport {\n  Animation as BAnimation,\n  AnimationGroup as BAnimationGroup,\n  Camera,\n  IAnimationKey,\n  Quaternion,\n  Vector3,\n} from \"../babylon\";\nimport { Curve } from \"../entitys\";\nimport type { Entity } from \"../entitys/Entity\";\nimport { IPathOption } from \"../types/animation.types\";\nimport { iVector2Vector } from \"../utils/vector\";\nimport { AnimationGroup } from \"./AnimationGroup\";\n\n@Factory\nexport class PathAnimation extends AnimationGroup {\n  static type = \"PathAnimation\";\n  private path: Vector3[];\n  protected _name = \"路径动画\";\n  constructor(\n    protected _entity?: Entity | Camera,\n    private option?: IPathOption\n  ) {\n    super(_entity);\n    if (option?.path?.length) {\n      this.path = option.path.map(iVector2Vector);\n    }\n\n    if (option?.curve) {\n      this.path = option.curve.Object?.Shape ?? [];\n    }\n\n    if (option?.name) {\n      this.name = option.name;\n    }\n    if (_entity && option) this.init();\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.option.time);\n    file.write(this.option.frame);\n    file.write(this.option.loop);\n    file.writeVector3(this.option.forward);\n    file.writeAnyArray(this.option.path ?? [], file.writeVector3);\n    file.writeHardObjectId(this.option.curve);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    file.read(); // 版本\n    if (!this.option) this.option = {};\n    this.option.time = file.read() ?? 1;\n    this.option.frame = file.read() ?? 30;\n    this.option.loop = file.read() ?? false;\n    const v: any = {};\n    file.readVector3(v);\n    if (v.x !== undefined) {\n      this.option.forward = v;\n    }\n    const path = [];\n    file.readAnyArray(() => {\n      const v: any = {};\n      file.readVector3(v);\n      path.push(v);\n    });\n\n    if (path.length) {\n      this.option.path = path;\n    }\n    this.option.curve = file.readHardObjectId() as ObjectId<Curve>;\n\n    requestIdleCallback(() => {\n      const option = this.option;\n      if (option?.path?.length) {\n        this.path = option.path.map(iVector2Vector);\n      }\n\n      if (option?.curve) {\n        this.path = option.curve.Object?.Shape ?? [];\n      }\n      this.init();\n    });\n  }\n  protected init() {\n    if (!this.option) return;\n\n    if (this.path?.length === 0) return;\n\n    let {\n      time = 1,\n      loop = false,\n      frame = 30,\n      loopCount,\n      forward,\n    } = this.option;\n    const group = new BAnimationGroup(this.name);\n\n    const renderMesh = this.Target;\n\n    const isCamera = renderMesh instanceof Camera;\n\n    const z = !isCamera ? renderMesh.forward : new Vector3(0, 0, 1);\n    const right = !isCamera ? renderMesh.right : new Vector3(1);\n    const up = !isCamera ? renderMesh.up : new Vector3(0, 1);\n\n    let ro = 0;\n    if (forward) {\n      const v = iVector2Vector(forward).normalize();\n      Vector3.TransformCoordinatesToRef(\n        v,\n        renderMesh.getWorldMatrix().getRotationMatrix(),\n        v\n      );\n      ro = Math.acos(Vector3.Dot(v, z));\n      const sign = Math.sign(Vector3.Cross(z, v).y);\n      ro *= sign;\n    }\n\n    const rotation = new BAnimation(\n      this._name,\n      !isCamera ? \"rotationQuaternion\" : \"target\",\n      frame,\n      isCamera\n        ? BAnimation.ANIMATIONTYPE_VECTOR3\n        : BAnimation.ANIMATIONTYPE_QUATERNION\n    );\n\n    const move = new BAnimation(\n      this._name,\n      \"position\",\n      frame,\n      BAnimation.ANIMATIONTYPE_VECTOR3\n    );\n\n    const keyFrames: IAnimationKey[] = [];\n    const roKeyFrames: IAnimationKey[] = [];\n    const dist = this.getDistance();\n    const n = (time * frame) / dist;\n\n    let currentFrame = 0;\n    keyFrames.push({\n      frame: currentFrame,\n      value: this.path[0],\n    });\n\n    if (isCamera) {\n      renderMesh.position = this.path[0];\n      //@ts-ignore\n      renderMesh.target = this.path[1];\n    }\n\n    for (let i = 0; i < this.path.length - 1; i++) {\n      let p1 = this.path[i];\n      let p2 = this.path[i + 1];\n\n      const normal = p2.subtract(p1).normalize();\n\n      Vector3.CrossToRef(up, normal, right);\n\n      let mtx = Matrix.FromXYZAxesToRef(right, up, normal, new Matrix());\n\n      Matrix.RotationAxis(up, ro).multiplyToRef(mtx, mtx);\n\n      if (isCamera) {\n        currentFrame += frame;\n        roKeyFrames.push({\n          frame: currentFrame,\n          value: p2,\n        });\n      } else {\n        roKeyFrames.push({\n          frame: currentFrame,\n          value: Quaternion.FromRotationMatrix(mtx),\n        });\n\n        roKeyFrames.push({\n          frame: currentFrame,\n          value: Quaternion.FromRotationMatrix(mtx),\n        });\n      }\n\n      currentFrame += n * Vector3.Distance(p1, p2);\n\n      keyFrames.push({\n        frame: currentFrame,\n        value: p2,\n      });\n\n      if (isCamera) {\n        roKeyFrames.push({\n          frame: currentFrame,\n          value: p2,\n        });\n        if (!this.path[i + 2]) {\n          currentFrame += frame;\n          roKeyFrames.push({\n            frame: currentFrame,\n            value: p2.add(normal),\n          });\n        }\n      } else {\n        roKeyFrames.push({\n          frame: currentFrame,\n          value: Quaternion.FromRotationMatrix(mtx),\n        });\n      }\n    }\n\n    move.setKeys(keyFrames);\n    rotation.setKeys(roKeyFrames);\n\n    group.addTargetedAnimation(move, renderMesh);\n    group.addTargetedAnimation(rotation, renderMesh);\n\n    this._group = group;\n  }\n  private getDistance() {\n    let dist = 0;\n    for (let i = 0; i < this.path.length - 1; i++) {\n      let p1 = this.path[i];\n      let p2 = this.path[i + 1];\n      dist += Vector3.Distance(p1, p2);\n    }\n    return dist;\n  }\n}\n","import { Animation } from \"./Animation\";\nimport type { Entity } from \"./../entitys/Entity\";\nimport { IRotationOption } from \"../types\";\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport {\n  Animation as BAnimation,\n  IAnimationKey,\n  Matrix,\n  Quaternion,\n  Vector3,\n} from \"../babylon\";\nimport { iVector2Vector } from \"./../utils/vector\";\n\n@Factory\nexport class RotateAnimation extends Animation {\n  static type = \"RotateAnimation\";\n  protected _name = \"未命名旋转\";\n  private _from = 0;\n  private _angle = 0;\n  private _angles = [];\n  private _dir: IVector3;\n  private _origin: IVector3;\n  constructor(entity: Entity, option: IRotationOption) {\n    super(entity, option);\n    let {\n      angle,\n      dir = { x: 0, y: 1, z: 0 },\n      time = 1,\n      frame = 30,\n      loop = true,\n      from = 0,\n      angles = [],\n      loopCount,\n      origin,\n    } = option;\n    this._time = time;\n    this._loop = loop;\n    this._frame = frame;\n    this._loopCount = loopCount;\n    this._dir = dir;\n    this._angle = angle;\n    this._from = from;\n    if (option.name) this._name = option.name;\n    this._origin = origin;\n    this._angles = angles;\n    this.init();\n  }\n  init() {\n    this._entity.removeAnimation(this._name);\n    const renderMesh = this.Target;\n\n    const animate = new BAnimation(\n      this._name,\n      \"rotationQuaternion\",\n      this._frame,\n      BAnimation.ANIMATIONTYPE_QUATERNION\n    );\n    if (!renderMesh.rotationQuaternion) {\n      renderMesh.rotationQuaternion = renderMesh.rotation.toQuaternion();\n      renderMesh.rotation.setAll(0);\n    }\n    const axes = Vector3.FromArray(Object.values(this._dir)).normalize();\n\n    const keyFrames: IAnimationKey[] = [];\n\n    if (this._angles?.length) {\n      const range = this._time / this._angles.length;\n      for (let i = 0; i < this._angles.length; i++) {\n        keyFrames.push({\n          frame: this._frame * i * range,\n          value: Quaternion.RotationAxis(axes, this._angles[i]),\n        });\n      }\n    } else {\n      keyFrames.push({\n        frame: 0,\n        value: Quaternion.RotationAxis(axes, this._from),\n      });\n      const angle = Math.abs(this._from - this._angle);\n\n      if (angle > Math.PI * 2 - 1e-3) {\n        const unit = Math.PI / 4;\n        const count = Math.round(angle / unit);\n        const timeUnit = this._time / count;\n\n        for (let i = 1; i <= count; i++) {\n          const addQ = Quaternion.RotationAxis(axes, this._from + i * unit);\n          keyFrames.push({\n            frame: this._frame * (timeUnit * i),\n            value: addQ,\n          });\n        }\n      }\n    }\n\n    animate.setKeys(keyFrames);\n\n    if (this._origin) {\n      const origin = Vector3.FromArray(Object.values(this._origin)).negate();\n\n      const pilotStart = iVector2Vector(\n        this._entity ? this._entity.Position : Vector3.Zero()\n      ).add(origin);\n\n      const pivotTranslate = pilotStart;\n\n      renderMesh.setPivotMatrix(\n        Matrix.Translation(pivotTranslate.x, pivotTranslate.y, pivotTranslate.z)\n      );\n    }\n\n    renderMesh.animations.push(animate);\n\n    this._animation = animate;\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    file.read(); // 版本\n    const count = file.read();\n  }\n}\n","import { EventDispatcher } from \"@hc/core\";\n\n/**全局的事件监听和触发 */\nexport const AppEvent = new EventDispatcher();\n","import { Path3D } from \"@babylonjs/core/Maths/math.path\";\n\nimport {\n  AllObjectData,\n  BaseObject,\n  EraseEntityData,\n  EventCallback,\n  HCFiler,\n  IEvent,\n  IEventOptions,\n  ISerialize,\n  IVector3,\n  ObjectId,\n  arrayLast,\n} from \"@hc/core\";\n\nimport {\n  ActionEvent,\n  ActionManager,\n  Animatable,\n  AnimationGroup,\n  Axis,\n  Animation as BAnimation,\n  AnimationGroup as BAnimationGroup,\n  Color3,\n  Color4,\n  ExecuteCodeAction,\n  Matrix,\n  Mesh,\n  MeshBuilder,\n  MirrorTexture,\n  Nullable,\n  Observer,\n  PBRMaterial,\n  Plane,\n  PointerEventTypes,\n  Quaternion,\n  Scene,\n  Space,\n  StandardMaterial,\n  TransformNode,\n  Vector3,\n} from \"../babylon\";\nimport { EventEnum } from \"../enums\";\nimport { UpdateFlag } from \"../enums/UpdateFlag\";\nimport { MaterialRecord } from \"../record/MaterialRecord\";\nimport { GroupRecord } from \"../records/GroupRecord\";\nimport { ActionManagerType } from \"../types\";\nimport {\n  IAnimateReturn,\n  IAnimation,\n  IMovePathOption,\n  IPathOption,\n  IRotationOption,\n} from \"../types/animation.types\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { hexToRgba, parseColorString, removeOne } from \"../utils\";\nimport { Box3 } from \"../utils/Box3\";\nimport { getNodeMetaData, setNodeMetaData } from \"../utils/metadata\";\nimport {\n  equlnVector3,\n  iVector2Vector,\n  setVecLike2Vector,\n} from \"../utils/vector\";\nimport { MoveAnimation } from \"./../animates/MoveAnimation\";\nimport { PathAnimation } from \"./../animates/PathAnimation\";\nimport { RotateAnimation } from \"./../animates/RotateAnimation\";\nimport { AppEvent } from \"./../core/AppEvent\";\nimport { IScaleOption } from \"./../types/animation.types\";\nimport { PointTypeEnum } from \"./../types/event\";\n\nexport type INode = Mesh | TransformNode;\n\nexport type StartAnimateOptions = {\n  loop?: boolean;\n  speedRatio?: number;\n  onComplete?: () => void;\n};\n\n/**\n * 绘制实体对象基类\n *\n * @export\n * @class Entity\n * @extends {BaseObject}\n */\nexport class Entity extends BaseObject {\n  static type: string;\n  static renderType = RenderType.Conceptual;\n  static Scene: Scene;\n  public isAsync = false;\n  public isLight = false;\n  isPart = false;\n  /**选中状态 */\n  IsSelect = false;\n  private _enableShadow = true;\n  //自身坐标系\n  private _matrix = Matrix.Identity();\n  private _scale = new Vector3(1, 1, 1);\n  private _rotation = new Vector3();\n  private _rotationQuaternion = new Quaternion();\n  protected _position = new Vector3();\n  protected _drawObject: TransformNode;\n  private _isVisiable = true;\n  protected _colorIndex = 9;\n  protected _color: string;\n  private _renderType: RenderType;\n  /**实体材质 */\n  protected _materialMap = new Map<string, ObjectId<MaterialRecord>>();\n  protected _cacheDrawObject = new Map<RenderType, Mesh>();\n  private _animations: IAnimation[] = [];\n  private _isPickable = true;\n  protected modelAnimations: BAnimationGroup[];\n  protected _name: string;\n  private _highlight = false;\n  /**\n   * 模型材质透明度\n   * @deprecated\n   * @protected\n   * @memberof Entity\n   */\n  protected _opacity = 1;\n  private _animationing: BAnimation[] = [];\n  /**模型自带的材质 */\n  protected _ownMaterials: MaterialRecord[] = [];\n  public GroupId: Nullable<ObjectId<GroupRecord>>;\n  protected updateFlag = UpdateFlag.None;\n  public AutoUpdate = true;\n  public registerAfterRenderFun;\n  /**用于存一些临时的数据 */\n  public TempData: any;\n  /**\n   * 模型自带的材质修改记录\n   *\n   * @memberof Entity\n   */\n  public diffMaterials = new Map<string, Record<string, any>>();\n  private _material: ObjectId<MaterialRecord>;\n  #visibility = 1;\n  #enableEdge = false;\n  #edgeWidth = 1;\n  #edgeColor = new Color4(1, 1, 1, 1);\n\n  constructor() {\n    super();\n  }\n\n  get UniqueName() {\n    return this.constructor[\"type\"] + this.Id;\n  }\n  get Name() {\n    return this._name ?? this.UniqueName;\n  }\n  set Name(n: string) {\n    this._name = n;\n    this.trigger2({ type: EventEnum.UpdateName, target: this });\n  }\n  private get CanUpdate() {\n    return !!this.ObjectId?.Index && !this._erase;\n  }\n  get RenderType() {\n    return this._renderType ?? Entity.renderType;\n  }\n  get IsPickable() {\n    return this._isPickable;\n  }\n  set IsPickable(v: boolean) {\n    this._isPickable = v;\n\n    // 实体有可能还未绘制到画布上\n    if (!this._drawObject) {\n      return;\n    }\n\n    this._drawObject.getChildMeshes().forEach((m) => (m.isPickable = v));\n  }\n  get Highlight() {\n    return this._highlight;\n  }\n  get IsComponent() {\n    return false;\n  }\n  /**\n   * 获取渲染的实体容器对象\n   * # 注意，如果实体没渲染，该getter 会创建一个新的实体并添加到画布场景!!!\n   * @readonly\n   * @memberof Entity\n   */\n  get DrawObject() {\n    if (this._drawObject) return this._drawObject;\n    const obj = this.GetDrawObjectFromRenderType(\n      this._renderType ?? Entity.renderType\n    );\n    this._drawObject = new TransformNode(\n      this.Name ?? this._id?.Index.toString(),\n      Entity.Scene,\n      false\n    );\n    if (!this.isPart) {\n      obj.parent = this._drawObject;\n      this._drawObject.metadata = {\n        Entity: this,\n      };\n    }\n\n    this.update();\n\n    return this._drawObject;\n  }\n  get Scene() {\n    return this._drawObject?.getScene?.();\n  }\n  get RenderObject(): Mesh {\n    if (!this._drawObject && !this.isPart) return null;\n    return this.GetDrawObjectFromRenderType(this.RenderType);\n  }\n  get ColorIndex() {\n    return this._colorIndex;\n  }\n  set ColorIndex(v) {\n    if (this._colorIndex === v) return;\n    this.writeSnapshoot();\n    this._colorIndex = v;\n    this.update();\n  }\n\n  get Matrix() {\n    return this._matrix.clone();\n  }\n  set Matrix(mtx: Matrix) {\n    this.writeSnapshoot();\n    this._matrix.copyFrom(mtx);\n    this._matrix.decompose(\n      this._scale,\n      this._rotationQuaternion,\n      this._position\n    );\n    this._rotationQuaternion.toEulerAnglesToRef(this._rotation);\n    this.update();\n  }\n  get MatrixInv() {\n    return this._matrix.invert();\n  }\n  get TransfromFromMtx() {\n    const position = new Vector3();\n    const rq = new Quaternion();\n    const scale = new Vector3();\n    this._matrix.decompose(scale, rq, position);\n\n    return {\n      position,\n      rotation: rq.toEulerAngles(),\n      scale,\n    };\n  }\n  get BoundingVectors() {\n    if (this._drawObject) return this._drawObject.getHierarchyBoundingVectors();\n    else\n      return {\n        min: new Vector3(),\n        max: new Vector3(),\n      };\n  }\n  get BoundingBox(): Box3 {\n    if (this.RenderObject) {\n      const b = this.RenderObject.getBoundingInfo().boundingBox;\n      return new Box3(b.minimum, b.maximum, b.getWorldMatrix());\n    }\n    return new Box3();\n  }\n  /**\n   * @deprecated\n   *\n   * @memberof Entity\n   */\n  get Opacity() {\n    return this._opacity;\n  }\n  set Opacity(v: number) {\n    if (v === this._opacity) return;\n    this.writeSnapshoot();\n    this._opacity = v;\n\n    this.update(UpdateFlag.Geometry);\n  }\n  get Color() {\n    return this._color;\n  }\n  set Color(v: string) {\n    if (v === this._color) return;\n    this.writeSnapshoot();\n    this._color = v;\n    this.update(UpdateFlag.Material);\n  }\n\n  get Position() {\n    return { x: this._position.x, y: this._position.y, z: this._position.z };\n  }\n  set Position(v: IVector3) {\n    this.writeSnapshoot();\n    setVecLike2Vector(this._position, v);\n    this.updateEntityMatrix();\n    this.update();\n  }\n\n  get Rotation() {\n    return { x: this._rotation.x, y: this._rotation.y, z: this._rotation.z };\n  }\n  set Rotation(rotation: IVector3) {\n    this.writeSnapshoot();\n    setVecLike2Vector(this._rotation, rotation);\n    Quaternion.FromEulerAnglesToRef(\n      this._rotation.x,\n      this._rotation.y,\n      this._rotation.z,\n      this._rotationQuaternion\n    );\n    this.updateEntityMatrix();\n    this.update();\n  }\n  get Scale() {\n    return { x: this._scale.x, y: this._scale.y, z: this._scale.z };\n  }\n  set Scale(v: IVector3) {\n    this.writeSnapshoot();\n    setVecLike2Vector(this._scale, v);\n    this._scale.copyFromFloats(v.x, v.y, v.z);\n    this.updateEntityMatrix();\n    this.update();\n  }\n  get Visiable() {\n    return this._isVisiable && !this.IsErase;\n  }\n  set Visiable(v: boolean) {\n    if (v === this._isVisiable) return;\n    this.writeSnapshoot();\n    this._isVisiable = v;\n    this._drawObject?.setEnabled(!this._erase && this._isVisiable);\n    this.trigger2({ type: EventEnum.UpdateVisiable, target: this });\n  }\n  get AnimationNames() {\n    const names: string[] = [];\n    if (this.modelAnimations) {\n      this.modelAnimations.forEach((a) => names.push(a.name));\n    }\n    this._animations.forEach((a) => names.push(a.name));\n    return names;\n  }\n  get Animations() {\n    const animations: IAnimation[] = [...this._animations];\n    if (this.modelAnimations?.length) {\n      animations.push(...this.modelAnimations);\n    }\n    return animations;\n  }\n  get EnableShadow() {\n    return this._enableShadow;\n  }\n  set EnableShadow(v) {\n    if (this._enableShadow === v) return;\n    this._enableShadow = v;\n    AppEvent.trigger({ type: EventEnum.UpdateShadow, target: this });\n  }\n  get MaterialMap() {\n    return this._materialMap;\n  }\n  /**设置实体的材质，实体中所有的网格都将应用这个实体 */\n  get Material(): MaterialRecord {\n    return this._material?.Object;\n  }\n  set Material(mtl: MaterialRecord | ObjectId<MaterialRecord>) {\n    this.trigger2({ type: EventEnum.UpdateMaterial, target: this });\n    this._material = mtl instanceof MaterialRecord ? mtl.ObjectId : mtl;\n    this.update(UpdateFlag.Material);\n  }\n  /**实体自带的材质 */\n  get OwnMaterials() {\n    return [...this._ownMaterials];\n  }\n  get AllMaterils() {\n    if (this.Material) {\n      return [this.Material];\n    } else {\n      const mtls = new Set<MaterialRecord>();\n      for (const [id, mtl] of this._materialMap) {\n        mtls.add(mtl.Object);\n      }\n\n      if (this.RenderObject) {\n        const meshes = this.RenderObject.getChildMeshes() as Mesh[];\n        for (const m of meshes) {\n          if (m.geometry && m.material && !this._materialMap.has(m.id)) {\n            const mtl = m.material;\n            const record = mtl.metadata?.record;\n            if (record) {\n              mtls.add(record);\n            }\n          }\n        }\n      }\n\n      return Array.from(mtls);\n    }\n  }\n  /**\n   * 网格透明度\n   * - 透明度会和材质透明度叠加\n   *\n   * @memberof Entity\n   */\n  get Visibility() {\n    return this.#visibility;\n  }\n  set Visibility(v: number) {\n    if (v === this.#visibility) return;\n    this.writeSnapshoot();\n    this.#visibility = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  /**\n   * 开启网格线宽渲染\n   *\n   * @memberof Entity\n   */\n  get EnableEdge() {\n    return this.#enableEdge;\n  }\n  set EnableEdge(v: boolean) {\n    if (v === this.#enableEdge) return;\n    this.writeSnapshoot();\n    this.#enableEdge = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  get EdgeWidth() {\n    return this.#edgeWidth;\n  }\n  set EdgeWidth(v: number) {\n    if (v === this.#edgeWidth) return;\n    this.writeSnapshoot();\n    this.#edgeWidth = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  get EdgeColor() {\n    return hexToRgba(this.#edgeColor.toHexString());\n  }\n  set EdgeColor(v: string) {\n    this.writeSnapshoot();\n    const obj = parseColorString(v);\n    this.#edgeColor = new Color4(obj.r / 255, obj.g / 255, obj.b / 255, obj.a);\n    this.update(UpdateFlag.Geometry);\n  }\n  /**\n   * 给指定网格分配材质\n   * @param id 网格id\n   * @param mtl 材质对象\n   * @see https://hc3dol.gkiiot.com/#18\n   */\n  setMaterial(id: string, mtl: MaterialRecord) {\n    this.trigger2({ type: EventEnum.UpdateMaterial, target: this });\n    this._materialMap.set(id, mtl.ObjectId);\n    this.update(UpdateFlag.Material);\n  }\n  getAllMesh(filter = (m: Mesh) => !!m.geometry) {\n    return this.RenderObject.getChildMeshes().filter(filter);\n  }\n  /**高亮物体\n   * color 轮廓颜色，为空时取消高亮\n   */\n  highlight(color: string) {\n    const hg = Entity.Scene.getHighlightLayerByName(\"select-entity\");\n    this._drawObject\n      .getChildMeshes()\n      .forEach((c) =>\n        color\n          ? hg.addMesh(c as Mesh, Color3.FromHexString(color))\n          : hg.removeMesh(c as Mesh)\n      );\n  }\n  translate(vec: IVector3) {\n    this.writeSnapshoot();\n    this.Position = this._position.add(iVector2Vector(vec));\n  }\n  GetDrawObjectFromRenderType(\n    renderType: RenderType = RenderType.Conceptual\n  ): Mesh {\n    if (this._cacheDrawObject.has(renderType)) {\n      const obj = this._cacheDrawObject.get(renderType);\n      obj.setEnabled(true);\n      return obj;\n    } else {\n      const drawObj = this.initDrawObject(renderType);\n      if (!drawObj) {\n        return;\n      }\n\n      this._cacheDrawObject.set(renderType, drawObj);\n      return drawObj;\n    }\n  }\n  lookAt(v: IVector3) {\n    this._drawObject.lookAt(iVector2Vector(v));\n    if (this._drawObject.rotationQuaternion) {\n      this._rotationQuaternion.copyFrom(this._drawObject.rotationQuaternion);\n      this._rotation.copyFrom(this._rotationQuaternion.toEulerAngles());\n    } else {\n      this._rotation.copyFrom(this._drawObject.rotation);\n      this._rotationQuaternion.copyFrom(this._rotation.toQuaternion());\n    }\n    this.updateEntityMatrix();\n  }\n  /**\n   * 调整透明度优先级\n   * @param index\n   * @param name\n   * @returns\n   */\n  setAlphaIndex(index: number, name?: string[]) {\n    if (!this._drawObject) return;\n    const meshs = this._drawObject.getChildMeshes() as Mesh[];\n    for (const m of meshs) {\n      if (name && !name.every((n) => m.name.includes(n))) continue;\n      m.alphaIndex = index;\n    }\n  }\n  setRenderGroupId(index = 0) {\n    if (!this._drawObject) return;\n    const meshs = this._drawObject.getChildMeshes() as Mesh[];\n    for (const m of meshs) {\n      m.renderingGroupId = index;\n    }\n  }\n  removeAnimation(n: string) {\n    const an = this._animations.find((an) => an.name === n);\n    if (an) {\n      an.clear();\n      removeOne(this._animations, an);\n    }\n  }\n  /**\n   * 开始运行动画\n   * @param name\n   * @param loop\n   * @param speedRatioAnimations\n   */\n  startAnimates(name: string, option?: StartAnimateOptions) {\n    const { loop = true, speedRatio = 1, onComplete = () => {} } = option ?? {};\n    for (const animate of this.Animations) {\n      if (name === animate.name) {\n        if (animate instanceof AnimationGroup) {\n          animate.onAnimationEndObservable.addOnce(onComplete);\n        }\n        animate.start(loop, speedRatio);\n      }\n    }\n  }\n  stopAnimates(names?: string[]) {\n    for (const animate of this.Animations) {\n      if (!names || names.includes(animate.name)) {\n        animate.stop();\n      }\n    }\n  }\n  clearAnimatable() {\n    this.RenderObject.animations.length = 0;\n    for (const an of this._animations) {\n      an.pause();\n      an.stop();\n      an.reset();\n    }\n    this._animations.length = 0;\n    this.stopAnimates();\n  }\n  appendAnimation(an: IAnimation) {\n    this.writeSnapshoot();\n    this._animations.push(an);\n    this.trigger2({ type: EventEnum.AddAnimation, target: this });\n  }\n  /**\n   * 镜像材质\n   * @param target\n   * @param source\n   * @returns\n   */\n  mirrorMaterial(target: Mesh, source: Mesh[]) {\n    const material = target.material as StandardMaterial | PBRMaterial;\n    if (!material) return;\n    const glass_worldMatrix = target.getWorldMatrix();\n    //Obtain normals for plane and assign one of them as the normal\n    const glass_vertexData = target.getVerticesData(\"normal\");\n    let glassNormal0 = new Vector3(\n      glass_vertexData[0],\n      glass_vertexData[1],\n      glass_vertexData[2]\n    );\n    //Use worldMatrix to transform normal into its current value\n    let glassNormal = Vector3.TransformNormal(glassNormal0, glass_worldMatrix);\n    const reflector = Plane.FromPositionAndNormal(\n      target.position,\n      glassNormal.scale(-1)\n    );\n    const texture = new MirrorTexture(\n      \"mirror\" + this.Id,\n      1024,\n      Entity.Scene,\n      true\n    );\n    material.reflectionTexture = texture;\n    texture.mirrorPlane = reflector;\n    texture.renderList = source;\n    texture.level = 1;\n  }\n  /**实体移动动画\n   ** 并未真正改变实体位置\n   ** 可重置可循环\n   */\n  public moveAnimate(option: IMovePathOption): IAnimation {\n    const an = new MoveAnimation(this, option);\n    this.appendAnimation(an);\n    return an;\n  }\n  /**\n   * 实体按轨迹移动动画\n   */\n  public followAnimate(option: {\n    path: IVector3[];\n    loop: boolean;\n    complete: () => void;\n    time: number;\n  }) {\n    let points = [];\n    option.path.forEach((element) => {\n      points.push(new Vector3(element.x, element.y, element.z));\n    });\n\n    let path3d = new Path3D(points),\n      normals = path3d.getNormals(),\n      theta = Math.acos(Vector3.Dot(Axis.X, normals[0]));\n    this._drawObject.rotate(Axis.Y, theta, Space.WORLD);\n    this.Scene.registerAfterRender(\n      this.updateRotateAndPosition(points, normals, option)\n    );\n  }\n  private totalDistance(path) {\n    let total = 0;\n    for (let i = 0; i < path.length - 1; i++) {\n      total = total + Vector3.Distance(path[i], path[i + 1]);\n    }\n    return total;\n  }\n  private updateRotateAndPosition(path, normals, option) {\n    let i = 0,\n      startTime: any = new Date(),\n      time = option?.time,\n      currentTime,\n      offsetTime,\n      totalDistance,\n      offsetDistance;\n    this.registerAfterRenderFun = () => {\n      if (i === path.length - 1) {\n        if (option?.loop) {\n          i = 0;\n          startTime = new Date();\n          let thetaZero = Math.acos(Vector3.Dot(Axis.X, normals[0]));\n          this._drawObject.rotate(Axis.Y, thetaZero, Space.WORLD);\n        } else {\n          option?.complete?.();\n          this.Scene.unregisterAfterRender(this.registerAfterRenderFun);\n          return;\n        }\n      }\n\n      currentTime = new Date();\n      offsetTime = (currentTime - startTime) / 1000;\n      totalDistance = this.totalDistance(path);\n      offsetDistance = this.totalDistance(path.slice(0, i + 1)) / totalDistance;\n      if (offsetTime < offsetDistance * time) {\n        return;\n      }\n\n      let theta = Math.acos(Vector3.Dot(normals[i], normals[i + 1]));\n      let dir = Vector3.Cross(normals[i], normals[i + 1]).y;\n\n      dir = dir === 0 ? dir : dir / Math.abs(dir);\n      this._drawObject.position.x = path[i].x;\n      this._drawObject.position.z = path[i].z;\n\n      this._drawObject.rotate(Axis.Y, dir * theta, Space.WORLD);\n\n      i = i + 1;\n    };\n    return this.registerAfterRenderFun;\n  }\n  /**\n   * 旋转动画\n   * @param option\n   * @returns\n   */\n  public rotateAnimate(option: IRotationOption): IAnimation {\n    const an = new RotateAnimation(this, option);\n    this.appendAnimation(an);\n    return an;\n  }\n\n  scaleAnimate(opt: IScaleOption): IAnimateReturn {\n    const {\n      scale,\n      time = 1,\n      frame = 30,\n      loop = false,\n      loopCount,\n      complete,\n    } = opt;\n\n    const endScale = Vector3.FromArray([\n      scale.x ?? this._scale.x,\n      scale.y ?? this._scale.y,\n      scale.z ?? this._scale.z,\n    ]);\n\n    const renderObject = this.RenderObject;\n    const scene = renderObject.getScene();\n\n    const animate = new BAnimation(\n      \"rotate-animate\",\n      \"scaling\",\n      30,\n      BAnimation.ANIMATIONTYPE_VECTOR3\n    );\n    animate.setKeys([\n      {\n        frame: 0,\n        value: this._scale.clone(),\n      },\n      {\n        frame: time * frame,\n        value: endScale,\n      },\n    ]);\n    renderObject.animations.push(animate);\n\n    const animatable = scene.beginAnimation(\n      renderObject,\n      0,\n      time * frame,\n      loop\n    );\n\n    animatable.onAnimationEndObservable.addOnce(() => {\n      complete?.();\n    });\n    let clearObserable = this.setLoopCount(loopCount, animatable);\n    const clear = () => {\n      animatable.stop();\n      clearObserable?.();\n      removeOne(renderObject.animations, animate);\n    };\n    return {\n      clear,\n      restart: () => animatable.restart(),\n      stop: () => animatable.stop(),\n      pause: () => animatable.pause(),\n      reset: () => animatable.reset(),\n    };\n  }\n\n  moveByPath(option: IPathOption) {\n    const an = new PathAnimation(this, option);\n    this.appendAnimation(an);\n    return an;\n  }\n\n  /*\n   * 实体移动到目标位置\n   */\n  moveTo(\n    to: IVector3,\n    isOffset = true,\n    animateOption?: { time: number; type?: string; startTime?: number }\n  ) {\n    return new Promise((res) => {\n      if (animateOption) {\n        const { time = 1, startTime = 0 } = animateOption;\n\n        const origin = this._drawObject.position.clone();\n\n        const frames = [\n          {\n            frame: startTime * 30,\n            value: origin,\n          },\n          {\n            frame: (time + startTime) * 30,\n            value: isOffset\n              ? origin.clone().add(iVector2Vector(to))\n              : iVector2Vector(to),\n          },\n        ];\n\n        if (equlnVector3(frames[0].value, frames[1].value)) {\n          res(null);\n          return;\n        }\n\n        const animation = new BAnimation(\n          \"move-animate\",\n          \"position\",\n          30,\n          BAnimation.ANIMATIONTYPE_VECTOR3\n        );\n        animation.setKeys(frames);\n        this._animationing.push(animation);\n        this._drawObject.animations.push(animation);\n        const animatable = this._drawObject\n          .getScene()\n          .beginDirectAnimation(\n            this._drawObject,\n            this._animationing,\n            startTime * 30,\n            30 * (time + startTime),\n            false\n          );\n        animatable.onAnimationEndObservable.addOnce(() => {\n          removeOne(this._drawObject.animations, animation);\n          removeOne(this._animationing, animation);\n          this._position = frames[1].value;\n          console.log(\"move-end\");\n          res(null);\n        });\n      } else {\n        if (isOffset) {\n          this.applyMatrix(Matrix.Translation(to.x ?? 0, to.y ?? 0, to.z ?? 0));\n        } else this.Position = to;\n        res(null);\n      }\n    });\n  }\n  /**\n   * 选中实体\n   * @param animateOption\n   * @returns\n   */\n  rotateTo(animateOption: {\n    angle: number;\n    dir?: IVector3;\n    pivot?: IVector3;\n    time: number;\n    type?: string;\n    isOffset: boolean;\n    animation?: boolean;\n    startTime?: number;\n  }) {\n    return new Promise((res) => {\n      const {\n        time = 1,\n        dir = { x: 0, y: 1, z: 0 },\n        angle,\n        animation,\n        isOffset,\n        pivot,\n        startTime = 0,\n      } = animateOption;\n\n      const axes = Vector3.FromArray(Object.values(dir)).normalize();\n      if (animation) {\n        const origin = (\n          this._drawObject.rotationQuaternion ||\n          Quaternion.FromEulerVector(this._drawObject.rotation)\n        ).clone();\n\n        const frames = [\n          {\n            frame: startTime * 30,\n            value: origin.clone(),\n          },\n        ];\n\n        if (!isOffset) {\n          if (\n            !this._drawObject.metadata?.rotation ||\n            this._drawObject.metadata.rotation !== angle\n          ) {\n            this._drawObject.metadata.rotation = angle;\n          } else {\n            res(true);\n            return;\n          }\n        }\n\n        //旋转一周，增加一个缓冲\n        if (angle > Math.PI * 2 - 1e-3) {\n          const unit = Math.PI / 4;\n          const count = Math.round(angle / unit);\n          const timeUnit = time / count;\n\n          for (let i = 1; i <= count; i++) {\n            const addQ = Quaternion.RotationAxis(axes, i * unit);\n            frames.push({\n              frame: 30 * (startTime + timeUnit * i),\n              value: isOffset ? origin.multiply(addQ) : addQ,\n            });\n          }\n        } else {\n          const addQ = Quaternion.RotationAxis(axes, angle);\n          frames.push({\n            frame: 30 * (startTime + time),\n            value: isOffset ? origin.multiply(addQ) : addQ,\n          });\n        }\n\n        if (\n          frames.length === 2 &&\n          equlnVector3(frames[0].value, frames[1].value)\n        ) {\n          res(null);\n          return;\n        }\n\n        if (pivot) {\n          this._drawObject.setPivotPoint(iVector2Vector(pivot));\n        }\n\n        const animation = new BAnimation(\n          \"rotate-animation\",\n          \"rotationQuaternion\",\n          30,\n          BAnimation.ANIMATIONTYPE_QUATERNION\n        );\n\n        this._animationing.push(animation);\n\n        animation.setKeys(frames);\n        this._drawObject.animations.push(animation);\n        const animatable = this._drawObject\n          .getScene()\n          .beginDirectAnimation(\n            this._drawObject,\n            this._animationing,\n            startTime * 30,\n            30 * (startTime + time),\n            false\n          );\n        animatable.onAnimationEndObservable.addOnce(() => {\n          removeOne(this._drawObject.animations, animation);\n          removeOne(this._animationing, animation);\n          this._rotation = arrayLast(frames).value.toEulerAngles();\n          console.log(\"rotate-end\");\n          res(null);\n        });\n      } else {\n        const rotation = Quaternion.RotationAxis(axes, angle).toEulerAngles();\n        if (isOffset) {\n          this.applyMatrix(Matrix.RotationAxis(axes, angle));\n        } else this.Rotation = rotation;\n        res(null);\n      }\n    });\n  }\n  scaleTo(option: {\n    scale: IVector3;\n    pivot?: IVector3;\n    time: number;\n    animation?: boolean;\n    isOffset?: boolean;\n    startTime?: number;\n  }) {\n    const { scale, time, animation, isOffset, pivot, startTime } = option;\n    return new Promise((res) => {\n      if (animation) {\n        const object3D = this._drawObject;\n        if (!object3D) {\n          res(null);\n          return;\n        }\n        const scene = object3D.getScene();\n        const frame = 30;\n\n        const frames = [\n          {\n            frame: startTime * 30,\n            value: this._scale.clone(),\n          },\n          {\n            frame: (time + startTime) * frame,\n            value: iVector2Vector(\n              isOffset\n                ? this._scale.multiplyByFloats(scale.x, scale.y, scale.z)\n                : scale\n            ),\n          },\n        ];\n\n        if (equlnVector3(frames[0].value, frames[1].value)) {\n          res(null);\n          return;\n        }\n\n        const animate = new BAnimation(\n          \"scale-animate\",\n          \"scaling\",\n          30,\n          BAnimation.ANIMATIONTYPE_VECTOR3\n        );\n        this._animationing.push(animate);\n\n        animate.setKeys(frames);\n        object3D.animations.push(animate);\n\n        if (pivot) {\n          object3D.setPivotPoint(iVector2Vector(pivot));\n        }\n\n        const animatable = scene.beginDirectAnimation(\n          object3D,\n          this._animationing,\n          startTime * frame,\n          frame * (time + startTime),\n          false\n        );\n        animatable.onAnimationEndObservable.addOnce(() => {\n          removeOne(this._drawObject.animations, animate);\n          removeOne(this._animationing, animate);\n          this._scale = frames[1].value;\n          console.log(\"scale-end\");\n          res(null);\n        });\n      } else {\n        this.Scale = scale;\n        res(null);\n      }\n    });\n  }\n  opacityTo(option: {\n    opacity: number;\n    time: number;\n    animationType?: string;\n    startTime?: number;\n  }) {\n    return new Promise((res) => {\n      const { opacity, time, startTime } = option;\n\n      const frames = [\n        {\n          frame: 30 * startTime,\n          value: this._opacity,\n        },\n        {\n          frame: (startTime + time) * 30,\n          value: opacity,\n        },\n      ];\n\n      if (frames[0].value === frames[1].value) {\n        res(false);\n        return;\n      }\n\n      const animation = new BAnimation(\n        \"opacity\" + this.UniqueName,\n        \"Opacity\",\n        30,\n        BAnimation.ANIMATIONTYPE_FLOAT\n      );\n      this._animationing.push(animation);\n\n      animation.setKeys(frames);\n\n      const animatable = this.Scene.beginDirectAnimation(\n        this,\n        this._animationing,\n        30 * startTime,\n        (time + startTime) * 30\n      );\n\n      animatable.onAnimationEndObservable.add(() => {\n        console.log(\"opacity end\");\n        this._opacity = frames[1].value;\n        res(true);\n      });\n    });\n  }\n  updateRenderType(type: RenderType) {\n    if (\n      this._renderType !== type ||\n      (this._drawObject && this._drawObject.getChildMeshes().length === 0)\n    ) {\n      this._drawObject.getChildren().forEach((c) => {\n        c.setEnabled(false);\n      });\n      this._renderType = type;\n      const obj = this.GetDrawObjectFromRenderType(type);\n\n      if (obj) {\n        if (!obj.parent) obj.parent = this._drawObject;\n      }\n    }\n  }\n  updateEntityMatrix() {\n    Matrix.ComposeToRef(\n      this._scale,\n      this._rotationQuaternion,\n      this._position,\n      this._matrix\n    );\n    this.trigger2({ type: EventEnum.UpdateMatrix, target: this });\n  }\n  updateMatrix() {\n    if (this._drawObject) {\n      this._drawObject.position.copyFrom(this._position);\n      this._drawObject.rotation.copyFrom(this._rotation);\n      this._drawObject.scaling.copyFrom(this._scale);\n    }\n  }\n\n  updatePart() {\n    if (this.isPart) {\n      const object = this.GetDrawObjectFromRenderType(this.RenderType);\n      object.position.copyFrom(this._position);\n      object.rotation.copyFrom(this._rotation);\n      object.scaling.copyFrom(this._scale);\n    }\n  }\n  /**\n   * 更新实体\n   * @returns\n   */\n\n  update(flag = UpdateFlag.All) {\n    this.updateFlag |= flag;\n\n    if (!this.AutoUpdate) return;\n\n    if (this.isPart) {\n      this.updatePart();\n      return;\n    }\n\n    if (!this.CanUpdate || !this._drawObject) return;\n\n    if (this.updateFlag & UpdateFlag.Matrix) {\n      this._drawObject.position.copyFrom(this._position);\n      this._drawObject.rotation.copyFrom(this._rotation);\n      this._drawObject.scaling.copyFrom(this._scale);\n      this._drawObject.setEnabled(this._isVisiable);\n    }\n\n    if (this.updateFlag & UpdateFlag.Geometry) {\n      this._drawObject\n        .getChildMeshes()\n        .forEach((m) => (m.isPickable = this._isPickable));\n      this.updateDrawObject(\n        this._renderType ?? Entity.renderType,\n        this.RenderObject\n      );\n      if (this.RenderObject) {\n        const meshes = this.RenderObject.getChildMeshes().concat(\n          this.RenderObject\n        ) as Mesh[];\n        for (const m of meshes) {\n          if (m.geometry) {\n            m.visibility = this.#visibility;\n            if (this.#enableEdge) {\n              m.enableEdgesRendering();\n              m.edgesWidth = this.#edgeWidth;\n              m.edgesColor = this.#edgeColor;\n            } else {\n              m.disableEdgesRendering();\n            }\n          }\n        }\n      }\n    }\n\n    if (this.updateFlag & UpdateFlag.Material) {\n      this.updateMaterial();\n      this._drawObject.setEnabled(this._isVisiable && !this._erase);\n    }\n\n    this._drawObject\n      .getChildMeshes()\n      .forEach((m) => (m.isPickable = this._isPickable));\n\n    this.trigger2({ type: EventEnum.Update, target: this });\n\n    this.updateFlag = UpdateFlag.None;\n  }\n\n  applyMatrix(m: Matrix) {\n    this._matrix.multiplyToRef(m, this._matrix);\n    const qu = new Quaternion();\n    this._matrix.decompose(this._scale, qu, this._scale);\n    qu.toEulerAnglesToRef(this._rotation);\n    this.update();\n  }\n\n  /**\n   * 初始化3D实体对象\n   * @param renderType 渲染类型\n   * @returns\n   */\n  initDrawObject(renderType: RenderType): Mesh {\n    return null;\n  }\n  /**\n   * 更新3d实体对象\n   * @param renderType\n   * @param obj 初始化的3d实体对象进行更新\n   */\n  updateDrawObject(renderType: RenderType, obj: INode) {\n    //子类实现\n  }\n  /**\n   * 更新实体材质\n   */\n  updateMaterial() {\n    //子类实现\n  }\n  /**\n   * 删除实体\n   * @param e 删除还是恢复\n   * @returns\n   */\n  erase(e = true) {\n    if (e === this._erase) return;\n    super.erase(e);\n    if (this._drawObject) this._drawObject.setEnabled(!e);\n    this.trigger2({ type: EventEnum.Remove, target: this });\n  }\n  /**实体替换功能\n   * # 不允许单独调用\n   * 请使用Database的方法进行模型替换\n   * @hiddren\n   */\n  replace(target: Entity) {\n    this.erase();\n    target.ObjectId = this.ObjectId;\n    target.ObjectId.Object = target;\n    target._SetDefaultDb(this._db);\n    target._position = this._position;\n    target._rotation = this._rotation;\n    target._scale = this._scale;\n    target._listeners = this._listeners;\n    if (\"isRead\" in target) {\n      target[\"isRead\"] = true;\n    }\n  }\n  /**\n   * 回收实体资源\n   */\n  destory(destoryAll = false) {\n    super.destory();\n    if (this.registerAfterRenderFun) {\n      this.Scene.unregisterAfterRender(this.registerAfterRenderFun); //销毁按轨迹移动动画\n      this.registerAfterRenderFun = null;\n    }\n    for (const [k, o] of this._cacheDrawObject) {\n      o.dispose(false, destoryAll);\n    }\n    this._cacheDrawObject.clear();\n    if (this._drawObject) this._drawObject.dispose(false, destoryAll);\n    this._drawObject = null;\n  }\n  /**\n   * 给实体注册鼠标移入移出的动作\n   * @param typeName ‘pointerOver-鼠标移入’ ‘pointerOut-鼠标移出’ ‘pointerLongPress-长按’\n   * @param callback\n   * @returns dispose 返回回收函数\n   */\n  registerAction(typeName: string, callback: (c: ActionEvent) => void) {\n    const type = ActionManagerType[typeName];\n\n    let mesh = this.RenderObject;\n\n    if (mesh instanceof Mesh) {\n      if (!mesh.geometry) {\n        let box = mesh\n          .getChildren()\n          .find((c) => c.name === \"actionHelper\") as Mesh;\n\n        if (!box) {\n          //TODO:对于旋转的有问题\n          let bb = mesh.getHierarchyBoundingVectors();\n          bb.min.divideToRef(this._scale, bb.min);\n          bb.max.divideToRef(this._scale, bb.max);\n\n          const height = bb.max.y - bb.min.y;\n          box = MeshBuilder.CreateBox(\n            \"actionHelper\",\n            {\n              width: bb.max.x - bb.min.x,\n              height: height,\n              depth: bb.max.z - bb.min.z,\n            },\n            Entity.Scene\n          );\n          box.visibility = 0;\n          box.parent = mesh;\n          box.position.y = height / 2;\n        }\n\n        mesh = box;\n      }\n\n      if (!mesh.actionManager) {\n        mesh.actionManager = new ActionManager(this.Scene);\n      }\n      const actWatcher = mesh.actionManager.registerAction(\n        new ExecuteCodeAction(\n          {\n            trigger: type,\n            parameter: \"r\",\n          },\n          callback\n        )\n      );\n      return () => {\n        mesh.actionManager.unregisterAction(actWatcher);\n      };\n    }\n  }\n  /**\n   * 把模型的左下点归零\n   *\n   * @param {Vector3} [moveVec]\n   * @memberof Entity\n   */\n  move2Zero(moveVec?: Vector3) {\n    const root = this.RenderObject;\n    if (!moveVec) {\n      moveVec = root.getHierarchyBoundingVectors().min;\n    }\n    const position = this._position.clone().subtract(moveVec);\n    this.Position = position;\n  }\n  /**\n   * 显示边框\n   * @param lw 边框线框\n   * @param color 边框颜色 ”#ffffff“\n   */\n  renderEdge(lw = 10, color = \"#ffffff\") {\n    if (this._drawObject) {\n      const meshs = this._drawObject.getChildMeshes() as Mesh[];\n      for (const m of meshs) {\n        if (m.geometry) {\n          m.enableEdgesRendering();\n          m.edgesWidth = lw;\n          m.edgesColor = Color4.FromHexString(color);\n        }\n      }\n    }\n  }\n  /**克隆一份材质 */\n  cloneMaterial() {\n    if (this._drawObject) {\n      const meshs = this._drawObject.getChildMeshes() as Mesh[];\n      for (const m of meshs) {\n        if (m.material) {\n          m.material = m.material.clone(m.material.name + Date.now());\n        }\n      }\n    }\n  }\n  /**\n   * 物体发光\n   * @param color\n   * @example\n   * ```ts\n   * entity.emissive('#ff00ff')\n   * ```\n   */\n  emissive(color: string) {\n    if (this._drawObject) {\n      const c = color ? Color3.FromHexString(color) : Color3.Black();\n      const meshs = this._drawObject.getChildMeshes() as Mesh[];\n      for (const m of meshs) {\n        if (m.material) {\n          if (\n            m.material instanceof PBRMaterial ||\n            m.material instanceof StandardMaterial\n          ) {\n            if (!getNodeMetaData(m.material, \"emissiveColor\")) {\n              setNodeMetaData(\n                m.material,\n                \"emissiveColor\",\n                m.material.emissiveColor\n              );\n            }\n            m.material.emissiveColor = c;\n          }\n        }\n      }\n    }\n  }\n  /**\n   * 重置发光色\n   */\n  resetEmissive() {\n    if (this._drawObject) {\n      const meshs = this._drawObject.getChildMeshes() as Mesh[];\n      for (const m of meshs) {\n        if (m.material) {\n          if (\n            m.material instanceof PBRMaterial ||\n            m.material instanceof StandardMaterial\n          ) {\n            const color = getNodeMetaData(m.material, \"emissiveColor\");\n            if (color) m.material.emissiveColor = color;\n          }\n        }\n      }\n    }\n  }\n\n  /**关闭边框渲染  */\n  disabledRenderEdge() {\n    if (this._drawObject) {\n      const meshs = this._drawObject.getChildMeshes() as Mesh[];\n      for (const m of meshs) {\n        if (m.geometry) {\n          m.disableEdgesRendering();\n        }\n      }\n    }\n  }\n  /**返回实体自身允许的拖拽点 */\n  getDragPoints(): Vector3[] {\n    return [];\n  }\n  /**移动拖拽点 */\n  moveDragPoint(vec: Vector3, index: number) {}\n  /**\n   * 实体渲染好了,可以进行其他操作了\n   * @returns\n   */\n  getReady(): Promise<any> {\n    return Promise.resolve();\n  }\n  /**@hidden */\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(4);\n    file.write(this._name);\n    file.write(this._colorIndex);\n    file.writeArray(this._position.asArray());\n    file.writeArray(this._rotation.asArray());\n    file.writeArray(this._scale.asArray());\n\n    file.write(this._isPickable);\n    file.write(this._isVisiable);\n    file.write(this._color);\n\n    file.writeObjectId(this.GroupId);\n\n    file.write(this._materialMap.size);\n    for (const [n, id] of this._materialMap) {\n      file.write(n);\n      file.writeObjectId(id);\n    }\n\n    file.write(this.diffMaterials.size);\n    for (const [id, object] of this.diffMaterials) {\n      file.write(id);\n      file.write(JSON.stringify(object));\n    }\n\n    file.writeObjectId(this._material);\n\n    //@ts-ignore\n    file.writeAnyArray(this._animations, file.writeObject);\n\n    file.write(this.#visibility);\n    file.write(this.#enableEdge);\n    file.write(this.#edgeColor.toHexString());\n    file.write(this.#edgeWidth);\n  }\n  /**@hidden */\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this._name = file.read();\n    this._colorIndex = file.read();\n\n    //加载位置\n    let count = file.read();\n    let arr = file.readArray(count);\n    this._position.fromArray(arr);\n\n    //载入旋转\n    count = file.read();\n    arr = file.readArray(count);\n    this._rotation.fromArray(arr);\n    Quaternion.FromEulerVectorToRef(this._rotation, this._rotationQuaternion);\n\n    //载入缩放\n    count = file.read();\n    arr = file.readArray(count);\n    this._scale.fromArray(arr);\n\n    this._isPickable = file.read();\n    this._isVisiable = file.read();\n\n    this._color = file.read();\n\n    if (ver > 1) {\n      this.GroupId = file.readObjectId() as ObjectId<GroupRecord>;\n    }\n\n    if (ver > 2) {\n      this._materialMap.clear();\n      let size = file.read();\n      for (let i = 0; i < size; i++) {\n        const k = file.read();\n        const mid = file.readObjectId() as ObjectId<MaterialRecord>;\n        this._materialMap.set(k, mid);\n      }\n      size = file.read();\n      this.diffMaterials.clear();\n      for (let i = 0; i < size; i++) {\n        const k = file.read();\n        const object = JSON.parse(file.read());\n        this.diffMaterials.set(k, object);\n      }\n      this._material = file.readObjectId() as ObjectId<MaterialRecord>;\n    }\n\n    if (ver > 3) {\n      file.readAnyArrayAndPush(this._animations, file.readObject);\n      this.#visibility = file.read();\n      this.#enableEdge = file.read();\n      let colorstr = file.read();\n      this.#edgeColor.copyFrom(Color4.FromHexString(colorstr));\n      this.#edgeWidth = file.read();\n    }\n\n    this.updateEntityMatrix();\n  }\n  _applyHistoryRecord(record: ISerialize) {\n    super._applyHistoryRecord(record);\n    if (record instanceof EraseEntityData) {\n      this._drawObject.setEnabled(!this._erase);\n    } else if (record instanceof AllObjectData) {\n      this.readFile(record.Filer);\n    }\n  }\n  on(type: string, listener: EventCallback, option?: IEventOptions) {\n    //如果需要监听移动拾取，需要手动开启，暂时不需要实时监控场景中的全部实体\n    if (type === PointTypeEnum[PointerEventTypes.POINTERMOVE])\n      if (this.RenderObject) this.RenderObject.enablePointerMoveEvents = true;\n    return super.on(type, listener, option);\n  }\n  /**这个触发事件会同时发出自身 和全局的事件 */\n  trigger2(event: IEvent) {\n    super.trigger(event);\n    AppEvent.trigger(event);\n  }\n  private setLoopCount(loopCount: number, animatable: Animatable) {\n    let loopObserable: Observer<Animatable>;\n    if (loopCount) {\n      let count = 0;\n      loopObserable = animatable.onAnimationLoopObservable.add((data) => {\n        count++;\n        if (count === loopCount) {\n          data.stop();\n        }\n      });\n    }\n    return () => {\n      loopObserable &&\n        animatable.onAnimationEndObservable.remove(loopObserable);\n    };\n  }\n}\n","import { Viewer } from \"./../viewer/Viewer\";\nimport { Scene } from \"../babylon\";\nimport { Entity } from \"./../entitys/Entity\";\nimport { IVariableOption } from \"../types/interaction.types\";\nimport { arrayLast } from \"../utils\";\nimport type { Application } from \"./Application\";\n\nexport class AppStore {\n  private static _MainViewer: Viewer;\n  private static _MainScene: Scene;\n  private static _Scene: Scene;\n  private static waitList: Promise<unknown>[] = [];\n  private static waiting = false;\n  static Application: Application;\n  static PreviewMode = false;\n  static Reading = false;\n  static get MainViewer() {\n    return this._MainViewer;\n  }\n  static set MainViewer(v: Viewer) {\n    this._MainViewer = v;\n    this._MainScene = v.Scene;\n  }\n  static get MainScene() {\n    return this._MainScene;\n  }\n  static get Scene() {\n    return this._Scene;\n  }\n  static set Scene(s: Scene) {\n    this._Scene = s;\n    Entity.Scene = s;\n  }\n  static GlobalVariables: IVariableOption[] = [];\n  static StartWait() {\n    this.waiting = true;\n  }\n  static Wait() {\n    if (!this.waiting) return () => {};\n    let res: (v) => void;\n    const p = new Promise((r) => {\n      res = r;\n    });\n    this.waitList.push(p);\n    return res;\n  }\n  static async WaitComplete() {\n    return Promise.all(this.waitList).then((res) => {\n      this.waiting = false;\n      this.waitList.length = 0;\n      return res;\n    });\n  }\n  static getLastPromise() {\n    return arrayLast(this.waitList);\n  }\n  static ToggleScene(scene: Scene, callback: () => void) {\n    const oldScene = this.Scene;\n    this.Scene = scene;\n    callback();\n    this.Scene = oldScene;\n  }\n}\n","import {\n  AllObjectData,\n  BaseObject,\n  EraseEntityData,\n  HCFiler,\n  ISerialize,\n  ObjectId,\n} from \"@hc/core\";\n\nimport { AppStore } from \"../app/AppStore\";\nimport { IVector2Like, Nullable, Vector2 } from \"../babylon\";\nimport { CollectionRecord } from \"../records\";\nimport { simpleObjectEqual } from \"../utils\";\nimport { StrNum, Align as TAlign } from \"./../types/types\";\nimport { AppEvent } from \"./AppEvent\";\n\nexport class BaseDom extends BaseObject {\n  protected _drawObject: HTMLElement;\n  protected _width: StrNum;\n  protected _height: StrNum;\n  private _start: Vector2;\n  protected _position = { x: \"0\", y: \"0\" };\n  protected _rotation = 0;\n  protected _scale = { x: 1, y: 1 };\n  private isSelect = false;\n  protected _name: string;\n  private _isVisiable = true;\n  private _horAlign: TAlign = 0;\n  private _verAlign: TAlign = 0;\n  private _isPickable = true;\n  private _hasTransition = false;\n  public GroupId: Nullable<ObjectId<CollectionRecord>>;\n\n  get Name() {\n    return this._name ?? \"图标\" + this.Id;\n  }\n  set Name(v: string) {\n    this._name = v;\n    AppEvent.trigger({ type: \"updateName\", target: this });\n  }\n  get DrawObject() {\n    if (this._drawObject) return this._drawObject;\n\n    this._drawObject = this.initDrawObject();\n\n    this._drawObject[\"metadata\"] = { entity: this };\n\n    this._drawObject.style.display =\n      this._isVisiable && !this._erase ? \"block\" : \"none\";\n\n    return this._drawObject;\n  }\n  get Visiable() {\n    return this._isVisiable;\n  }\n  set Visiable(v: boolean) {\n    if (v === this._isVisiable) return;\n    this.writeSnapshoot();\n    this._isVisiable = v;\n    this.update();\n  }\n  get IsPickable() {\n    return this._isPickable;\n  }\n  set IsPickable(v: boolean) {\n    this._isPickable = v;\n    this.update();\n  }\n  get Position() {\n    return { ...this._position };\n  }\n  set Position(p: { x: string; y: string }) {\n    if (simpleObjectEqual(this._position, p)) return;\n    this.writeSnapshoot();\n    this._position.x = p.x;\n    this._position.y = p.y;\n    this.update();\n  }\n  get Rotation() {\n    return this._rotation;\n  }\n  set Rotation(v: number) {\n    if (v === this._rotation) return;\n    this.writeSnapshoot();\n    this._rotation = v;\n    this.update();\n  }\n  get Scale() {\n    return this._scale;\n  }\n  set Scale(v: IVector2Like) {\n    if (simpleObjectEqual(this._scale, v as any)) return;\n    this.writeSnapshoot();\n    this._scale = v;\n    this.update();\n  }\n  get IsSelect() {\n    return this.isSelect;\n  }\n  set IsSelect(v: boolean) {\n    if (v === this.isSelect) return;\n\n    this.isSelect = v;\n\n    if (!this._drawObject) return;\n    if (v) {\n      this._drawObject.style.outline = \"2px solid #cccccc\";\n    } else {\n      this._drawObject.style.outline = \"none\";\n    }\n  }\n  get Draging() {\n    return !!this._start;\n  }\n  get Width() {\n    return this._width;\n  }\n  set Width(v: StrNum) {\n    if (v === this._width) return;\n    this.writeSnapshoot();\n    this._width = v;\n    this.update();\n  }\n  get Height() {\n    return this._height;\n  }\n  set Height(v: StrNum) {\n    if (v === this._height) return;\n    this.writeSnapshoot();\n    this._height = v;\n    this.update();\n  }\n  get HorAlign() {\n    return this._horAlign;\n  }\n  set HorAlign(v: TAlign) {\n    if (v === this._horAlign) return;\n    this.writeSnapshoot();\n    this._horAlign = v;\n    this.update();\n  }\n  get VerAlign() {\n    return this._verAlign;\n  }\n  set VerAlign(v: TAlign) {\n    if (v === this._verAlign) return;\n    this.writeSnapshoot();\n    this._verAlign = v;\n    this.update();\n  }\n  get HasTransition() {\n    return this._hasTransition;\n  }\n  set HasTransition(v: boolean) {\n    if (v === this._hasTransition) return;\n    this.writeSnapshoot();\n    this._hasTransition = v;\n    this.update();\n  }\n\n  start(x: number, y: number) {\n    if (this._db) this._db.HistoryManager.startCmd(\"拖拽DOM\");\n    this.writeSnapshoot();\n    this._start = new Vector2(x, y);\n  }\n  end() {\n    this._start = null;\n    if (this._db) this._db.HistoryManager.endCmd();\n  }\n\n  move(x: number, y: number, obj = this._drawObject) {\n    if (!obj) return;\n\n    let diffx = x - this._start.x;\n    let diffy = y - this._start.y;\n\n    const left = this.convertValue(this._position.x, AppStore.MainViewer.Width);\n    const top = this.convertValue(this._position.y, AppStore.MainViewer.Height);\n\n    let h = this._horAlign === 2 ? left - diffx : left + diffx;\n    let v = this._verAlign === 2 ? top + diffy : top + diffy;\n\n    this.Position = {\n      x: (h / AppStore.MainViewer.Width) * 100 + \"%\",\n      y: (v / AppStore.MainViewer.Height) * 100 + \"%\",\n    };\n    this._start.set(x, y);\n  }\n  initDrawObject(): HTMLElement {\n    return null;\n  }\n  updateDrawObject(obj: HTMLElement) {\n    obj.style.width =\n      this.convertValue(this._width, AppStore.MainViewer.Width) + \"px\";\n\n    obj.style.height =\n      this.convertValue(this._height, AppStore.MainViewer.Height) + \"px\";\n\n    this.setPosition(obj);\n\n    obj.style.zIndex = \"2\";\n\n    obj.style.overflow = \"hidden\";\n\n    obj.style.transform = `rotate(${this._rotation}deg) scale(${this._scale.x},${this._scale.y})`;\n\n    obj.style.transition = this._hasTransition ? `all .1s` : \"\";\n\n    obj.style.display = this._isVisiable ? \"block\" : \"none\";\n\n    obj.style.pointerEvents = this._isPickable ? \"auto\" : \"none\";\n\n    if (this.isSelect) {\n      this._drawObject.style.outline = \"2px solid #cccccc\";\n    } else {\n      this._drawObject.style.outline = \"none\";\n    }\n  }\n  update() {\n    if (!this._drawObject) return;\n    this.updateDrawObject(this._drawObject);\n    this.trigger({ type: \"update\", target: this });\n    AppEvent.trigger({ type: \"update\", target: this });\n  }\n  erase(e = true) {\n    if (e === this._erase) return;\n    super.erase(e);\n    this._drawObject.style.display = e ? \"none\" : \"block\";\n    AppEvent.trigger({ type: \"remove\", target: this });\n    this.trigger({ type: \"remove\", target: this });\n  }\n  destory() {\n    super.destory();\n    if (this._drawObject) this._drawObject.remove();\n    this._drawObject = null;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(6);\n    filer.write(this._position.x);\n    filer.write(this._position.y);\n\n    filer.write(this._rotation);\n\n    filer.write(this._scale.x);\n    filer.write(this._scale.y);\n\n    filer.write(this._width);\n    filer.write(this._height);\n\n    filer.write(this._isVisiable);\n\n    filer.write(this._name);\n\n    filer.write(this._horAlign);\n    filer.write(this._verAlign);\n    filer.write(this._isPickable);\n    filer.write(this._hasTransition);\n    filer.writeObjectId(this.GroupId);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const ver = filer.read();\n    this._position.x = filer.read();\n    this._position.y = filer.read();\n\n    this._rotation = filer.read();\n\n    this._scale.x = filer.read();\n    this._scale.y = filer.read();\n\n    this._width = filer.read();\n    this._height = filer.read();\n\n    this._isVisiable = filer.read();\n\n    if (ver > 1) {\n      this._name = filer.read();\n    }\n    if (ver > 2) {\n      this._horAlign = filer.read();\n      this._verAlign = filer.read();\n    }\n    if (ver > 3) {\n      this._isPickable = filer.read();\n    }\n    if (ver > 4) {\n      this._hasTransition = filer.read();\n    }\n    if (ver > 5) {\n      this.GroupId = filer.readObjectId();\n    }\n  }\n  _applyHistoryRecord(record: ISerialize) {\n    super._applyHistoryRecord(record);\n    if (record instanceof EraseEntityData) {\n      this._drawObject.style.display = !this._erase ? \"block\" : \"none\";\n    } else if (record instanceof AllObjectData) {\n      this.readFile(record.Filer);\n    }\n  }\n  protected convertValue(value: string | number, refValue: number) {\n    if (typeof value === \"string\") {\n      if (value.endsWith(\"%\")) return (parseFloat(value) / 100) * refValue;\n      return parseFloat(value);\n    }\n\n    return value;\n  }\n  private setPosition(obj: HTMLElement) {\n    const h = this.convertValue(this._position.x, AppStore.MainViewer.Width);\n    const v = this.convertValue(this._position.y, AppStore.MainViewer.Height);\n    const width = this.convertValue(this._width, AppStore.MainViewer.Width);\n    const height = this.convertValue(this._height, AppStore.MainViewer.Height);\n\n    if (this._horAlign === 0) {\n      obj.style.left = h + \"px\";\n      obj.style.right = \"auto\";\n    } else if (this._horAlign === 2) {\n      obj.style.right = h + \"px\";\n      obj.style.left = \"auto\";\n    } else {\n      obj.style.left = AppStore.MainViewer.Width / 2 - width / 2 + \"px\";\n      obj.style.right = \"auto\";\n    }\n    if (this._verAlign === 0) {\n      obj.style.top = v + \"px\";\n      obj.style.bottom = \"auto\";\n    } else if (this._verAlign === 2) {\n      obj.style.bottom = v + \"px\";\n      obj.style.top = \"auto\";\n    } else {\n      obj.style.top = AppStore.MainViewer.Height / 2 - height / 2 + \"px\";\n      obj.style.bottom = \"auto\";\n    }\n  }\n}\n","import { IVector2 } from \"@hc/core\";\nimport { PointerEventTypes, PointerInfo } from \"../babylon\";\nimport { BaseGui } from \"../guis/Gui\";\nimport { Viewer } from \"../viewer\";\n\n/**处理GUI鼠标事件 */\nexport class GUISelectTool {\n  constructor(private viewer: Viewer) {\n    //TODO:GUI 鼠标移动，抬起等事件处理\n    viewer.Scene.onPointerObservable.add((pointerInfo: PointerInfo) => {\n      const pt = {\n        x: pointerInfo.event.offsetX,\n        y: pointerInfo.event.offsetY,\n      };\n      switch (pointerInfo.type) {\n        case PointerEventTypes.POINTERDOWN:\n          if (pointerInfo.event.button === 0) {\n            const gui = this.getGui(pt);\n            if (gui) {\n              gui.click(pt);\n            }\n          }\n      }\n    });\n  }\n  getGui(pt: IVector2): BaseGui | null {\n    const list = this.viewer.GuiContainer.getChildren()[0]?.children;\n    for (const c of list) {\n      if (!c.metadata?.entity) continue;\n      if (!c.isVisible || !c.isEnabled) continue;\n      if (c.contains(pt.x, pt.y)) {\n        return c.metadata.entity as BaseGui;\n      }\n    }\n    return null;\n  }\n}\n","import { AssetContainer } from \"../babylon\";\n\nexport class AppCache {\n  private assestPromiseCache = new Map<string, Promise<AssetContainer>>();\n\n  getAssetPromise(url: string) {\n    return this.assestPromiseCache.get(url);\n  }\n  setAssetPromise(url: string, asset: Promise<AssetContainer>) {\n    this.assestPromiseCache.set(url, asset);\n  }\n  clear() {\n    this.assestPromiseCache.clear();\n  }\n}\n\nexport const appCache = new AppCache();\n","import { HCFiler, ObjectRecord } from \"@hc/core\";\n\nimport { BaseTexture, Texture } from \"../babylon\";\n\nexport class BaseTextureRecord extends ObjectRecord {\n  protected _isLoading = false;\n  protected wrapU: 0 | 1 | 2 = Texture.WRAP_ADDRESSMODE;\n  protected wrapV: 0 | 1 | 2 = Texture.WRAP_ADDRESSMODE;\n  protected scale: [number, number] = [1, 1];\n  protected rotation: [number, number, number] = [0, 0, 0];\n  protected offset: [number, number] = [0, 0];\n  protected texture: BaseTexture;\n  constructor() {\n    super();\n  }\n  get Texture() {\n    return this.texture;\n  }\n  async getTexture() {\n    return this.texture;\n  }\n  get Scale() {\n    return this.scale;\n  }\n  set Scale(v: [number, number]) {\n    if (v[0] === this.scale[0] && v[1] === this.scale[1]) return;\n    this.writeSnapshoot();\n    this.scale = v;\n    this.update();\n  }\n  get Offset() {\n    return this.offset;\n  }\n  set Offset(v: [number, number]) {\n    if (v[0] === this.offset[0] && v[1] === this.offset[1]) return;\n    this.writeSnapshoot();\n    this.offset = v;\n    this.update();\n  }\n  get Rotation() {\n    return this.rotation;\n  }\n  set Rotation(v: [number, number, number]) {\n    if (\n      v[0] === this.rotation[0] &&\n      v[1] === this.rotation[1] &&\n      v[2] === this.rotation[2]\n    )\n      return;\n    this.writeSnapshoot();\n    this.rotation = v;\n    this.update();\n  }\n  update() {\n    if (!this.texture) return;\n    this.texture.name = this._name;\n    this.texture.wrapU = this.wrapU;\n    this.texture.wrapV = this.wrapV;\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.wrapU);\n    file.write(this.wrapV);\n    file.write(this.scale[0]);\n    file.write(this.scale[1]);\n    file.write(this.rotation[0]);\n    file.write(this.rotation[1]);\n    file.write(this.rotation[2]);\n    file.write(this.offset[0]);\n    file.write(this.offset[1]);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.wrapU = file.read();\n    this.wrapV = file.read();\n    this.scale[0] = file.read();\n    this.scale[1] = file.read();\n    this.rotation[0] = file.read();\n    this.rotation[1] = file.read();\n    this.rotation[2] = file.read();\n    this.offset[0] = file.read();\n    this.offset[1] = file.read();\n  }\n}\n","import { Camera, Engine, Nullable, Scene, Tools } from \"../babylon\";\nimport { IScreenshotSize } from \"@babylonjs/core/Misc/interfaces/screenshotSize\";\nimport { CreateScreenshotUsingRenderTarget } from \"@babylonjs/core/Misc/screenshotTools\";\n\nlet screenshotCanvas: Nullable<HTMLCanvasElement> = null;\n\nexport function CreateScreenshot(\n  engine: Engine,\n  camera: Camera,\n  size: IScreenshotSize | number,\n  successCallback?: (data: string) => void,\n  mimeType: string = \"image/png\",\n  forceDownload = false,\n  isCover = false\n): void {\n  const { height, width } = _GetScreenshotSize(engine, camera, size);\n\n  if (!(height && width)) {\n    console.error(\"Invalid 'size' parameter !\");\n    return;\n  }\n\n  if (!screenshotCanvas) {\n    screenshotCanvas = document.createElement(\"canvas\");\n  }\n\n  screenshotCanvas.width = width;\n  screenshotCanvas.height = height;\n\n  const renderContext = screenshotCanvas.getContext(\"2d\");\n\n  const ratio = engine.getRenderWidth() / engine.getRenderHeight();\n  let newWidth = width;\n  let newHeight = isCover ? height : newWidth / ratio;\n  if (newHeight > height) {\n    newHeight = height;\n    newWidth = newHeight * ratio;\n  }\n\n  const offsetX = Math.max(0, width - newWidth) / 2;\n  const offsetY = Math.max(0, height - newHeight) / 2;\n\n  const scene = camera.getScene();\n  if (scene.activeCamera !== camera) {\n    CreateScreenshotUsingRenderTarget(\n      engine,\n      camera,\n      size,\n      (data) => {\n        if (forceDownload) {\n          const blob = new Blob([data]);\n          Tools.DownloadBlob(blob);\n          if (successCallback) {\n            successCallback(\"\");\n          }\n        } else if (successCallback) {\n          successCallback(data);\n        }\n      },\n      mimeType,\n      1,\n      engine.getCreationOptions().antialias\n    );\n  } else {\n    engine.onEndFrameObservable.addOnce(() => {\n      const renderingCanvas = engine.getRenderingCanvas();\n      if (renderContext && renderingCanvas) {\n        renderContext.drawImage(\n          renderingCanvas,\n          offsetX,\n          offsetY,\n          newWidth,\n          newHeight\n        );\n      }\n\n      if (screenshotCanvas) {\n        Tools.EncodeScreenshotCanvasData(screenshotCanvas, undefined, mimeType);\n        if (successCallback) {\n          successCallback(\"\");\n        }\n      } else {\n        Tools.EncodeScreenshotCanvasData(\n          screenshotCanvas,\n          successCallback,\n          mimeType\n        );\n      }\n    });\n  }\n}\n\n/**\n * Gets height and width for screenshot size\n * @param engine\n * @param camera\n * @param size\n * @private\n */\nfunction _GetScreenshotSize(\n  engine: Engine,\n  camera: Camera,\n  size: IScreenshotSize | number\n): { height: number; width: number } {\n  let height = 0;\n  let width = 0;\n\n  //If a size value defined as object\n  if (typeof size === \"object\") {\n    const precision = size.precision\n      ? Math.abs(size.precision) // prevent GL_INVALID_VALUE : glViewport: negative width/height\n      : 1;\n\n    //If a width and height values is specified\n    if (size.width && size.height) {\n      height = size.height * precision;\n      width = size.width * precision;\n    }\n    //If passing only width, computing height to keep display canvas ratio.\n    else if (size.width && !size.height) {\n      width = size.width * precision;\n      height = Math.round(width / engine.getAspectRatio(camera));\n    }\n    //If passing only height, computing width to keep display canvas ratio.\n    else if (size.height && !size.width) {\n      height = size.height * precision;\n      width = Math.round(height * engine.getAspectRatio(camera));\n    } else {\n      width = Math.round(engine.getRenderWidth() * precision);\n      height = Math.round(width / engine.getAspectRatio(camera));\n    }\n  }\n  //Assuming here that \"size\" parameter is a number\n  else if (!isNaN(size)) {\n    height = size;\n    width = size;\n  }\n\n  // When creating the image data from the CanvasRenderingContext2D, the width and height is clamped to the size of the _gl context\n  // On certain GPUs, it seems as if the _gl context truncates to an integer automatically. Therefore, if a user tries to pass the width of their canvas element\n  // and it happens to be a float (1000.5 x 600.5 px), the engine.readPixels will return a different size array than context.createImageData\n  // to resolve this, we truncate the floats here to ensure the same size\n  if (width) {\n    width = Math.floor(width);\n  }\n  if (height) {\n    height = Math.floor(height);\n  }\n\n  return { height: height | 0, width: width | 0 };\n}\n\n/**临时开启场景材质自动刷新,刷新后关闭自动刷新 */\nexport function enableUpdateMaterialDirtyMechanismOnce(scene: Scene) {\n  scene.blockMaterialDirtyMechanism = false;\n  setTimeout(() => {\n    scene.blockMaterialDirtyMechanism = true;\n  }, 0);\n}\n","export const UUID_REG = /[0-9a-f]{8}(-[0-9a-f]{4}){3}-[0-9a-f]{12}/;\n","import { Factory, HCFiler } from \"@hc/core\";\n\nimport { AppStore } from \"../app/AppStore\";\nimport { AppConfig } from \"../app/appConfig\";\nimport { Texture } from \"../babylon\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { BaseTextureRecord } from \"../core/BaseTextureRecord\";\nimport { enableUpdateMaterialDirtyMechanismOnce } from \"../utils/babylonUtils\";\nimport { deg2rad, rad2Deg } from \"../utils/math\";\nimport { UUID_REG } from \"../utils/regx\";\n\n@Factory\nexport class TextureRecord extends BaseTextureRecord {\n  static type = \"TextureRecord\";\n  protected texture: Texture;\n\n  constructor(private url = \"\", texture?: Texture) {\n    super();\n    if (texture) {\n      this.texture = texture;\n      this.readFromTexture();\n    } else {\n      this.texture = new Texture(this.Url2, AppStore.Scene);\n      this.texture.isBlocking = false;\n      this.texture.onLoadObservable.add(this.onLoad);\n      this.texture.name = \"TextureRecord\";\n      this.triggerLoading();\n    }\n  }\n  get Texture() {\n    return this.texture;\n  }\n  get Url() {\n    return this.url;\n  }\n  set Url(url: string) {\n    if (url === this.url) return;\n    this.writeSnapshoot();\n    this.url = url;\n    this.triggerLoading();\n    this.update();\n  }\n  get Url2() {\n    if (!this.url) return \"\";\n\n    if (this.url.startsWith(\"http\")) return this.url;\n\n    if (UUID_REG.test(this.url)) {\n      return AppConfig.assetURL + this.url;\n    } else {\n      return AppConfig.Texture_URL + this.url;\n    }\n  }\n\n  update() {\n    enableUpdateMaterialDirtyMechanismOnce(this.texture.getScene());\n    if (this.texture.url !== this.Url2) {\n      this._isLoading = true;\n      this.texture.updateURL(this.Url2, null, this.onLoad);\n    }\n    this.texture.name = this._name;\n    this.texture.wrapU = this.wrapU;\n    this.texture.wrapV = this.wrapV;\n    this.texture.uScale = this.scale[0];\n    this.texture.vScale = this.scale[1];\n\n    this.texture.uOffset = this.offset[0];\n    this.texture.vOffset = this.offset[1];\n\n    this.texture.uAng = deg2rad(this.rotation[0]);\n    this.texture.vAng = deg2rad(this.rotation[1]);\n    this.texture.wAng = deg2rad(this.rotation[2]);\n  }\n  async waitUpdate(): Promise<boolean> {\n    return new Promise((res) => {\n      if (!this._isLoading) {\n        res(true);\n        return true;\n      }\n      this.once(\"load\", () => {\n        res(true);\n      });\n    });\n  }\n\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.url);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.url = file.read();\n\n    this.update();\n  }\n  readFromTexture() {\n    this.wrapU = this.texture.wrapU as 0 | 1 | 2;\n    this.wrapV = this.texture.wrapV as 0 | 1 | 2;\n    this.scale[0] = this.texture.uScale;\n    this.scale[1] = this.texture.vScale;\n\n    this.offset[0] = this.texture.uOffset;\n    this.offset[1] = this.texture.vOffset;\n\n    this.rotation[0] = rad2Deg(this.texture.uAng);\n    this.rotation[1] = rad2Deg(this.texture.vAng);\n    this.rotation[2] = rad2Deg(this.texture.wAng);\n  }\n  private triggerLoading = () => {\n    this.trigger({ type: \"loading\", title: \"加载贴图\", target: this });\n    AppEvent.trigger({ type: \"loading\", title: \"加载贴图\", target: this });\n  };\n  private onLoad = (tx?: Texture) => {\n    this._isLoading = false;\n    this.trigger({ type: \"load\", target: this, object: tx ?? this.texture });\n    AppEvent.trigger({\n      type: \"load\",\n      target: this,\n      object: tx ?? this.texture,\n    });\n  };\n}\n","import { Material, Engine } from \"../babylon\";\n\nexport enum TransparentMode {\n  OPAQUE = Material.MATERIAL_OPAQUE,\n  ALPHATEST = Material.MATERIAL_ALPHATEST,\n  ALPHABLEND = Material.MATERIAL_ALPHABLEND,\n  ALPHATESTANDBLEND = Material.MATERIAL_ALPHATESTANDBLEND,\n}\n\nexport enum AlphaMode {\n  ALPHA_DISABLE = Engine.ALPHA_DISABLE,\n  ALPHA_ADD = Engine.ALPHA_ADD,\n  ALPHA_COMBINE = Engine.ALPHA_COMBINE,\n  ALPHA_SUBTRACT = Engine.ALPHA_SUBTRACT,\n  ALPHA_MULTIPLY = Engine.ALPHA_MULTIPLY,\n  ALPHA_MAXIMIZED = Engine.ALPHA_MAXIMIZED,\n  ALPHA_ONEONE = Engine.ALPHA_ONEONE,\n  ALPHA_PREMULTIPLIED = Engine.ALPHA_PREMULTIPLIED,\n  ALPHA_PREMULTIPLIED_PORTERDUFF = Engine.ALPHA_PREMULTIPLIED_PORTERDUFF,\n  ALPHA_INTERPOLATE = Engine.ALPHA_INTERPOLATE,\n  ALPHA_SCREENMODE = Engine.ALPHA_SCREENMODE,\n}\n","import { ObjectId } from \"@hc/core\";\nimport { TextureRecord } from \"./TextureRecord\";\n\nexport const setTexture = (v: ObjectId | TextureRecord) => {\n  if (v instanceof TextureRecord) {\n    return v.ObjectId;\n  }\n  return v;\n};\nexport const initTextureISNull = (v: ObjectId) => {\n  return null;\n};\n","import { Factory, HCFiler, IColor, ObjectId, RecordTable } from \"@hc/core\";\n\nimport { Color3, PBRMaterial, Texture } from \"../babylon\";\nimport type { Entity } from \"../entitys/Entity\";\nimport { firstLower } from \"../utils\";\nimport { getColor3 } from \"../utils/color\";\nimport { AppStore } from \"./../app/AppStore\";\nimport { MaterialRecord } from \"./MaterialRecord\";\nimport { TextureRecord } from \"./TextureRecord\";\nimport { autoRecordMaterial, autoRecordMaterialFilter } from \"./autoRecord\";\nimport { AlphaMode, TransparentMode } from \"./types\";\nimport { initTextureISNull, setTexture } from \"./utils\";\n\n@Factory\nexport class PBRMaterialRecord extends MaterialRecord<PBRMaterial> {\n  static type = \"PBRMaterialRecord\";\n  /**反照颜色 */\n  @autoRecordMaterialFilter((v: Color3) => v.toHexString())\n  AlbedoColor: IColor = \"#ffffff\";\n\n  @autoRecordMaterialFilter((v: Color3) => v.toHexString())\n  ReflectivityColor: IColor = \"#000000\";\n\n  @autoRecordMaterialFilter((v: Color3) => v.toHexString())\n  EmissiveColor: IColor = \"#000000\";\n  @autoRecordMaterialFilter((v: Color3) => v.toHexString())\n  AmbientColor: IColor = \"#000000\";\n\n  //金属度\n  @autoRecordMaterial\n  Metallic = 0;\n\n  //镜面度\n  @autoRecordMaterial\n  Roughness = 0;\n\n  @autoRecordMaterial\n  Alpha = 1;\n  /**光泽度 */\n  @autoRecordMaterial\n  MicroSurface = 1;\n\n  /**从显示纹理获取alpha信息 */\n  @autoRecordMaterial\n  UseAlphaFromAlbedoTexture = false;\n\n  /***透明模式 */\n  @autoRecordMaterial\n  TransparencyMode: TransparentMode = null;\n\n  /**混合模式 */\n  @autoRecordMaterial\n  AlphaMode: AlphaMode = AlphaMode.ALPHA_COMBINE;\n\n  //漫反射纹理\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  AlbedoTexture: ObjectId;\n  /**质感贴图 */\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  MetallicTexture: ObjectId;\n\n  //凹凸贴图\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  BumpTexture: ObjectId;\n\n  /**自发光贴图 */\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  EmissiveTexture: ObjectId;\n\n  /**光照贴图 */\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  LightmapTexture: ObjectId;\n\n  //反射贴图\n  @autoRecordMaterialFilter((v) => null)\n  ReflectionTexture: ObjectId;\n\n  constructor(mtl?: PBRMaterial, entity?: Entity) {\n    super(mtl, entity);\n\n    if (!this._name) {\n      this._name = \"物理材质\";\n    }\n\n    if (!mtl) {\n      this.material = new PBRMaterial(this._name, AppStore.Scene);\n      this.updateMaterial();\n    } else {\n      this.importOwnTextures();\n    }\n    this.init = false;\n    if (!this.material.metadata) this.material.metadata = {};\n    this.material.metadata.record = this;\n  }\n  get AllTextures() {\n    const textures: TextureRecord[] = [];\n    for (const k of this.AllTextureKeys) {\n      if (this[k]) {\n        const oid = this[k] as ObjectId<TextureRecord>;\n        if (oid?.Object) {\n          textures.push(oid.Object);\n        }\n      }\n    }\n\n    return textures;\n  }\n  copyFrom(obj: this) {\n    let idBak = this._id;\n    let ownerBak = this._Owner;\n    const keys = this.AllTextureKeys;\n    let texturesBaks = keys.map((k) => this[k]) as ObjectId<TextureRecord>[];\n    this.writeSnapshoot();\n    let f = new HCFiler();\n    obj.writeFile(f);\n    this.readFile(f);\n    this._id = idBak;\n    this._Owner = ownerBak;\n    const IdRecord = new Map<ObjectId, ObjectId<TextureRecord>>();\n    for (let i = 0; i < texturesBaks.length; i++) {\n      const key = keys[i];\n      const txt = texturesBaks[i];\n      if (txt) {\n        //目标没有对应的纹理\n        if (!obj[key]) {\n          this[key] = null;\n        } else {\n          //有的话直接拷贝过来\n          if (obj[key].Object) txt.Object.copyFrom(obj[key].Object);\n          this[key] = txt;\n        }\n      } else {\n        if (obj[key]?.Object) {\n          if (obj._db === this._db) {\n            this[key] = obj[key];\n          } else {\n            let newId: ObjectId<TextureRecord>;\n            if (IdRecord.has(obj[key])) {\n              newId = IdRecord.get(obj[key]);\n            } else {\n              const c = obj[key].Object.clone() as TextureRecord;\n              let newOwnerId = this.DB.getObjectId(c.Owner.Index);\n              (newOwnerId.Object as RecordTable).append(c);\n              IdRecord.set(obj[key], c.ObjectId);\n              newId = c.ObjectId;\n            }\n            this[key] = newId;\n          }\n        }\n      }\n    }\n\n    this.update();\n\n    return this;\n  }\n  updateMaterial() {\n    super.updateMaterial();\n    this.material.name = this._name;\n    this.material.albedoColor = getColor3(this.AlbedoColor);\n    this.material.reflectivityColor = getColor3(this.ReflectivityColor);\n    this.material.emissiveColor = getColor3(this.EmissiveColor);\n    this.material.ambientColor = getColor3(this.AmbientColor);\n\n    this.material.alpha = this.Alpha;\n    this.material.metallic = this.Metallic;\n    this.material.roughness = this.Roughness;\n    this.material.microSurface = this.MicroSurface;\n\n    this.material.transparencyMode = this.TransparencyMode;\n    this.material.alphaMode = this.AlphaMode;\n\n    this.material.useAlphaFromAlbedoTexture = this.UseAlphaFromAlbedoTexture;\n  }\n  updateTextures() {\n    //TODO: 自带材质不需要 这样更新纹理？\n    if (this.isOwn) return;\n    {\n      const txr = this.AlbedoTexture?.Object as TextureRecord;\n      this.material.albedoTexture = txr?.Texture;\n    }\n    {\n      const txr = this.BumpTexture?.Object as TextureRecord;\n      this.material.bumpTexture = txr?.Texture;\n    }\n    {\n      const txr = this.MetallicTexture?.Object as TextureRecord;\n      this.material.metallicTexture = txr?.Texture;\n    }\n    {\n      const txr = this.EmissiveTexture?.Object as TextureRecord;\n      this.material.emissiveTexture = txr?.Texture;\n    }\n    {\n      const txr = this.LightmapTexture?.Object as TextureRecord;\n      this.material.lightmapTexture = txr?.Texture;\n    }\n    {\n      const txr = this.ReflectionTexture?.Object as TextureRecord;\n      this.material.reflectionTexture = txr?.Texture;\n    }\n  }\n  update() {\n    if (!this.material) return;\n    this.material.getScene().blockMaterialDirtyMechanism = false;\n    super.update();\n    this.updateTextures();\n    this.material.getScene().blockMaterialDirtyMechanism = true;\n  }\n  async waitRender(): Promise<boolean> {\n    const promises: Promise<any>[] = [];\n    for (const k of this.AllTextureKeys) {\n      if (this[k]) {\n        const textureID = this[k] as ObjectId<TextureRecord>;\n        promises.push(textureID.Object.waitUpdate());\n      }\n    }\n    await Promise.all(promises);\n\n    return new Promise((res) => {\n      this.material.onBind = (evt) => {\n        this.material.onBind = null;\n        res(true);\n      };\n      this.material.onError = (evt) => {\n        this.material.onError = null;\n        res(false);\n      };\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n\n    file.write(this.AlbedoColor);\n    file.write(this.ReflectivityColor);\n    file.write(this.EmissiveColor);\n    file.write(this.AmbientColor);\n\n    file.write(this.Alpha);\n    file.write(this.UseAlphaFromAlbedoTexture);\n    file.write(this.TransparencyMode);\n    file.write(this.AlphaMode);\n\n    file.write(this.Metallic);\n    file.write(this.Roughness);\n    file.write(this.MicroSurface);\n\n    file.writeHardObjectId(this.AlbedoTexture);\n    file.writeHardObjectId(this.BumpTexture);\n    file.writeHardObjectId(this.MetallicTexture);\n    file.writeHardObjectId(this.EmissiveTexture);\n    file.writeHardObjectId(this.LightmapTexture);\n    file.writeHardObjectId(this.ReflectionTexture);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n\n    this.AlbedoColor = file.read();\n    this.ReflectivityColor = file.read();\n    this.EmissiveColor = file.read();\n    this.AmbientColor = file.read();\n\n    this.Alpha = file.read();\n    this.UseAlphaFromAlbedoTexture = file.read();\n    this.TransparencyMode = file.read();\n    this.AlphaMode = file.read();\n\n    this.Metallic = file.read();\n    this.Roughness = file.read();\n    this.MicroSurface = file.read();\n\n    this.AlbedoTexture = file.readObjectId();\n    this.BumpTexture = file.readObjectId();\n    this.MetallicTexture = file.readObjectId();\n    this.EmissiveTexture = file.readObjectId();\n    this.LightmapTexture = file.readObjectId();\n    this.ReflectionTexture = file.readObjectId();\n\n    this.update();\n  }\n  _SetOwnerDatabase(db) {\n    super._SetOwnerDatabase(db);\n    this.material.name = `pbr-${this.Id}`;\n    this.material.id = `pbr-${this.Id}`;\n    return this;\n  }\n  private get AllTextureKeys() {\n    return [\n      \"AlbedoTexture\",\n      \"BumpTexture\",\n      \"MetallicTexture\",\n      \"EmissiveTexture\",\n      \"LightmapTexture\",\n      \"ReflectionTexture\",\n    ];\n  }\n  protected importOwnTextures() {\n    if (this.isOwn) {\n      const IngoreKeys = [\"name\"];\n      const entity = this.entity;\n      const material = this.material;\n      this.AllTextureKeys.forEach((k) => {\n        const k1 = firstLower(k);\n        const texture = this.material[k1] as Texture;\n        if (texture) {\n          let url = texture.url;\n          let isInit = true;\n          if (url.startsWith(\"data:\")) {\n            url = url.replace(\"data:\", \"\");\n          }\n          texture.url = url;\n          const proxyTexture = new Proxy(texture, {\n            get(target, key, receiver) {\n              return Reflect.get(target, key, receiver);\n            },\n            set(target, key: string, value, receiver) {\n              if (\n                isInit ||\n                IngoreKeys.includes(key) ||\n                typeof value === \"function\" ||\n                target[key] === value\n              ) {\n                return Reflect.set(target, key, value, receiver);\n              }\n\n              let diff = entity.diffMaterials.get(material.id);\n              if (!diff) {\n                diff = {};\n                entity.diffMaterials.set(material.id, diff);\n              }\n              if (!diff[k1]) {\n                diff[k1] = {};\n              }\n\n              diff[k1][key] = value;\n\n              return Reflect.set(target, key, value, receiver);\n            },\n          });\n\n          const record = new TextureRecord(url, proxyTexture);\n\n          this[\"_\" + k1] = new ObjectId(-texture.uniqueId, record);\n\n          isInit = false;\n        }\n      });\n    }\n  }\n}\n","import { IVector3 } from \"@hc/core\";\nimport { Factory, HCFiler } from \"@hc/core\";\n\nimport { appCache } from \"../app/AppCache\";\nimport { AppStore } from \"../app/AppStore\";\nimport { AppConfig } from \"../app/appConfig\";\nimport {\n  AssetContainer,\n  Color3,\n  CreateBoxVertexData,\n  Material,\n  Matrix,\n  Mesh,\n  MeshBuilder,\n  PBRMaterial,\n  SceneLoader,\n  StandardMaterial,\n  TransformNode,\n  Vector3,\n} from \"../babylon\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { EventEnum, UpdateFlag } from \"../enums\";\nimport { PBRMaterialRecord } from \"../record/PBRMaterialRecord\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { arrayLast } from \"../utils\";\nimport { iVector2Vector } from \"../utils/vector\";\nimport { Box3 } from \"./../utils/Box3\";\nimport { Entity } from \"./Entity\";\n\nexport enum LockSizeType {\n  None = 0b000,\n  X = 0b001,\n  Y = 0b010,\n  Z = 0b100,\n  All = 0b111,\n}\n\n@Factory\nexport class ImportEntity extends Entity {\n  static type = \"ImportEntity\";\n  #isReady = true;\n  private __ver: number;\n  public isRead = false;\n  private url: string;\n  private _preSize: IVector3 = { x: 10, y: 10, z: 10 };\n  public isAsync = true;\n  public originBoundbox: Box3;\n  public lockSizeType = LockSizeType.X;\n  constructor(option = { url: \"\" }) {\n    super();\n    this.url = option?.url ?? \"\";\n  }\n  get isVaildUrl() {\n    return this.url && typeof this.url === \"string\";\n  }\n  get Opacity() {\n    return this._opacity;\n  }\n  set Opacity(v: number) {\n    if (v === this._opacity) return;\n    this.writeSnapshoot();\n    this._opacity = v;\n    const meshs = this._drawObject.getChildMeshes();\n    for (const m of meshs) {\n      if (m.material) {\n        //FIXME:航运的材质需要需要修改\n        m.material.transparencyMode = Material.MATERIAL_ALPHABLEND;\n        m.material.alpha = v;\n      }\n    }\n  }\n  get Source() {\n    return this.url;\n  }\n  set Source(v: string) {\n    if (v === this.url) return;\n    this.writeSnapshoot();\n    //如果是空盒子，根据盒子大小自适应模型\n    if (!this.url) {\n      this.once(\"load\", (evt) => {\n        setTimeout(() => {\n          const model = evt.target as ImportEntity;\n          const box = model.originBoundbox;\n          const size = box.Size;\n          const oldScale = model.Scale;\n          const scale = { x: 1, y: 1, z: 1 };\n          if (this.lockSizeType & LockSizeType.X) {\n            scale.x = Math.abs(model.PreSize.x) / Math.abs(size.x);\n            scale.y = scale.x * oldScale.y;\n            scale.z = scale.x * oldScale.z;\n            scale.x *= oldScale.x;\n          }\n          if (this.lockSizeType & LockSizeType.Y) {\n            scale.y =\n              (Math.abs(model.PreSize.y) / Math.abs(size.y)) * oldScale.y;\n          }\n          if (this.lockSizeType & LockSizeType.Z) {\n            scale.z =\n              (Math.abs(model.PreSize.z) / Math.abs(size.z)) * oldScale.z;\n          }\n          model.Scale = scale;\n        }, 100);\n      });\n    }\n    this.url = v;\n    const parent = this.RenderObject;\n    if (parent) {\n      const children = parent.getChildren();\n      for (const c of children) {\n        c.dispose();\n      }\n    }\n    this.isRead = true;\n    this.load(this.RenderType, this.RenderObject);\n  }\n  get PreSize() {\n    return { ...this._preSize };\n  }\n  set PreSize(size: IVector3) {\n    Object.assign(this._preSize, size);\n    if (!this.isVaildUrl && this.Id) {\n      const renderObject = this.RenderObject;\n      if (renderObject) {\n        const box = renderObject\n          .getChildren()\n          .find((m) => m.name === \"虚拟模型盒子\") as Mesh;\n        if (box) {\n          const boxVerData = CreateBoxVertexData({\n            width: this._preSize.x,\n            height: this._preSize.y,\n            depth: this._preSize.z,\n          });\n          boxVerData.applyToMesh(box, true);\n          box.enableEdgesRendering();\n        }\n      }\n    }\n  }\n  get WorldPreSize() {\n    const size = iVector2Vector(this._preSize);\n    Vector3.TransformCoordinatesToRef(\n      size,\n      this.Matrix.getRotationMatrix(),\n      size\n    );\n    return size;\n  }\n  /**把模型的左下点归零 */\n  move2Zero(moveVec?: Vector3) {\n    const root = this.RenderObject;\n\n    if (!moveVec) {\n      const v = this.BoundingVectors;\n      moveVec = Vector3.Center(v.min, v.max).negate();\n      moveVec.y = 0;\n    }\n    this.Position = root.position.add(moveVec);\n\n    return moveVec;\n  }\n  get BoundingBox() {\n    const { min, max } = this.BoundingVectors;\n    return new Box3(min, max);\n  }\n  get LocalBoundingBox() {\n    const { min, max } = this.BoundingVectors;\n    return new Box3(min, max, this.Matrix.invert());\n  }\n  initDrawObject(renderType: RenderType) {\n    const node = new Mesh(\"import\" + this.Id, Entity.Scene);\n    node.doNotSyncBoundingInfo = true;\n\n    if (this.isVaildUrl) {\n      this.load(renderType, node, true);\n    } else {\n      const box = MeshBuilder.CreateBox(\n        \"虚拟模型盒子\",\n        {\n          width: this._preSize.x,\n          height: this._preSize.y,\n          depth: this._preSize.z,\n        },\n        Entity.Scene\n      );\n      box.bakeTransformIntoVertices(\n        Matrix.Translation(0, this._preSize.y / 2, 0)\n      );\n      box.visibility = 0.2;\n      box.enableEdgesRendering();\n      box.edgesColor = Color3.Gray().toColor4();\n      box.edgesWidth = 8;\n      node.addChild(box);\n    }\n\n    return node;\n  }\n  updateDrawObject(renderType: RenderType, obj: Mesh) {\n    super.updateDrawObject(renderType, obj);\n  }\n\n  updateMaterial(type?: RenderType, obj?: Mesh) {\n    const m = obj ?? (this.RenderObject as Mesh);\n    const meshs = m.getChildMeshes();\n    for (const m of meshs) {\n      const mtlId = this._materialMap.get(m.id);\n      if (mtlId) {\n        if (mtlId.Object?.Material) {\n          m.metadata = {\n            oldMtl: m.material,\n          };\n          m.material = mtlId.Object.Material;\n        }\n      } else {\n        if (m.metadata?.oldMtl) {\n          m.material = m.metadata.oldMtl;\n        }\n      }\n    }\n  }\n  getReady() {\n    return new Promise((res) => {\n      if (this.#isReady) {\n        res(true);\n      }\n      this.once(EventEnum.Load, () => res(true));\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(2);\n    file.write(this.url);\n    file.writeVector3(this._preSize);\n  }\n  readFile(file: HCFiler) {\n    this.isRead = true;\n    super.readFile(file);\n    const ver = file.read();\n    this.url = file.read();\n    if (AppConfig.isEncrypt) this.encrypt();\n    if (ver > 1) file.readVector3(this._preSize);\n    this.update();\n  }\n  private model2Zero(root: TransformNode) {\n    // if (this.isPart) return;\n    const v = root.getHierarchyBoundingVectors();\n    const moveVec = Vector3.Center(v.min, v.max);\n    moveVec.y = v.min.y;\n    const vec = moveVec.negate();\n    root.position = vec;\n\n    if (!this.isRead) {\n      this.Position = vec.negate();\n      this.isRead = false;\n    }\n\n    this.originBoundbox = new Box3(v.min, v.max);\n  }\n  private handleAssetContainer(asset: AssetContainer) {\n    let entries = asset.instantiateModelsToScene((n) => n + (this.Id ?? \"\"));\n    this.modelAnimations = entries.animationGroups;\n    let root: TransformNode;\n    if (entries.rootNodes.length === 1) {\n      root = entries.rootNodes[0];\n    } else {\n      root = new TransformNode(\"assetContainerRootMesh\", Entity.Scene);\n\n      entries.rootNodes.forEach((m) => {\n        if (!m.parent) {\n          m.parent = root;\n        }\n      });\n    }\n    root.getChildMeshes().forEach((m) => {\n      m.isPickable = this.IsPickable;\n    });\n\n    this._ownMaterials.length = 0;\n    for (const mtl of asset.materials) {\n      if (mtl instanceof PBRMaterial) {\n        const mtlRecord = new PBRMaterialRecord(mtl, this);\n        mtlRecord.Name = mtl.name;\n        mtlRecord.updateFromDiff();\n        this._ownMaterials.push(mtlRecord);\n      }\n    }\n    return root;\n  }\n  private load(renderType: RenderType, node: Mesh, needWait = false) {\n    if (this.url && node) {\n      this.#isReady = false;\n      this.encrypt();\n      let url = this.url.startsWith(\"http\")\n        ? this.url\n        : AppConfig.assetURL + this.url;\n\n      if (!this.Name) this.Name = arrayLast(this.url.split(\"/\")).split(\".\")[0];\n\n      const key = url + \"&\" + Entity.Scene.uid;\n\n      const AssetPromise = appCache.getAssetPromise(key);\n\n      if (AssetPromise) {\n        AssetPromise.then((res) => {\n          if (res) {\n            const root = this.handleAssetContainer(res);\n            //模型坐标调整\n            this.model2Zero(root);\n            root.parent = node;\n            this.updateMaterial(renderType, node);\n            this.update(UpdateFlag.Geometry);\n          }\n          this.#isReady = true;\n          this.trigger2({ type: \"load\", target: this });\n        });\n      } else {\n        let resolve: (v) => void;\n\n        if (needWait) {\n          resolve = AppStore.Wait();\n        }\n\n        appCache.setAssetPromise(\n          key,\n          AppStore.getLastPromise() as Promise<AssetContainer>\n        );\n\n        const pulgin = SceneLoader.LoadAssetContainer(\n          url,\n          undefined,\n          Entity.Scene,\n          (res: AssetContainer) => {\n            if (\n              !this.isPart &&\n              !this._db &&\n              Entity.Scene === AppStore.MainScene\n            )\n              return;\n\n            for (const mtl of res.materials) {\n              if (mtl instanceof StandardMaterial) {\n                mtl.diffuseColor = Color3.White();\n                mtl.ambientColor = Color3.White();\n                // mtl.backFaceCulling = false;\n              }\n\n              mtl.alpha = this._opacity;\n            }\n\n            const drawObject = node;\n            //纹理会重复添加\n            res.textures.length = 0;\n\n            res.meshes.forEach(\n              (m) => m instanceof Mesh && (m.receiveShadows = true)\n            );\n\n            const root = this.handleAssetContainer(res);\n\n            if (renderType === RenderType.Wireframe) {\n              res.materials.forEach((m) => (m.wireframe = true));\n            }\n            //模型坐标调整\n            this.model2Zero(root);\n            root.parent = drawObject;\n            this.trigger2({ type: EventEnum.Load, target: this });\n            this.#isReady = true;\n            this.updateMaterial(renderType, node);\n            this.update(UpdateFlag.Geometry);\n            resolve?.(res);\n          },\n          (event) => {\n            const percentage = event.lengthComputable\n              ? Math.floor((event.loaded / event.total) * 100)\n              : 0;\n            this.trigger2({\n              type: EventEnum.Loading,\n              target: this,\n              percentage,\n            });\n          },\n          (scene, msg, event) => {\n            console.error(\"innerError: \", event.innerError);\n            console.error(\"err_msg: \", msg);\n            if (\n              !this.isPart &&\n              !this._db &&\n              Entity.Scene === AppStore.MainScene\n            )\n              return;\n            resolve?.(false);\n            this.trigger({\n              type: EventEnum.Load,\n              target: this,\n              error: event.innerError,\n            });\n            AppEvent.trigger({\n              type: EventEnum.Load,\n              target: this,\n              error: msg,\n            });\n            this.#isReady = true;\n          }\n        );\n        AppConfig.loadPlugins.add(pulgin);\n      }\n    }\n  }\n  private encrypt() {\n    if (this.url.endsWith(\".hc3d\")) {\n      return;\n    } else {\n      if (AppConfig.isEncrypt)\n        [\".gltf\", \".glb\", \".obj\", \".STL\"].forEach(\n          (s) => (this.url = this.url.replace(s, \".hc3d\"))\n        );\n    }\n  }\n}\n","export enum ZINDEX {\n  SelectMarquee = \"32\", //框选ui在模态框下\n}\n","import { IVector3 } from \"@hc/core\";\nimport { IPointerEvent } from \"../types\";\n\n//用于鼠标交互的服务.\nexport interface EditorService {\n  //已经准备好可以执行鼠标点击事件\n  isReady: boolean;\n  //开始执行,交给服务. 返回布尔值, 如果为真 那么结束后面的服务.\n  do: (e: IPointerEvent) => Promise<boolean> | boolean;\n  cancel: () => void;\n}\n\nexport enum ServiceStatus {\n  Ok = 1,\n  Cancel = 0,\n  Error = -1,\n  KeyWord = 2,\n}\n\nexport enum EditorStatus {\n  None = 0,\n  /**拾取点状态 */\n  GetPoint = 0b000001,\n  /**选择状态 */\n  Select = 0b000010,\n  /**拖拽点状态 */\n  Drag = 0b000100,\n  All = 0b111111,\n}\n\nexport interface ServiceFaildResult {\n  status: ServiceStatus.Error | ServiceStatus.Cancel;\n}\n\nexport type ServiceSuccessResul<T extends Record<string, any>> = {\n  [K in keyof T]: T[K];\n} & {\n  status: ServiceStatus.Ok | ServiceStatus.KeyWord;\n};\n\nexport type ServiceResult<T extends Record<string, any> = Record<string, any>> =\n  ServiceFaildResult | ServiceSuccessResul<T>;\n\nexport type TKeyWord = {\n  key: string;\n  label: string;\n};\n\n/**服务入参属性 */\nexport interface ServiceOption {\n  /**是否绘制辅助线*/\n  hasAuxiliaryLine?: boolean;\n  /**辅助线基点 */\n  basePoint?: IVector3;\n  /**获取实时位置 */\n  getPointCallback?: (p: IVector3) => void;\n  keywordList?: TKeyWord[];\n  msg?: string;\n}\n","import { equaln } from \"../utils\";\nimport { ICanvasRenderingContext, Vector3 } from \"../babylon\";\nimport { MultiLine, MultiLinePoint } from \"../babylon\";\n\nexport class MultiLine2 extends MultiLine {\n  public _draw(context: ICanvasRenderingContext): void {\n    context.save();\n\n    if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n      context.shadowColor = this.shadowColor;\n      context.shadowBlur = this.shadowBlur;\n      context.shadowOffsetX = this.shadowOffsetX;\n      context.shadowOffsetY = this.shadowOffsetY;\n    }\n\n    this._applyStates(context);\n\n    context.strokeStyle = this.color;\n    context.lineWidth = this.lineWidth;\n    context.setLineDash(this.dash);\n\n    context.beginPath();\n\n    let first: boolean = true; //first index is not necessarily 0\n    let previousPoint: Vector3;\n\n    //@ts-ignore\n    let points = this._points.slice() as MultiLinePoint[];\n\n    if (points.length === 2) {\n      if (points[0].control) {\n        points[0]._point._isDirty = true;\n        points[0]._point.y += points[0].control._currentMeasure.height / 3;\n        points[0]._point._isDirty = false;\n      }\n\n      const start = points[0]._point;\n      const end = points[1]._point;\n\n      if (!equaln(start.x, end.x) && !equaln(start.y, end.y)) {\n        const center = Vector3.Center(start, end);\n\n        points = [\n          points[0],\n          {\n            //@ts-ignore\n            _point: {\n              x: start.x,\n              y: center.y,\n              z: center.z,\n            },\n          },\n          {\n            //@ts-ignore\n            _point: {\n              x: end.x,\n              y: center.y,\n              z: center.z,\n            },\n          },\n          points[1],\n        ];\n      }\n    }\n\n    points.forEach((point) => {\n      if (!point) {\n        return;\n      }\n\n      if (first) {\n        context.moveTo(point._point.x, point._point.y);\n\n        first = false;\n      } else {\n        if (point._point.z < 1 && previousPoint.z < 1) {\n          context.lineTo(point._point.x, point._point.y);\n        } else {\n          context.moveTo(point._point.x, point._point.y);\n        }\n      }\n      previousPoint = point._point;\n    });\n\n    context.stroke();\n\n    context.restore();\n  }\n}\n","import {\n  AllObjectData,\n  BaseObject,\n  EraseEntityData,\n  HCFiler,\n  IEvent,\n  ISerialize,\n  IVector2,\n  ObjectId,\n} from \"@hc/core\";\n\nimport { AppStore } from \"../app/AppStore\";\nimport { Control, Nullable, Vector2 } from \"../babylon\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { Entity } from \"../entitys/Entity\";\nimport { EventEnum } from \"../enums\";\nimport { StrNum } from \"../types\";\nimport { CollectionRecord } from \"./../records/CollectionRecord\";\nimport { MultiLine2 } from \"./MultiLine2\";\n\nexport type IDataOption = {\n  key: string;\n  label: string;\n  value: any;\n  unit: string;\n};\n\nexport class BaseGui extends BaseObject {\n  readonly Is3D = false;\n  protected _color = \"#000000\";\n  protected _fontSize = \"12px\";\n  protected _width: StrNum = \"200px\";\n  protected _height: StrNum = \"30px\";\n  protected _rotation = 0;\n  protected _scale = { x: 1, y: 1 };\n  protected _zIndex = 0;\n  protected _alpha = 0.9;\n  protected linkEntity: ObjectId<Entity>;\n  protected _drawObject: Control;\n  private _start: Vector2;\n  private _end = new Vector2();\n  private _position: { x: string; y: string } = { x: \"0\", y: \"0\" };\n  protected _isSelect = false;\n  protected _name = \"\";\n  protected dataList: IDataOption[] = [];\n  private _isVisiable = true;\n  private _isPickable = true;\n  protected lines: MultiLine2[] = [];\n  private timeID?: NodeJS.Timeout;\n  public GroupId: Nullable<ObjectId<CollectionRecord>>;\n\n  get DataList() {\n    return [...this.dataList];\n  }\n  set DataList(list: IDataOption[]) {\n    this.dataList = list;\n  }\n  get UniqueName() {\n    return this.constructor[\"type\"] + this.Id;\n  }\n  get Name() {\n    return this._name || this.UniqueName;\n  }\n  set Name(n: string) {\n    this._name = n;\n    AppEvent.trigger({ type: \"updateName\", target: this });\n  }\n  get Position() {\n    return { ...this._position };\n  }\n  set Position(p: { x: string; y: string }) {\n    this.writeSnapshoot();\n    this._position.x = p.x;\n    this._position.y = p.y;\n    this.move(p);\n  }\n  get Rotation() {\n    return this._rotation;\n  }\n  set Rotation(v: number) {\n    this.writeSnapshoot();\n    this._rotation = v;\n    this._drawObject.rotation = v;\n  }\n  get Scale() {\n    return { ...this._scale };\n  }\n  set Scale(v: { x: number; y: number }) {\n    this.writeSnapshoot();\n    Object.assign(this._scale, v);\n    this._drawObject.scaleX = v.x;\n    this._drawObject.scaleY = v.y;\n  }\n  get Width() {\n    return this._width;\n  }\n  set Width(v) {\n    if (v === this._width) return;\n    this.writeSnapshoot();\n    this._width = v;\n    this.update();\n  }\n  get Height() {\n    return this._height;\n  }\n  set Height(v) {\n    if (v === this._height) return;\n    this.writeSnapshoot();\n    this._height = v;\n    this.update();\n  }\n  get DrawObject() {\n    if (this._drawObject) return this._drawObject;\n\n    this._drawObject = this.initDrawObject();\n\n    this._drawObject.metadata = { entity: this };\n\n    this._drawObject.isVisible = this._isVisiable && !this._erase;\n\n    this.supportDrag();\n\n    return this._drawObject;\n  }\n  get Draging() {\n    return !!this._start;\n  }\n  get IsSelect() {\n    return this._isSelect;\n  }\n  set IsSelect(v: boolean) {\n    this._isSelect = v;\n    if (!this._drawObject) return;\n    if (v) {\n      this._drawObject.shadowColor = \"#000000\";\n    } else {\n      this._drawObject.shadowColor = \"#168df8\";\n    }\n  }\n  get Visiable() {\n    return this._isVisiable;\n  }\n  set Visiable(v: boolean) {\n    if (v === this._isVisiable) return;\n    this.writeSnapshoot();\n    this._isVisiable = v;\n    this.trigger2({ type: EventEnum.UpdateVisiable, target: this });\n    this.update();\n  }\n  get IsPickable() {\n    return this._isPickable;\n  }\n  set IsPickable(v: boolean) {\n    this.writeSnapshoot();\n    this._isPickable = v;\n    // if (this._drawObject) {\n    //   this._drawObject.isPointerBlocker = v;\n    // }\n  }\n  attachEntity(objectId) {\n    this.linkEntity = objectId;\n  }\n  initDrawObject(): Control {\n    return null;\n  }\n  setProp(k: string, value: any) {\n    for (const d of this.dataList) {\n      if (d.key === k) d.value = value;\n    }\n  }\n  updateDrawObject(obj: Control) {\n    obj.width = this._width;\n    obj.color = this._color;\n    obj.rotation = this._rotation;\n    obj.scaleX = this._scale.x;\n    obj.scaleY = this._scale.y;\n    obj.zIndex = this._zIndex;\n    obj.fontSize = this._fontSize;\n    obj.alpha = this._alpha;\n    obj.isVisible = this._isVisiable;\n    this.lines.forEach((l) => (l.isVisible = this._isVisiable));\n    this.move(this._position, obj);\n  }\n  update() {\n    if (!this._drawObject) return;\n    this.updateDrawObject(this._drawObject);\n    this.trigger2({ type: \"update\", target: this });\n  }\n  drag = (coordinates: { x: number; y: number }) => {\n    if (!this._start) return;\n    const diff = this._start.subtract(\n      new Vector2(coordinates.x, coordinates.y)\n    );\n    let [x, y] = [-diff.x + this._end.x, -diff.y + this._end.y];\n\n    this.move({ x, y });\n  };\n  click(coordinates: { x: number; y: number }) {\n    if (!this._isPickable) return;\n    this.trigger({\n      type: \"pointerDownGui\",\n      target: this,\n      point: coordinates,\n    });\n    AppEvent.trigger({\n      type: \"pointerDownGui\",\n      target: this,\n      point: coordinates,\n    });\n  }\n  startDrag(coordinates: { x: number; y: number }) {\n    if (!this._isPickable) return;\n    if (AppStore.PreviewMode) return;\n    if (this._db) this._db.HistoryManager.startCmd(\"拖拽GUI\");\n    this.writeSnapshoot();\n    this._start = new Vector2(coordinates.x, coordinates.y);\n\n    let left = this._drawObject.left;\n    let top = this._drawObject.top;\n    if (this.linkEntity) {\n      left = this._drawObject.linkOffsetX;\n      top = this._drawObject.linkOffsetY;\n    }\n\n    const width = AppStore.MainViewer.Width;\n    const height = AppStore.MainViewer.Height;\n\n    let x = this.getPositionValue(left, width);\n    let y = this.getPositionValue(top, height);\n\n    this._end = new Vector2(x, y);\n  }\n  endDrag(coordinates: { x: number; y: number }) {\n    AppEvent.trigger({\n      type: \"pointerUpGui\",\n      target: this,\n      point: coordinates,\n    });\n    this._start = null;\n    if (this._db) this._db.HistoryManager.endCmd();\n  }\n  move(p: { x: StrNum; y: StrNum }, obj = this._drawObject) {\n    if (!obj) return;\n    const width = AppStore.MainViewer.Width;\n    const height = AppStore.MainViewer.Height;\n    if (this.linkEntity) {\n      obj.linkOffsetX = p.x;\n      obj.linkOffsetY = p.y;\n      this._position.x = p.x.toString();\n      this._position.y = p.y.toString();\n    } else {\n      if (typeof p.x === \"number\") {\n        obj.left = (p.x / width) * 100 + \"%\";\n        this._position.x = (p.x / width) * 100 + \"%\";\n      } else {\n        obj.left = p.x;\n        this._position.x = p.x;\n      }\n      if (typeof p.y === \"number\") {\n        obj.top = (p.y / height) * 100 + \"%\";\n        this._position.y = (p.y / height) * 100 + \"%\";\n      } else {\n        obj.top = p.y;\n        this._position.y = p.y;\n      }\n    }\n\n    AppEvent.trigger({ type: \"update\", target: this });\n    this.trigger({ type: \"update\", target: this });\n  }\n  erase(e = true) {\n    if (e === this._erase) return;\n    super.erase(e);\n    this._drawObject.isVisible = !e;\n    this.lines.forEach((l) => (l.isVisible = !e));\n    AppEvent.trigger({ type: \"remove\", target: this });\n    this.trigger({ type: \"remove\", target: this });\n  }\n  ptInContainer(pt: IVector2) {\n    if (!this._drawObject) return false;\n    return this._drawObject.contains(pt.x, pt.y);\n  }\n  destory() {\n    super.destory();\n    this.timeID && clearTimeout(this.timeID);\n    if (this._drawObject) this._drawObject.dispose();\n    this._drawObject = null;\n    this.lines.forEach((l) => l.dispose());\n    this.lines.length = 0;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(4);\n    filer.write(this._position.x);\n    filer.write(this._position.y);\n    filer.write(this._rotation);\n    filer.write(this._scale.x);\n    filer.write(this._scale.y);\n    filer.write(this._name);\n    filer.write(this._width);\n    filer.write(this._height);\n    filer.write(this._color);\n    filer.write(this._zIndex);\n    filer.write(this._fontSize);\n    filer.write(this._alpha);\n    filer.writeObjectId(this.linkEntity);\n\n    filer.writeAnyArray(this.dataList, (d) => {\n      filer.write(d.key);\n      filer.write(d.label);\n      filer.write(d.value);\n      filer.write(d.unit);\n    });\n\n    filer.write(this._isVisiable);\n\n    filer.write(this._isPickable);\n\n    filer.writeObjectId(this.GroupId);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const ver = filer.read();\n    this._position.x = filer.read();\n    this._position.y = filer.read();\n    this._rotation = filer.read();\n    this._scale.x = filer.read();\n    this._scale.y = filer.read();\n    this._name = filer.read();\n    this._width = filer.read();\n    this._height = filer.read();\n    this._color = filer.read();\n    this._zIndex = filer.read();\n    this._fontSize = filer.read();\n    this._alpha = filer.read();\n    this.linkEntity = filer.readObjectId() as ObjectId<Entity>;\n\n    this.dataList.length = 0;\n    filer.readAnyArray(() => {\n      const d = {} as any;\n      d.key = filer.read();\n      d.label = filer.read();\n      d.value = filer.read();\n      d.unit = filer.read();\n      this.dataList.push(d);\n    });\n\n    if (ver > 1) this._isVisiable = filer.read();\n\n    if (ver > 2) {\n      this._isPickable = filer.read();\n    }\n    if (ver > 3) {\n      this.GroupId = filer.readObjectId();\n    }\n  }\n  _applyHistoryRecord(record: ISerialize) {\n    super._applyHistoryRecord(record);\n    if (record instanceof EraseEntityData) {\n      this._drawObject.isVisible = !this._erase;\n    } else if (record instanceof AllObjectData) {\n      this.readFile(record.Filer);\n    }\n  }\n  /**这个触发事件会同时发出自身 和全局的事件 */\n  trigger2(event: IEvent) {\n    super.trigger(event);\n    AppEvent.trigger(event);\n  }\n  private getPositionValue(v: string | number, refValue: number) {\n    if (typeof v === \"string\") {\n      if (v.endsWith(\"%\")) {\n        return (parseFloat(v) / 100) * refValue;\n      } else {\n        return parseFloat(v);\n      }\n    }\n    return v;\n  }\n  private supportDrag() {\n    this._drawObject.isPointerBlocker = false;\n  }\n  protected generateLinkLine(panel: Control, time = 0) {\n    this.timeID && clearTimeout(this.timeID);\n    this.timeID = setTimeout(() => {\n      if (this.linkEntity?.Object && panel?.parent) {\n        const line = new MultiLine2(\"linkLine\" + this.Id);\n        line.isVisible = this._isVisiable;\n        line.color = \"rgba(14,232,210,0.2)\";\n        line.lineWidth = 2;\n        line.add(panel);\n        const p = line.getAt(1);\n        p.mesh = this.linkEntity.Object.RenderObject;\n        panel.zIndex = 1;\n        panel.parent.addControl(line);\n\n        panel.linkWithMesh(this.linkEntity.Object.DrawObject);\n        // panel.linkOffsetY = 0;\n\n        this.move(this.Position, panel);\n        this.lines.push(line);\n      }\n    }, time);\n  }\n}\n","import { Vector2 } from \"../babylon\";\nimport { SelectType } from \"../types\";\nimport { ZINDEX } from \"../utils/zIndex\";\n\n//矩形选框\nexport class SelectMarquee {\n  start: Vector2 = new Vector2();\n  end: Vector2 = new Vector2();\n  selectType: SelectType = SelectType.None;\n  private rightColor = \"rgba(225, 240, 255, 0.5)\";\n  private leftColor = \"rgba(225, 240, 255, 0.4)\";\n  private rightBorder = \"1px dashed rgb(179, 179, 245)\";\n  private leftBorder = \"1px solid rgb(179, 179, 245)\";\n  private dom: HTMLElement;\n  private width: number;\n  private height: number;\n\n  constructor(container: HTMLElement) {\n    this.dom = document.createElement(\"div\");\n    container.appendChild(this.dom);\n\n    let st = this.dom.style;\n    st.position = \"absolute\";\n    st.zIndex = ZINDEX.SelectMarquee;\n    st.background = \"rgba(0, 63, 255, 0.2)\";\n    st.margin = \"0\";\n    st.pointerEvents = \"none\";\n    st.top = \"460px\";\n    st.left = \"100px\";\n    st.width = \"100px\";\n    st.height = \"200px\";\n    st.display = \"none\";\n    st.border = this.leftBorder;\n  }\n\n  show() {\n    this.dom.style.display = \"block\";\n  }\n\n  hide() {\n    this.dom.style.display = \"none\";\n  }\n\n  update() {\n    this.dom.style.top = Math.min(this.start.y, this.end.y) + \"px\";\n    this.dom.style.left = Math.min(this.start.x, this.end.x) + \"px\";\n\n    this.width = Math.abs(this.start.x - this.end.x);\n    this.height = Math.abs(this.start.y - this.end.y);\n    this.dom.style.width = this.width + \"px\";\n    this.dom.style.height = this.height + \"px\";\n\n    let type = this.selectType;\n    if (this.selectType === SelectType.None) {\n      if (this.start.x > this.end.x) type = SelectType.C;\n      else type = SelectType.W;\n    }\n\n    if (type === SelectType.C) {\n      this.dom.style.background = this.leftColor;\n      this.dom.style.border = this.leftBorder;\n    } else {\n      this.dom.style.background = this.rightColor;\n      this.dom.style.border = this.rightBorder;\n    }\n  }\n\n  setStart(x: number, y: number) {\n    this.start.set(x, y);\n  }\n\n  setEnd(x: number, y: number) {\n    this.end.set(x, y);\n    this.update();\n  }\n}\n","import {\n  AbstractMesh,\n  BoundingBox,\n  Mesh,\n  TransformNode,\n  Vector2,\n  Vector3,\n} from \"../../babylon\";\nimport { Entity } from \"../../entitys\";\nimport { SelectType } from \"../../types\";\nimport { Box3 } from \"../../utils\";\nimport { Viewer } from \"../../viewer/Viewer\";\nimport { SelectBase } from \"./SelectBase\";\n\nexport class SelectBox extends SelectBase {\n  _SelectType;\n  private activeMeshes = new Set<AbstractMesh>();\n  constructor(\n    protected _Viewer: Viewer,\n    private start: Vector2,\n    private end: Vector2\n  ) {\n    super(_Viewer);\n    const activeMeshesData = this._Viewer.Scene.getActiveMeshes();\n    this.activeMeshes = new Set(\n      activeMeshesData.data.slice(0, activeMeshesData.length)\n    );\n  }\n  select(nodes?: (Mesh | TransformNode)[]) {\n    nodes = nodes ?? (this._Viewer.Scene.rootNodes as (Mesh | TransformNode)[]);\n    for (const n of nodes) {\n      if (this.targetIsSelect(n)) {\n        this.selectList.add(n);\n      }\n    }\n  }\n\n  targetIsSelect(node: Mesh | TransformNode) {\n    if (!node.metadata?.Entity?.Visiable) return false;\n    if (!node.metadata?.Entity?.IsPickable) return false;\n    if (node.name === \"WORLD_GROUND\") return false;\n    if (this._SelectType === SelectType.None) return false;\n\n    const startPosition = this.start;\n    const endPosition = this.end;\n\n    //FIXME: 大场景框选优化\n    const minX = Math.min(startPosition.x, endPosition.x);\n    const minY = Math.min(startPosition.y, endPosition.y);\n    const maxX = Math.max(startPosition.x, endPosition.x);\n    const maxY = Math.max(startPosition.y, endPosition.y);\n\n    const en = node.metadata?.Entity as Entity;\n\n    const boundBox = en.BoundingBox;\n\n    const points = boundBox.vectorsWorld.map((p) => this.world2screen(p));\n    const box = new Box3(points[0], points[1]);\n    box.setFromPoints(points);\n\n    const box2 = new Box3(new Vector3(minX, minY), new Vector3(maxX, maxY));\n\n    if (!BoundingBox.Intersects(box, box2)) {\n      return false;\n    }\n    const meshs = node.getChildMeshes() as Mesh[];\n    for (const mesh of meshs) {\n      if (!mesh.geometry) continue;\n      // if (!this._Viewer.Camera.isInFrustum(mesh)) continue;\n      if (!this.activeMeshes.has(mesh)) continue;\n      const pts = mesh.getPositionData();\n      const mtx = mesh.getWorldMatrix();\n      for (let i = 0; i < pts.length; i += 3) {\n        const wp = new Vector3(pts[i], pts[i + 1], pts[i + 2]);\n        Vector3.TransformCoordinatesToRef(wp, mtx, wp);\n        const sp = this.world2screen(wp);\n        if (box2.intersectsPoint(sp)) {\n          return true;\n        }\n        continue;\n      }\n    }\n\n    return false;\n  }\n}\n","import {\n  Matrix,\n  Mesh,\n  MeshBuilder,\n  Vector3,\n  TransformNode,\n} from \"../../babylon\";\nimport { Entity } from \"../../entitys/Entity\";\nimport { Viewer } from \"../../viewer/Viewer\";\n\nexport class SelectBase {\n  selectList = new Set<Mesh | TransformNode>();\n  private _tempPlane: Mesh;\n  constructor(protected _viewer: Viewer) {}\n  get Plane() {\n    if (this._tempPlane) return this._tempPlane;\n    const mesh = MeshBuilder.CreatePlane(\"get-point\", { size: 1000 });\n    mesh.setEnabled(false);\n    this._tempPlane = mesh;\n    return mesh;\n  }\n  select(nodes: Mesh[]) {\n    //\n  }\n  destoryTempPlane() {\n    if (this._tempPlane) {\n      this._tempPlane.dispose();\n      this._tempPlane = null;\n    }\n  }\n  world2screen(pt: Vector3) {\n    const p = Vector3.Project(\n      pt,\n      Matrix.IdentityReadOnly,\n      this._viewer.Scene.getTransformMatrix(),\n      this._viewer.Camera.viewport.toGlobal(\n        this._viewer.Scene.getEngine().getRenderWidth(),\n        this._viewer.Scene.getEngine().getRenderHeight()\n      )\n    );\n    p.z = 0;\n    return p;\n  }\n  screen2World(p: Vector3, isDestoryPlane = true) {\n    const ray = this._viewer.Scene.createPickingRay(\n      p.x,\n      p.y,\n      this._viewer.Scene.getViewMatrix(),\n      this._viewer.cameraManager.Camera,\n      true\n    );\n    if (this._viewer.ground) this._viewer.ground.isPickable = true;\n    //@ts-ignore\n    const pickinfo = ray.intersectsMesh(this._viewer.ground || this.Plane);\n\n    if (this._viewer.ground) this._viewer.ground.isPickable = false;\n\n    if (isDestoryPlane) this.destoryTempPlane();\n\n    if (pickinfo.hit) return pickinfo.pickedPoint;\n\n    return null;\n  }\n  get SelectEntitys() {\n    const enitys: Entity[] = [];\n    for (const s of this.selectList) {\n      enitys.push(s.metadata.Entity);\n    }\n    return enitys;\n  }\n  get SelectMeshs() {\n    return [...this.selectList];\n  }\n}\n","import { Mesh, TransformNode } from \"../../babylon\";\nimport { GroupRecord } from \"../../records/GroupRecord\";\nimport { Entity } from \"./../../entitys/Entity\";\n\nexport class SelectSet {\n  private _selectSetList = new Set<Mesh | TransformNode>();\n  get SelectMeshs() {\n    return [...this._selectSetList];\n  }\n  get SelectEntitys(): Entity[] {\n    return this.SelectMeshs.map((s) => s.metadata.Entity);\n  }\n  add(data: (Mesh | TransformNode)[]) {\n    for (const d of data) {\n      //TODO:文件夹可能嵌套\n      if (d.metadata?.Entity?.GroupId) {\n        const en = d.metadata?.Entity?.GroupId?.Object as GroupRecord;\n        const ens = en.entitys.map((e) => e.Object) as Entity[];\n        for (const en of ens) {\n          if (en instanceof Entity && en.Visiable && en.DrawObject)\n            this._selectSetList.add(en.DrawObject);\n        }\n      }\n      this._selectSetList.add(d);\n    }\n  }\n  addEns(ens: Entity[]) {\n    ens.forEach((e) => this._selectSetList.add(e.DrawObject));\n  }\n  remove() {\n    //\n  }\n  clear() {\n    this._selectSetList.forEach((d) => {\n      if (d?.metadata?.Entity) d.metadata.Entity.IsSelect = false;\n    });\n    this._selectSetList.clear();\n  }\n}\n","import { BaseObject, IVector2 } from \"@hc/core\";\n\nimport {\n  Mesh,\n  Observable,\n  PointerEventTypes,\n  PointerInfo,\n  TransformNode,\n} from \"../babylon\";\nimport { BaseDom } from \"../core/BaseDom\";\nimport { Particle } from \"../particleSystem/Particle\";\nimport { GroupRecord } from \"../records\";\nimport { IPointerEvent, SelectType } from \"../types\";\nimport { getRoot, removeOne } from \"../utils\";\nimport { AppEvent } from \"./../core/AppEvent\";\nimport { Entity } from \"./../entitys/Entity\";\nimport { BaseGui } from \"./../guis/Gui\";\nimport { SelectMarquee } from \"./../ui\";\nimport { Viewer } from \"./../viewer/Viewer\";\nimport type { Editor } from \"./Editor\";\nimport { EditorService, EditorStatus } from \"./interface\";\nimport { SelectBox } from \"./select/SelectBox\";\nimport { SelectSet } from \"./select/SelectSet\";\n\nexport interface SelectEventDetail {\n  type: \"select\";\n  meshs: Array<Mesh | TransformNode>;\n  entitys: BaseObject[];\n  isUserInput: boolean;\n}\n\nexport class SelectControl implements EditorService {\n  selectMarquee: SelectMarquee;\n  selectSet = new SelectSet();\n  private doing = false;\n  private selectObserable = new Observable<SelectEventDetail>();\n  private _SelectType: SelectType = SelectType.None;\n  private _selectGui: BaseGui;\n  private _selectDOM: BaseDom;\n  private _selectParticle: Particle;\n  private _selectGroupRecord: GroupRecord;\n  constructor(private _viewer: Viewer, private editor: Editor) {\n    this.selectMarquee = new SelectMarquee(_viewer.canvas.parentElement);\n    this._registerEvent();\n  }\n\n  get isReady() {\n    return (\n      this.editor.Status === EditorStatus.None ||\n      !!(this.editor.Status & EditorStatus.Select)\n    );\n  }\n\n  set SelectType(type: SelectType) {\n    this._SelectType = type;\n    this.selectMarquee.selectType = type;\n  }\n  set SelectEntitys(ens: Entity[]) {\n    this.setSelectEntitys(ens);\n  }\n  do(event: IPointerEvent) {\n    if (!this.isReady) return false;\n    this.onPointerDown(event);\n    return true;\n  }\n  cancel() {\n    this.reset();\n    this.clearSelect(true);\n  }\n  reset() {\n    this.doing = false;\n    this.selectMarquee.hide();\n    this.editor.Status &= ~EditorStatus.Select;\n  }\n\n  /**\n   * 设置当前选择的实体\n   *\n   * @param ens 所选择的实体\n   * @param isUserInput 是否用户输入，有些时候需要区分当前选择集是用户从场景里面选择的还是通过其他方式设置上去的\n   */\n  setSelectEntitys(ens: Entity[], isUserInput = true) {\n    this.clearSelect();\n    const s = new SelectSet();\n    s.addEns(ens);\n    this.selectSet = s;\n    this.update(isUserInput);\n  }\n\n  get SelectMeshs() {\n    if (this._selectGui || this._selectDOM) return [];\n    return this.selectSet.SelectMeshs;\n  }\n  get SelectObjects() {\n    if (this._selectGui) return [this._selectGui];\n    if (this._selectDOM) return [this._selectDOM];\n    if (this._selectParticle) return [this._selectParticle];\n    if (this._selectGroupRecord) return [this._selectGroupRecord];\n    return this.selectSet.SelectEntitys;\n  }\n\n  onPointerDown(pointerInfo: IPointerEvent) {\n    if (this.SelectGui?.Draging) return;\n    if (pointerInfo.event.button === 0) {\n      const oldMeshs = this.SelectMeshs ?? [];\n      this.clearSelect();\n      if (pointerInfo.pickInfo.pickedMesh) {\n        const root = getRoot(pointerInfo.pickInfo.pickedMesh) as Mesh;\n        if (root.metadata?.Entity) {\n          if (pointerInfo.event.ctrlKey || pointerInfo.event.metaKey) {\n            if (oldMeshs.includes(root)) {\n              removeOne(oldMeshs, root);\n              this.selectSet.add(oldMeshs);\n            } else {\n              this.selectSet.add([root, ...oldMeshs]);\n            }\n          } else {\n            this.selectSet.add([root]);\n          }\n          this.update();\n          return;\n        }\n      }\n      this.doing = true;\n      this.editor.Status = EditorStatus.Select;\n      this.selectMarquee.show();\n      this.selectMarquee.setStart(\n        this._viewer.Scene.pointerX,\n        this._viewer.Scene.pointerY\n      );\n      this.selectMarquee.setEnd(\n        this._viewer.Scene.pointerX,\n        this._viewer.Scene.pointerY\n      );\n      this.selectMarquee.update();\n    }\n  }\n  onPointerMove(pointerInfo: PointerInfo) {\n    if (!this.doing) return;\n    if (this.SelectGui?.Draging) return;\n\n    this.selectMarquee.setEnd(\n      this._viewer.Scene.pointerX,\n      this._viewer.Scene.pointerY\n    );\n\n    this._SelectType =\n      this.selectMarquee.end.x > this.selectMarquee.start.x\n        ? SelectType.W\n        : SelectType.C;\n  }\n  onPointerUp(pointerInfo: PointerInfo) {\n    if (pointerInfo.event.button === 0 && this.doing) {\n      this.selectByMarquee();\n      this.reset();\n    }\n  }\n\n  clearSelect(isUpdate = false) {\n    if (this._selectGui) {\n      this._selectGui.IsSelect = false;\n      this._selectGui = null;\n    }\n    if (this._selectParticle) {\n      this._selectParticle.IsSelect = false;\n      this._selectParticle = null;\n    }\n    if (this._selectDOM) {\n      this._selectDOM.IsSelect = false;\n      this._selectDOM = null;\n    }\n    if (this._selectGroupRecord) {\n      this._selectGroupRecord.IsSelect = false;\n      this._selectGroupRecord = null;\n    }\n\n    this._viewer.highlightManager.clear();\n    this.selectSet.clear();\n    if (isUpdate) this.update();\n  }\n  on(callback: (data: SelectEventDetail) => void) {\n    const f = this.selectObserable.add(callback);\n    return () => {\n      this.selectObserable.remove(f);\n    };\n  }\n\n  onSelect(callback: (data: SelectEventDetail) => void): () => void {\n    const ob = this.selectObserable.add(callback);\n\n    return () => {\n      this.selectObserable.remove(ob);\n    };\n  }\n\n  update(isUserInput = true) {\n    this.selectSet.SelectEntitys.forEach((e) => (e.IsSelect = true));\n    this._viewer.highlightManager.addMeshs(this.selectSet.SelectMeshs);\n\n    this.selectObserable.notifyObservers({\n      type: \"select\",\n      meshs: this.SelectMeshs,\n      entitys: this.SelectObjects,\n      isUserInput,\n    });\n  }\n  get SelectGroupRecord() {\n    return this._selectGroupRecord;\n  }\n  set SelectGroupRecord(v: GroupRecord) {\n    this.clearSelect();\n    this._selectGroupRecord = v;\n    v.IsSelect = true;\n    this.update();\n  }\n  get SelectParticle() {\n    return this._selectParticle;\n  }\n  set SelectParticle(v: Particle) {\n    this.clearSelect();\n    this._selectParticle = v;\n    v.IsSelect = true;\n    this.update();\n  }\n  get SelectGui() {\n    return this._selectGui;\n  }\n  set SelectGui(v: BaseGui) {\n    this.clearSelect();\n    this._selectGui = v;\n    v.IsSelect = true;\n    this.update();\n  }\n  get SelectDOM() {\n    return this._selectDOM;\n  }\n  set SelectDOM(v: BaseDom) {\n    this.clearSelect();\n    this._selectDOM = v;\n    v.IsSelect = true;\n    this.update();\n  }\n  private selectByMarquee() {\n    const selectBox = new SelectBox(\n      this._viewer,\n      this.selectMarquee.start,\n      this.selectMarquee.end\n    );\n    selectBox._SelectType = this._SelectType;\n    selectBox.select();\n    this.selectSet.add(selectBox.SelectMeshs);\n    this.update();\n  }\n  private _registerEvent() {\n    this._viewer.Scene.onPointerObservable.add((pointerInfo: PointerInfo) => {\n      switch (pointerInfo.type) {\n        case PointerEventTypes.POINTERDOWN:\n          break;\n        case PointerEventTypes.POINTERUP:\n          if (this.SelectGui?.Draging) {\n            this.SelectGui.endDrag({\n              x: pointerInfo.event.offsetX,\n              y: pointerInfo.event.offsetY,\n            });\n          } else {\n            this.onPointerUp(pointerInfo);\n          }\n          break;\n        case PointerEventTypes.POINTERMOVE:\n          if (this.SelectGui?.Draging) {\n            this.SelectGui.drag({\n              x: pointerInfo.event.offsetX,\n              y: pointerInfo.event.offsetY,\n            });\n          } else {\n            this.onPointerMove(pointerInfo);\n          }\n          break;\n      }\n    });\n    this._viewer.canvas.parentElement.addEventListener(\"mousemove\", (event) => {\n      if (this.SelectDOM?.Draging) {\n        this.SelectDOM.move(event.clientX, event.clientY);\n      }\n    });\n    AppEvent.on(\"pointerDownGui\", (event) => {\n      this.SelectGui = event.target as BaseGui;\n      this.SelectGui.startDrag(event.point);\n    });\n    document.addEventListener(\"mouseup\", () => {\n      if (this.SelectDOM?.Draging) {\n        this.SelectDOM.end();\n      }\n    });\n  }\n}\n","import type { WebVRFreeCamera } from \"@babylonjs/core/Cameras/VR/webVRCamera\";\nimport {\n  Gizmo,\n  Nullable,\n  Node,\n  Vector3,\n  Camera,\n  TransformNode,\n  Space,\n  Matrix,\n} from \"../../babylon\";\nimport { Box3 } from \"../../utils\";\n\nexport class Gizmos extends Gizmo {\n  protected _attachedNodes: Nullable<Node[]> = null;\n  protected _attachedNodesChanged(value: Nullable<Node[]>) {}\n  protected _tempVector_ = new Vector3();\n  public gizmoPosition: Vector3 = null;\n\n  get attachedNode() {\n    return super.attachedNode;\n  }\n  set attachedNode(b) {\n    this._attachedNodes = null;\n    super.attachedNode = b;\n  }\n  get attachedMesh() {\n    return super.attachedMesh;\n  }\n  set attachedMesh(b) {\n    this._attachedNodes = null;\n    super.attachedMesh = b;\n  }\n  get AttachedNodes() {\n    let nodes: Node[];\n    if (this.attachedNode) {\n      nodes = [this.attachedNode];\n    } else if (this.attachedNodes) {\n      nodes = this.attachedNodes;\n    }\n    return nodes;\n  }\n  public get attachedNodes() {\n    return this._attachedNodes;\n  }\n  public set attachedNodes(value) {\n    //@ts-ignore\n    this._attachedNode = null;\n    //@ts-ignore\n    this._attachedMesh = null;\n\n    this._attachedNodes = value;\n\n    this._rootMesh.setEnabled(!!value);\n    this._attachedNodesChanged(value);\n    this.setGizmosPosition();\n    if (this.gizmoPosition)\n      this._rootMesh.position.copyFrom(this.gizmoPosition);\n  }\n  protected setGizmosPosition() {\n    if (this.attachedNodes) {\n      let effectiveNodes = this.attachedNodes;\n      const rows = effectiveNodes.map((n) => n.getWorldMatrix().getRow(3));\n\n      const positions = rows.map((row) =>\n        row ? row.toVector3() : new Vector3(0, 0, 0)\n      );\n\n      if (positions.length === 1) {\n        this.gizmoPosition = null;\n      } else {\n        this.gizmoPosition = Box3.GetCenterFromPoints(positions);\n      }\n    } else {\n      this.gizmoPosition = null;\n    }\n  }\n  protected _nodeMatrixChanged(node: Node) {\n    //@ts-ignore\n    let oldNode = this._attachedNode;\n    //@ts-ignore\n    this._attachedNode = node;\n    this._matrixChanged();\n    //@ts-ignore\n    this._attachedNode = oldNode;\n  }\n  protected _handlePivots() {\n    const attachedNodeTransforms = this._attachedNodes as any;\n\n    for (const attachedNodeTransform of attachedNodeTransforms) {\n      // check there is an active pivot for the TransformNode attached\n      if (\n        attachedNodeTransform.isUsingPivotMatrix &&\n        attachedNodeTransform.isUsingPivotMatrix()\n      ) {\n        // When a TransformNode has an active pivot, even without parenting,\n        // translation from the world matrix is different from TransformNode.position.\n        // Pivot works like a virtual parent that's using the node orientation.\n        // As the world matrix is transformed by the gizmo and then decomposed to TRS\n        // its translation part must be set to the Node's position.\n        attachedNodeTransform\n          .getWorldMatrix()\n          .setTranslation(attachedNodeTransform.position);\n      }\n    }\n  }\n  protected _update() {\n    super._update();\n    if (this.attachedNodes) {\n      let effectiveNodes = this.attachedNodes;\n      if (this.updateGizmoPositionToMatchAttachedMesh) {\n        this.setGizmosPosition();\n        if (this.gizmoPosition)\n          this._rootMesh.position.copyFrom(this.gizmoPosition);\n      }\n\n      // Rotation\n      if (this.updateGizmoRotationToMatchAttachedMesh) {\n        this._rootMesh.rotationQuaternion!.set(0, 0, 0, 1);\n      }\n\n      // Scale\n      if (this.updateScale) {\n        const activeCamera = this.gizmoLayer.utilityLayerScene.activeCamera!;\n        let cameraPosition = activeCamera.globalPosition;\n        if ((<WebVRFreeCamera>activeCamera).devicePosition) {\n          cameraPosition = (<WebVRFreeCamera>activeCamera).devicePosition;\n        }\n        this._rootMesh.position.subtractToRef(\n          cameraPosition,\n          this._tempVector_\n        );\n        const dist = this._tempVector_.length() * this.scaleRatio;\n        this._rootMesh.scaling.set(dist, dist, dist);\n\n        // Account for handedness, similar to Matrix.decompose\n        if (\n          effectiveNodes.some((n) => n._getWorldMatrixDeterminant() < 0) &&\n          !Gizmo.PreserveScaling\n        ) {\n          this._rootMesh.scaling.y *= -1;\n        }\n      } else {\n        this._rootMesh.scaling.setAll(this.scaleRatio);\n      }\n    } else {\n      this.gizmoPosition = null;\n    }\n\n    if (this.updateScale) {\n      const activeCamera = this.gizmoLayer.utilityLayerScene.activeCamera!;\n      if (activeCamera.mode === Camera.ORTHOGRAPHIC_CAMERA) {\n        const size = activeCamera.metadata?.size;\n        if (!size) return;\n        this._rootMesh.scaling.set(size * 2, size * 2, size * 2);\n      }\n    }\n  }\n  protected setNodesPovits(nodes: Node[]) {\n    if (nodes?.length > 1 && this.gizmoPosition) {\n      const center = this.gizmoPosition;\n      for (const n of nodes) {\n        if (n instanceof TransformNode) {\n          const ap = n.absolutePosition.clone();\n          n.setPivotPoint(center, Space.WORLD);\n          n.computeWorldMatrix(true);\n          const delta = n.absolutePosition.subtract(ap);\n          n.setAbsolutePosition(ap.subtract(delta));\n        }\n      }\n    }\n  }\n  protected resetNodesPovits(nodes: Node[]) {\n    if (nodes?.length > 1) {\n      for (const n of nodes) {\n        if (n instanceof TransformNode) {\n          const ap = n.absolutePosition.clone();\n          n.setPivotMatrix(Matrix.Identity());\n          n.setAbsolutePosition(ap);\n        }\n      }\n    }\n  }\n}\n","import { end } from \"@hc/aop\";\nimport {\n  Color3,\n  CreateCylinder,\n  GizmoAxisCache,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerInfo,\n  Scene,\n  StandardMaterial,\n  TransformNode,\n  UtilityLayerRenderer,\n  Vector3,\n  PointerDragBehavior,\n  CreatePlaneVertexData,\n} from \"../../babylon\";\n\nimport { Gizmos } from \"./Gizmos\";\n// import { PointerDragBehavior } from \"./PointerDragBehavior\";\nimport { PositionGizmo } from \"./PositionGizmo\";\n\nexport class AxisDragGizmo extends Gizmos {\n  /**\n   * Drag behavior responsible for the gizmos dragging interactions\n   */\n  public dragBehavior: PointerDragBehavior;\n  private _pointerObserver: Nullable<Observer<PointerInfo>> = null;\n  /**\n   * Drag distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public snapDistance = 0;\n  /**\n   * Event that fires each time the gizmo snaps to a new location.\n   * * snapDistance is the the change in distance\n   */\n  public onSnapObservable = new Observable<{ snapDistance: number }>();\n\n  private _isEnabled: boolean = true;\n  private _parent: Nullable<PositionGizmo> = null;\n\n  private _gizmoMesh: Mesh;\n  private _coloredMaterial: StandardMaterial;\n  private _hoverMaterial: StandardMaterial;\n  private _disableMaterial: StandardMaterial;\n  private _dragging: boolean = false;\n\n  /**\n   * @param scene\n   * @param material\n   * @param thickness\n   * @param isCollider\n   * @hidden\n   */\n  public static _CreateArrow(\n    scene: Scene,\n    material: StandardMaterial,\n    thickness: number = 1,\n    isCollider = false\n  ): TransformNode {\n    const arrow = new TransformNode(\"arrow\", scene);\n    const cylinder = CreateCylinder(\n      \"cylinder\",\n      {\n        diameterTop: 0,\n        height: 0.075,\n        diameterBottom: 0.0375 * (1 + (thickness - 1) / 4),\n        tessellation: 96,\n      },\n      scene\n    );\n    const line = CreateCylinder(\n      \"cylinder\",\n      {\n        diameterTop: 0.005 * thickness,\n        height: 0.275,\n        diameterBottom: 0.005 * thickness,\n        tessellation: 96,\n      },\n      scene\n    );\n\n    // Position arrow pointing in its drag axis\n    cylinder.parent = arrow;\n    cylinder.material = material;\n    cylinder.rotation.x = Math.PI / 2;\n    cylinder.position.z += 0.3;\n\n    line.parent = arrow;\n    line.material = material;\n    line.position.z += 0.275 / 2;\n    line.rotation.x = Math.PI / 2;\n\n    if (isCollider) {\n      line.visibility = 0;\n      cylinder.visibility = 0;\n    }\n    return arrow;\n  }\n\n  /**\n   * @param scene\n   * @param arrow\n   * @hidden\n   */\n  public static _CreateArrowInstance(\n    scene: Scene,\n    arrow: TransformNode\n  ): TransformNode {\n    const instance = new TransformNode(\"arrow\", scene);\n    for (const mesh of arrow.getChildMeshes()) {\n      const childInstance = (mesh as Mesh).createInstance(mesh.name);\n      childInstance.parent = instance;\n    }\n    return instance;\n  }\n\n  /**\n   * Creates an AxisDragGizmo\n   * @param dragAxis The axis which the gizmo will be able to drag on\n   * @param color The color of the gizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param parent\n   * @param thickness display gizmo axis thickness\n   */\n  constructor(\n    dragAxis: Vector3,\n    color: Color3 = Color3.Gray(),\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    parent: Nullable<PositionGizmo> = null,\n    thickness: number = 1\n  ) {\n    super(gizmoLayer);\n    this._parent = parent;\n\n    // Create Material\n    this._coloredMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._coloredMaterial.diffuseColor = color;\n    this._coloredMaterial.specularColor = color.subtract(\n      new Color3(0.1, 0.1, 0.1)\n    );\n\n    this._hoverMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._hoverMaterial.diffuseColor = Color3.Yellow();\n\n    this._disableMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._disableMaterial.diffuseColor = Color3.Gray();\n    this._disableMaterial.alpha = 0.4;\n\n    // Build Mesh + Collider\n    const arrow = AxisDragGizmo._CreateArrow(\n      gizmoLayer.utilityLayerScene,\n      this._coloredMaterial,\n      thickness\n    );\n    const collider = AxisDragGizmo._CreateArrow(\n      gizmoLayer.utilityLayerScene,\n      this._coloredMaterial,\n      thickness + 4,\n      true\n    );\n\n    // Add to Root Node\n    this._gizmoMesh = new Mesh(\"\", gizmoLayer.utilityLayerScene);\n    this._gizmoMesh.addChild(arrow as Mesh);\n    this._gizmoMesh.addChild(collider as Mesh);\n\n    this._gizmoMesh.lookAt(this._rootMesh.position.add(dragAxis));\n    this._gizmoMesh.scaling.scaleInPlace(1 / 3);\n    this._gizmoMesh.parent = this._rootMesh;\n\n    let currentSnapDragDistance = 0;\n    const tmpVector = new Vector3();\n    const tmpVector2 = new Vector3();\n    const tmpSnapEvent = { snapDistance: 0 };\n    // Add drag behavior to handle events when the gizmo is dragged\n    this.dragBehavior = new PointerDragBehavior({ dragAxis: dragAxis });\n\n    let dispose = end(this.dragBehavior, this.dragBehavior.attach, () => {\n      const mesh = this.dragBehavior[\"_dragPlane\"];\n      const plane = CreatePlaneVertexData({\n        size: 1e8,\n        sideOrientation: Mesh.DOUBLESIDE,\n      });\n      plane.applyToMesh(mesh, false);\n      dispose();\n      dispose = null;\n    });\n    this.dragBehavior.moveAttached = false;\n    this.dragBehavior.updateDragPlane = false;\n    this._rootMesh.addBehavior(this.dragBehavior);\n\n    this.dragBehavior.onDragObservable.add((event) => {\n      let nodes: Node[];\n      if (this.attachedNode) {\n        this._handlePivot();\n        nodes = [this.attachedNode];\n        // Keep world translation and use it to update world transform\n        // if the node has parent, the local transform properties (position, rotation, scale)\n        // will be recomputed in _matrixChanged function\n      } else if (this.attachedNodes) {\n        this._handlePivots();\n        nodes = this.attachedNodes;\n      }\n\n      if (nodes) {\n        for (const node of nodes) {\n          let matrixChanged: boolean = false;\n          // Snapping logic\n          if (this.snapDistance === 0) {\n            node.getWorldMatrix().getTranslationToRef(tmpVector2);\n            tmpVector2.addInPlace(event.delta);\n            if (this.dragBehavior.validateDrag(tmpVector2)) {\n              if ((node as TransformNode).position) {\n                // Required for nodes like lights\n                (node as TransformNode).position.addInPlaceFromFloats(\n                  event.delta.x,\n                  event.delta.y,\n                  event.delta.z\n                );\n              }\n\n              // use _worldMatrix to not force a matrix update when calling GetWorldMatrix especially with Cameras\n              node\n                .getWorldMatrix()\n                .addTranslationFromFloats(\n                  event.delta.x,\n                  event.delta.y,\n                  event.delta.z\n                );\n              node.updateCache();\n              matrixChanged = true;\n            }\n          } else {\n            currentSnapDragDistance += event.dragDistance;\n            if (Math.abs(currentSnapDragDistance) > this.snapDistance) {\n              const dragSteps = Math.floor(\n                Math.abs(currentSnapDragDistance) / this.snapDistance\n              );\n              currentSnapDragDistance =\n                currentSnapDragDistance % this.snapDistance;\n              event.delta.normalizeToRef(tmpVector);\n              tmpVector.scaleInPlace(this.snapDistance * dragSteps);\n\n              node.getWorldMatrix().getTranslationToRef(tmpVector2);\n              tmpVector2.addInPlace(tmpVector);\n              if (this.dragBehavior.validateDrag(tmpVector2)) {\n                node\n                  .getWorldMatrix()\n                  .addTranslationFromFloats(\n                    tmpVector.x,\n                    tmpVector.y,\n                    tmpVector.z\n                  );\n                node.updateCache();\n                tmpSnapEvent.snapDistance = this.snapDistance * dragSteps;\n                this.onSnapObservable.notifyObservers(tmpSnapEvent);\n                matrixChanged = true;\n              }\n            }\n          }\n          if (matrixChanged) {\n            //@ts-ignore\n            this._attachedNode = node;\n            this._matrixChanged();\n          }\n        }\n        if (this.attachedNodes) {\n          //@ts-ignore\n          this._attachedNode = null;\n        }\n      }\n    });\n    this.dragBehavior.onDragStartObservable.add(() => {\n      this._dragging = true;\n    });\n    this.dragBehavior.onDragEndObservable.add(() => {\n      this._dragging = false;\n    });\n\n    const light = gizmoLayer._getSharedGizmoLight();\n    light.includedOnlyMeshes = light.includedOnlyMeshes.concat(\n      this._rootMesh.getChildMeshes(false)\n    );\n\n    const cache: GizmoAxisCache = {\n      gizmoMeshes: arrow.getChildMeshes() as Mesh[],\n      colliderMeshes: collider.getChildMeshes() as Mesh[],\n      material: this._coloredMaterial,\n      hoverMaterial: this._hoverMaterial,\n      disableMaterial: this._disableMaterial,\n      active: false,\n      dragBehavior: this.dragBehavior as any,\n    };\n    this._parent?.addToAxisCache(collider as Mesh, cache);\n\n    this._pointerObserver =\n      gizmoLayer.utilityLayerScene.onPointerObservable.add((pointerInfo) => {\n        if (this._customMeshSet) {\n          return;\n        }\n        this._isHovered = !!(\n          cache.colliderMeshes.indexOf(\n            <Mesh>pointerInfo?.pickInfo?.pickedMesh\n          ) !== -1\n        );\n        if (!this._parent) {\n          const material = this.dragBehavior.enabled\n            ? this._isHovered || this._dragging\n              ? this._hoverMaterial\n              : this._coloredMaterial\n            : this._disableMaterial;\n          this._setGizmoMeshMaterial(cache.gizmoMeshes, material);\n        }\n      });\n\n    this.dragBehavior.onEnabledObservable.add((newState) => {\n      this._setGizmoMeshMaterial(\n        cache.gizmoMeshes,\n        newState ? cache.material : cache.disableMaterial\n      );\n    });\n  }\n  protected _attachedNodeChanged(value: Nullable<Node>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n  protected _attachedNodesChanged(value: Nullable<Node[]>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = !!value;\n    }\n  }\n\n  /**\n   * If the gizmo is enabled\n   */\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    if (!value) {\n      this.attachedMesh = null;\n      this.attachedNode = null;\n    } else {\n      if (this._parent) {\n        this.attachedMesh = this._parent.attachedMesh;\n        this.attachedNode = this._parent.attachedNode;\n      }\n    }\n  }\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    this.onSnapObservable.clear();\n    this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(\n      this._pointerObserver\n    );\n    this.dragBehavior.detach();\n    if (this._gizmoMesh) {\n      this._gizmoMesh.dispose();\n    }\n    [this._coloredMaterial, this._hoverMaterial, this._disableMaterial].forEach(\n      (matl) => {\n        if (matl) {\n          matl.dispose();\n        }\n      }\n    );\n    super.dispose();\n  }\n  public lookAt(dragAxis: Vector3) {\n    this._gizmoMesh.lookAt(dragAxis);\n  }\n}\n","import {\n  Color3,\n  CreatePlane,\n  GizmoAxisCache,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerDragBehavior,\n  PointerInfo,\n  Scene,\n  StandardMaterial,\n  TransformNode,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\n\nimport { Gizmos } from \"./Gizmos\";\nimport { PositionGizmo } from \"./PositionGizmo\";\n\n/**\n * Single plane drag gizmo\n */\nexport class PlaneDragGizmo extends Gizmos {\n  /**\n   * Drag behavior responsible for the gizmos dragging interactions\n   */\n  public dragBehavior: PointerDragBehavior;\n  private _pointerObserver: Nullable<Observer<PointerInfo>> = null;\n  /**\n   * Drag distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public snapDistance = 0;\n  /**\n   * Event that fires each time the gizmo snaps to a new location.\n   * * snapDistance is the the change in distance\n   */\n  public onSnapObservable = new Observable<{ snapDistance: number }>();\n\n  private _gizmoMesh: TransformNode;\n  private _coloredMaterial: StandardMaterial;\n  private _hoverMaterial: StandardMaterial;\n  private _disableMaterial: StandardMaterial;\n\n  private _isEnabled: boolean = false;\n  private _parent: Nullable<PositionGizmo> = null;\n  private _dragging: boolean = false;\n\n  /**\n   * @param scene\n   * @param material\n   * @hidden\n   */\n  public static _CreatePlane(\n    scene: Scene,\n    material: StandardMaterial\n  ): TransformNode {\n    const plane = new TransformNode(\"plane\", scene);\n\n    //make sure plane is double sided\n    const dragPlane = CreatePlane(\n      \"dragPlane\",\n      { width: 0.1375, height: 0.1375, sideOrientation: 2 },\n      scene\n    );\n    dragPlane.material = material;\n    dragPlane.parent = plane;\n    dragPlane.visibility = 0.3;\n    return plane;\n  }\n\n  /**\n   * Creates a PlaneDragGizmo\n   * @param dragPlaneNormal The axis normal to which the gizmo will be able to drag on\n   * @param color The color of the gizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param parent\n   */\n  constructor(\n    dragPlaneNormal: Vector3,\n    color: Color3 = Color3.Gray(),\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    parent: Nullable<PositionGizmo> = null\n  ) {\n    super(gizmoLayer);\n    this._parent = parent;\n    // Create Material\n    this._coloredMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._coloredMaterial.diffuseColor = color;\n    this._coloredMaterial.specularColor = color.subtract(\n      new Color3(0.1, 0.1, 0.1)\n    );\n\n    this._hoverMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._hoverMaterial.diffuseColor = Color3.Yellow();\n\n    this._disableMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._disableMaterial.diffuseColor = Color3.Gray();\n    this._disableMaterial.alpha = 0.4;\n\n    // Build plane mesh on root node\n    this._gizmoMesh = PlaneDragGizmo._CreatePlane(\n      gizmoLayer.utilityLayerScene,\n      this._coloredMaterial\n    );\n\n    this._gizmoMesh.lookAt(this._rootMesh.position.add(dragPlaneNormal));\n    this._gizmoMesh.scaling.scaleInPlace(1 / 3);\n    this._gizmoMesh.parent = this._rootMesh;\n\n    let currentSnapDragDistance = 0;\n    const tmpVector = new Vector3();\n    const tmpSnapEvent = { snapDistance: 0 };\n    // Add dragPlaneNormal drag behavior to handle events when the gizmo is dragged\n    this.dragBehavior = new PointerDragBehavior({\n      dragPlaneNormal: dragPlaneNormal,\n    });\n    this.dragBehavior.moveAttached = false;\n    this._rootMesh.addBehavior(this.dragBehavior);\n\n    this.dragBehavior.onDragObservable.add((event) => {\n      let nodes: Node[];\n      if (this.attachedNode) {\n        this._handlePivot();\n        nodes = [this.attachedNode];\n        // Keep world translation and use it to update world transform\n        // if the node has parent, the local transform properties (position, rotation, scale)\n        // will be recomputed in _matrixChanged function\n      } else if (this.attachedNodes) {\n        nodes = this.attachedNodes;\n      }\n\n      if (nodes) {\n        for (const node of nodes) {\n          // Snapping logic\n          if (this.snapDistance === 0) {\n            node\n              .getWorldMatrix()\n              .addTranslationFromFloats(\n                event.delta.x,\n                event.delta.y,\n                event.delta.z\n              );\n          } else {\n            currentSnapDragDistance += event.dragDistance;\n            if (Math.abs(currentSnapDragDistance) > this.snapDistance) {\n              const dragSteps = Math.floor(\n                Math.abs(currentSnapDragDistance) / this.snapDistance\n              );\n              currentSnapDragDistance =\n                currentSnapDragDistance % this.snapDistance;\n              event.delta.normalizeToRef(tmpVector);\n              tmpVector.scaleInPlace(this.snapDistance * dragSteps);\n              node\n                .getWorldMatrix()\n                .addTranslationFromFloats(\n                  tmpVector.x,\n                  tmpVector.y,\n                  tmpVector.z\n                );\n              tmpSnapEvent.snapDistance = this.snapDistance * dragSteps;\n              this.onSnapObservable.notifyObservers(tmpSnapEvent);\n            }\n          }\n          //@ts-ignore\n          this._attachedNode = node;\n          this._matrixChanged();\n        }\n        if (this.attachedNodes) {\n          //@ts-ignore\n          this._attachedNode = null;\n        }\n      }\n    });\n    this.dragBehavior.onDragStartObservable.add(() => {\n      this._dragging = true;\n    });\n    this.dragBehavior.onDragEndObservable.add(() => {\n      this._dragging = false;\n    });\n\n    const light = gizmoLayer._getSharedGizmoLight();\n    light.includedOnlyMeshes = light.includedOnlyMeshes.concat(\n      this._rootMesh.getChildMeshes(false)\n    );\n\n    const cache: GizmoAxisCache = {\n      gizmoMeshes: this._gizmoMesh.getChildMeshes() as Mesh[],\n      colliderMeshes: this._gizmoMesh.getChildMeshes() as Mesh[],\n      material: this._coloredMaterial,\n      hoverMaterial: this._hoverMaterial,\n      disableMaterial: this._disableMaterial,\n      active: false,\n      dragBehavior: this.dragBehavior,\n    };\n    this._parent?.addToAxisCache(this._gizmoMesh as Mesh, cache);\n\n    this._pointerObserver =\n      gizmoLayer.utilityLayerScene.onPointerObservable.add((pointerInfo) => {\n        if (this._customMeshSet) {\n          return;\n        }\n        this._isHovered = !!(\n          cache.colliderMeshes.indexOf(\n            <Mesh>pointerInfo?.pickInfo?.pickedMesh\n          ) !== -1\n        );\n        if (!this._parent) {\n          const material = cache.dragBehavior.enabled\n            ? this._isHovered || this._dragging\n              ? this._hoverMaterial\n              : this._coloredMaterial\n            : this._disableMaterial;\n          this._setGizmoMeshMaterial(cache.gizmoMeshes, material);\n        }\n      });\n\n    this.dragBehavior.onEnabledObservable.add((newState) => {\n      this._setGizmoMeshMaterial(\n        cache.gizmoMeshes,\n        newState ? this._coloredMaterial : this._disableMaterial\n      );\n    });\n  }\n\n  protected _attachedNodeChanged(value: Nullable<Node>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n  protected _attachedNodesChanged(value: Nullable<Node[]>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n\n  /**\n   * If the gizmo is enabled\n   */\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    if (!value) {\n      this.attachedNode = null;\n    } else {\n      if (this._parent) {\n        this.attachedNode = this._parent.attachedNode;\n      }\n    }\n  }\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    this.onSnapObservable.clear();\n    this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(\n      this._pointerObserver\n    );\n    this.dragBehavior.detach();\n    super.dispose();\n    if (this._gizmoMesh) {\n      this._gizmoMesh.dispose();\n    }\n    [this._coloredMaterial, this._hoverMaterial, this._disableMaterial].forEach(\n      (matl) => {\n        if (matl) {\n          matl.dispose();\n        }\n      }\n    );\n  }\n}\n","import {\n  AbstractMesh,\n  Color3,\n  Gizmo,\n  GizmoAxisCache,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerInfo,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\n\nimport { AxisDragGizmo } from \"./AxisDragGizmo\";\nimport { GizmoManager } from \"./GizmoManager\";\nimport { PlaneDragGizmo } from \"./PlaneDragGizmo\";\n\n/**\n * Gizmo that enables dragging a mesh along 3 axis\n */\nexport class PositionGizmo extends Gizmo {\n  /**\n   * Internal gizmo used for interactions on the x axis\n   */\n  public xGizmo: AxisDragGizmo;\n  /**\n   * Internal gizmo used for interactions on the y axis\n   */\n  public yGizmo: AxisDragGizmo;\n  /**\n   * Internal gizmo used for interactions on the z axis\n   */\n  public zGizmo: AxisDragGizmo;\n  /**\n   * Internal gizmo used for interactions on the yz plane\n   */\n  public xPlaneGizmo: PlaneDragGizmo;\n  /**\n   * Internal gizmo used for interactions on the xz plane\n   */\n  public yPlaneGizmo: PlaneDragGizmo;\n  /**\n   * Internal gizmo used for interactions on the xy plane\n   */\n  public zPlaneGizmo: PlaneDragGizmo;\n\n  /**\n   * private variables\n   */\n  private _meshAttached: Nullable<AbstractMesh> = null;\n  private _nodeAttached: Nullable<Node> = null;\n  private _nodeAttacheds: Nullable<Node[]> = null;\n  private _snapDistance: number;\n  private _observables: Observer<PointerInfo>[] = [];\n\n  /** Node Caching for quick lookup */\n  private _gizmoAxisCache: Map<Mesh, GizmoAxisCache> = new Map();\n\n  /** Fires an event when any of it's sub gizmos are dragged */\n  public onDragStartObservable = new Observable();\n  /** Fires an event when any of it's sub gizmos are released from dragging */\n  public onDragEndObservable = new Observable();\n\n  /**\n   * If set to true, planar drag is enabled\n   */\n  private _planarGizmoEnabled = false;\n\n  public get attachedMesh() {\n    return this._meshAttached;\n  }\n  public set attachedMesh(mesh: Nullable<AbstractMesh>) {\n    this._nodeAttacheds = null;\n    this._meshAttached = mesh;\n    this._nodeAttached = mesh;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedMesh = mesh;\n      } else {\n        gizmo.attachedMesh = null;\n      }\n    });\n  }\n\n  public get attachedNode() {\n    return this._nodeAttached;\n  }\n  public set attachedNode(node: Nullable<Node>) {\n    this._meshAttached = null;\n    this._nodeAttacheds = null;\n    this._nodeAttached = node;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedNode = node;\n      } else {\n        gizmo.attachedNode = null;\n      }\n    });\n  }\n  public get attachedNodes() {\n    return this._nodeAttacheds;\n  }\n  public set attachedNodes(node: Nullable<Node[]>) {\n    this._meshAttached = null;\n    this._nodeAttached = null;\n    this._nodeAttacheds = node;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedNodes = node;\n      } else {\n        gizmo.attachedNodes = null;\n      }\n    });\n  }\n\n  /**\n   * True when the mouse pointer is hovering a gizmo mesh\n   */\n  public get isHovered() {\n    let hovered = false;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      hovered = hovered || gizmo.isHovered;\n    });\n    return hovered;\n  }\n\n  /**\n     * Creates a PositionGizmo\n     * @param gizmoLayer The utility layer the gizmo will be added to\n      @param thickness display gizmo axis thickness\n     * @param gizmoManager\n     */\n  constructor(\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    thickness: number = 1,\n    gizmoManager?: GizmoManager\n  ) {\n    super(gizmoLayer);\n    this.xGizmo = new AxisDragGizmo(\n      new Vector3(1, 0, 0),\n      Color3.Red().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n    this.yGizmo = new AxisDragGizmo(\n      new Vector3(0, 1, 0),\n      Color3.Green().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n    this.zGizmo = new AxisDragGizmo(\n      new Vector3(0, 0, 1),\n      Color3.Blue().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n\n    this.xPlaneGizmo = new PlaneDragGizmo(\n      new Vector3(1, 0, 0),\n      Color3.Red().scale(0.5),\n      this.gizmoLayer,\n      this\n    );\n    this.yPlaneGizmo = new PlaneDragGizmo(\n      new Vector3(0, 1, 0),\n      Color3.Green().scale(0.5),\n      this.gizmoLayer,\n      this\n    );\n    this.zPlaneGizmo = new PlaneDragGizmo(\n      new Vector3(0, 0, 1),\n      Color3.Blue().scale(0.5),\n      this.gizmoLayer,\n      this\n    );\n    // Relay drag events\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      gizmo.dragBehavior.onDragStartObservable.add(() => {\n        this.onDragStartObservable.notifyObservers({});\n      });\n      gizmo.dragBehavior.onDragEndObservable.add(() => {\n        this.onDragEndObservable.notifyObservers({});\n      });\n    });\n\n    this.attachedMesh = null;\n\n    if (gizmoManager) {\n      gizmoManager.addToAxisCache(this._gizmoAxisCache);\n    } else {\n      // Only subscribe to pointer event if gizmoManager isnt\n      Gizmo.GizmoAxisPointerObserver(gizmoLayer, this._gizmoAxisCache);\n    }\n  }\n\n  /**\n   * If the planar drag gizmo is enabled\n   * setting this will enable/disable XY, XZ and YZ planes regardless of individual gizmo settings.\n   */\n  public set planarGizmoEnabled(value: boolean) {\n    this._planarGizmoEnabled = value;\n    [this.xPlaneGizmo, this.yPlaneGizmo, this.zPlaneGizmo].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.isEnabled = value;\n        if (value) {\n          if (gizmo.attachedMesh) {\n            gizmo.attachedMesh = this.attachedMesh;\n          } else {\n            gizmo.attachedNode = this.attachedNode;\n          }\n        }\n      }\n    }, this);\n  }\n  public get planarGizmoEnabled(): boolean {\n    return this._planarGizmoEnabled;\n  }\n\n  public set updateGizmoRotationToMatchAttachedMesh(value: boolean) {\n    this._updateGizmoRotationToMatchAttachedMesh = value;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.updateGizmoRotationToMatchAttachedMesh = value;\n      }\n    });\n  }\n  public get updateGizmoRotationToMatchAttachedMesh() {\n    return this._updateGizmoRotationToMatchAttachedMesh;\n  }\n\n  /**\n   * Drag distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public set snapDistance(value: number) {\n    this._snapDistance = value;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.snapDistance = value;\n      }\n    });\n  }\n  public get snapDistance() {\n    return this._snapDistance;\n  }\n\n  /**\n   * Ratio for the scale of the gizmo (Default: 1)\n   */\n  public set scaleRatio(value: number) {\n    this._scaleRatio = value;\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.scaleRatio = value;\n      }\n    });\n  }\n  public get scaleRatio() {\n    return this._scaleRatio;\n  }\n\n  /**\n   * Builds Gizmo Axis Cache to enable features such as hover state preservation and graying out other axis during manipulation\n   * @param mesh Axis gizmo mesh\n   * @param cache Gizmo axis definition used for reactive gizmo UI\n   */\n  public addToAxisCache(mesh: Mesh, cache: GizmoAxisCache) {\n    this._gizmoAxisCache.set(mesh, cache);\n  }\n\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    [\n      this.xGizmo,\n      this.yGizmo,\n      this.zGizmo,\n      this.xPlaneGizmo,\n      this.yPlaneGizmo,\n      this.zPlaneGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.dispose();\n      }\n    });\n    this._observables.forEach((obs) => {\n      this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(obs);\n    });\n    this.onDragStartObservable.clear();\n    this.onDragEndObservable.clear();\n  }\n\n  /**\n   * CustomMeshes are not supported by this gizmo\n   */\n  public setCustomMesh() {\n    console.error(\n      \"Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo,gizmo.xPlaneGizmo, gizmo.yPlaneGizmo, gizmo.zPlaneGizmo)\"\n    );\n  }\n}\n","import { end } from \"@hc/aop\";\nimport {\n  AbstractMesh,\n  Color3,\n  CreatePlane,\n  CreatePlaneVertexData,\n  CreateTorus,\n  Effect,\n  Gizmo,\n  GizmoAxisCache,\n  Matrix,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerDragBehavior,\n  PointerInfo,\n  Quaternion,\n  ShaderMaterial,\n  StandardMaterial,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\nimport { Gizmos } from \"./Gizmos\";\nimport { RotationGizmo } from \"./RotationGizmo\";\n\n/**\n * Single plane rotation gizmo\n */\nexport class PlaneRotationGizmo extends Gizmos {\n  /**\n   * Drag behavior responsible for the gizmos dragging interactions\n   */\n  public dragBehavior: PointerDragBehavior;\n  private _pointerObserver: Nullable<Observer<PointerInfo>> = null;\n\n  /**\n   * Rotation distance in radians that the gizmo will snap to (Default: 0)\n   */\n  public snapDistance = 0;\n  /**\n   * Event that fires each time the gizmo snaps to a new location.\n   * * snapDistance is the the change in distance\n   */\n  public onSnapObservable = new Observable<{ snapDistance: number }>();\n\n  /**\n   * The maximum angle between the camera and the rotation allowed for interaction\n   * If a rotation plane appears 'flat', a lower value allows interaction.\n   */\n  public static MaxDragAngle: number = (Math.PI * 9) / 20;\n\n  /**\n   * Accumulated relative angle value for rotation on the axis. Reset to 0 when a dragStart occurs\n   */\n  public angle: number = 0;\n\n  private _isEnabled: boolean = true;\n  private _parent: Nullable<RotationGizmo> = null;\n  private _coloredMaterial: StandardMaterial;\n  private _hoverMaterial: StandardMaterial;\n  private _disableMaterial: StandardMaterial;\n  private _gizmoMesh: Mesh;\n  private _rotationDisplayPlane: Mesh;\n  private _dragging: boolean = false;\n  private _angles = new Vector3();\n\n  private static _RotationGizmoVertexShader = `\n        precision highp float;\n        attribute vec3 position;\n        attribute vec2 uv;\n        uniform mat4 worldViewProjection;\n        varying vec3 vPosition;\n        varying vec2 vUV;\n        void main(void) {\n            gl_Position = worldViewProjection * vec4(position, 1.0);\n            vUV = uv;\n        }`;\n\n  private static _RotationGizmoFragmentShader = `\n        precision highp float;\n        varying vec2 vUV;\n        varying vec3 vPosition;\n        uniform vec3 angles;\n        #define twopi 6.283185307\n        void main(void) {\n            vec2 uv = vUV - vec2(0.5);\n            float angle = atan(uv.y, uv.x) + 3.141592;\n            float delta = gl_FrontFacing ? angles.y : -angles.y;\n            float begin = angles.x - delta * angles.z;\n            float start = (begin < (begin + delta)) ? begin : (begin + delta);\n            float end = (begin > (begin + delta)) ? begin : (begin + delta);\n            float len = sqrt(dot(uv,uv));\n            float opacity = 1. - step(0.5, len);\n\n            float base = abs(floor(start / twopi)) * twopi;\n            start += base;\n            end += base;\n\n            float intensity = 0.;\n            for (int i = 0; i < 5; i++)\n            {\n                intensity += max(step(start, angle) - step(end, angle), 0.);\n                angle += twopi;\n            }\n            gl_FragColor = vec4(1.,1.,0., min(intensity * 0.25, 0.8)) * opacity;\n        }`;\n\n  private _rotationShaderMaterial: ShaderMaterial;\n\n  /**\n   * Creates a PlaneRotationGizmo\n   * @param planeNormal The normal of the plane which the gizmo will be able to rotate on\n   * @param color The color of the gizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param tessellation Amount of tessellation to be used when creating rotation circles\n   * @param parent\n   * @param useEulerRotation Use and update Euler angle instead of quaternion\n   * @param thickness display gizmo axis thickness\n   */\n  constructor(\n    planeNormal: Vector3,\n    color: Color3 = Color3.Gray(),\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    tessellation = 32,\n    parent: Nullable<RotationGizmo> = null,\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    useEulerRotation = false,\n    thickness: number = 1\n  ) {\n    super(gizmoLayer);\n    this._parent = parent;\n    // Create Material\n    this._coloredMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._coloredMaterial.diffuseColor = color;\n    this._coloredMaterial.specularColor = color.subtract(\n      new Color3(0.1, 0.1, 0.1)\n    );\n\n    this._hoverMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._hoverMaterial.diffuseColor = Color3.Yellow();\n\n    this._disableMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._disableMaterial.diffuseColor = Color3.Gray();\n    this._disableMaterial.alpha = 0.4;\n\n    // Build mesh on root node\n    this._gizmoMesh = new Mesh(\"\", gizmoLayer.utilityLayerScene);\n    const { rotationMesh, collider } = this._createGizmoMesh(\n      this._gizmoMesh,\n      thickness,\n      tessellation\n    );\n\n    // Setup Rotation Circle\n    this._rotationDisplayPlane = CreatePlane(\n      \"rotationDisplay\",\n      { size: 0.6, updatable: false },\n      this.gizmoLayer.utilityLayerScene\n    );\n    this._rotationDisplayPlane.rotation.z = Math.PI * 0.5;\n    this._rotationDisplayPlane.parent = this._gizmoMesh;\n    this._rotationDisplayPlane.setEnabled(false);\n\n    Effect.ShadersStore[\"rotationGizmoVertexShader\"] =\n      PlaneRotationGizmo._RotationGizmoVertexShader;\n    Effect.ShadersStore[\"rotationGizmoFragmentShader\"] =\n      PlaneRotationGizmo._RotationGizmoFragmentShader;\n    this._rotationShaderMaterial = new ShaderMaterial(\n      \"shader\",\n      this.gizmoLayer.utilityLayerScene,\n      {\n        vertex: \"rotationGizmo\",\n        fragment: \"rotationGizmo\",\n      },\n      {\n        attributes: [\"position\", \"uv\"],\n        uniforms: [\"worldViewProjection\", \"angles\"],\n      }\n    );\n    this._rotationShaderMaterial.backFaceCulling = false;\n\n    this._rotationDisplayPlane.material = this._rotationShaderMaterial;\n    this._rotationDisplayPlane.visibility = 0.999;\n\n    this._gizmoMesh.lookAt(this._rootMesh.position.add(planeNormal));\n    this._rootMesh.addChild(this._gizmoMesh, Gizmo.PreserveScaling);\n    this._gizmoMesh.scaling.scaleInPlace(1 / 3);\n    // Add drag behavior to handle events when the gizmo is dragged\n    this.dragBehavior = new PointerDragBehavior({\n      dragPlaneNormal: planeNormal,\n    });\n    let dispose = end(this.dragBehavior, this.dragBehavior.attach, () => {\n      const mesh = this.dragBehavior[\"_dragPlane\"];\n      const plane = CreatePlaneVertexData({\n        size: 1e8,\n        sideOrientation: Mesh.DOUBLESIDE,\n      });\n      plane.applyToMesh(mesh, false);\n      dispose();\n      dispose = null;\n    });\n    this.dragBehavior.moveAttached = false;\n    this.dragBehavior.maxDragAngle = PlaneRotationGizmo.MaxDragAngle;\n    this.dragBehavior._useAlternatePickedPointAboveMaxDragAngle = true;\n    this._rootMesh.addBehavior(this.dragBehavior);\n\n    // Closures for drag logic\n    const lastDragPosition = new Vector3();\n\n    const rotationMatrix = new Matrix();\n    const planeNormalTowardsCamera = new Vector3();\n    let localPlaneNormalTowardsCamera = new Vector3();\n\n    this.dragBehavior.onDragStartObservable.add((e) => {\n      let nodes = this.AttachedNodes;\n\n      if (nodes) {\n        this.setNodesPovits(nodes);\n        lastDragPosition.copyFrom(e.dragPlanePoint);\n        this._rotationDisplayPlane.setEnabled(true);\n\n        console.log(\"rotationMatrix: \", rotationMatrix);\n        this._rotationDisplayPlane.getWorldMatrix().invertToRef(rotationMatrix);\n        Vector3.TransformCoordinatesToRef(\n          e.dragPlanePoint,\n          rotationMatrix,\n          lastDragPosition\n        );\n\n        this._angles.x =\n          Math.atan2(lastDragPosition.y, lastDragPosition.x) + Math.PI;\n        this._angles.y = 0;\n        this._angles.z = this.updateGizmoRotationToMatchAttachedMesh ? 1 : 0;\n        this._dragging = true;\n        lastDragPosition.copyFrom(e.dragPlanePoint);\n\n        this._rotationShaderMaterial.setVector3(\"angles\", this._angles);\n        this.angle = 0;\n      }\n    });\n\n    this.dragBehavior.onDragEndObservable.add(() => {\n      this.resetNodesPovits(this.AttachedNodes);\n      this._dragging = false;\n      this._rotationDisplayPlane.setEnabled(false);\n    });\n\n    const tmpSnapEvent = { snapDistance: 0 };\n    let currentSnapDragDistance = 0;\n    const tmpMatrix = new Matrix();\n    const amountToRotate = new Quaternion();\n\n    this.dragBehavior.onDragObservable.add((event) => {\n      let nodes = this.AttachedNodes;\n\n      if (this.attachedNode) {\n        this._handlePivot();\n      } else this._handlePivots();\n\n      if (nodes) {\n        // Calc angle over full 360 degree (https://stackoverflow.com/questions/43493711/the-angle-between-two-3d-vectors-with-a-result-range-0-360)\n        const nodeScale = new Vector3(1, 1, 1);\n        const changeQuaternion = new Quaternion(0, 0, 0, 1);\n        const nodeTranslation = new Vector3(0, 0, 0);\n        if (nodes.length > 1) {\n          if (this.gizmoPosition) nodeTranslation.copyFrom(this.gizmoPosition);\n        } else {\n          nodes[0]\n            .getWorldMatrix()\n            .decompose(nodeScale, changeQuaternion, nodeTranslation);\n        }\n\n        const newVector = event.dragPlanePoint\n          .subtract(nodeTranslation)\n          .normalize();\n        const originalVector = lastDragPosition\n          .subtract(nodeTranslation)\n          .normalize();\n        const cross = Vector3.Cross(newVector, originalVector);\n\n        const dot = Vector3.Dot(newVector, originalVector);\n        let angle = Math.atan2(cross.length(), dot);\n\n        planeNormalTowardsCamera.copyFrom(planeNormal);\n        localPlaneNormalTowardsCamera.copyFrom(planeNormal);\n        // Snapping logic\n        let snapped = false;\n\n        // Flip up vector depending on which side the camera is on\n        let cameraFlipped = false;\n\n        if (this.updateGizmoRotationToMatchAttachedMesh) {\n          changeQuaternion.toRotationMatrix(rotationMatrix);\n          localPlaneNormalTowardsCamera = Vector3.TransformCoordinates(\n            planeNormalTowardsCamera,\n            rotationMatrix\n          );\n        }\n\n        if (gizmoLayer.utilityLayerScene.activeCamera) {\n          const camVec = gizmoLayer.utilityLayerScene.activeCamera.position\n            .subtract(nodeTranslation)\n            .normalize();\n          if (Vector3.Dot(camVec, localPlaneNormalTowardsCamera) > 0) {\n            planeNormalTowardsCamera.scaleInPlace(-1);\n            localPlaneNormalTowardsCamera.scaleInPlace(-1);\n            cameraFlipped = true;\n          }\n        }\n\n        if (this.snapDistance !== 0) {\n          currentSnapDragDistance += angle;\n          if (Math.abs(currentSnapDragDistance) > this.snapDistance) {\n            let dragSteps = Math.floor(\n              Math.abs(currentSnapDragDistance) / this.snapDistance\n            );\n            if (currentSnapDragDistance < 0) {\n              dragSteps *= -1;\n            }\n            currentSnapDragDistance =\n              currentSnapDragDistance % this.snapDistance;\n            angle = this.snapDistance * dragSteps;\n            snapped = true;\n          } else {\n            angle = 0;\n          }\n        }\n\n        const halfCircleSide =\n          Vector3.Dot(localPlaneNormalTowardsCamera, cross) > 0.0;\n\n        if (halfCircleSide) {\n          angle = -angle;\n        }\n\n        // Convert angle and axis to quaternion (http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm)\n        const quaternionCoefficient = Math.sin(angle / 2);\n        amountToRotate.set(\n          planeNormalTowardsCamera.x * quaternionCoefficient,\n          planeNormalTowardsCamera.y * quaternionCoefficient,\n          planeNormalTowardsCamera.z * quaternionCoefficient,\n          Math.cos(angle / 2)\n        );\n\n        // If the meshes local scale is inverted (eg. loaded gltf file parent with z scale of -1) the rotation needs to be inverted on the y axis\n        if (tmpMatrix.determinant() > 0) {\n          const tmpVector = new Vector3();\n          amountToRotate.toEulerAnglesToRef(tmpVector);\n          Quaternion.RotationYawPitchRollToRef(\n            tmpVector.y,\n            -tmpVector.x,\n            -tmpVector.z,\n            amountToRotate\n          );\n        }\n\n        this._angles.y += angle;\n        // this.angle += cameraFlipped ? -angle : angle;\n\n        this._rotationShaderMaterial.setVector3(\"angles\", this._angles);\n\n        for (const node of nodes) {\n          let position = new Vector3();\n          if (nodes.length === 1) {\n            position = nodeTranslation;\n          } else {\n            node\n              .getWorldMatrix()\n              .decompose(nodeScale, changeQuaternion, position);\n          }\n\n          if (this.updateGizmoRotationToMatchAttachedMesh) {\n            // Rotate selected mesh quaternion over fixed axis\n            changeQuaternion.multiplyToRef(amountToRotate, changeQuaternion);\n          } else {\n            // Rotate selected mesh quaternion over rotated axis\n            amountToRotate.multiplyToRef(changeQuaternion, changeQuaternion);\n          }\n\n          node\n            .getWorldMatrix()\n            .copyFrom(Matrix.Compose(nodeScale, changeQuaternion, position));\n\n          this._nodeMatrixChanged(node);\n        }\n        if (snapped) {\n          tmpSnapEvent.snapDistance = angle;\n          this.onSnapObservable.notifyObservers(tmpSnapEvent);\n        }\n\n        lastDragPosition.copyFrom(event.dragPlanePoint);\n      }\n    });\n\n    const light = gizmoLayer._getSharedGizmoLight();\n    light.includedOnlyMeshes = light.includedOnlyMeshes.concat(\n      this._rootMesh.getChildMeshes(false)\n    );\n\n    const cache: GizmoAxisCache = {\n      colliderMeshes: [collider],\n      gizmoMeshes: [rotationMesh],\n      material: this._coloredMaterial,\n      hoverMaterial: this._hoverMaterial,\n      disableMaterial: this._disableMaterial,\n      active: false,\n      dragBehavior: this.dragBehavior,\n    };\n    this._parent?.addToAxisCache(this._gizmoMesh, cache);\n\n    this._pointerObserver =\n      gizmoLayer.utilityLayerScene.onPointerObservable.add((pointerInfo) => {\n        if (this._customMeshSet) {\n          return;\n        }\n        // updating here the maxangle because ondragstart is too late (value already used) and the updated value is not taken into account\n        this.dragBehavior.maxDragAngle = PlaneRotationGizmo.MaxDragAngle;\n        this._isHovered = !!(\n          cache.colliderMeshes.indexOf(\n            <Mesh>pointerInfo?.pickInfo?.pickedMesh\n          ) !== -1\n        );\n        if (!this._parent) {\n          const material = cache.dragBehavior.enabled\n            ? this._isHovered || this._dragging\n              ? this._hoverMaterial\n              : this._coloredMaterial\n            : this._disableMaterial;\n          this._setGizmoMeshMaterial(cache.gizmoMeshes, material);\n        }\n      });\n\n    this.dragBehavior.onEnabledObservable.add((newState) => {\n      this._setGizmoMeshMaterial(\n        cache.gizmoMeshes,\n        newState ? this._coloredMaterial : this._disableMaterial\n      );\n    });\n  }\n\n  /**\n   * Create Geometry for Gizmo\n   * @param parentMesh\n   * @param thickness\n   * @param tessellation\n   */\n  private _createGizmoMesh(\n    parentMesh: AbstractMesh,\n    thickness: number,\n    tessellation: number\n  ) {\n    const collider = CreateTorus(\n      \"ignore\",\n      {\n        diameter: 0.6,\n        thickness: 0.03 * thickness,\n        tessellation,\n      },\n      this.gizmoLayer.utilityLayerScene\n    );\n    collider.visibility = 0;\n    const rotationMesh = CreateTorus(\n      \"\",\n      {\n        diameter: 0.6,\n        thickness: 0.005 * thickness,\n        tessellation,\n      },\n      this.gizmoLayer.utilityLayerScene\n    );\n    rotationMesh.material = this._coloredMaterial;\n\n    // Position arrow pointing in its drag axis\n    rotationMesh.rotation.x = Math.PI / 2;\n    collider.rotation.x = Math.PI / 2;\n\n    parentMesh.addChild(rotationMesh, Gizmo.PreserveScaling);\n    parentMesh.addChild(collider, Gizmo.PreserveScaling);\n    return { rotationMesh, collider };\n  }\n\n  protected _attachedNodeChanged(value: Nullable<Node>) {\n    this.updateGizmoPositionToMatchAttachedMesh = true;\n    this.updateGizmoRotationToMatchAttachedMesh = true;\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n  protected _attachedNodesChanged(value: Nullable<Node[]>) {\n    this.updateGizmoPositionToMatchAttachedMesh = false;\n    this.updateGizmoRotationToMatchAttachedMesh = false;\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n\n  /**\n   * If the gizmo is enabled\n   */\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    if (!value) {\n      this.attachedMesh = null;\n    } else {\n      if (this._parent) {\n        this.attachedMesh = this._parent.attachedMesh;\n      }\n    }\n  }\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    this.onSnapObservable.clear();\n    this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(\n      this._pointerObserver\n    );\n    this.dragBehavior.detach();\n    if (this._gizmoMesh) {\n      this._gizmoMesh.dispose();\n    }\n    if (this._rotationDisplayPlane) {\n      this._rotationDisplayPlane.dispose();\n    }\n    if (this._rotationShaderMaterial) {\n      this._rotationShaderMaterial.dispose();\n    }\n    [this._coloredMaterial, this._hoverMaterial, this._disableMaterial].forEach(\n      (matl) => {\n        if (matl) {\n          matl.dispose();\n        }\n      }\n    );\n    super.dispose();\n  }\n}\n","import {\n  AbstractMesh,\n  Color3,\n  Gizmo,\n  GizmoAxisCache,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerInfo,\n  TransformNode,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\nimport { GizmoManager } from \"./GizmoManager\";\nimport { PlaneRotationGizmo } from \"./PlaneRotationGizmo\";\n\n/**\n * Options for each individual plane rotation gizmo contained within RotationGizmo\n * @since 5.0.0\n */\nexport interface PlaneRotationGizmoOptions {\n  /**\n   * Color to use for the plane rotation gizmo\n   */\n  color?: Color3;\n}\n\n/**\n * Additional options for each rotation gizmo\n */\nexport interface RotationGizmoOptions {\n  /**\n   * When set, the gizmo will always appear the same size no matter where the camera is (default: true)\n   */\n  updateScale?: boolean;\n\n  /**\n   * Specific options for xGizmo\n   */\n  xOptions?: PlaneRotationGizmoOptions;\n\n  /**\n   * Specific options for yGizmo\n   */\n  yOptions?: PlaneRotationGizmoOptions;\n\n  /**\n   * Specific options for zGizmo\n   */\n  zOptions?: PlaneRotationGizmoOptions;\n}\n\n/**\n * Gizmo that enables rotating a mesh along 3 axis\n */\nexport class RotationGizmo extends Gizmo {\n  /**\n   * Internal gizmo used for interactions on the x axis\n   */\n  public xGizmo: PlaneRotationGizmo;\n  /**\n   * Internal gizmo used for interactions on the y axis\n   */\n  public yGizmo: PlaneRotationGizmo;\n  /**\n   * Internal gizmo used for interactions on the z axis\n   */\n  public zGizmo: PlaneRotationGizmo;\n\n  /** Fires an event when any of it's sub gizmos are dragged */\n  public onDragStartObservable = new Observable();\n  /** Fires an event when any of it's sub gizmos are released from dragging */\n  public onDragEndObservable = new Observable();\n\n  private _meshAttached: Nullable<AbstractMesh>;\n  private _nodeAttached: Nullable<Node>;\n  private _nodeAttacheds: Nullable<Node[]>;\n  private _observables: Observer<PointerInfo>[] = [];\n\n  /** Node Caching for quick lookup */\n  private _gizmoAxisCache: Map<Mesh, GizmoAxisCache> = new Map();\n\n  public get attachedMesh() {\n    return this._meshAttached;\n  }\n  public set attachedMesh(mesh: Nullable<AbstractMesh>) {\n    this._meshAttached = mesh;\n    this._nodeAttached = mesh;\n    this._checkBillboardTransform();\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedMesh = mesh;\n      } else {\n        gizmo.attachedMesh = null;\n      }\n    });\n  }\n\n  public get attachedNode() {\n    return this._nodeAttached;\n  }\n  public set attachedNode(node: Nullable<Node>) {\n    this._meshAttached = null;\n    this._nodeAttached = node;\n    this._checkBillboardTransform();\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedNode = node;\n      } else {\n        gizmo.attachedNode = null;\n      }\n    });\n  }\n  public get attachedNodes() {\n    return this._nodeAttacheds;\n  }\n  public set attachedNodes(node: Nullable<Node[]>) {\n    this._meshAttached = null;\n    this._nodeAttached = null;\n    this._nodeAttacheds = node;\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedNodes = node;\n      } else {\n        gizmo.attachedNodes = null;\n      }\n    });\n  }\n\n  protected _checkBillboardTransform() {\n    if (\n      this._nodeAttached &&\n      (<TransformNode>this._nodeAttached).billboardMode\n    ) {\n      console.log(\n        \"Rotation Gizmo will not work with transforms in billboard mode.\"\n      );\n    }\n  }\n\n  /**\n   * True when the mouse pointer is hovering a gizmo mesh\n   */\n  public get isHovered() {\n    let hovered = false;\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      hovered = hovered || gizmo.isHovered;\n    });\n    return hovered;\n  }\n\n  /**\n   * Creates a RotationGizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param tessellation Amount of tessellation to be used when creating rotation circles\n   * @param useEulerRotation Use and update Euler angle instead of quaternion\n   * @param thickness display gizmo axis thickness\n   * @param gizmoManager Gizmo manager\n   * @param options More options\n   */\n  constructor(\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    tessellation = 32,\n    useEulerRotation = false,\n    thickness: number = 1,\n    gizmoManager?: GizmoManager,\n    options?: RotationGizmoOptions\n  ) {\n    super(gizmoLayer);\n    const xColor =\n      options && options.xOptions && options.xOptions.color\n        ? options.xOptions.color\n        : Color3.Red().scale(0.5);\n    const yColor =\n      options && options.yOptions && options.yOptions.color\n        ? options.yOptions.color\n        : Color3.Green().scale(0.5);\n    const zColor =\n      options && options.zOptions && options.zOptions.color\n        ? options.zOptions.color\n        : Color3.Blue().scale(0.5);\n    this.xGizmo = new PlaneRotationGizmo(\n      new Vector3(1, 0, 0),\n      xColor,\n      gizmoLayer,\n      tessellation,\n      this,\n      useEulerRotation,\n      thickness\n    );\n    this.yGizmo = new PlaneRotationGizmo(\n      new Vector3(0, 1, 0),\n      yColor,\n      gizmoLayer,\n      tessellation,\n      this,\n      useEulerRotation,\n      thickness\n    );\n    this.zGizmo = new PlaneRotationGizmo(\n      new Vector3(0, 0, 1),\n      zColor,\n      gizmoLayer,\n      tessellation,\n      this,\n      useEulerRotation,\n      thickness\n    );\n    // Relay drag events and set update scale\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      //must set updateScale on each gizmo, as setting it on root RotationGizmo doesnt prevent individual gizmos from updating\n      //currently updateScale is a property with no getter/setter, so no good way to override behavior at runtime, so we will at least set it on startup\n      if (options && options.updateScale !== undefined) {\n        gizmo.updateScale = options.updateScale;\n      }\n      gizmo.dragBehavior.onDragStartObservable.add(() => {\n        this.onDragStartObservable.notifyObservers({});\n      });\n      gizmo.dragBehavior.onDragEndObservable.add(() => {\n        this.onDragEndObservable.notifyObservers({});\n      });\n    });\n\n    this.attachedMesh = null;\n    this.attachedNode = null;\n\n    if (gizmoManager) {\n      gizmoManager.addToAxisCache(this._gizmoAxisCache);\n    } else {\n      // Only subscribe to pointer event if gizmoManager isnt\n      Gizmo.GizmoAxisPointerObserver(gizmoLayer, this._gizmoAxisCache);\n    }\n  }\n\n  public set updateGizmoRotationToMatchAttachedMesh(value: boolean) {\n    if (this.xGizmo) {\n      this.xGizmo.updateGizmoRotationToMatchAttachedMesh = value;\n      this.yGizmo.updateGizmoRotationToMatchAttachedMesh = value;\n      this.zGizmo.updateGizmoRotationToMatchAttachedMesh = value;\n    }\n  }\n  public get updateGizmoRotationToMatchAttachedMesh() {\n    return this.xGizmo.updateGizmoRotationToMatchAttachedMesh;\n  }\n\n  /**\n   * Drag distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public set snapDistance(value: number) {\n    if (this.xGizmo) {\n      this.xGizmo.snapDistance = value;\n      this.yGizmo.snapDistance = value;\n      this.zGizmo.snapDistance = value;\n    }\n  }\n  public get snapDistance() {\n    return this.xGizmo.snapDistance;\n  }\n\n  /**\n   * Ratio for the scale of the gizmo (Default: 1)\n   */\n  public set scaleRatio(value: number) {\n    if (this.xGizmo) {\n      this.xGizmo.scaleRatio = value;\n      this.yGizmo.scaleRatio = value;\n      this.zGizmo.scaleRatio = value;\n    }\n  }\n  public get scaleRatio() {\n    return this.xGizmo.scaleRatio;\n  }\n\n  /**\n   * Builds Gizmo Axis Cache to enable features such as hover state preservation and graying out other axis during manipulation\n   * @param mesh Axis gizmo mesh\n   * @param cache Gizmo axis definition used for reactive gizmo UI\n   */\n  public addToAxisCache(mesh: Mesh, cache: GizmoAxisCache) {\n    this._gizmoAxisCache.set(mesh, cache);\n  }\n\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    this.xGizmo.dispose();\n    this.yGizmo.dispose();\n    this.zGizmo.dispose();\n    this.onDragStartObservable.clear();\n    this.onDragEndObservable.clear();\n    this._observables.forEach((obs) => {\n      this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(obs);\n    });\n  }\n\n  /**\n   * CustomMeshes are not supported by this gizmo\n   */\n  public setCustomMesh() {\n    console.error(\n      \"Custom meshes are not supported on this gizmo, please set the custom meshes on the gizmos contained within this one (gizmo.xGizmo, gizmo.yGizmo, gizmo.zGizmo)\"\n    );\n  }\n}\n","import { end } from \"@hc/aop\";\nimport {\n  AbstractMesh,\n  Color3,\n  CreateBox,\n  CreateCylinder,\n  CreatePlaneVertexData,\n  Gizmo,\n  GizmoAxisCache,\n  LinesMesh,\n  Matrix,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerDragBehavior,\n  PointerInfo,\n  StandardMaterial,\n  TransformNode,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\n\nimport { Gizmos } from \"./Gizmos\";\nimport { ScaleGizmo } from \"./ScaleGizmo\";\n/**\n * Single axis scale gizmo\n */\nexport class AxisScaleGizmo extends Gizmos {\n  /**\n   * Drag behavior responsible for the gizmos dragging interactions\n   */\n  public dragBehavior: PointerDragBehavior;\n  private _pointerObserver: Nullable<Observer<PointerInfo>> = null;\n  /**\n   * Scale distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public snapDistance = 0;\n  /**\n   * Event that fires each time the gizmo snaps to a new location.\n   * * snapDistance is the the change in distance\n   */\n  public onSnapObservable = new Observable<{ snapDistance: number }>();\n  /**\n   * If the scaling operation should be done on all axis (default: false)\n   */\n  public uniformScaling = false;\n  /**\n   * Custom sensitivity value for the drag strength\n   */\n  public sensitivity = 1;\n  /**\n   * The magnitude of the drag strength (scaling factor)\n   */\n  public dragScale = 1;\n\n  private _isEnabled: boolean = true;\n  private _parent: Nullable<ScaleGizmo> = null;\n\n  private _gizmoMesh: Mesh;\n  private _coloredMaterial: StandardMaterial;\n  private _hoverMaterial: StandardMaterial;\n  private _disableMaterial: StandardMaterial;\n  private _dragging: boolean = false;\n  private _tmpVector = new Vector3();\n  private _tmpMatrix = new Matrix();\n  private _tmpMatrix2 = new Matrix();\n\n  /**\n   * Creates an AxisScaleGizmo\n   * @param dragAxis The axis which the gizmo will be able to scale on\n   * @param color The color of the gizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param parent\n   * @param thickness display gizmo axis thickness\n   */\n  constructor(\n    dragAxis: Vector3,\n    color: Color3 = Color3.Gray(),\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    parent: Nullable<ScaleGizmo> = null,\n    thickness: number = 1\n  ) {\n    super(gizmoLayer);\n    this._parent = parent;\n    // Create Material\n    this._coloredMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._coloredMaterial.diffuseColor = color;\n    this._coloredMaterial.specularColor = color.subtract(\n      new Color3(0.1, 0.1, 0.1)\n    );\n\n    this._hoverMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._hoverMaterial.diffuseColor = Color3.Yellow();\n\n    this._disableMaterial = new StandardMaterial(\n      \"\",\n      gizmoLayer.utilityLayerScene\n    );\n    this._disableMaterial.diffuseColor = Color3.Gray();\n    this._disableMaterial.alpha = 0.4;\n\n    // Build mesh + Collider\n    this._gizmoMesh = new Mesh(\"axis\", gizmoLayer.utilityLayerScene);\n    const { arrowMesh, arrowTail } = this._createGizmoMesh(\n      this._gizmoMesh,\n      thickness\n    );\n    const collider = this._createGizmoMesh(\n      this._gizmoMesh,\n      thickness + 4,\n      true\n    );\n\n    this._gizmoMesh.lookAt(this._rootMesh.position.add(dragAxis));\n    this._rootMesh.addChild(this._gizmoMesh, Gizmo.PreserveScaling);\n    this._gizmoMesh.scaling.scaleInPlace(1 / 3);\n\n    // Closure of initial prop values for resetting\n    const nodePosition = arrowMesh.position.clone();\n    const linePosition = arrowTail.position.clone();\n    const lineScale = arrowTail.scaling.clone();\n\n    const increaseGizmoMesh = (dragDistance: number) => {\n      const dragStrength =\n        dragDistance * (3 / this._rootMesh.scaling.length()) * 6;\n\n      arrowMesh.position.z += dragStrength / 3.5;\n      arrowTail.scaling.y += dragStrength;\n      this.dragScale = arrowTail.scaling.y;\n      arrowTail.position.z = arrowMesh.position.z / 2;\n    };\n\n    const resetGizmoMesh = () => {\n      arrowMesh.position.set(nodePosition.x, nodePosition.y, nodePosition.z);\n      arrowTail.position.set(linePosition.x, linePosition.y, linePosition.z);\n      arrowTail.scaling.set(lineScale.x, lineScale.y, lineScale.z);\n      this.dragScale = arrowTail.scaling.y;\n      this._dragging = false;\n      this.resetNodesPovits(this.attachedNodes);\n    };\n\n    // Add drag behavior to handle events when the gizmo is dragged\n    this.dragBehavior = new PointerDragBehavior({ dragAxis: dragAxis });\n\n    let dispose = end(this.dragBehavior, this.dragBehavior.attach, () => {\n      const mesh = this.dragBehavior[\"_dragPlane\"];\n      const plane = CreatePlaneVertexData({\n        size: 1e8,\n        sideOrientation: Mesh.DOUBLESIDE,\n      });\n      plane.applyToMesh(mesh, false);\n      dispose();\n      dispose = null;\n    });\n\n    this.dragBehavior.moveAttached = false;\n    this.dragBehavior.updateDragPlane = false;\n    this._rootMesh.addBehavior(this.dragBehavior);\n\n    let currentSnapDragDistance = 0;\n    const tmpVector = new Vector3();\n    const tmpSnapEvent = { snapDistance: 0 };\n    this.dragBehavior.onDragObservable.add((event) => {\n      let nodes = this.AttachedNodes;\n\n      if (this.attachedNode) {\n        this._handlePivot();\n      } else this._handlePivots();\n\n      if (nodes) {\n        // Drag strength is modified by the scale of the gizmo (eg. for small objects like boombox the strength will be increased to match the behavior of larger objects)\n        const dragStrength =\n          this.sensitivity *\n          event.dragDistance *\n          ((this.scaleRatio * 3) / this._rootMesh.scaling.length());\n\n        // Snapping logic\n        let snapped = false;\n        let dragSteps = 0;\n        if (this.uniformScaling) {\n          tmpVector.setAll(0.57735); // 1 / sqrt(3)\n        } else {\n          tmpVector.copyFrom(dragAxis);\n        }\n        if (this.snapDistance === 0) {\n          tmpVector.scaleToRef(dragStrength, tmpVector);\n        } else {\n          currentSnapDragDistance += dragStrength;\n          if (Math.abs(currentSnapDragDistance) > this.snapDistance) {\n            dragSteps = Math.floor(\n              Math.abs(currentSnapDragDistance) / this.snapDistance\n            );\n            if (currentSnapDragDistance < 0) {\n              dragSteps *= -1;\n            }\n            currentSnapDragDistance =\n              currentSnapDragDistance % this.snapDistance;\n            tmpVector.scaleToRef(this.snapDistance * dragSteps, tmpVector);\n            snapped = true;\n          } else {\n            tmpVector.scaleInPlace(0);\n          }\n        }\n\n        Matrix.ScalingToRef(\n          1 + tmpVector.x,\n          1 + tmpVector.y,\n          1 + tmpVector.z,\n          this._tmpMatrix2\n        );\n\n        for (const node of nodes) {\n          this._tmpMatrix2.multiplyToRef(\n            node.getWorldMatrix(),\n            this._tmpMatrix\n          );\n          const transformNode = (<Mesh>node)._isMesh\n            ? (node as TransformNode)\n            : undefined;\n          this._tmpMatrix.decompose(\n            this._tmpVector,\n            undefined,\n            undefined,\n            Gizmo.PreserveScaling ? transformNode : undefined\n          );\n\n          const maxScale = 100000;\n          if (\n            Math.abs(this._tmpVector.x) < maxScale &&\n            Math.abs(this._tmpVector.y) < maxScale &&\n            Math.abs(this._tmpVector.z) < maxScale\n          ) {\n            node.getWorldMatrix().copyFrom(this._tmpMatrix);\n          }\n\n          if (snapped) {\n            tmpSnapEvent.snapDistance = this.snapDistance * dragSteps;\n            this.onSnapObservable.notifyObservers(tmpSnapEvent);\n          }\n          //@ts-ignore\n          this._attachedNode = node;\n          this._matrixChanged();\n        }\n        if (this.attachedNodes) {\n          //@ts-ignore\n          this._attachedNode = null;\n        }\n      }\n    });\n    // On Drag Listener: to move gizmo mesh with user action\n    this.dragBehavior.onDragStartObservable.add(() => {\n      this._dragging = true;\n      this.setNodesPovits(this.attachedNodes);\n    });\n    this.dragBehavior.onDragObservable.add((e) =>\n      increaseGizmoMesh(e.dragDistance)\n    );\n    this.dragBehavior.onDragEndObservable.add(resetGizmoMesh);\n\n    // Listeners for Universal Scalar\n    parent?.uniformScaleGizmo?.dragBehavior?.onDragObservable?.add((e) =>\n      increaseGizmoMesh(e.delta.y)\n    );\n    parent?.uniformScaleGizmo?.dragBehavior?.onDragEndObservable?.add(\n      resetGizmoMesh\n    );\n\n    const cache: GizmoAxisCache = {\n      gizmoMeshes: [arrowMesh, arrowTail],\n      colliderMeshes: [collider.arrowMesh, collider.arrowTail],\n      material: this._coloredMaterial,\n      hoverMaterial: this._hoverMaterial,\n      disableMaterial: this._disableMaterial,\n      active: false,\n      dragBehavior: this.dragBehavior,\n    };\n    this._parent?.addToAxisCache(this._gizmoMesh, cache);\n\n    this._pointerObserver =\n      gizmoLayer.utilityLayerScene.onPointerObservable.add((pointerInfo) => {\n        if (this._customMeshSet) {\n          return;\n        }\n        this._isHovered = !!(\n          cache.colliderMeshes.indexOf(\n            <Mesh>pointerInfo?.pickInfo?.pickedMesh\n          ) !== -1\n        );\n        if (!this._parent) {\n          const material = this.dragBehavior.enabled\n            ? this._isHovered || this._dragging\n              ? this._hoverMaterial\n              : this._coloredMaterial\n            : this._disableMaterial;\n          this._setGizmoMeshMaterial(cache.gizmoMeshes, material);\n        }\n      });\n\n    this.dragBehavior.onEnabledObservable.add((newState) => {\n      this._setGizmoMeshMaterial(\n        cache.gizmoMeshes,\n        newState ? this._coloredMaterial : this._disableMaterial\n      );\n    });\n\n    const light = gizmoLayer._getSharedGizmoLight();\n    light.includedOnlyMeshes = light.includedOnlyMeshes.concat(\n      this._rootMesh.getChildMeshes()\n    );\n  }\n\n  /**\n   * Create Geometry for Gizmo\n   * @param parentMesh\n   * @param thickness\n   * @param isCollider\n   */\n  private _createGizmoMesh(\n    parentMesh: AbstractMesh,\n    thickness: number,\n    isCollider = false\n  ) {\n    const arrowMesh = CreateBox(\n      \"yPosMesh\",\n      { size: 0.4 * (1 + (thickness - 1) / 4) },\n      this.gizmoLayer.utilityLayerScene\n    );\n    const arrowTail = CreateCylinder(\n      \"cylinder\",\n      {\n        diameterTop: 0.005 * thickness,\n        height: 0.275,\n        diameterBottom: 0.005 * thickness,\n        tessellation: 96,\n      },\n      this.gizmoLayer.utilityLayerScene\n    );\n\n    // Position arrow pointing in its drag axis\n    arrowMesh.scaling.scaleInPlace(0.1);\n    arrowMesh.material = this._coloredMaterial;\n    arrowMesh.rotation.x = Math.PI / 2;\n    arrowMesh.position.z += 0.3;\n\n    arrowTail.material = this._coloredMaterial;\n    arrowTail.position.z += 0.275 / 2;\n    arrowTail.rotation.x = Math.PI / 2;\n\n    if (isCollider) {\n      arrowMesh.visibility = 0;\n      arrowTail.visibility = 0;\n    }\n\n    parentMesh.addChild(arrowMesh);\n    parentMesh.addChild(arrowTail);\n\n    return { arrowMesh, arrowTail };\n  }\n\n  protected _attachedNodeChanged(value: Nullable<Node>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = value ? true : false;\n    }\n  }\n  protected _attachedNodesChanged(value: Nullable<Node[]>) {\n    if (this.dragBehavior) {\n      this.dragBehavior.enabled = !!value;\n    }\n  }\n  /**\n   * If the gizmo is enabled\n   */\n  public set isEnabled(value: boolean) {\n    this._isEnabled = value;\n    if (!value) {\n      this.attachedMesh = null;\n      this.attachedNode = null;\n    } else {\n      if (this._parent) {\n        this.attachedMesh = this._parent.attachedMesh;\n        this.attachedNode = this._parent.attachedNode;\n      }\n    }\n  }\n  public get isEnabled(): boolean {\n    return this._isEnabled;\n  }\n\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    this.onSnapObservable.clear();\n    this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(\n      this._pointerObserver\n    );\n    this.dragBehavior.detach();\n    if (this._gizmoMesh) {\n      this._gizmoMesh.dispose();\n    }\n    [this._coloredMaterial, this._hoverMaterial, this._disableMaterial].forEach(\n      (matl) => {\n        if (matl) {\n          matl.dispose();\n        }\n      }\n    );\n    super.dispose();\n  }\n\n  /**\n   * Disposes and replaces the current meshes in the gizmo with the specified mesh\n   * @param mesh The mesh to replace the default mesh of the gizmo\n   * @param useGizmoMaterial If the gizmo's default material should be used (default: false)\n   */\n  public setCustomMesh(mesh: Mesh, useGizmoMaterial: boolean = false) {\n    super.setCustomMesh(mesh);\n    if (useGizmoMaterial) {\n      this._rootMesh.getChildMeshes().forEach((m) => {\n        m.material = this._coloredMaterial;\n        if ((<LinesMesh>m).color) {\n          (<LinesMesh>m).color = this._coloredMaterial.diffuseColor;\n        }\n      });\n      this._customMeshSet = false;\n    }\n  }\n}\n","import {\n  AbstractMesh,\n  Color3,\n  CreatePolyhedron,\n  Gizmo,\n  GizmoAxisCache,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerInfo,\n  StandardMaterial,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\nimport { AxisScaleGizmo } from \"./AxisScaleGizmo\";\n\n/**\n * Gizmo that enables scaling a mesh along 3 axis\n */\nexport class ScaleGizmo extends Gizmo {\n  /**\n   * Internal gizmo used for interactions on the x axis\n   */\n  public xGizmo: AxisScaleGizmo;\n  /**\n   * Internal gizmo used for interactions on the y axis\n   */\n  public yGizmo: AxisScaleGizmo;\n  /**\n   * Internal gizmo used for interactions on the z axis\n   */\n  public zGizmo: AxisScaleGizmo;\n\n  /**\n   * Internal gizmo used to scale all axis equally\n   */\n  public uniformScaleGizmo: AxisScaleGizmo;\n\n  private _meshAttached: Nullable<AbstractMesh> = null;\n  private _nodeAttached: Nullable<Node> = null;\n  private _nodeAttacheds: Nullable<Node[]>;\n  private _snapDistance: number;\n  private _uniformScalingMesh: Mesh;\n  private _octahedron: Mesh;\n  private _sensitivity: number = 1;\n  private _coloredMaterial: StandardMaterial;\n  private _hoverMaterial: StandardMaterial;\n  private _disableMaterial: StandardMaterial;\n  private _observables: Observer<PointerInfo>[] = [];\n\n  /** Node Caching for quick lookup */\n  private _gizmoAxisCache: Map<Mesh, GizmoAxisCache> = new Map();\n\n  /** Fires an event when any of it's sub gizmos are dragged */\n  public onDragStartObservable = new Observable();\n  /** Fires an event when any of it's sub gizmos are released from dragging */\n  public onDragEndObservable = new Observable();\n\n  public get attachedMesh() {\n    return this._meshAttached;\n  }\n  public set attachedMesh(mesh: Nullable<AbstractMesh>) {\n    this._meshAttached = mesh;\n    this._nodeAttached = mesh;\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo.isEnabled) {\n          gizmo.attachedMesh = mesh;\n        } else {\n          gizmo.attachedMesh = null;\n        }\n      }\n    );\n  }\n\n  public get attachedNode() {\n    return this._nodeAttached;\n  }\n  public set attachedNode(node: Nullable<Node>) {\n    this._meshAttached = null;\n    this._nodeAttached = node;\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo.isEnabled) {\n          gizmo.attachedNode = node;\n        } else {\n          gizmo.attachedNode = null;\n        }\n      }\n    );\n  }\n  public get attachedNodes() {\n    return this._nodeAttacheds;\n  }\n  public set attachedNodes(node: Nullable<Node[]>) {\n    this._meshAttached = null;\n    this._nodeAttached = null;\n    this._nodeAttacheds = node;\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      if (gizmo.isEnabled) {\n        gizmo.attachedNodes = node;\n      } else {\n        gizmo.attachedNodes = null;\n      }\n    });\n  }\n\n  /**\n   * True when the mouse pointer is hovering a gizmo mesh\n   */\n  public get isHovered() {\n    let hovered = false;\n    [this.xGizmo, this.yGizmo, this.zGizmo].forEach((gizmo) => {\n      hovered = hovered || gizmo.isHovered;\n    });\n    return hovered;\n  }\n\n  /**\n   * Creates a ScaleGizmo\n   * @param gizmoLayer The utility layer the gizmo will be added to\n   * @param thickness display gizmo axis thickness\n   * @param gizmoManager\n   */\n  constructor(\n    gizmoLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    thickness: number = 1,\n    gizmoManager?\n  ) {\n    super(gizmoLayer);\n    this.uniformScaleGizmo = this._createUniformScaleMesh();\n    this.xGizmo = new AxisScaleGizmo(\n      new Vector3(1, 0, 0),\n      Color3.Red().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n    this.yGizmo = new AxisScaleGizmo(\n      new Vector3(0, 1, 0),\n      Color3.Green().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n    this.zGizmo = new AxisScaleGizmo(\n      new Vector3(0, 0, 1),\n      Color3.Blue().scale(0.5),\n      gizmoLayer,\n      this,\n      thickness\n    );\n\n    // Relay drag events\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        gizmo.dragBehavior.onDragStartObservable.add(() => {\n          this.onDragStartObservable.notifyObservers({});\n        });\n        gizmo.dragBehavior.onDragEndObservable.add(() => {\n          this.onDragEndObservable.notifyObservers({});\n        });\n      }\n    );\n\n    this.attachedMesh = null;\n    this.attachedNode = null;\n\n    if (gizmoManager) {\n      gizmoManager.addToAxisCache(this._gizmoAxisCache);\n    } else {\n      // Only subscribe to pointer event if gizmoManager isnt\n      Gizmo.GizmoAxisPointerObserver(gizmoLayer, this._gizmoAxisCache);\n    }\n  }\n\n  /** Create Geometry for Gizmo */\n  private _createUniformScaleMesh(): AxisScaleGizmo {\n    this._coloredMaterial = new StandardMaterial(\n      \"\",\n      this.gizmoLayer.utilityLayerScene\n    );\n    this._coloredMaterial.diffuseColor = Color3.Gray();\n\n    this._hoverMaterial = new StandardMaterial(\n      \"\",\n      this.gizmoLayer.utilityLayerScene\n    );\n    this._hoverMaterial.diffuseColor = Color3.Yellow();\n\n    this._disableMaterial = new StandardMaterial(\n      \"\",\n      this.gizmoLayer.utilityLayerScene\n    );\n    this._disableMaterial.diffuseColor = Color3.Gray();\n    this._disableMaterial.alpha = 0.4;\n\n    const uniformScaleGizmo = new AxisScaleGizmo(\n      new Vector3(0, 1, 0),\n      Color3.Gray().scale(0.5),\n      this.gizmoLayer,\n      this\n    );\n    uniformScaleGizmo.updateGizmoRotationToMatchAttachedMesh = false;\n    uniformScaleGizmo.uniformScaling = true;\n    this._uniformScalingMesh = CreatePolyhedron(\n      \"uniform\",\n      { type: 1 },\n      uniformScaleGizmo.gizmoLayer.utilityLayerScene\n    );\n    this._uniformScalingMesh.scaling.scaleInPlace(0.01);\n    this._uniformScalingMesh.visibility = 0;\n    this._octahedron = CreatePolyhedron(\n      \"\",\n      { type: 1 },\n      uniformScaleGizmo.gizmoLayer.utilityLayerScene\n    );\n    this._octahedron.scaling.scaleInPlace(0.007);\n    this._uniformScalingMesh.addChild(this._octahedron);\n    uniformScaleGizmo.setCustomMesh(this._uniformScalingMesh, true);\n    const light = this.gizmoLayer._getSharedGizmoLight();\n    light.includedOnlyMeshes = light.includedOnlyMeshes.concat(\n      this._octahedron\n    );\n\n    const cache: GizmoAxisCache = {\n      gizmoMeshes: [this._octahedron, this._uniformScalingMesh],\n      colliderMeshes: [this._uniformScalingMesh],\n      material: this._coloredMaterial,\n      hoverMaterial: this._hoverMaterial,\n      disableMaterial: this._disableMaterial,\n      active: false,\n      dragBehavior: uniformScaleGizmo.dragBehavior,\n    };\n\n    this.addToAxisCache(uniformScaleGizmo._rootMesh, cache);\n\n    return uniformScaleGizmo;\n  }\n\n  public set updateGizmoRotationToMatchAttachedMesh(value: boolean) {\n    if (!value) {\n      console.warn(\n        \"Setting updateGizmoRotationToMatchAttachedMesh = false on scaling gizmo is not supported.\"\n      );\n    } else {\n      this._updateGizmoRotationToMatchAttachedMesh = value;\n      [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n        (gizmo) => {\n          if (gizmo) {\n            gizmo.updateGizmoRotationToMatchAttachedMesh = value;\n          }\n        }\n      );\n    }\n  }\n  public get updateGizmoRotationToMatchAttachedMesh() {\n    return this._updateGizmoRotationToMatchAttachedMesh;\n  }\n\n  /**\n   * Drag distance in babylon units that the gizmo will snap to when dragged (Default: 0)\n   */\n  public set snapDistance(value: number) {\n    this._snapDistance = value;\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo) {\n          gizmo.snapDistance = value;\n        }\n      }\n    );\n  }\n  public get snapDistance() {\n    return this._snapDistance;\n  }\n\n  /**\n   * Ratio for the scale of the gizmo (Default: 1)\n   */\n  public set scaleRatio(value: number) {\n    this._scaleRatio = value;\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo) {\n          gizmo.scaleRatio = value;\n        }\n      }\n    );\n  }\n  public get scaleRatio() {\n    return this._scaleRatio;\n  }\n\n  /**\n   * Sensitivity factor for dragging (Default: 1)\n   */\n  public set sensitivity(value: number) {\n    this._sensitivity = value;\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo) {\n          gizmo.sensitivity = value;\n        }\n      }\n    );\n  }\n  public get sensitivity() {\n    return this._sensitivity;\n  }\n\n  /**\n   * Builds Gizmo Axis Cache to enable features such as hover state preservation and graying out other axis during manipulation\n   * @param mesh Axis gizmo mesh\n   * @param cache Gizmo axis definition used for reactive gizmo UI\n   */\n  public addToAxisCache(mesh: Mesh, cache: GizmoAxisCache) {\n    this._gizmoAxisCache.set(mesh, cache);\n  }\n\n  /**\n   * Disposes of the gizmo\n   */\n  public dispose() {\n    [this.xGizmo, this.yGizmo, this.zGizmo, this.uniformScaleGizmo].forEach(\n      (gizmo) => {\n        if (gizmo) {\n          gizmo.dispose();\n        }\n      }\n    );\n    this._observables.forEach((obs) => {\n      this.gizmoLayer.utilityLayerScene.onPointerObservable.remove(obs);\n    });\n    this.onDragStartObservable.clear();\n    this.onDragEndObservable.clear();\n    [this._uniformScalingMesh, this._octahedron].forEach((msh) => {\n      if (msh) {\n        msh.dispose();\n      }\n    });\n    [this._coloredMaterial, this._hoverMaterial, this._disableMaterial].forEach(\n      (matl) => {\n        if (matl) {\n          matl.dispose();\n        }\n      }\n    );\n  }\n}\n","import {\n  AbstractMesh,\n  BoundingBoxGizmo,\n  Color3,\n  Gizmo,\n  GizmoAxisCache,\n  IDisposable,\n  Mesh,\n  Node,\n  Nullable,\n  Observable,\n  Observer,\n  PointerEventTypes,\n  PointerInfo,\n  Scene,\n  SixDofDragBehavior,\n  UtilityLayerRenderer,\n} from \"../../babylon\";\nimport { PositionGizmo } from \"./PositionGizmo\";\nimport { RotationGizmo } from \"./RotationGizmo\";\nimport { ScaleGizmo } from \"./ScaleGizmo\";\n\n/**\n * Helps setup gizmo's in the scene to rotate/scale/position nodes\n */\nexport class GizmoManager implements IDisposable {\n  /**\n   * Gizmo's created by the gizmo manager, gizmo will be null until gizmo has been enabled for the first time\n   */\n  public gizmos: {\n    positionGizmo: Nullable<PositionGizmo>;\n    rotationGizmo: Nullable<RotationGizmo>;\n    scaleGizmo: Nullable<ScaleGizmo>;\n    boundingBoxGizmo: Nullable<BoundingBoxGizmo>;\n  };\n\n  /** When true, the gizmo will be detached from the current object when a pointer down occurs with an empty picked mesh */\n  public clearGizmoOnEmptyPointerEvent = false;\n\n  /** When true (default), picking to attach a new mesh is enabled. This works in sync with inspector autopicking. */\n  public enableAutoPicking = true;\n\n  /** Fires an event when the manager is attached to a mesh */\n  public onAttachedToMeshObservable = new Observable<Nullable<AbstractMesh>>();\n\n  /** Fires an event when the manager is attached to a node */\n  public onAttachedToNodeObservable = new Observable<Nullable<Node | Node[]>>();\n\n  private _gizmosEnabled = {\n    positionGizmo: false,\n    rotationGizmo: false,\n    scaleGizmo: false,\n    boundingBoxGizmo: false,\n  };\n  private _pointerObservers: Observer<PointerInfo>[] = [];\n  private _attachedMesh: Nullable<AbstractMesh> = null;\n  private _attachedNode: Nullable<Node> = null;\n  private _attachedNodes: Nullable<Node[]> = null;\n  private _boundingBoxColor = Color3.FromHexString(\"#0984e3\");\n  private _defaultUtilityLayer: UtilityLayerRenderer;\n  private _defaultKeepDepthUtilityLayer: UtilityLayerRenderer;\n  private _thickness: number = 1;\n  private _scaleRatio: number = 1;\n\n  /** Node Caching for quick lookup */\n  private _gizmoAxisCache: Map<Mesh, GizmoAxisCache> = new Map();\n  /**\n   * When bounding box gizmo is enabled, this can be used to track drag/end events\n   */\n  public boundingBoxDragBehavior = new SixDofDragBehavior();\n  /**\n   * Array of meshes which will have the gizmo attached when a pointer selected them. If null, all meshes are attachable. (Default: null)\n   */\n  public attachableMeshes: Nullable<Array<AbstractMesh>> = null;\n  /**\n   * Array of nodes which will have the gizmo attached when a pointer selected them. If null, all nodes are attachable. (Default: null)\n   */\n  public attachableNodes: Nullable<Array<Node>> = null;\n  /**\n   * If pointer events should perform attaching/detaching a gizmo, if false this can be done manually via attachToMesh/attachToNode. (Default: true)\n   */\n  public usePointerToAttachGizmos = true;\n\n  /**\n   * Utility layer that the bounding box gizmo belongs to\n   */\n  public get keepDepthUtilityLayer() {\n    return this._defaultKeepDepthUtilityLayer;\n  }\n\n  /**\n   * Utility layer that all gizmos besides bounding box belong to\n   */\n  public get utilityLayer() {\n    return this._defaultUtilityLayer;\n  }\n\n  /**\n   * True when the mouse pointer is hovering a gizmo mesh\n   */\n  public get isHovered() {\n    let hovered = false;\n    for (const key in this.gizmos) {\n      const gizmo = <Nullable<Gizmo>>(<any>this.gizmos)[key];\n      if (gizmo && gizmo.isHovered) {\n        hovered = true;\n        break;\n      }\n    }\n    return hovered;\n  }\n\n  /**\n   * Ratio for the scale of the gizmo (Default: 1)\n   */\n  public set scaleRatio(value: number) {\n    this._scaleRatio = value;\n    [\n      this.gizmos.positionGizmo,\n      this.gizmos.rotationGizmo,\n      this.gizmos.scaleGizmo,\n    ].forEach((gizmo) => {\n      if (gizmo) {\n        gizmo.scaleRatio = value;\n      }\n    });\n  }\n  public get scaleRatio() {\n    return this._scaleRatio;\n  }\n\n  /**\n   * Instantiates a gizmo manager\n   * @param _scene the scene to overlay the gizmos on top of\n   * @param thickness display gizmo axis thickness\n   * @param utilityLayer the layer where gizmos are rendered\n   * @param keepDepthUtilityLayer the layer where occluded gizmos are rendered\n   */\n  constructor(\n    private _scene: Scene,\n    thickness: number = 1,\n    utilityLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultUtilityLayer,\n    keepDepthUtilityLayer: UtilityLayerRenderer = UtilityLayerRenderer.DefaultKeepDepthUtilityLayer\n  ) {\n    this._defaultUtilityLayer = utilityLayer;\n    this._defaultKeepDepthUtilityLayer = keepDepthUtilityLayer;\n    this._defaultKeepDepthUtilityLayer.utilityLayerScene.autoClearDepthAndStencil =\n      false;\n    this._thickness = thickness;\n    this.gizmos = {\n      positionGizmo: null,\n      rotationGizmo: null,\n      scaleGizmo: null,\n      boundingBoxGizmo: null,\n    };\n\n    const attachToMeshPointerObserver =\n      this._attachToMeshPointerObserver(_scene);\n    const gizmoAxisPointerObserver = Gizmo.GizmoAxisPointerObserver(\n      this._defaultUtilityLayer,\n      this._gizmoAxisCache\n    );\n    this._pointerObservers = [\n      attachToMeshPointerObserver,\n      gizmoAxisPointerObserver,\n    ];\n  }\n\n  /**\n   * Subscribes to pointer down events, for attaching and detaching mesh\n   * @param scene The scene layer the observer will be added to\n   */\n  private _attachToMeshPointerObserver(scene: Scene): Observer<PointerInfo> {\n    // Instantiate/dispose gizmos based on pointer actions\n    const pointerObserver = scene.onPointerObservable.add((pointerInfo) => {\n      if (!this.usePointerToAttachGizmos) {\n        return;\n      }\n      if (pointerInfo.type === PointerEventTypes.POINTERDOWN) {\n        if (pointerInfo.pickInfo && pointerInfo.pickInfo.pickedMesh) {\n          if (this.enableAutoPicking) {\n            let node: Nullable<Node> = pointerInfo.pickInfo.pickedMesh;\n            if (this.attachableMeshes === null) {\n              // Attach to the most parent node\n              while (node && node.parent !== null) {\n                node = node.parent;\n              }\n            } else {\n              // Attach to the parent node that is an attachableMesh\n              let found = false;\n              this.attachableMeshes.forEach((mesh) => {\n                if (node && (node === mesh || node.isDescendantOf(mesh))) {\n                  node = mesh;\n                  found = true;\n                }\n              });\n              if (!found) {\n                node = null;\n              }\n            }\n            if (node instanceof AbstractMesh) {\n              if (this._attachedMesh !== node) {\n                this.attachToMesh(node);\n              }\n            } else {\n              if (this.clearGizmoOnEmptyPointerEvent) {\n                this.attachToMesh(null);\n              }\n            }\n          }\n        } else {\n          if (this.clearGizmoOnEmptyPointerEvent) {\n            this.attachToMesh(null);\n          }\n        }\n      }\n    });\n    return pointerObserver!;\n  }\n\n  /**\n   * Attaches a set of gizmos to the specified mesh\n   * @param mesh The mesh the gizmo's should be attached to\n   */\n  public attachToMesh(mesh: Nullable<AbstractMesh>) {\n    if (this._attachedMesh) {\n      this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    if (this._attachedNode) {\n      this._attachedNode.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    this._attachedMesh = mesh;\n    this._attachedNode = null;\n    for (const key in this.gizmos) {\n      const gizmo = <Nullable<Gizmo>>(<any>this.gizmos)[key];\n      if (gizmo && (<any>this._gizmosEnabled)[key]) {\n        gizmo.attachedMesh = mesh;\n      }\n    }\n    if (this.boundingBoxGizmoEnabled && this._attachedMesh) {\n      this._attachedMesh.addBehavior(this.boundingBoxDragBehavior);\n    }\n    this.onAttachedToMeshObservable.notifyObservers(mesh);\n  }\n\n  /**\n   * Attaches a set of gizmos to the specified node\n   * @param node The node the gizmo's should be attached to\n   */\n  public attachToNode(node: Nullable<Node>) {\n    if (this._attachedMesh) {\n      this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    if (this._attachedNode) {\n      this._attachedNode.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    if (this._attachedNodes) {\n      this._attachedNodes.forEach((n) =>\n        n.removeBehavior(this.boundingBoxDragBehavior)\n      );\n    }\n    this._attachedMesh = null;\n    this._attachedNodes = null;\n    this._attachedNode = node;\n\n    for (const key in this.gizmos) {\n      const gizmo = <Nullable<Gizmo>>(<any>this.gizmos)[key];\n      if (gizmo && (<any>this._gizmosEnabled)[key]) {\n        gizmo.attachedNode = node;\n      }\n    }\n    if (this.boundingBoxGizmoEnabled && this._attachedNode) {\n      this._attachedNode.addBehavior(this.boundingBoxDragBehavior);\n    }\n    this.onAttachedToNodeObservable.notifyObservers(node);\n  }\n  public attachToNodes(nodes: Nullable<Node[]>) {\n    if (!nodes?.length) {\n      this._attachedNodes = null;\n      this.attachToNode(null);\n      return;\n    }\n    if (nodes?.length === 1) {\n      this.attachToNode(nodes[0]);\n      return;\n    }\n    if (this._attachedMesh) {\n      this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    if (this._attachedNode) {\n      this._attachedNode.removeBehavior(this.boundingBoxDragBehavior);\n    }\n    if (this._attachedNodes) {\n      this._attachedNodes.forEach((n) =>\n        n.removeBehavior(this.boundingBoxDragBehavior)\n      );\n    }\n\n    this._attachedMesh = null;\n    this._attachedNode = null;\n    this._attachedNodes = nodes;\n\n    for (const key in this.gizmos) {\n      const gizmo = <Nullable<Gizmo>>(<any>this.gizmos)[key];\n      if (gizmo && (<any>this._gizmosEnabled)[key]) {\n        if (\"attachedNodes\" in gizmo) {\n          gizmo[\"attachedNodes\"] = nodes;\n        } else {\n          gizmo.attachedNode = nodes[0];\n        }\n      }\n    }\n    if (this.boundingBoxGizmoEnabled && this._attachedNode) {\n      this._attachedNode.addBehavior(this.boundingBoxDragBehavior);\n    }\n    this.onAttachedToNodeObservable.notifyObservers(nodes);\n  }\n\n  /**\n   * If the position gizmo is enabled\n   */\n  public set positionGizmoEnabled(value: boolean) {\n    if (value) {\n      if (!this.gizmos.positionGizmo) {\n        this.gizmos.positionGizmo = new PositionGizmo(\n          this._defaultUtilityLayer,\n          this._thickness,\n          this\n        );\n      }\n      if (this._attachedNode) {\n        this.gizmos.positionGizmo.attachedNode = this._attachedNode;\n      } else if (this._attachedNodes) {\n        this.gizmos.positionGizmo.attachedNodes = this._attachedNodes;\n      } else {\n        this.gizmos.positionGizmo.attachedMesh = this._attachedMesh;\n      }\n    } else if (this.gizmos.positionGizmo) {\n      this.gizmos.positionGizmo.attachedNode = null;\n      this.gizmos.positionGizmo.attachedNodes = null;\n    }\n    this._gizmosEnabled.positionGizmo = value;\n  }\n  public get positionGizmoEnabled(): boolean {\n    return this._gizmosEnabled.positionGizmo;\n  }\n  /**\n   * If the rotation gizmo is enabled\n   */\n  public set rotationGizmoEnabled(value: boolean) {\n    if (value) {\n      if (!this.gizmos.rotationGizmo) {\n        this.gizmos.rotationGizmo = new RotationGizmo(\n          this._defaultUtilityLayer,\n          32,\n          false,\n          this._thickness,\n          this as any\n        );\n      }\n      if (this._attachedNode) {\n        this.gizmos.rotationGizmo.attachedNode = this._attachedNode;\n      } else if (this._attachedNodes) {\n        this.gizmos.rotationGizmo.attachedNodes = this._attachedNodes;\n      } else {\n        this.gizmos.rotationGizmo.attachedMesh = this._attachedMesh;\n      }\n    } else if (this.gizmos.rotationGizmo) {\n      this.gizmos.rotationGizmo.attachedNode = null;\n      this.gizmos.rotationGizmo.attachedNodes = null;\n    }\n    this._gizmosEnabled.rotationGizmo = value;\n  }\n  public get rotationGizmoEnabled(): boolean {\n    return this._gizmosEnabled.rotationGizmo;\n  }\n  /**\n   * If the scale gizmo is enabled\n   */\n  public set scaleGizmoEnabled(value: boolean) {\n    if (value) {\n      this.gizmos.scaleGizmo =\n        this.gizmos.scaleGizmo ||\n        new ScaleGizmo(this._defaultUtilityLayer, this._thickness, this as any);\n      if (this._attachedNode) {\n        this.gizmos.scaleGizmo.attachedNode = this._attachedNode;\n      } else if (this._attachedNodes) {\n        this.gizmos.scaleGizmo.attachedNodes = this._attachedNodes;\n      } else {\n        this.gizmos.scaleGizmo.attachedMesh = this._attachedMesh;\n      }\n    } else if (this.gizmos.scaleGizmo) {\n      this.gizmos.scaleGizmo.attachedNode = null;\n      this.gizmos.scaleGizmo.attachedNodes = null;\n    }\n    this._gizmosEnabled.scaleGizmo = value;\n  }\n  public get scaleGizmoEnabled(): boolean {\n    return this._gizmosEnabled.scaleGizmo;\n  }\n  /**\n   * If the boundingBox gizmo is enabled\n   */\n  public set boundingBoxGizmoEnabled(value: boolean) {\n    if (value) {\n      this.gizmos.boundingBoxGizmo =\n        this.gizmos.boundingBoxGizmo ||\n        new BoundingBoxGizmo(\n          this._boundingBoxColor,\n          this._defaultKeepDepthUtilityLayer\n        );\n      if (this._attachedMesh) {\n        this.gizmos.boundingBoxGizmo.attachedMesh = this._attachedMesh;\n      } else {\n        this.gizmos.boundingBoxGizmo.attachedNode = this._attachedNode;\n      }\n\n      if (this._attachedMesh) {\n        this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior);\n        this._attachedMesh.addBehavior(this.boundingBoxDragBehavior);\n      } else if (this._attachedNode) {\n        this._attachedNode.removeBehavior(this.boundingBoxDragBehavior);\n        this._attachedNode.addBehavior(this.boundingBoxDragBehavior);\n      }\n    } else if (this.gizmos.boundingBoxGizmo) {\n      if (this._attachedMesh) {\n        this._attachedMesh.removeBehavior(this.boundingBoxDragBehavior);\n      } else if (this._attachedNode) {\n        this._attachedNode.removeBehavior(this.boundingBoxDragBehavior);\n      }\n      this.gizmos.boundingBoxGizmo.attachedNode = null;\n    }\n    this._gizmosEnabled.boundingBoxGizmo = value;\n  }\n  public get boundingBoxGizmoEnabled(): boolean {\n    return this._gizmosEnabled.boundingBoxGizmo;\n  }\n\n  /**\n   * Builds Gizmo Axis Cache to enable features such as hover state preservation and graying out other axis during manipulation\n   * @param gizmoAxisCache Gizmo axis definition used for reactive gizmo UI\n   */\n  public addToAxisCache(gizmoAxisCache: Map<Mesh, GizmoAxisCache>) {\n    if (gizmoAxisCache.size > 0) {\n      gizmoAxisCache.forEach((v, k) => {\n        this._gizmoAxisCache.set(k, v);\n      });\n    }\n  }\n\n  /**\n   * Disposes of the gizmo manager\n   */\n  public dispose() {\n    this._pointerObservers.forEach((observer) => {\n      this._scene.onPointerObservable.remove(observer);\n    });\n    for (const key in this.gizmos) {\n      const gizmo = <Nullable<Gizmo>>(<any>this.gizmos)[key];\n      if (gizmo) {\n        gizmo.dispose();\n      }\n    }\n    if (\n      this._defaultKeepDepthUtilityLayer !==\n      UtilityLayerRenderer._DefaultKeepDepthUtilityLayer\n    ) {\n      this._defaultKeepDepthUtilityLayer?.dispose();\n    }\n    if (\n      this._defaultUtilityLayer !== UtilityLayerRenderer._DefaultUtilityLayer\n    ) {\n      this._defaultUtilityLayer?.dispose();\n    }\n    this.boundingBoxDragBehavior.detach();\n    this.onAttachedToMeshObservable.clear();\n  }\n}\n","import { TransformNode } from \"../babylon\";\n\nimport { TransformMode } from \"../types/editor.types\";\nimport { getEntity } from \"./../utils/utils\";\nimport { Viewer } from \"./../viewer/Viewer\";\nimport { GizmoManager } from \"./gizmo/GizmoManager\";\nimport { PositionGizmo } from \"./gizmo/PositionGizmo\";\nimport { RotationGizmo } from \"./gizmo/RotationGizmo\";\nimport { ScaleGizmo } from \"./gizmo/ScaleGizmo\";\n\n//TODO:锚点修改\n//TODO:缩放时按相对方向进行缩放\n\n/**\n * 变换控制\n */\n\nexport class TransformControl {\n  private _mode: TransformMode = TransformMode.Translate;\n  private gizmoManager: GizmoManager;\n  private attachNodes: TransformNode[];\n  positionGizmo: PositionGizmo;\n  rotationGizmo: RotationGizmo;\n  scaleGizmo: ScaleGizmo;\n  constructor(private _viewer: Viewer) {\n    this.gizmoManager = new GizmoManager(\n      this._viewer.Scene,\n      1,\n      _viewer.utilLayer\n    );\n    this.positionGizmo = new PositionGizmo(_viewer.utilLayer, 1);\n    this.positionGizmo.planarGizmoEnabled = true;\n\n    this.rotationGizmo = new RotationGizmo(_viewer.utilLayer);\n    this.scaleGizmo = new ScaleGizmo(_viewer.utilLayer, 1);\n\n    this.gizmoManager.gizmos.positionGizmo = this.positionGizmo;\n    this.gizmoManager.gizmos.rotationGizmo = this.rotationGizmo;\n    this.gizmoManager.gizmos.scaleGizmo = this.scaleGizmo;\n\n    this.gizmoManager.usePointerToAttachGizmos = false;\n    this.Mode = this._mode;\n    this._register();\n  }\n  get Mode() {\n    return this._mode;\n  }\n  set Mode(mode: TransformMode) {\n    this._mode = mode;\n    this.gizmoManager.positionGizmoEnabled = !!(mode & TransformMode.Translate);\n    this.gizmoManager.rotationGizmoEnabled = !!(mode & TransformMode.Rotate);\n    this.gizmoManager.scaleGizmoEnabled = !!(mode & TransformMode.Scale);\n\n    if (\n      this.gizmoManager.positionGizmoEnabled &&\n      this.gizmoManager.scaleGizmoEnabled\n    ) {\n      this.gizmoManager.gizmos.positionGizmo.scaleRatio = 1.5;\n    }\n  }\n  attachMeshs(nodes: TransformNode[]) {\n    this.detachMeshs();\n\n    if (nodes.length === 0) return;\n    this.attachNodes = nodes;\n\n    this.gizmoManager.attachToNodes([...nodes]);\n  }\n  detachMeshs() {\n    this.attachNodes = null;\n    this.gizmoManager.attachToNode(null);\n  }\n  private _register() {\n    const updateMatrix = (meshs: TransformNode[]) => {\n      if (!meshs) return;\n      const entity = getEntity(meshs?.[0]);\n      if (entity?.DB) entity.DB.HistoryManager.startCmd(\"实体变换\");\n      for (const mesh of meshs) {\n        if (!mesh) {\n          console.error(\"未绑定有效实体\");\n          continue;\n        }\n        const entity = getEntity(mesh);\n\n        entity.Matrix = mesh._worldMatrix;\n      }\n      if (entity?.DB) entity.DB.HistoryManager.endCmd();\n    };\n\n    this.positionGizmo.onDragEndObservable.add((data) => {\n      updateMatrix(this.attachNodes);\n    });\n\n    this.rotationGizmo.onDragEndObservable.add((data) => {\n      updateMatrix(this.attachNodes);\n    });\n    this.scaleGizmo.onDragEndObservable.add((data) => {\n      updateMatrix(this.attachNodes);\n    });\n  }\n}\n","import { IKeyboardEvent, KeyboardEventTypes } from \"../babylon\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { Viewer } from \"./../viewer/Viewer\";\n\ntype KeyFun = (e: IKeyboardEvent) => void;\n\nexport class KeyboardControl {\n  private keyeunm = {\n    keydown: KeyboardEventTypes.KEYDOWN,\n    keyup: KeyboardEventTypes.KEYUP,\n  };\n  private keydownEvents = new Set<KeyFun>();\n  private keyupEvents = new Set<KeyFun>();\n  private _ctrlKey = false;\n  private _shiftKey = false;\n  private _altKey = false;\n  constructor(private _viewer: Viewer) {\n    this._register();\n  }\n  get IsCtrl() {\n    return this._ctrlKey;\n  }\n  get IsShift() {\n    return this._shiftKey;\n  }\n  get IsAlt() {\n    return this._altKey;\n  }\n  on(type: \"keydown\" | \"keyup\", callback: KeyFun) {\n    if (this.keyeunm[type] === KeyboardEventTypes.KEYDOWN) {\n      this.keydownEvents.add(callback);\n    } else if (this.keyeunm[type] === KeyboardEventTypes.KEYUP) {\n      this.keyupEvents.add(callback);\n    } else {\n      throw new TypeError(\"事件类型错误\");\n    }\n    return () => {\n      this.off(type, callback);\n    };\n  }\n  off(type: \"keydown\" | \"keyup\", callback: KeyFun) {\n    if (this.keyeunm[type] === KeyboardEventTypes.KEYDOWN) {\n      this.keydownEvents.delete(callback);\n    } else if (this.keyeunm[type] === KeyboardEventTypes.KEYUP) {\n      this.keyupEvents.delete(callback);\n    }\n  }\n  removeAll() {\n    this.keydownEvents.clear();\n    this.keyupEvents.clear();\n  }\n  private _register() {\n    this._viewer.Scene.onKeyboardObservable.add((info) => {\n      if (info.type === KeyboardEventTypes.KEYDOWN) {\n        this._ctrlKey = info.event.ctrlKey;\n        this._shiftKey = info.event.shiftKey;\n        this._altKey = info.event.altKey;\n\n        for (const f of this.keydownEvents) {\n          f(info.event);\n        }\n      } else {\n        for (const f of this.keyupEvents) {\n          this._ctrlKey = info.event.ctrlKey;\n          this._shiftKey = info.event.shiftKey;\n          this._altKey = info.event.altKey;\n          f(info.event);\n        }\n      }\n      AppEvent.trigger({\n        type: [\"keydown\", \"keyup\"][info.type - 1],\n        event: info.event as any,\n        target: null,\n      });\n    });\n  }\n}\n","import { AbstractMesh, Mesh, PointerInfo } from \"../babylon\";\nimport { Entity } from \"../entitys/Entity\";\nimport {\n  IPointerEvent,\n  PointerCallback,\n  PointerEventTypes,\n  PointTypeEnum,\n} from \"../types/event\";\nimport { Viewer } from \"./../viewer/Viewer\";\nimport { getEntity, getRoot } from \"./../utils/utils\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { IVector3 } from \"@hc/core\";\n\nexport class MouseControl {\n  private _pointerdownEvs = new Set<PointerCallback>();\n  private _pointermoveEvs = new Set<PointerCallback>();\n  private _pointerupEvs = new Set<PointerCallback>();\n  private _pointerwheelEvs = new Set<PointerCallback>();\n  private _pointerPickEvs = new Set<PointerCallback>();\n  private _pointerTapEvs = new Set<PointerCallback>();\n  private _pointerDbTapEvs = new Set<PointerCallback>();\n  constructor(private _viewer: Viewer) {\n    this._register();\n  }\n  get Scene() {\n    return this._viewer.Scene;\n  }\n  get ScreenPoint() {\n    return {\n      x: this.Scene.pointerX,\n      y: this.Scene.pointerY,\n    };\n  }\n  get WorldPoint(): IVector3 | null {\n    if (this._viewer.ground) this._viewer.ground.isPickable = true;\n    const pickInfo = this.Scene.pick(\n      this.Scene.pointerX,\n      this.Scene.pointerY,\n      (mesh) => mesh.name === \"WORLD_GROUND\"\n    );\n    if (this._viewer.ground) this._viewer.ground.isPickable = false;\n    if (pickInfo.hit) {\n      return pickInfo.pickedPoint;\n    }\n\n    return null;\n  }\n  getCurrentEntity(x?: number, y?: number) {\n    const p = this.ScreenPoint;\n    const info = this.Scene.pick(x ?? p.x, y ?? p.y);\n    if (info?.hit && info?.pickedMesh) {\n      const target = getRoot(info.pickedMesh);\n      return {\n        entity: getEntity(target),\n        pickMesh: info.pickedMesh,\n      };\n    }\n    return null;\n  }\n  on(typeName: string, callback: PointerCallback) {\n    const type = PointerEventTypes[typeName.toUpperCase()];\n    switch (type) {\n      case PointerEventTypes.POINTERDOWN:\n        this._pointerdownEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERMOVE:\n        this._pointermoveEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERUP:\n        this._pointerupEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERWHEEL:\n        this._pointerwheelEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERPICK:\n        this._pointerPickEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERTAP:\n        this._pointerTapEvs.add(callback);\n        break;\n      case PointerEventTypes.POINTERDOUBLETAP:\n        this._pointerDbTapEvs.add(callback);\n        break;\n    }\n    return () => {\n      this.off(typeName, callback);\n    };\n  }\n  off(typeName: string, callback: PointerCallback) {\n    if (!typeName) return;\n    const type = PointerEventTypes[typeName.toUpperCase()];\n    switch (type) {\n      case PointerEventTypes.POINTERDOWN:\n        this._pointerdownEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERMOVE:\n        this._pointermoveEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERUP:\n        this._pointerupEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERWHEEL:\n        this._pointerwheelEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERPICK:\n        this._pointerPickEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERTAP:\n        this._pointerTapEvs.delete(callback);\n        break;\n      case PointerEventTypes.POINTERDOUBLETAP:\n        this._pointerDbTapEvs.delete(callback);\n        break;\n    }\n  }\n\n  private getEvent(info: PointerInfo): IPointerEvent {\n    let target: AbstractMesh;\n    let entity: Entity;\n    let pickedMesh: AbstractMesh;\n\n    if (info.pickInfo?.hit && info.pickInfo?.pickedMesh) {\n      target = getRoot(info.pickInfo.pickedMesh);\n      entity = getEntity(target);\n      pickedMesh = info.pickInfo.pickedMesh as AbstractMesh;\n    }\n    return {\n      type: PointTypeEnum[info.type],\n      screenX: this.Scene.pointerX,\n      screenY: this.Scene.pointerY,\n      worldPoint: this.WorldPoint,\n      target: entity,\n      object: target,\n      event: info.event as MouseEvent,\n      pickedMesh,\n      pickInfo: info.pickInfo,\n    };\n  }\n  private _register() {\n    this._viewer.Scene.onPointerObservable.add((info) => {\n      const event = this.getEvent(info);\n\n      //点击到实体，触发实体对应监听事件\n      if (event.target) {\n        event.target.trigger(event);\n      }\n\n      let funcList: Set<PointerCallback>;\n      switch (info.type) {\n        case PointerEventTypes.POINTERDOWN:\n          funcList = this._pointerdownEvs;\n          break;\n        case PointerEventTypes.POINTERUP:\n          funcList = this._pointerupEvs;\n          break;\n        case PointerEventTypes.POINTERMOVE:\n          funcList = this._pointermoveEvs;\n          break;\n        case PointerEventTypes.POINTERWHEEL:\n          funcList = this._pointerwheelEvs;\n          break;\n        case PointerEventTypes.POINTERPICK:\n          funcList = this._pointerPickEvs;\n          break;\n        case PointerEventTypes.POINTERTAP:\n          funcList = this._pointerTapEvs;\n          break;\n        case PointerEventTypes.POINTERDOUBLETAP:\n          funcList = this._pointerDbTapEvs;\n          break;\n      }\n\n      funcList.forEach((f) => f(event));\n      AppEvent.trigger(event);\n    });\n  }\n}\n","export const ISPROXYKEY = \"_isProxy\";\n\nexport const defineProperty = (\n  target: any,\n  property: string,\n  privateKey: string,\n  isUpdate = false\n) => {\n  Object.defineProperty(target, property, {\n    set: function (value) {\n      if (value instanceof Array) {\n        if (!this[privateKey]) {\n          if (value[ISPROXYKEY]) this[privateKey] = value;\n          else\n            this[privateKey] = new Proxy(value, {\n              set: (target, key, value, receiver) => {\n                if (Reflect.get(target, key, receiver) !== value) {\n                  this.writeSnapshoot();\n                }\n                const result = Reflect.set(target, key, value, receiver);\n                if (isUpdate) this.update();\n                return result;\n              },\n              get: (target, key, receiver) => {\n                if (key === ISPROXYKEY) return true;\n                //实体先被删除后在触发length = xxx\n                if (key === \"splice\" || key === \"pop\" || key === \"shift\") {\n                  this.writeSnapshoot();\n                }\n                return Reflect.get(target, key, receiver);\n              },\n            });\n        } else {\n          let arr = this[privateKey] as Array<any>;\n          arr.length = 0;\n          arr.push(...value);\n        }\n      } else {\n        let oldv = this[privateKey];\n        if (oldv !== value) {\n          this.writeSnapshoot();\n          this[privateKey] = value;\n          if (isUpdate) this.update();\n        }\n      }\n    },\n    get: function () {\n      return this[privateKey];\n    },\n    enumerable: true,\n    configurable: true,\n  });\n};\n\n/**属性修改自动记录更新 */\nexport function autoUpdate(\n  target: any,\n  property: string,\n  descriptor?: PropertyDecorator\n) {\n  defineProperty(target, property, \"__\" + property, true);\n}\n","import { defineProperty } from \"./autoUpdate\";\n\n/**属性自动快照 */\nexport function autoRecord(\n  target: any,\n  property: string,\n  descriptor?: PropertyDecorator\n) {\n  defineProperty(target, property, \"__\" + property, false);\n}\n","import { Entity, StartAnimateOptions } from \"./../entitys/Entity\";\nimport { Mesh, TransformNode, Vector3 } from \"../babylon\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { HCFiler, Factory } from \"@hc/core\";\nimport { ComponentSchema } from \"../types/schema.types\";\nimport { Box3 } from \"../utils/Box3\";\nimport { EventEnum } from \"../enums\";\n\nexport interface Component {\n  constructor: typeof Component;\n}\n\n/**\n * 自定义组件基类\n * - 子类实现 `getData` `initComponents` `play` 方法\n * @export\n * @class Component\n * @extends {Entity}\n */\n@Factory\nexport class Component extends Entity {\n  static type = \"Component\";\n  static readonly component = true;\n  static Schema: ComponentSchema;\n  data: Record<string, any> = {};\n  entitys: Entity[];\n  constructor() {\n    super();\n    this.initData();\n    this.entitys = this.initComponents();\n  }\n  /**\n   *\n   * @returns 组件自定义属性\n   */\n  getData() {\n    return {};\n  }\n  get Schema() {\n    return this.constructor.Schema;\n  }\n  get IsComponent() {\n    return true;\n  }\n  get AnimationNames() {\n    const as = super.AnimationNames;\n    for (const a of this.entitys) {\n      as.push(...a.AnimationNames);\n    }\n    return as;\n  }\n  get BoundingBox() {\n    const { min, max } = this.BoundingVectors;\n    return new Box3(min, max);\n  }\n  startAnimates(name: string, option?: StartAnimateOptions) {\n    super.startAnimates(name, option);\n    for (const e of this.entitys) {\n      e.startAnimates(name, option);\n    }\n  }\n  stopAnimates(names?: string[]) {\n    super.stopAnimates(names);\n    for (const e of this.entitys) {\n      e.stopAnimates(names);\n    }\n  }\n  initData(data?: Record<string, any>) {\n    const self = this;\n    this.data = new Proxy(data ?? this.getData(), {\n      get(target, prop: string) {\n        return target[prop];\n      },\n      set(obj: Record<string, unknown>, prop: string, newval) {\n        let needUpdate = obj.hasOwnProperty(prop) && newval !== obj[prop];\n        self.writeSnapshoot();\n        obj[prop] = newval;\n        if (needUpdate) {\n          self.play();\n          self.update();\n          self.trigger({ type: \"change\", target: this, key: prop });\n        }\n        // 表示操作成功\n        return true;\n      },\n    });\n  }\n  /**\n   * 初始化组件构成\n   */\n  initComponents(): Entity[] {\n    return [];\n  }\n  initDrawObject(renderType: RenderType) {\n    const node = new Mesh(this.UniqueName, Entity.Scene);\n    this.updateDrawObject(renderType, node);\n    this.watchLoad()\n      .then((r) => {\n        this.play();\n        this.mounted();\n      })\n      .catch((err) => {\n        console.error(\"err: \", err);\n        this.componentCatch(err);\n      })\n      .finally(() => {\n        this.trigger2({ type: EventEnum.Load, target: this });\n      });\n    return node;\n  }\n  updateDrawObject(renderType: RenderType, obj: Mesh) {\n    for (let e of this.entitys) {\n      e.isPart = true;\n      let o = e.GetDrawObjectFromRenderType(renderType);\n      if (o) {\n        e.updatePart();\n        o.parent = obj;\n      }\n    }\n  }\n  updateMaterial() {\n    this.entitys.forEach((e) => e.updateMaterial());\n  }\n  /**组件执行动作 */\n  play() {\n    //子类重载\n  }\n  /**组件加载完毕后执行 */\n  mounted() {}\n  componentCatch(err) {}\n  /**回收组件 */\n  destory(): void {\n    super.destory();\n    for (const en of this.entitys) {\n      en.destory();\n    }\n  }\n  writeFile(filer: HCFiler) {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.write(JSON.stringify({ ...this.data }));\n    filer.write(this.entitys.length);\n    for (const en of this.entitys) {\n      filer.writeObject(en);\n    }\n  }\n  readFile(filer: HCFiler) {\n    super.readFile(filer);\n    filer.read();\n    const dataJSON = filer.read();\n    this.initData(JSON.parse(dataJSON));\n    const count = filer.read();\n    for (const e of this.entitys) {\n      e.destory();\n    }\n    this.entitys.length = 0;\n\n    for (let i = 0; i < count; i++) {\n      const e = filer.readObject() as Entity;\n      this.entitys.push(e);\n    }\n    this.update();\n    this.watchLoad().then((r) => {\n      this.play();\n    });\n  }\n  /**监听组件加载完成 */\n  watchLoad() {\n    const list = [];\n    for (const en of this.entitys) {\n      if (en.isAsync) {\n        list.push(\n          new Promise((res) => {\n            en.on(\"load\", () => res(true));\n          })\n        );\n      }\n    }\n    return Promise.all(list);\n  }\n  getReady(){\n    return this.watchLoad()\n  }\n}\n","import { Component } from \"./BaseComponent\";\nimport { HCFactory } from \"@hc/core\";\n\nexport function RegisterComponent<T extends typeof Component>(target: T) {\n  HCFactory.RegisterComponent(target);\n}\n\nexport function UnRegisterComponent(type: string) {\n  HCFactory.RemoveComponent(type);\n}\n","import { HCFiler } from \"@hc/core\";\nimport { WidgetValue } from \"../types/interaction.types\";\n\ndeclare module \"@hc/core/lib/filer/HCFiler\" {\n  export interface HCFiler {\n    writeWidgetValue(v: WidgetValue): void;\n    readWidgetValue(v: WidgetValue): void;\n  }\n}\n\nHCFiler.prototype.writeWidgetValue = function (v: WidgetValue) {\n  this.write(v?.type);\n\n  if (v?.type === \"entity\") {\n    this.writeObjectId(v?.value);\n  } else {\n    this.write(v?.value);\n  }\n\n  this.write(v?.entityKey);\n};\nHCFiler.prototype.readWidgetValue = function (v: WidgetValue) {\n  v.type = this.read();\n\n  if (v.type === \"entity\") {\n    v.value = this.readObjectId();\n  } else v.value = this.read();\n\n  v.entityKey = this.read();\n};\n","import { HCFiler, ISerialize } from \"@hc/core\";\n\n/**\n * 动作元件对象基类\n * 主要\n * @export\n * @abstract\n * @class BaseWidget\n * @implements {ISerialize}\n */\nexport abstract class BaseWidget implements ISerialize {\n  readonly IsContainer: boolean = false;\n  static schema = {};\n  public startTime = 0;\n  get Type() {\n    return this.constructor[\"type\"];\n  }\n  do(): Promise<unknown> | unknown {\n    return null;\n  }\n  destory() {}\n  fromJSON(data: any) {}\n  readFile(file: HCFiler): void {}\n  writeFile(file: HCFiler): void {}\n}\n","import { IVector2, IVector3 } from \"@hc/core\";\nimport { AppStore } from \"../../app/AppStore\";\nimport {\n  Color3,\n  LinesMesh,\n  MeshBuilder,\n  Nullable,\n  PickingInfo,\n  Vector3,\n} from \"../../babylon\";\nimport { AppEvent } from \"../../core\";\nimport { Entity } from \"../../entitys\";\nimport { EventEnum } from \"../../enums\";\nimport { iVector2Vector } from \"../../utils/vector\";\nimport type { Editor } from \"../Editor\";\nimport {\n  EditorService,\n  EditorStatus,\n  ServiceOption,\n  ServiceResult,\n  ServiceStatus,\n} from \"../interface\";\nimport { IPointerEvent } from \"./../../types/event\";\nimport { MouseKey } from \"./../../utils/keyenum\";\n\nexport interface PointResult {\n  worldPoint?: IVector3;\n  screenPoint?: IVector2;\n  pickInfo?: PickingInfo;\n  entity?: Entity;\n  key?: string;\n}\n\nexport type PointServiceResult = ServiceResult<PointResult>;\n\nexport class GetPointService implements EditorService {\n  public isReady = false;\n  private resolve: (v: PointServiceResult) => void;\n  private cleaners: (() => void)[] = [];\n  private auxiliaryLine: LinesMesh;\n  private option?: ServiceOption;\n  private _UpdatePoint: Nullable<(p) => void>;\n  constructor(private editor: Editor) {}\n  async start(option?: ServiceOption): Promise<PointServiceResult> {\n    if (this.editor.Status === EditorStatus.GetPoint) return;\n    this.option = option;\n    this.isReady = true;\n    this.editor.Status = EditorStatus.GetPoint;\n    this.editor.focus();\n    this._UpdatePoint = option?.getPointCallback;\n    this.initAuxiliaryLine();\n    this.initMouseEvent();\n    this.initKeyDownEvent();\n    //发送当前关键字信息\n    AppEvent.trigger({\n      type: EventEnum.ServiceStatus,\n      msg: this.option?.msg ?? \"请选择点\",\n      keywords: (this.option?.keywordList ?? []).concat([\n        { label: \"退出\", key: \"ESC\" },\n      ]),\n    });\n\n    return new Promise<PointServiceResult>((resolve) => {\n      this.resolve = resolve;\n    });\n  }\n  do(event: IPointerEvent) {\n    if (event.event.button === MouseKey.Left) {\n      this.returnPoint({\n        worldPoint: event.worldPoint,\n        screenPoint: { x: event.screenX, y: event.screenY },\n        pickInfo: event.pickInfo,\n        entity: event.target as Entity,\n      });\n    }\n    return true;\n  }\n  returnPoint(result: PointResult) {\n    if (!this.resolve) return;\n    this.resolve({\n      status: ServiceStatus.Ok,\n      ...result,\n    });\n    this.reset();\n  }\n  returnKeyWord(result: PointResult) {\n    if (!this.resolve) return;\n    this.resolve({\n      status: ServiceStatus.KeyWord,\n      ...result,\n    });\n    this.reset();\n  }\n  cancel() {\n    if (!this.resolve) return;\n    this.resolve({\n      status: ServiceStatus.Cancel,\n    });\n    this.reset();\n  }\n  private initAuxiliaryLine() {\n    if (!this.option?.hasAuxiliaryLine || !this.option?.basePoint) return;\n    if (!this.auxiliaryLine) {\n      this.auxiliaryLine = MeshBuilder.CreateDashedLines(\n        \"auxiliaryLine\",\n        {\n          points: [new Vector3(), new Vector3(1)],\n          updatable: true,\n          dashSize: 1000,\n          gapSize: 800,\n          dashNb: 50,\n        },\n        AppStore.MainScene\n      );\n      this.auxiliaryLine.color = Color3.Green();\n    }\n\n    this.auxiliaryLine.setEnabled(true);\n  }\n  private updateAuxiliaryLine(currentPt: IVector3) {\n    if (this.auxiliaryLine?.isEnabled?.())\n      MeshBuilder.CreateDashedLines(null, {\n        points: [\n          iVector2Vector(this.option.basePoint),\n          iVector2Vector(currentPt),\n        ],\n        updatable: true,\n        instance: this.auxiliaryLine,\n      });\n  }\n  private reset() {\n    this.isReady = false;\n    this.editor.Status &= ~EditorStatus.GetPoint;\n    this.resolve = null;\n    this._UpdatePoint = null;\n    this.cleaners.forEach((c) => c());\n    this.option = null;\n    this.cleaners.length = 0;\n    //清楚关键字信息\n    AppEvent.trigger({\n      type: EventEnum.ServiceStatus,\n    });\n    if (this.auxiliaryLine) {\n      this.auxiliaryLine.setEnabled(false);\n    }\n  }\n  private initMouseEvent() {\n    this.cleaners.push(\n      this.editor.mouseCtrl.on(\"pointermove\", (event) => {\n        this.updateAuxiliaryLine(event.worldPoint);\n        this._UpdatePoint?.(event.worldPoint);\n      })\n    );\n  }\n  private initKeyDownEvent() {\n    if (this.option?.keywordList?.length)\n      this.cleaners.push(\n        this.editor.keyboardCtrl.on(\"keydown\", (event) => {\n          for (const kw of this.option.keywordList) {\n            if (kw.key.toUpperCase() === event.key.toUpperCase()) {\n              this.returnKeyWord({ key: kw.key });\n              return;\n            }\n          }\n        })\n      );\n  }\n}\n","import { AppStore } from \"../app/AppStore\";\nimport {\n  PointsCloudSystem,\n  CloudPoint,\n  Ray,\n  Color4,\n  Vector3,\n} from \"../babylon\";\nimport { Entity } from \"../entitys\";\nimport { equaln } from \"../utils\";\n\n/**\n * 拖拽点管理\n */\nexport class DragPointsManager {\n  private _pcsList = new Map<Entity, PointsCloudSystem>();\n  private color = new Color4(0, 122 / 255, 204 / 255, 1);\n  intersect(ray: Ray) {\n    const dir = ray.direction;\n    const origin = ray.origin;\n    const result: [Entity, number][] = [];\n    for (const [e, pcs] of this._pcsList) {\n      for (let i = 0; i < pcs.particles.length; i++) {\n        const vec = pcs.particles[i].position.subtract(origin);\n        const angle = Vector3.Dot(vec.normalize(), dir);\n        if (equaln(angle, 0, 1e-3) || equaln(angle, 1, 1e-3)) {\n          result.push([e, i]);\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  append(en: Entity) {\n    if (this._pcsList.has(en)) return;\n    const points = en.getDragPoints();\n    if (points.length === 0) return;\n    const pcs = new PointsCloudSystem(\"pac\" + en.Id, 12, AppStore.MainScene);\n    this._pcsList.set(en, pcs);\n    pcs.addPoints(points.length, (particle: CloudPoint, i: number) => {\n      particle.position = points[i];\n      particle.color = this.color;\n    });\n    pcs.buildMeshAsync();\n  }\n  update() {\n    for (const [e, pcs] of this._pcsList) {\n      const points = e.getDragPoints();\n      if (points.length === 0) return;\n      pcs.mesh.setEnabled(true);\n      for (let i = 0; i < pcs.particles.length; i++) {\n        pcs.particles[i].position.copyFrom(points[i]);\n      }\n      pcs.setParticles();\n    }\n  }\n  hide() {\n    for (const [e, pcs] of this._pcsList) {\n      pcs.mesh.setEnabled(false);\n    }\n  }\n  clear() {\n    for (let [e, pcs] of this._pcsList) {\n      pcs.dispose();\n      this._pcsList.delete(e);\n      e = null;\n    }\n    this._pcsList.clear();\n  }\n}\n","import { Vector3 } from \"../babylon\";\nimport { Entity } from \"../entitys\";\nimport { iVector2Vector } from \"../utils/vector\";\nimport { IPointerEvent } from \"./../types/event\";\nimport { DragPointsManager } from \"./DragPointsManager\";\nimport { EditorService, EditorStatus } from \"./interface\";\n\nimport type { Editor } from \"./Editor\";\n\n/**\n * 拖拽点控制服务\n */\nexport class DragControlService implements EditorService {\n  isReady = false;\n  manager = new DragPointsManager();\n  private startPoint = new Vector3();\n  private cleaner: (() => void)[] = [];\n  private _dragList: [Entity, number][] = [];\n  constructor(private _editor: Editor) {}\n  attach(nodes: Entity[]) {\n    if (!nodes?.length) {\n      this.cancel();\n      return;\n    }\n    this.isReady = true;\n    for (const node of nodes) this.manager.append(node);\n  }\n  do(event: IPointerEvent) {\n    const result = this.manager.intersect(event.pickInfo.ray);\n    if (result.length === 0) return false;\n    this._editor.Status = EditorStatus.Drag;\n    this.register();\n    this.startPoint.copyFrom(iVector2Vector(event.worldPoint));\n    this._dragList.push(...result);\n    return true;\n  }\n\n  update() {\n    this.manager.update();\n  }\n  cancel() {\n    this.isReady = false;\n    this.manager.clear();\n    this.unRegister();\n    this._dragList.length = 0;\n  }\n  private move = (event: IPointerEvent) => {\n    this.manager.hide();\n    const current = iVector2Vector(event.worldPoint);\n    const vec = current.subtract(this.startPoint);\n    this.startPoint.copyFrom(current);\n    for (const [en, index] of this._dragList) {\n      en.moveDragPoint(vec, index);\n    }\n  };\n  private moveEnd = () => {\n    this.manager.update();\n    this.unRegister();\n    this._editor.Status = EditorStatus.None;\n    this._dragList.length = 0;\n  };\n\n  private register() {\n    this.cleaner.push(\n      this._editor.mouseCtrl.on(\"pointerMove\", this.move),\n      this._editor.mouseCtrl.on(\"pointerUp\", this.moveEnd)\n    );\n  }\n  private unRegister() {\n    this.cleaner.forEach((c) => c());\n    this.cleaner.length = 0;\n  }\n}\n","import { IPointerEvent } from \"./../types/event\";\nimport { Viewer } from \"./../viewer/Viewer\";\nimport { SelectControl } from \"./SelectControl\";\nimport { TransformControl } from \"./TransformControl\";\nimport { KeyboardControl } from \"./KeyboardControl\";\nimport { MouseControl } from \"./MouseControl\";\nimport { GetPointService } from \"./services/GetPointService\";\nimport { EditorService, EditorStatus, ServiceOption } from \"./interface\";\nimport { KeyCode } from \"../utils\";\nimport { DragControlService } from \"./DragControl\";\nimport { Entity } from \"../entitys/Entity\";\n\nexport class Editor {\n  selectControl: SelectControl;\n  transformControl: TransformControl;\n  keyboardCtrl: KeyboardControl;\n  mouseCtrl: MouseControl;\n  dragCtrlService: DragControlService;\n  getPointService: GetPointService;\n  private status: EditorStatus = EditorStatus.None;\n  private services: EditorService[] = [];\n  constructor(private _viewer: Viewer, private editorMode = false) {\n    this.keyboardCtrl = new KeyboardControl(_viewer);\n    this.mouseCtrl = new MouseControl(_viewer);\n\n    this.getPointService = new GetPointService(this);\n\n    if (editorMode) {\n      this.initEditor();\n    }\n\n    this.services.push(\n      this.getPointService,\n      this.dragCtrlService,\n      this.selectControl\n    );\n  }\n  get Status() {\n    return this.status;\n  }\n  set Status(v) {\n    this.status = v;\n    switch (v) {\n      case EditorStatus.GetPoint:\n        this._viewer.setCursor(\"progress\");\n        break;\n      case EditorStatus.Select:\n        this._viewer.setCursor(\"crosshair\");\n        break;\n      case EditorStatus.Drag:\n        this._viewer.setCursor(\"pointer\");\n        break;\n      default:\n        this._viewer.setCursor(\"default\");\n    }\n  }\n\n  initEditor() {\n    this._viewer.initEditor();\n    this.selectControl = new SelectControl(this._viewer, this);\n    this.transformControl = new TransformControl(this._viewer);\n    this.dragCtrlService = new DragControlService(this);\n    this._register();\n  }\n  /**\n   * 开始拾取点\n   * 运行此方法编辑器会进入拾取点状态，此时程序被promise挂起，无法执行其他动作\n   * @param option {@link ServiceOption}\n   * @returns `ServiceResult`\n   * @see https://hc3dol.gkiiot.com/#21\n   */\n  getPoint(option?: ServiceOption) {\n    return this.getPointService.start(option);\n  }\n  focus() {\n    this._viewer.focus();\n  }\n  private _register() {\n    this.selectControl.on(this.onSelect);\n\n    this.mouseCtrl.on(\"pointerDown\", this.onPointerDown);\n    this.keyboardCtrl.on(\"keydown\", this.onKeyDownCtrl);\n\n    //控制 变换回调\n    this.transformControl.positionGizmo.onDragStartObservable.add(\n      this.onTransfromDragStart\n    );\n    this.transformControl.positionGizmo.onDragEndObservable.add(\n      this.onTransfromDragEnd\n    );\n    this.transformControl.rotationGizmo.onDragStartObservable.add(\n      this.onTransfromDragStart\n    );\n    this.transformControl.rotationGizmo.onDragEndObservable.add(\n      this.onTransfromDragEnd\n    );\n    this.transformControl.scaleGizmo.onDragStartObservable.add(\n      this.onTransfromDragStart\n    );\n    this.transformControl.scaleGizmo.onDragEndObservable.add(\n      this.onTransfromDragEnd\n    );\n  }\n  private onTransfromDragStart = () => {\n    this.dragCtrlService.manager.hide();\n  };\n  private onTransfromDragEnd = () => {\n    this.dragCtrlService.manager.update();\n  };\n  /**键盘按下回调 */\n  private onKeyDownCtrl = (event: KeyboardEvent) => {\n    switch (event.code) {\n      case KeyCode.Escape: {\n        for (const sv of this.services) {\n          sv.cancel();\n        }\n        break;\n      }\n      default:\n        break;\n    }\n  };\n  /**选择实体回调 */\n  private onSelect = (data) => {\n    if (data.type === \"select\") {\n      this.transformControl.attachMeshs(data.meshs);\n      this.dragCtrlService.attach(\n        data.entitys.filter((e) => e instanceof Entity)\n      );\n    }\n  };\n  /**鼠标按下回调 */\n  private onPointerDown = async (event: IPointerEvent) => {\n    for (const sv of this.services) {\n      if (sv.isReady) {\n        const status = await sv.do(event);\n        if (status) {\n          break;\n        }\n      }\n    }\n  };\n}\n","/**世界范围 */\nexport const SKYBOX_SIZE = 1e7;\n\n/**正交可视区域 */\nexport const ORTH_SIZE = 1e3;\n\n/**判断线段是否被选中精度 */\nexport const DefaultIntersectionThreshold = 1;\n\nexport const DEFAULT_RADIUS = 120;\n\nexport const DEFAULT_ALPHA = Math.PI * 0.25;\n\nexport const DEFAULT_BETA = Math.PI * 0.45;\n\n/**地板尺寸 */\nexport const GoundSize = 1e5;\n","import { Entity } from \"./../entitys/Entity\";\nimport { Color3, HighlightLayer, Mesh, TransformNode } from \"../babylon\";\nimport { Viewer } from \"../viewer/Viewer\";\n\nexport class HighlightManager {\n  private _highlightLayer: HighlightLayer;\n  private _color = Color3.White();\n  constructor(_viewer: Viewer) {\n    this._highlightLayer = new HighlightLayer(\"select-entity\", _viewer.Scene);\n    this._highlightLayer.innerGlow = false;\n  }\n  exclude(mesh: Mesh) {\n    this._highlightLayer.addExcludedMesh(mesh);\n  }\n  addMeshs(hightMeshs: (Mesh | TransformNode)[], color?: Color3) {\n    for (const s of hightMeshs) {\n      const meshs = s.getChildMeshes() as Mesh[];\n      meshs.forEach((m) =>\n        this._highlightLayer.addMesh(m, color ?? this._color)\n      );\n    }\n  }\n  addEnitys(ens: Entity[], color?: Color3) {\n    for (const en of ens) {\n      this.addMeshs([en.DrawObject], color);\n    }\n  }\n  clear() {\n    this._highlightLayer.removeAllMeshes();\n  }\n}\n","import { Nullable, TargetCamera, Vector2, Vector3 } from \"../../babylon\";\n\nexport class CustomFramingBehavior {\n  private _radiusScale = 1.0;\n  private _positionScale = 0.5;\n  constructor(private _attachedCamera: TargetCamera) {}\n  public zoomOnBoundingInfo(\n    minimumWorld: Vector3,\n    maximumWorld: Vector3,\n    focusOnOriginXZ: boolean = false,\n    onAnimationEnd: Nullable<() => void> = null\n  ): void {\n    let zoomTarget: Vector3;\n\n    if (!this._attachedCamera) {\n      return;\n    }\n\n    // Find target by interpolating from bottom of bounding box in world-space to top via framingPositionY\n    const bottom = minimumWorld.y;\n    const top = maximumWorld.y;\n    const zoomTargetY = bottom + (top - bottom) * this._positionScale;\n    const radiusWorld = maximumWorld.subtract(minimumWorld).scale(0.5);\n\n    const centerWorld = minimumWorld.add(radiusWorld);\n    zoomTarget = new Vector3(centerWorld.x, zoomTargetY, centerWorld.z);\n\n    this._attachedCamera.target = zoomTarget;\n\n    // sets the radius and lower radius bounds\n    // Small delta ensures camera is not always at lower zoom limit.\n    const dist = this._calculateLowerRadiusFromModelBoundingSphere(\n      minimumWorld,\n      maximumWorld\n    );\n\n    this._attachedCamera.position = zoomTarget.add(new Vector3(0, 0, dist));\n  }\n  protected _calculateLowerRadiusFromModelBoundingSphere(\n    minimumWorld: Vector3,\n    maximumWorld: Vector3\n  ): number {\n    const size = maximumWorld.subtract(minimumWorld);\n    const boxVectorGlobalDiagonal = size.length();\n    const frustumSlope: Vector2 = this._getFrustumSlope();\n\n    // Formula for setting distance\n    // (Good explanation: http://stackoverflow.com/questions/2866350/move-camera-to-fit-3d-scene)\n    const radiusWithoutFraming = boxVectorGlobalDiagonal * 0.5;\n\n    // Horizon distance\n    const radius = radiusWithoutFraming * this._radiusScale;\n    const distanceForHorizontalFrustum =\n      radius * Math.sqrt(1.0 + 1.0 / (frustumSlope.x * frustumSlope.x));\n    const distanceForVerticalFrustum =\n      radius * Math.sqrt(1.0 + 1.0 / (frustumSlope.y * frustumSlope.y));\n    let distance = Math.max(\n      distanceForHorizontalFrustum,\n      distanceForVerticalFrustum\n    );\n    const camera = this._attachedCamera;\n\n    if (!camera) {\n      return 0;\n    }\n\n    return distance;\n  }\n  private _getFrustumSlope(): Vector2 {\n    // Calculate the viewport ratio\n    // Aspect Ratio is Height/Width.\n    const camera = this._attachedCamera;\n\n    if (!camera) {\n      return Vector2.Zero();\n    }\n\n    const engine = camera.getScene().getEngine();\n    const aspectRatio = engine.getAspectRatio(camera);\n\n    // Camera FOV is the vertical field of view (top-bottom) in radians.\n    // Slope of the frustum top/bottom planes in view space, relative to the forward vector.\n    const frustumSlopeY = Math.tan(camera.fov / 2);\n\n    // Slope of the frustum left/right planes in view space, relative to the forward vector.\n    // Provides the amount that one side (e.g. left) of the frustum gets wider for every unit\n    // along the forward vector.\n    const frustumSlopeX = frustumSlopeY * aspectRatio;\n\n    return new Vector2(frustumSlopeX, frustumSlopeY);\n  }\n}\n","import {\n  Animation,\n  AnimationGroup,\n  BaseCameraPointersInput,\n  Camera,\n  FramingBehavior,\n  IAnimationKey,\n  IWheelEvent,\n  Observable,\n  Observer,\n  PointerEventTypes,\n  PointerInfo,\n  Scene,\n  TargetCamera,\n  Vector3,\n  Mesh,\n} from \"../../babylon\";\nimport { HCFiler, ISerialize, IVector3 } from \"@hc/core\";\nimport { Entity } from \"../../entitys/Entity\";\nimport {\n  IAnimateReturn,\n  ICameraAnimateOption,\n} from \"../../types/animation.types\";\nimport { CameraEnable } from \"../../types/camera.types\";\nimport { UndefinedType } from \"../../types/types\";\nimport { iVector2Vector, setVecLike2Vector } from \"../../utils/vector\";\nimport { ORTH_SIZE } from \"../../contants\";\nimport { CustomFramingBehavior } from \"./framingBehavior\";\n\nexport class BaseCamera implements ISerialize {\n  protected _enable = CameraEnable.All;\n  protected _camera: TargetCamera;\n  protected _position = new Vector3(0, 0, 10);\n  protected _target = Vector3.Zero();\n  protected _mode = Camera.PERSPECTIVE_CAMERA;\n  protected wheelSpeed = 20;\n  protected wheelDeltaPercentage = 0.05;\n  protected _flying = false;\n  protected size = ORTH_SIZE;\n  protected customWheel: Observer<PointerInfo>;\n  protected _pointerInput: BaseCameraPointersInput;\n  protected _animateGroup: AnimationGroup;\n  private customFramingBehavior: CustomFramingBehavior;\n  public onRadiusChangeObserver = new Observable<Camera>();\n  public onZommScaleChangeObserver = new Observable<number>();\n  zoomScale = 1;\n  constructor(protected _scene: Scene, protected _canvas: HTMLCanvasElement) {}\n  get CurrentCamera() {\n    return this._camera;\n  }\n  get Position() {\n    return { x: this._position.x, y: this._position.y, z: this._position.z };\n  }\n  set Position(v: IVector3) {\n    setVecLike2Vector(this._position, v);\n  }\n  get Target(): IVector3 {\n    return this._target;\n  }\n  set Target(v: IVector3) {\n    setVecLike2Vector(this._target, v);\n  }\n  get Alpha() {\n    return 0;\n  }\n  set Alpha(v) {}\n  get Beta() {\n    return 0;\n  }\n  set Beta(v) {}\n  get Radius() {\n    return Vector3.Distance(this._target, this._position);\n  }\n  set Radius(v: number) {\n    const vec = this._position.subtract(this._target).normalize().scale(v);\n    this._position = this._position.add(vec);\n    this._camera.position.copyFrom(this._position);\n  }\n  get Aspect() {\n    return this._canvas.width / this._canvas.height;\n  }\n  get Enable() {\n    return this._enable !== CameraEnable.None;\n  }\n  set Enable(v: boolean) {\n    this._enable = v ? CameraEnable.All : CameraEnable.None;\n  }\n  get EnableZoom() {\n    return !!(this._enable & CameraEnable.Zoom);\n  }\n  set EnableZoom(v: boolean) {\n    if (v === this.EnableZoom) return;\n    if (v) {\n      this._enable |= CameraEnable.Zoom;\n    } else {\n      this._enable &= ~CameraEnable.Zoom;\n    }\n    if (this._mode === Camera.PERSPECTIVE_CAMERA) {\n      if (v) {\n        this._camera.inputs.attached.mousewheel.attachControl();\n      } else this._camera.inputs.attached.mousewheel.detachControl();\n    }\n  }\n  get Mode() {\n    return this._mode;\n  }\n  set Mode(v) {\n    this._mode = v;\n  }\n  set Size(v: number) {\n    if (!v) return;\n\n    this.size = v;\n    this._camera.orthoTop = this.size * this.zoomScale;\n    this._camera.orthoBottom = -this.size * this.zoomScale;\n    this._camera.orthoLeft = -this.size * this.zoomScale * this.Aspect;\n    this._camera.orthoRight = this.size * this.zoomScale * this.Aspect;\n  }\n  active() {\n    this._scene.activeCamera = this._camera;\n    this.attachControl();\n  }\n  attachControl() {}\n  detachControl() {\n    this._camera.detachControl();\n  }\n  zoomByBoundBox(min: Vector3, max: Vector3, autoLimit = false) {\n    const camera = this._camera;\n\n    const framingBehavior = camera.getBehaviorByName(\n      \"Framing\"\n    ) as FramingBehavior;\n    if (framingBehavior) {\n      framingBehavior.framingTime = 10;\n      framingBehavior.elevationReturnTime = -1;\n      framingBehavior.autoCorrectCameraLimitsAndSensibility = autoLimit;\n\n      framingBehavior.zoomOnBoundingInfo(min, max, false, () => {\n        if (autoLimit && \"radius\" in camera) {\n          camera.minZ = camera[\"radius\"] * 0.01;\n        }\n      });\n    } else {\n      if (!this.customFramingBehavior) {\n        this.customFramingBehavior = new CustomFramingBehavior(this._camera);\n      }\n      this.customFramingBehavior.zoomOnBoundingInfo(min, max);\n    }\n  }\n  zoomAll(autoLimit = false) {\n    const filterFun = (mesh: Mesh) =>\n      mesh.isVisible &&\n      mesh.isEnabled() &&\n      mesh.name !== \"WORLD_GROUND\" &&\n      !mesh\n        .getBoundingInfo()\n        .boundingBox.extendSize.equalsWithEpsilon(Vector3.Zero());\n\n    if (this._scene.meshes.filter(filterFun).length) {\n      const worldExtends = this._scene.getWorldExtends(filterFun);\n      const { max, min } = worldExtends;\n      if (max.equalsWithEpsilon(min, 1e-3)) {\n        return;\n      }\n\n      this.zoomByBoundBox(min, max, autoLimit);\n    }\n  }\n  zoomToEntity(en: Entity) {\n    const { extendSize, minimumWorld, maximumWorld } = en.BoundingBox;\n    if (extendSize.equalsWithEpsilon(Vector3.Zero())) {\n      console.log(\"空包围盒\");\n      return;\n    }\n\n    this.zoomByBoundBox(minimumWorld, maximumWorld);\n  }\n  initOrthCamera() {\n    this.updateOrthCamera();\n    this._camera.inputs.attached.mousewheel.detachControl();\n    this.customWheel = this._scene.onPointerObservable.add((p) => {\n      if (!this.EnableZoom) return;\n      const event = p.event as IWheelEvent;\n\n      let wheelDelta = 0;\n\n      if (event.wheelDelta) {\n        wheelDelta = -event.wheelDelta;\n      } else {\n        wheelDelta = -(event.deltaY || event.detail) * 60;\n      }\n\n      this.zoomScale += wheelDelta / (this.wheelSpeed * 100);\n\n      if (this.zoomScale < 0) {\n        this.zoomScale = 0.001;\n        return;\n      }\n\n      this.updateOrthCamera();\n      this.onZommScaleChangeObserver.notifyObservers(this.zoomScale);\n    }, PointerEventTypes.POINTERWHEEL);\n  }\n  updateOrthCamera() {\n    this._camera.orthoTop = this.Radius * this.zoomScale;\n    this._camera.orthoBottom = -this.Radius * this.zoomScale;\n    this._camera.orthoLeft = -this.Radius * this.zoomScale * this.Aspect;\n    this._camera.orthoRight = this.Radius * this.zoomScale * this.Aspect;\n    this._camera.metadata = {\n      zoomScale: this.zoomScale,\n      size: this.Radius * this.zoomScale,\n    };\n  }\n  flyTo(option: ICameraAnimateOption): UndefinedType<IAnimateReturn> {\n    if (this._animateGroup) {\n      // this._animateGroup.reset();\n      this._animateGroup.dispose();\n      this._animateGroup = null;\n    }\n\n    let { target, position, time = 1, complete, loop = false } = option;\n\n    if (!target) {\n      console.error(\"必须传入目标点\");\n      return;\n    }\n\n    const targetVector =\n      target instanceof Entity ? target.Position : iVector2Vector(target);\n\n    const currentGroup = new AnimationGroup(\"camera-fly-group\");\n\n    const targetAninmate = new Animation(\n      \"camera-fly-target\",\n      \"target\",\n      30,\n      Animation.ANIMATIONTYPE_VECTOR3\n    );\n\n    targetAninmate.setKeys([\n      {\n        frame: 0,\n        value: this._camera.target.clone(),\n      },\n      {\n        frame: time * 30,\n        value: targetVector,\n      },\n    ]);\n\n    currentGroup.addTargetedAnimation(targetAninmate, this._camera);\n\n    if (position) {\n      const positionAninmate = new Animation(\n        \"camera-fly-position\",\n        \"position\",\n        30,\n        Animation.ANIMATIONTYPE_VECTOR3\n      );\n\n      const posKeyFrames: IAnimationKey[] = [\n        {\n          frame: 0,\n          value: this._camera.position.clone(),\n        },\n        {\n          frame: time * 30,\n          value: iVector2Vector(position),\n        },\n      ];\n\n      positionAninmate.setKeys(posKeyFrames);\n      currentGroup.addTargetedAnimation(positionAninmate, this._camera);\n    }\n\n    currentGroup.normalize(0, 100);\n\n    currentGroup.play(loop);\n\n    currentGroup.onAnimationGroupPlayObservable.add(() => {\n      this._flying = true;\n    });\n    currentGroup.onAnimationEndObservable.add(() => {\n      complete?.();\n      this._flying = false;\n    });\n\n    this._animateGroup = currentGroup;\n\n    return {\n      clear: () => {\n        currentGroup.dispose();\n        this._animateGroup = null;\n      },\n      stop: () => currentGroup.stop(),\n      pause: () => currentGroup.pause(),\n      reset: () => currentGroup.reset(),\n      restart: () => currentGroup.restart(),\n    };\n  }\n  moveTo(option: {\n    alpha?: number;\n    beta?: number;\n    radius?: number;\n    target?: IVector3;\n    entity?: Entity;\n    position?: IVector3;\n    time?: number;\n    type?: string;\n  }) {\n    return null;\n  }\n  moveByPath(option: { path: (Vector3 | IVector3)[]; time: number }) {}\n  destory() {\n    if (this._camera) this._camera.dispose();\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(2);\n    filer.write(this._target.x);\n    filer.write(this._target.y);\n    filer.write(this._target.z);\n    filer.write(this.zoomScale);\n    filer.write(this.size);\n    filer.write(this._mode);\n    filer.write(this._enable);\n  }\n  readFile(file: HCFiler): void {\n    const ver = file.read();\n    this._target.x = file.read();\n    this._target.y = file.read();\n    this._target.z = file.read();\n    this.zoomScale = file.read();\n    this.size = file.read();\n    this._mode = file.read();\n    if (ver > 1) {\n      this._enable = file.read();\n    }\n  }\n}\n","import {\n  ArcRotateCameraPointersInput,\n  Camera,\n  IPointerEvent,\n  Nullable,\n  PointerTouch,\n} from \"../../babylon\";\n\nexport class CustomArcRotateCameraPointersInput extends ArcRotateCameraPointersInput {\n  public panningSensibility = 1000;\n  private _button = -1;\n\n  private twoFingerActivityCount: number = 0;\n  private isPinching: boolean = false;\n\n  enablePan = false;\n  enableRotate = true;\n  panPercentage = 0.1;\n  /**\n   * 使用单指触控手势来控制摄像头的旋转\n   */\n  useTouchForRotating = false;\n  /**\n   * 使用自然平移模式\n   *\n   * 表现为摄像头的移动更为跟手\n   */\n  useNaturalPan = true;\n  /**\n   * 指定一个两指之间距离，用来判断当前对摄像头进行平移还是缩放\n   *\n   * 当初始状态下的手指间距离大于这个值的时候判定为缩放\n   *\n   * 注意：两点距离在 iPad 上测得的值会比华为平板上的小\n   */\n  pinchToPanMaxDistance = 125;\n\n  private getPanSpeedPercent() {\n    if (this.camera.mode === Camera.PERSPECTIVE_CAMERA)\n      return 1000 / (this.panPercentage * this.camera.radius);\n    else return this.panPercentage * 500;\n  }\n  onButtonDown(evt: IPointerEvent) {\n    this._button = evt.button;\n  }\n  public onTouch(\n    point: Nullable<PointerTouch>,\n    offsetX: number,\n    offsetY: number\n  ) {\n    if (\n      this.panningSensibility !== 0 &&\n      (this._ctrlKey || this._altKey) &&\n      this._button === 1\n    ) {\n      this.pan(offsetX, offsetY);\n    } else {\n      if (this._button === 1) {\n        this.rotate(offsetX, offsetY);\n      } else if (this.useTouchForRotating && point.type === \"touch\") {\n        this.rotate(offsetX, offsetY);\n      }\n    }\n  }\n\n  /**\n   * Called on pointer POINTERMOVE event if multiple touches are active.\n   *\n   * 在`ArcRotateCameraPointersInput` 基础上修改了一些内容\n   * 修改内容\n   * - 根据初始的两指间距离来判断当前是平移手势还是缩放手势\n   * @param pointA\n   * @param pointB\n   * @param previousPinchSquaredDistance\n   * @param pinchSquaredDistance\n   * @param previousMultiTouchPanPosition\n   * @param multiTouchPanPosition\n   */\n  public onMultiTouch(\n    pointA: Nullable<PointerTouch>,\n    pointB: Nullable<PointerTouch>,\n    previousPinchSquaredDistance: number,\n    pinchSquaredDistance: number,\n    previousMultiTouchPanPosition: Nullable<PointerTouch>,\n    multiTouchPanPosition: Nullable<PointerTouch>\n  ): void {\n    if (\n      previousPinchSquaredDistance === 0 &&\n      previousMultiTouchPanPosition === null\n    ) {\n      // First time this method is called for new pinch.\n      // Next time this is called there will be a\n      // previousPinchSquaredDistance and pinchSquaredDistance to compare.\n      return;\n    }\n    if (pinchSquaredDistance === 0 && multiTouchPanPosition === null) {\n      // Last time this method is called at the end of a pinch.\n      return;\n    }\n\n    // Zoom and panning enabled together\n    if (this.multiTouchPanAndZoom) {\n      this.computePinchZoom(previousPinchSquaredDistance, pinchSquaredDistance);\n      this.computeMultiTouchPanning(\n        previousMultiTouchPanPosition,\n        multiTouchPanPosition\n      );\n\n      // Zoom and panning enabled but only one at a time\n    } else if (this.multiTouchPanning && this.pinchZoom) {\n      this.twoFingerActivityCount++;\n\n      if (this.twoFingerActivityCount === 1) {\n        this.isPinching =\n          this.getDistanceBetweenFingers(pointA, pointB) >=\n          this.pinchToPanMaxDistance;\n      }\n\n      if (this.isPinching) {\n        // Since pinch has not been active long, assume we intend to zoom.\n        this.computePinchZoom(\n          previousPinchSquaredDistance,\n          pinchSquaredDistance\n        );\n\n        // Since we are pinching, remain pinching on next iteration.\n        this.isPinching = true;\n      } else {\n        // Pause between pinch starting and moving implies not a zoom event. Pan instead.\n        this.computeMultiTouchPanning(\n          previousMultiTouchPanPosition,\n          multiTouchPanPosition\n        );\n      }\n\n      // Panning enabled, zoom disabled\n    } else if (this.multiTouchPanning) {\n      this.computeMultiTouchPanning(\n        previousMultiTouchPanPosition,\n        multiTouchPanPosition\n      );\n\n      // Zoom enabled, panning disabled\n    } else if (this.pinchZoom) {\n      this.computePinchZoom(previousPinchSquaredDistance, pinchSquaredDistance);\n    }\n  }\n\n  /**\n   * Called each time a new POINTERUP event occurs. Ie, for each button\n   * release.\n   */\n  public onButtonUp(): void {\n    super.onButtonUp();\n    this.twoFingerActivityCount = 0;\n    this.isPinching = false;\n  }\n\n  /**\n   * Called when window becomes inactive.\n   */\n  public onLostFocus(): void {\n    super.onLostFocus();\n    this.twoFingerActivityCount = 0;\n    this.isPinching = false;\n  }\n\n  private pan(offsetX: number, offsetY: number) {\n    if (!this.enablePan) return;\n    const speed = this.getPanSpeedPercent();\n    this.camera.inertialPanningX += -offsetX / speed;\n    this.camera.inertialPanningY += offsetY / speed;\n  }\n  private rotate(offsetX: number, offsetY: number) {\n    if (!this.enableRotate) return;\n    this.camera.inertialAlphaOffset -= offsetX / this.angularSensibilityX;\n    this.camera.inertialBetaOffset -= offsetY / this.angularSensibilityY;\n  }\n\n  /**\n   * Move camera from multi touch panning positions.\n   *\n   * 在`ArcRotateCameraPointersInput` 基础上新增了一些内容\n   * 新增内容\n   * - 在原算法的基础上增加了自然平移的算法\n   * @param previousMultiTouchPanPosition\n   * @param multiTouchPanPosition\n   */\n  private computeMultiTouchPanning(\n    previousMultiTouchPanPosition: Nullable<PointerTouch>,\n    multiTouchPanPosition: Nullable<PointerTouch>\n  ): void {\n    if (\n      this.panningSensibility !== 0 &&\n      previousMultiTouchPanPosition &&\n      multiTouchPanPosition\n    ) {\n      const moveDeltaX =\n        multiTouchPanPosition.x - previousMultiTouchPanPosition.x;\n\n      const moveDeltaY =\n        multiTouchPanPosition.y - previousMultiTouchPanPosition.y;\n\n      // 增加自然平移模式的计算方法\n      if (this.useNaturalPan) {\n        const radius = Math.max(this.camera.radius, -Number.MAX_SAFE_INTEGER);\n        this.camera.inertialPanningX += -(moveDeltaX * radius) / 1750;\n        this.camera.inertialPanningY += (moveDeltaY * radius) / 1750;\n      } else {\n        this.camera.inertialPanningX += -moveDeltaX / this.panningSensibility;\n        this.camera.inertialPanningY += moveDeltaY / this.panningSensibility;\n      }\n    }\n  }\n\n  /**\n   * Move camera from pinch zoom distances.\n   * @param previousPinchSquaredDistance\n   * @param pinchSquaredDistance\n   */\n  private computePinchZoom(\n    previousPinchSquaredDistance: number,\n    pinchSquaredDistance: number\n  ): void {\n    const radius =\n      this.camera.radius || ArcRotateCameraPointersInput.MinimumRadiusForPinch;\n\n    if (this.useNaturalPinchZoom) {\n      this.camera.radius =\n        (radius * Math.sqrt(previousPinchSquaredDistance)) /\n        Math.sqrt(pinchSquaredDistance);\n    } else if (this.pinchDeltaPercentage) {\n      this.camera.inertialRadiusOffset +=\n        (pinchSquaredDistance - previousPinchSquaredDistance) *\n        0.001 *\n        radius *\n        this.pinchDeltaPercentage;\n    } else {\n      this.camera.inertialRadiusOffset +=\n        (pinchSquaredDistance - previousPinchSquaredDistance) /\n        ((this.pinchPrecision *\n          (this.pinchInwards ? 1 : -1) *\n          (this.angularSensibilityX + this.angularSensibilityY)) /\n          2);\n    }\n  }\n\n  private getDistanceBetweenFingers(\n    pointA: Nullable<PointerTouch>,\n    pointB: Nullable<PointerTouch>\n  ) {\n    return Math.sqrt((pointA.x - pointB.x) ** 2 + (pointA.y - pointB.y) ** 2);\n  }\n}\n","/**\n * 判断是否为触控板事件\n * @param e 滚轮事件\n */\nexport function isWheelByTrackpad(e: WheelEvent): boolean {\n  // 这里使用已经废弃的 `wheelDeltaX` 字段来辅助判断当前的滚轮滚动事件是否由触摸板触发\n  const wheelDeltaX: number | undefined = (e as any).wheelDeltaX;\n  const wheelDeltaY: number | undefined = (e as any).wheelDeltaY;\n\n  // 苹果触控板触发的滚轮的事件中 `wheelDeltaX / deltaX === -3` 恒成立，`wheelDeltaY` 和 `delta` 同理\n  // wheelDeltaX 一般不等于 120 的倍数\n  // 通过检测当前的输入是否满足该条件来判断是否为触控板事件\n  const predicate = (delta?: number) =>\n    delta != null &&\n    delta !== 0 &&\n    delta / e.deltaX === -3 &&\n    delta % 120 !== 0;\n\n  if (predicate(wheelDeltaX)) {\n    return true;\n  }\n\n  if (predicate(wheelDeltaY)) {\n    return true;\n  }\n\n  return false;\n}\n","import { ArcRotateCameraMouseWheelInput } from \"@babylonjs/core/Cameras/Inputs/arcRotateCameraMouseWheelInput\";\nimport {\n  EventConstants,\n  IWheelEvent,\n} from \"@babylonjs/core/Events/deviceInputEvents\";\nimport {\n  PointerEventTypes,\n  PointerInfo,\n} from \"@babylonjs/core/Events/pointerEvents\";\nimport { Epsilon } from \"@babylonjs/core/Maths/math.constants\";\nimport { Plane } from \"@babylonjs/core/Maths/math.plane\";\nimport { Scalar } from \"@babylonjs/core/Maths/math.scalar\";\nimport { Matrix, TmpVectors, Vector3 } from \"@babylonjs/core/Maths/math.vector\";\nimport { EventState, Observer } from \"@babylonjs/core/Misc/observable\";\nimport { Tools } from \"@babylonjs/core/Misc/tools\";\nimport { Nullable } from \"@babylonjs/core/types\";\n\nimport { isWheelByTrackpad } from \"./trackpadUtils\";\n\n/**\n * Firefox uses a different scheme to report scroll distances to other\n * browsers. Rather than use complicated methods to calculate the exact\n * multiple we need to apply, let's just cheat and use a constant.\n * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode\n * https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n */\nconst ffMultiplier = 40;\n\n/**\n * 在 `ArcRotateCameraMouseWheelInput` 基础上增加了苹果触控板的双指拖动手势支持\n *\n * 双指上下左右拖动可以控制视角上下左右旋转\n *\n * 按住 `Alt` 键并上下左右拖动可以控制视角上下左右平移\n *\n * **注意**：触控板的输入已经实现了鼠标滚轮的输入，所以使用前应移除鼠标滚轮的输入，及二者选其一\n */\nexport class ArcRotateCameraTrackpadInput extends ArcRotateCameraMouseWheelInput {\n  private _panningSensibility = 50.0;\n\n  private _angularSpeed = 0.01;\n\n  private _isPanningEnabled = true;\n\n  private _isRotationEnabled = true;\n\n  private wheel?: Nullable<(p: PointerInfo, s: EventState) => void>;\n  private observer?: Nullable<Observer<PointerInfo>>;\n  private hitPlane?: Nullable<Plane>;\n\n  public get angularSpeed() {\n    // 当禁止转动视角时，角速度为 0\n    return this._isRotationEnabled ? this._angularSpeed : 0;\n  }\n  public set angularSpeed(v: number) {\n    this._angularSpeed = v;\n  }\n\n  /**\n   * 可通过该参数调整垂直方向的角速度\n   *\n   * 默认垂直方向角速度设置为水平方向角速度的一半，以避免垂直方向速度太快导致操作不便\n   */\n  public verticalAngularSpeedRatio = 0.5;\n\n  public get panningSensibility() {\n    // 当禁止平移时，设置平移系数为非常大的值来模拟禁用\n    // WHY: 通过通用参数来控制操作行为，避免侵入到实现内部\n    return this._isPanningEnabled\n      ? this._panningSensibility\n      : Number.MAX_SAFE_INTEGER;\n  }\n  public set panningSensibility(v: number) {\n    this._panningSensibility = v;\n  }\n\n  /**\n   * 水平平移量\n   */\n  private panningX = 0;\n\n  /**\n   * 水平角增量\n   */\n  private alphaDelta = 0;\n\n  /**\n   * 垂直平移量\n   */\n  private panningY = 0;\n\n  /**\n   * 垂直角增量\n   */\n  private betaDelta = 0;\n\n  /**\n   * @param useMousewheelName 是否伪装成滚轮\n   */\n  constructor(private useMousewheelName = false) {\n    super();\n  }\n\n  /**\n   * 控制是否响应平移操作\n   *\n   * @param enabled 是否启用平移\n   */\n  public enablePanning(enabled = true) {\n    this._isPanningEnabled = enabled;\n  }\n\n  /**\n   * 禁用平移\n   */\n  public disablePanning() {\n    this._isPanningEnabled = false;\n  }\n\n  /**\n   * 控制是否响应旋转操作\n   *\n   * @param enabled 是否启用转动\n   */\n  public enableRotation(enabled = true) {\n    this._isRotationEnabled = enabled;\n  }\n\n  /**\n   * 禁止转动视角\n   */\n  public disableRotation() {\n    this._isRotationEnabled = false;\n  }\n\n  override attachControl(noPreventDefault?: boolean): void {\n    noPreventDefault = Tools.BackCompatCameraNoPreventDefault(arguments);\n    this.wheel = (p) => {\n      //sanity check - this should be a PointerWheel event.\n      if (p.type !== PointerEventTypes.POINTERWHEEL) {\n        return;\n      }\n\n      const event = <IWheelEvent>p.event;\n\n      if (event.ctrlKey) {\n        // 当 `ctrlKey` 为 `true` 的时候表示用户目前使用的双指缩放的手势，为了避免页面被放大\n        // 此时需要使用 `preventDefault()` 拦截该默认行为\n        event.preventDefault();\n      }\n\n      if (isWheelByTrackpad(event as WheelEvent)) {\n        // 左右平移的操作默认情况下会导致页面前进或后退的操作，为了避免页面跳转\n        // 此时需要使用 `preventDefault()` 拦截该默认行为\n        event.preventDefault();\n        // 计算出正负号来控制方向\n        const xSign = Math.sign(event.deltaX);\n        const ySign = Math.sign(event.deltaY);\n\n        if (event.altKey) {\n          this.panningX += xSign / this.panningSensibility;\n          this.panningY += -ySign / this.panningSensibility;\n        } else {\n          this.alphaDelta += xSign * this.angularSpeed;\n          this.betaDelta +=\n            ySign * this.angularSpeed * this.verticalAngularSpeedRatio;\n        }\n\n        return;\n      }\n\n      let delta = 0;\n      const platformScale =\n        event.deltaMode === EventConstants.DOM_DELTA_LINE ? ffMultiplier : 1; // If this happens to be set to DOM_DELTA_LINE, adjust accordingly\n\n      const wheelDelta = -(event.deltaY * platformScale);\n\n      if (this.customComputeDeltaFromMouseWheel) {\n        delta = this.customComputeDeltaFromMouseWheel(wheelDelta, this, event);\n      } else {\n        if (this.wheelDeltaPercentage) {\n          delta = this._computeDeltaFromMouseWheelLegacyEvent(\n            wheelDelta,\n            this.camera.radius\n          );\n\n          // If zooming in, estimate the target radius and use that to compute the delta for inertia\n          // this will stop multiple scroll events zooming in from adding too much inertia\n          if (delta > 0) {\n            let estimatedTargetRadius = this.camera.radius;\n            let targetInertia = this.camera.inertialRadiusOffset + delta;\n            for (let i = 0; i < 20 && Math.abs(targetInertia) > 0.001; i++) {\n              estimatedTargetRadius -= targetInertia;\n              targetInertia *= this.camera.inertia;\n            }\n            estimatedTargetRadius = Scalar.Clamp(\n              estimatedTargetRadius,\n              0,\n              Number.MAX_VALUE\n            );\n            delta = this._computeDeltaFromMouseWheelLegacyEvent(\n              wheelDelta,\n              estimatedTargetRadius\n            );\n          }\n        } else {\n          delta = wheelDelta / (this.wheelPrecision * 40);\n        }\n      }\n\n      if (delta) {\n        if (this.zoomToMouseLocation && this.hitPlane) {\n          this.zoomToMouse(delta);\n        } else {\n          this.camera.inertialRadiusOffset += delta;\n        }\n      }\n\n      if (event.preventDefault) {\n        if (!noPreventDefault) {\n          event.preventDefault();\n        }\n      }\n    };\n\n    this.observer = this.camera\n      .getScene()\n      .onPointerObservable.add(this.wheel, PointerEventTypes.POINTERWHEEL);\n\n    if (this.zoomToMouseLocation) {\n      this.inertialPanning.setAll(0);\n    }\n  }\n\n  /**\n   * Detach the current controls from the specified dom element.\n   */\n  public detachControl(): void {\n    if (this.observer) {\n      this.camera.getScene().onPointerObservable.remove(this.observer);\n      this.observer = null;\n      this.wheel = null;\n    }\n  }\n\n  /**\n   * Update the current camera state depending on the inputs that have been used this frame.\n   * This is a dynamically created lambda to avoid the performance penalty of looping for inputs in the render loop.\n   */\n  public checkInputs(): void {\n    const camera = this.camera;\n\n    camera.inertialAlphaOffset += this.alphaDelta;\n    camera.inertialBetaOffset += this.betaDelta;\n    camera.inertialPanningX += this.panningX;\n    camera.inertialPanningY += this.panningY;\n\n    this.alphaDelta = 0;\n    this.betaDelta = 0;\n    this.panningX = 0;\n    this.panningY = 0;\n\n    if (!this.zoomToMouseLocation) {\n      return;\n    }\n    const motion =\n      0.0 +\n      camera.inertialAlphaOffset +\n      camera.inertialBetaOffset +\n      camera.inertialRadiusOffset;\n    if (motion) {\n      // if zooming is still happening as a result of inertia, then we also need to update\n      // the hit plane.\n      this.updateHitPlane();\n\n      // Note we cannot  use arcRotateCamera.inertialPlanning here because arcRotateCamera panning\n      // uses a different panningInertia which could cause this panning to get out of sync with\n      // the zooming, and for this to work they must be exactly in sync.\n      camera.target.addInPlace(this.inertialPanning);\n      this.inertialPanning.scaleInPlace(camera.inertia);\n      this.zeroIfClose(this.inertialPanning);\n    }\n  }\n\n  /**\n   * 获取当前输入方式的类名\n   *\n   * @returns 默认返回实际类型名称，当 `useMousewheelName` 为 `true` 时返回 `ArcRotateCameraMouseWheelInput`\n   */\n  public override getClassName(): string {\n    return this.useMousewheelName\n      ? super.getClassName()\n      : \"ArcRotateCameraTrackpadInput\";\n  }\n\n  /**\n   * 获取当前输入方式的名称\n   *\n   * @returns 默认返回 `trackpad`，当 `useMousewheelName` 为 `true` 时返回 `mousewheel`\n   */\n  public override getSimpleName(): string {\n    return this.useMousewheelName ? super.getSimpleName() : \"trackpad\";\n  }\n\n  private updateHitPlane() {\n    const camera = this.camera;\n    const direction = camera.target.subtract(camera.position);\n    this.hitPlane = Plane.FromPositionAndNormal(camera.target, direction);\n  }\n\n  // Get position on the hit plane\n  private getPosition(): Vector3 {\n    const camera = this.camera;\n    const scene = camera.getScene();\n\n    // since the _hitPlane is always updated to be orthogonal to the camera position vector\n    // we don't have to worry about this ray shooting off to infinity. This ray creates\n    // a vector defining where we want to zoom to.\n    const ray = scene.createPickingRay(\n      scene.pointerX,\n      scene.pointerY,\n      Matrix.Identity(),\n      camera,\n      false\n    );\n    let distance = 0;\n    if (this.hitPlane) {\n      distance = ray.intersectsPlane(this.hitPlane) ?? 0;\n    }\n\n    // not using this ray again, so modifying its vectors here is fine\n    return ray.origin.addInPlace(ray.direction.scaleInPlace(distance));\n  }\n\n  private inertialPanning: Vector3 = Vector3.Zero();\n\n  private zoomToMouse(delta: number) {\n    const camera = this.camera;\n    const inertiaComp = 1 - camera.inertia;\n    if (camera.lowerRadiusLimit) {\n      const lowerLimit = camera.lowerRadiusLimit ?? 0;\n      if (\n        camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp <\n        lowerLimit\n      ) {\n        delta =\n          (camera.radius - lowerLimit) * inertiaComp -\n          camera.inertialRadiusOffset;\n      }\n    }\n    if (camera.upperRadiusLimit) {\n      const upperLimit = camera.upperRadiusLimit ?? 0;\n      if (\n        camera.radius - (camera.inertialRadiusOffset + delta) / inertiaComp >\n        upperLimit\n      ) {\n        delta =\n          (camera.radius - upperLimit) * inertiaComp -\n          camera.inertialRadiusOffset;\n      }\n    }\n\n    const zoomDistance = delta / inertiaComp;\n    const ratio = zoomDistance / camera.radius;\n    const vec = this.getPosition();\n\n    // Now this vector tells us how much we also need to pan the camera\n    // so the targeted mouse location becomes the center of zooming.\n\n    const directionToZoomLocation = TmpVectors.Vector3[6];\n    vec.subtractToRef(camera.target, directionToZoomLocation);\n    directionToZoomLocation.scaleInPlace(ratio);\n    directionToZoomLocation.scaleInPlace(inertiaComp);\n    this.inertialPanning.addInPlace(directionToZoomLocation);\n\n    camera.inertialRadiusOffset += delta;\n  }\n\n  // Sets x y or z of passed in vector to zero if less than Epsilon.\n  private zeroIfClose(vec: Vector3) {\n    if (Math.abs(vec.x) < Epsilon) {\n      vec.x = 0;\n    }\n    if (Math.abs(vec.y) < Epsilon) {\n      vec.y = 0;\n    }\n    if (Math.abs(vec.z) < Epsilon) {\n      vec.z = 0;\n    }\n  }\n}\n","import { CameraInputTypes } from '@babylonjs/core/Cameras/cameraInputsManager';\nimport { FreeCamera } from '@babylonjs/core/Cameras/freeCamera';\nimport { BaseCameraMouseWheelInput } from '@babylonjs/core/Cameras/Inputs/BaseCameraMouseWheelInput';\nimport type { IWheelEvent } from '@babylonjs/core/Events/deviceInputEvents';\nimport { EventConstants } from '@babylonjs/core/Events/deviceInputEvents';\nimport { PointerEventTypes, PointerInfo } from '@babylonjs/core/Events/pointerEvents';\nimport { Coordinate, Matrix, Vector3 } from '@babylonjs/core/Maths/math';\nimport { Observer } from '@babylonjs/core/Misc/observable';\nimport { Tools } from '@babylonjs/core/Misc/tools';\nimport type { Nullable } from '@babylonjs/core/types';\nimport { isWheelByTrackpad } from \"./trackpadUtils\";\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nenum _CameraProperty {\n  MoveRelative,\n  RotateRelative,\n  MoveScene,\n}\n\n/**\n * 在 `FreeCameraMouseWheelInput` 基础上增加了苹果触控板的双指拖动手势支持\n * \n * 双指上下左右拖动可以控制视角上下左右旋转\n * \n * **注意**：触控板的输入已经实现了鼠标滚轮的输入，所以使用前应移除鼠标滚轮的输入，及二者选其一\n */\nexport class FreeCameraTrackpadInput extends BaseCameraMouseWheelInput {\n  /**\n   * Defines the camera the input is attached to.\n   */\n  public camera!: FreeCamera;\n\n  private wheel: Nullable<(pointer: PointerInfo) => void> = null;\n  private observer: Nullable<Observer<PointerInfo>> = null;\n\n  /**\n   * 获取当前输入方式的类名\n   * \n   * @returns 默认返回实际类型，当 `useMousewheelName` 为 `true` 时返回 `FreeCameraMouseWheelInput`\n   */\n  public override getClassName(): string {\n    return this.useMousewheelName ? 'FreeCameraMouseWheelInput' : \"FreeCameraTrackpadInput\";\n  }\n\n  /**\n   * 获取当前输入方式的名称\n   * \n   * @returns 默认返回 `trackpad`，当 `useMousewheelName` 为 `true` 时返回 `mousewheel`\n   */\n  public override getSimpleName() {\n    return this.useMousewheelName ? super.getSimpleName() : 'trackpad';\n  }\n\n  /**\n   * Set which movement axis (relative to camera's orientation) the mouse\n   * wheel's X axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelXMoveRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelXAction !== _CameraProperty.MoveRelative) {\n      // Attempting to clear different wheelXAction.\n      return;\n    }\n    this._wheelXAction = _CameraProperty.MoveRelative;\n    this._wheelXActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to camera's orientation) the\n   * mouse wheel's X axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelXMoveRelative(): Nullable<Coordinate> {\n    if (this._wheelXAction !== _CameraProperty.MoveRelative) {\n      return null;\n    }\n    return this._wheelXActionCoordinate;\n  }\n\n  /**\n   * Set which movement axis (relative to camera's orientation) the mouse\n   * wheel's Y axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelYMoveRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelYAction !== _CameraProperty.MoveRelative) {\n      // Attempting to clear different wheelYAction.\n      return;\n    }\n    this._wheelYAction = _CameraProperty.MoveRelative;\n    this._wheelYActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to camera's orientation) the\n   * mouse wheel's Y axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelYMoveRelative(): Nullable<Coordinate> {\n    if (this._wheelYAction !== _CameraProperty.MoveRelative) {\n      return null;\n    }\n    return this._wheelYActionCoordinate;\n  }\n\n  /**\n   * Set which movement axis (relative to camera's orientation) the mouse\n   * wheel's Z axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelZMoveRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelZAction !== _CameraProperty.MoveRelative) {\n      // Attempting to clear different wheelZAction.\n      return;\n    }\n    this._wheelZAction = _CameraProperty.MoveRelative;\n    this._wheelZActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to camera's orientation) the\n   * mouse wheel's Z axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelZMoveRelative(): Nullable<Coordinate> {\n    if (this._wheelZAction !== _CameraProperty.MoveRelative) {\n      return null;\n    }\n    return this._wheelZActionCoordinate;\n  }\n\n  /**\n   * Set which rotation axis (relative to camera's orientation) the mouse\n   * wheel's X axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelXRotateRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelXAction !== _CameraProperty.RotateRelative) {\n      // Attempting to clear different wheelXAction.\n      return;\n    }\n    this._wheelXAction = _CameraProperty.RotateRelative;\n    this._wheelXActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured rotation axis (relative to camera's orientation) the\n   * mouse wheel's X axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelXRotateRelative(): Nullable<Coordinate> {\n    if (this._wheelXAction !== _CameraProperty.RotateRelative) {\n      return null;\n    }\n    return this._wheelXActionCoordinate;\n  }\n\n  /**\n   * Set which rotation axis (relative to camera's orientation) the mouse\n   * wheel's Y axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelYRotateRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelYAction !== _CameraProperty.RotateRelative) {\n      // Attempting to clear different wheelYAction.\n      return;\n    }\n    this._wheelYAction = _CameraProperty.RotateRelative;\n    this._wheelYActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured rotation axis (relative to camera's orientation) the\n   * mouse wheel's Y axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelYRotateRelative(): Nullable<Coordinate> {\n    if (this._wheelYAction !== _CameraProperty.RotateRelative) {\n      return null;\n    }\n    return this._wheelYActionCoordinate;\n  }\n\n  /**\n   * Set which rotation axis (relative to camera's orientation) the mouse\n   * wheel's Z axis controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelZRotateRelative(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelZAction !== _CameraProperty.RotateRelative) {\n      // Attempting to clear different wheelZAction.\n      return;\n    }\n    this._wheelZAction = _CameraProperty.RotateRelative;\n    this._wheelZActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured rotation axis (relative to camera's orientation) the\n   * mouse wheel's Z axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelZRotateRelative(): Nullable<Coordinate> {\n    if (this._wheelZAction !== _CameraProperty.RotateRelative) {\n      return null;\n    }\n    return this._wheelZActionCoordinate;\n  }\n\n  /**\n   * Set which movement axis (relative to the scene) the mouse wheel's X axis\n   * controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelXMoveScene(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelXAction !== _CameraProperty.MoveScene) {\n      // Attempting to clear different wheelXAction.\n      return;\n    }\n    this._wheelXAction = _CameraProperty.MoveScene;\n    this._wheelXActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to the scene) the mouse wheel's\n   * X axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelXMoveScene(): Nullable<Coordinate> {\n    if (this._wheelXAction !== _CameraProperty.MoveScene) {\n      return null;\n    }\n    return this._wheelXActionCoordinate;\n  }\n\n  /**\n   * Set which movement axis (relative to the scene) the mouse wheel's Y axis\n   * controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelYMoveScene(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelYAction !== _CameraProperty.MoveScene) {\n      // Attempting to clear different wheelYAction.\n      return;\n    }\n    this._wheelYAction = _CameraProperty.MoveScene;\n    this._wheelYActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to the scene) the mouse wheel's\n   * Y axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelYMoveScene(): Nullable<Coordinate> {\n    if (this._wheelYAction !== _CameraProperty.MoveScene) {\n      return null;\n    }\n    return this._wheelYActionCoordinate;\n  }\n\n  /**\n   * Set which movement axis (relative to the scene) the mouse wheel's Z axis\n   * controls.\n   * @param axis The axis to be moved. Set null to clear.\n   */\n  public set wheelZMoveScene(axis: Nullable<Coordinate>) {\n    if (axis === null && this._wheelZAction !== _CameraProperty.MoveScene) {\n      // Attempting to clear different wheelZAction.\n      return;\n    }\n    this._wheelZAction = _CameraProperty.MoveScene;\n    this._wheelZActionCoordinate = axis;\n  }\n\n  /**\n   * Get the configured movement axis (relative to the scene) the mouse wheel's\n   * Z axis controls.\n   * @returns The configured axis or null if none.\n   */\n  public get wheelZMoveScene(): Nullable<Coordinate> {\n    if (this._wheelZAction !== _CameraProperty.MoveScene) {\n      return null;\n    }\n    return this._wheelZActionCoordinate;\n  }\n\n\n  /**\n   * @param useMousewheelName 是否伪装成滚轮\n   */\n  constructor(private useMousewheelName = true) {\n    super();\n  }\n\n  public override attachControl(noPreventDefault?: boolean): void {\n    noPreventDefault = Tools.BackCompatCameraNoPreventDefault(arguments);\n\n    this.wheel = (pointer) => {\n      // sanity check - this should be a PointerWheel event.\n      if (pointer.type !== PointerEventTypes.POINTERWHEEL) {\n        return;\n      }\n\n      const event = <IWheelEvent>pointer.event;\n\n      if (event.ctrlKey) {\n        // 当 `ctrlKey` 为 `true` 的时候表示用户目前使用的双指缩放的手势，为了避免页面被放大\n        // 此时需要使用 `preventDefault()` 拦截该默认行为\n        event.preventDefault();\n\n        this.wheelXMoveRelative = Coordinate.X;\n        this.wheelYMoveRelative = Coordinate.Z;\n      } else if (isWheelByTrackpad(event as WheelEvent)) {\n        // 左右平移的操作默认情况下会导致页面前进或后退的操作，为了避免页面跳转\n        // 此时需要使用 `preventDefault()` 拦截该默认行为\n        event.preventDefault();\n\n        this.wheelXRotateRelative = Coordinate.Y;\n        this.wheelYRotateRelative = Coordinate.X;\n      } else {\n        this.wheelXMoveRelative = Coordinate.X;\n        this.wheelYMoveRelative = Coordinate.Z;\n      }\n\n      const platformScale = event.deltaMode === EventConstants.DOM_DELTA_LINE ? this.ffMultiplier : 1; // If this happens to be set to DOM_DELTA_LINE, adjust accordingly\n\n      this._wheelDeltaX += (this.wheelPrecisionX * platformScale * event.deltaX) / this.normalize;\n      this._wheelDeltaY -= (this.wheelPrecisionY * platformScale * event.deltaY) / this.normalize;\n      this._wheelDeltaZ += (this.wheelPrecisionZ * platformScale * event.deltaZ) / this.normalize;\n\n      if (event.preventDefault) {\n        if (!noPreventDefault) {\n          event.preventDefault();\n        }\n      }\n    }\n\n    this.observer = this.camera.getScene().onPointerObservable.add(this.wheel, PointerEventTypes.POINTERWHEEL);\n  }\n\n  /**\n   * Detach the current controls from the specified dom element.\n   */\n  public detachControl(): void {\n    if (this.observer) {\n      this.camera.getScene().onPointerObservable.remove(this.observer);\n      this.observer = null;\n      this.wheel = null;\n    }\n\n    if (this.onChangedObservable) {\n      this.onChangedObservable.clear();\n    }\n  }\n\n  /**\n   * Called for each rendered frame.\n   */\n  public checkInputs(): void {\n    if (this._wheelDeltaX === 0 && this._wheelDeltaY === 0 && this._wheelDeltaZ == 0) {\n      return;\n    }\n\n    // Clear the camera properties that we might be updating.\n    this._moveRelative.setAll(0);\n    this._rotateRelative.setAll(0);\n    this._moveScene.setAll(0);\n\n    // Set the camera properties that are to be updated.\n    this._updateCamera();\n\n    if (this.camera.getScene().useRightHandedSystem) {\n      // TODO: Does this need done for worldUpdate too?\n      this._moveRelative.z *= -1;\n    }\n\n    // Convert updates relative to camera to world position update.\n    const cameraTransformMatrix = Matrix.Zero();\n    this.camera.getViewMatrix().invertToRef(cameraTransformMatrix);\n\n    const transformedDirection = Vector3.Zero();\n    Vector3.TransformNormalToRef(this._moveRelative, cameraTransformMatrix, transformedDirection);\n\n    // Apply updates to camera position.\n    this.camera.cameraRotation.x += this._rotateRelative.x / 200;\n    this.camera.cameraRotation.y += this._rotateRelative.y / 200;\n    this.camera.cameraDirection.addInPlace(transformedDirection);\n    this.camera.cameraDirection.addInPlace(this._moveScene);\n\n    // Call the base class implementation to handle observers and do cleanup.\n    super.checkInputs();\n  }\n\n  private _moveRelative = Vector3.Zero();\n  private _rotateRelative = Vector3.Zero();\n  private _moveScene = Vector3.Zero();\n\n  /**\n   * These are set to the desired default behaviour.\n   */\n  private _wheelXAction: Nullable<_CameraProperty> = _CameraProperty.MoveRelative;\n  private _wheelXActionCoordinate: Nullable<Coordinate> = Coordinate.X;\n  private _wheelYAction: Nullable<_CameraProperty> = _CameraProperty.MoveRelative;\n  private _wheelYActionCoordinate: Nullable<Coordinate> = Coordinate.Z;\n  private _wheelZAction: Nullable<_CameraProperty> = null;\n  private _wheelZActionCoordinate: Nullable<Coordinate> = null;\n\n  /**\n   * Update the camera according to any configured properties for the 3\n   * mouse-wheel axis.\n   */\n  private _updateCamera(): void {\n    // Do the camera updates for each of the 3 touch-wheel axis.\n    this._updateCameraProperty(this._wheelDeltaX, this._wheelXAction, this._wheelXActionCoordinate);\n    this._updateCameraProperty(this._wheelDeltaY, this._wheelYAction, this._wheelYActionCoordinate);\n    this._updateCameraProperty(this._wheelDeltaZ, this._wheelZAction, this._wheelZActionCoordinate);\n  }\n\n  /**\n   * Update one property of the camera.\n   * @param value\n   * @param cameraProperty\n   * @param coordinate\n   */\n  private _updateCameraProperty(\n    /* Mouse-wheel delta. */\n    value: number,\n    /* Camera property to be changed. */\n    cameraProperty: Nullable<_CameraProperty>,\n    /* Axis of Camera property to be changed. */\n    coordinate: Nullable<Coordinate>\n  ): void {\n    if (value === 0) {\n      // Mouse wheel has not moved.\n      return;\n    }\n    if (cameraProperty === null || coordinate === null) {\n      // Mouse wheel axis not configured.\n      return;\n    }\n\n    let action = null;\n    switch (cameraProperty) {\n      case _CameraProperty.MoveRelative:\n        action = this._moveRelative;\n        break;\n      case _CameraProperty.RotateRelative:\n        action = this._rotateRelative;\n        break;\n      case _CameraProperty.MoveScene:\n        action = this._moveScene;\n        break;\n    }\n\n    // 与鼠标的滚轮不同，触控板的水平和垂直方向的位移是可以同时发生的\n    // 所以，这里与原版 `FreeCameraMouseWheelInput#_updateCameraProperty` 的实现不同\n    // 需要在设置 action 的时候将所有方向都设置上去，避免只有一个方向生效\n    switch (coordinate) {\n      case Coordinate.X:\n        action.set(value, action.y, action.z);\n        break;\n      case Coordinate.Y:\n        action.set(action.x, value, action.z);\n        break;\n      case Coordinate.Z:\n        action.set(action.x, action.y, value);\n        break;\n    }\n  }\n\n  /**\n   * Firefox uses a different scheme to report scroll distances to other\n   * browsers. Rather than use complicated methods to calculate the exact\n   * multiple we need to apply, let's just cheat and use a constant.\n   * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaMode\n   * https://stackoverflow.com/questions/20110224/what-is-the-height-of-a-line-in-a-wheel-event-deltamode-dom-delta-line\n   */\n  private readonly ffMultiplier = 12;\n\n  /**\n   * Different event attributes for wheel data fall into a few set ranges.\n   * Some relevant but dated date here:\n   * https://stackoverflow.com/questions/5527601/normalizing-mousewheel-speed-across-browsers\n   */\n  private readonly normalize = 120;\n}\n\n(<any>CameraInputTypes)[\"FreeCameraTrackpadInput\"] = FreeCameraTrackpadInput;\n","import { HCFiler, IVector3 } from \"@hc/core\";\n\nimport {\n  Animation,\n  AnimationGroup,\n  ArcRotateCamera,\n  ArcRotateCameraMouseWheelInput,\n  Camera,\n  IWheelEvent,\n  Mesh,\n  Observable,\n  Scalar,\n  Scene,\n  Vector3,\n} from \"../../babylon\";\nimport { DEFAULT_BETA, DEFAULT_RADIUS } from \"../../contants\";\nimport {\n  DEFAULT_ALPHA,\n  ORTH_SIZE,\n  SKYBOX_SIZE,\n} from \"../../contants/constants\";\nimport { AppEvent } from \"../../core/AppEvent\";\nimport { Entity } from \"../../entitys\";\nimport {\n  IAnimateReturn,\n  ICameraRotationAnimation,\n} from \"../../types/animation.types\";\nimport { CameraEnable, CameraViewMode } from \"../../types/camera.types\";\nimport { UndefinedType } from \"../../types/types\";\nimport { isMobile } from \"../../utils/os\";\nimport {\n  iVector2Vector,\n  setVecLike2Vector,\n  vec2Vec3Like,\n} from \"../../utils/vector\";\nimport { BaseCamera } from \"./BaseCamera\";\nimport { CustomArcRotateCameraPointersInput } from \"./CustomArcRotateCameraPointersInput\";\nimport { ArcRotateCameraTrackpadInput } from \"./trackpadInput\";\n\nexport class ArcRotateCameraControl extends BaseCamera {\n  protected _camera: ArcRotateCamera;\n  protected _pointerInput: CustomArcRotateCameraPointersInput;\n  private _radius = DEFAULT_RADIUS;\n  private _alpha = DEFAULT_ALPHA;\n  private _beta = DEFAULT_BETA;\n  protected _lowerRadiusLimit = 0.01;\n  protected _upperRadiusLimit: number;\n  private _lowerAlphaLimit: number;\n  private _upperAlphaLimit: number;\n  private _lowerBetaLimit: number;\n  private _upperBetaLimit: number;\n  private _panningAxis = new Vector3(1, 1, 0);\n  private _originPanTarget = Vector3.Zero();\n  private _panDistance: number = null;\n  private _minZ = 1;\n  private _maxZ = SKYBOX_SIZE;\n  public onRadiusChangeObserver = new Observable<ArcRotateCamera>();\n  constructor(protected _scene: Scene, protected _canvas: HTMLCanvasElement) {\n    super(_scene, _canvas);\n    if (!_scene || !_canvas) return;\n    this.init();\n    this._camera.onViewMatrixChangedObservable.add((evt: ArcRotateCamera) => {\n      this._alpha = evt.alpha;\n      this._beta = evt.beta;\n      this._target.copyFrom(evt.target);\n\n      if (evt.radius !== this._radius) {\n        this.onRadiusChangeObserver.notifyObservers(evt);\n      }\n      if (this._mode === Camera.PERSPECTIVE_CAMERA) this._radius = evt.radius;\n\n      AppEvent.trigger({ type: \"CameraUpdate\", target: this as any });\n    });\n  }\n\n  get Alpha() {\n    return this._alpha;\n  }\n  set Alpha(v: number) {\n    this._alpha = v;\n    this._camera.alpha = v;\n  }\n  get Beta() {\n    return this._beta;\n  }\n  set Beta(v: number) {\n    this._beta = v;\n    this._camera.beta = v;\n  }\n  get Aspect() {\n    return this._canvas.width / this._canvas.height;\n  }\n  get EnablePan() {\n    return !!(this._enable & CameraEnable.Pan);\n  }\n  set EnablePan(v: boolean) {\n    if (v) {\n      this._enable |= CameraEnable.Pan;\n    } else {\n      this._enable &= ~CameraEnable.Pan;\n    }\n    this._pointerInput.enablePan = v;\n  }\n  get EnableRotate() {\n    return !!(this._enable & CameraEnable.Roate);\n  }\n  set EnableRotate(v: boolean) {\n    if (v) {\n      this._enable |= CameraEnable.Roate;\n    } else {\n      this._enable &= ~CameraEnable.Roate;\n    }\n    this._pointerInput.enableRotate = v;\n  }\n  get EnableZoom() {\n    return !!(this._enable & CameraEnable.Zoom);\n  }\n  set EnableZoom(v: boolean) {\n    if (v === this.EnableZoom) return;\n    if (v) {\n      this._enable |= CameraEnable.Zoom;\n    } else {\n      this._enable &= ~CameraEnable.Zoom;\n    }\n    if (this._mode === Camera.PERSPECTIVE_CAMERA) {\n      if (v) {\n        this._camera.inputs.attached.mousewheel.attachControl();\n      } else this._camera.inputs.attached.mousewheel.detachControl();\n    }\n  }\n  get Radius() {\n    return this._radius;\n  }\n  set Radius(v: number) {\n    this._radius = v;\n    this._camera.radius = v;\n  }\n  get IsFlying() {\n    return this._flying;\n  }\n  get Position() {\n    return {\n      x: this._camera.position.x,\n      y: this._camera.position.y,\n      z: this._camera.position.z,\n    };\n  }\n  set Position(v: IVector3) {\n    const position = new Vector3();\n    setVecLike2Vector(position, v);\n    this._camera.setPosition(position);\n    this._position.copyFrom(position);\n  }\n  get Target() {\n    return { x: this._target.x, y: this._target.y, z: this._target.z };\n  }\n  set Target(v: IVector3) {\n    setVecLike2Vector(this._target, v);\n    this._camera.setTarget(this._target);\n  }\n  get LowerRadiusLimit() {\n    return this._lowerRadiusLimit;\n  }\n  set LowerRadiusLimit(v: number) {\n    if (v === this._lowerRadiusLimit) return;\n    this._lowerRadiusLimit = v;\n    this.update();\n  }\n  get UpperRadiusLimit() {\n    return this._upperRadiusLimit;\n  }\n  set UpperRadiusLimit(v: number) {\n    if (v === this._upperRadiusLimit) return;\n    this._upperRadiusLimit = v;\n    this.update();\n  }\n  get LowerAlphaLimit() {\n    return this._lowerAlphaLimit;\n  }\n  set LowerAlphaLimit(v: number) {\n    if (v === this._lowerAlphaLimit) return;\n    this._lowerAlphaLimit = v;\n    this.update();\n  }\n  get UpperAlphaLimit() {\n    return this._upperAlphaLimit;\n  }\n  set UpperAlphaLimit(v: number) {\n    if (v === this._upperAlphaLimit) return;\n    this._upperAlphaLimit = v;\n    this.update();\n  }\n  get LowerBetaLimit() {\n    return this._lowerBetaLimit;\n  }\n  set LowerBetaLimit(v: number) {\n    if (v === this._lowerBetaLimit) return;\n    this._lowerBetaLimit = v;\n    this.update();\n  }\n  get UpperBetaLimit() {\n    return this._upperBetaLimit;\n  }\n  set UpperBetaLimit(v: number) {\n    if (v === this._upperBetaLimit) return;\n    this._upperBetaLimit = v;\n    this.update();\n  }\n  get PanningAxis() {\n    return vec2Vec3Like(this._panningAxis);\n  }\n  set PanningAxis(v: IVector3) {\n    setVecLike2Vector(this._panningAxis, v);\n    this.update();\n  }\n  get OriginPanTarget() {\n    return vec2Vec3Like(this._originPanTarget);\n  }\n  set OriginPanTarget(v: IVector3) {\n    setVecLike2Vector(this._originPanTarget, v);\n    this.update();\n  }\n  get PanDistance() {\n    return this._panDistance;\n  }\n  set PanDistance(v: number) {\n    if (v === this._panDistance) return;\n    this._panDistance = v;\n    this.update();\n  }\n  get MinZ() {\n    return this._minZ;\n  }\n  set MinZ(v: number) {\n    if (v === this._minZ) return;\n    this._minZ = v;\n    this.update();\n  }\n  get MaxZ() {\n    return this._maxZ;\n  }\n  set MaxZ(v: number) {\n    if (v === this._maxZ) return;\n    this._maxZ = v;\n    this.update();\n  }\n\n  /**\n   * 使用自然缩放\n   *\n   * 使用捏合手势进行场景缩放的时候更加跟手\n   */\n  get UseNaturalPinchZoom() {\n    return this._pointerInput.useNaturalPinchZoom;\n  }\n  set UseNaturalPinchZoom(v: boolean) {\n    this._pointerInput.useNaturalPinchZoom = v;\n  }\n\n  /**\n   * 使用单指触控手势来控制摄像头的旋转\n   */\n  get UseTouchForRotating() {\n    return this._pointerInput.useTouchForRotating;\n  }\n  set UseTouchForRotating(v: boolean) {\n    this._pointerInput.useTouchForRotating = v;\n  }\n\n  zoomTo(target: Vector3, size: Vector3) {\n    this._camera.setTarget(new Vector3(target.x, target.y));\n\n    if (this.Mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      this.zoomScale = 1.2;\n      this.Size = Math.max(...size.asArray()) / 2;\n      this._camera.position = new Vector3(target.x, target.y, 1);\n    } else {\n      this._camera.alpha = 0;\n      this._camera.beta = 0;\n\n      this._camera.radius = Math.max(...size.asArray()) * this.Aspect;\n      this._camera.position = new Vector3(\n        target.x,\n        target.y,\n        this._camera.radius\n      );\n    }\n  }\n  zoomByBoundBox(min: Vector3, max: Vector3, autoLimit = false) {\n    const camera = this._camera;\n    camera.useFramingBehavior = true;\n    super.zoomByBoundBox(min, max, autoLimit);\n    camera.useFramingBehavior = false;\n    if (!autoLimit) {\n      camera.lowerRadiusLimit = this._lowerRadiusLimit;\n    }\n  }\n  zoomAll(autoLimit = false) {\n    const filterFun = (mesh: Mesh) =>\n      mesh.isVisible &&\n      mesh.isEnabled() &&\n      mesh.name !== \"WORLD_GROUND\" &&\n      !mesh\n        .getBoundingInfo()\n        .boundingBox.extendSize.equalsWithEpsilon(Vector3.Zero());\n\n    if (this._scene.meshes.filter(filterFun).length) {\n      const worldExtends = this._scene.getWorldExtends(filterFun);\n      const { max, min } = worldExtends;\n      if (max.equalsWithEpsilon(min, 1e-3)) {\n        return;\n      }\n\n      this.zoomByBoundBox(min, max, autoLimit);\n    }\n  }\n\n  init() {\n    const camera = new ArcRotateCamera(\n      \"MainArcRotateCamera\",\n      this._alpha,\n      this._beta,\n      this._radius,\n      this._target,\n      this._scene\n    );\n\n    this._camera = camera;\n    camera.mode = this._mode;\n    camera.wheelPrecision = this.wheelSpeed;\n    camera.wheelDeltaPercentage = this.wheelDeltaPercentage;\n    camera.maxZ = this._maxZ;\n    camera.minZ = this._minZ;\n    camera.inertia = 0.5;\n    camera.panningInertia = 0.5;\n\n    camera.lowerRadiusLimit = this._lowerRadiusLimit;\n\n    // Positions the camera overwriting alpha, beta, radius\n    // camera.setPosition(new Vector3(0, 0, this._radius));\n\n    if (!isMobile()) {\n      this._pointerInput = new CustomArcRotateCameraPointersInput();\n      // 平移，缩放二选一\n      this._pointerInput.multiTouchPanAndZoom = false;\n      camera.inputs.removeByType(\"ArcRotateCameraPointersInput\");\n\n      this._pointerInput.enableRotate = this.EnableRotate;\n      this._pointerInput.enablePan = this.EnablePan;\n\n      camera.inputs.add(this._pointerInput);\n\n      camera.inputs.removeByType(\"ArcRotateCameraMouseWheelInput\");\n\n      camera.inputs.add(new ArcRotateCameraTrackpadInput(true));\n    } else {\n      this._pointerInput = camera.inputs.attached[\"pointers\"] as any;\n      this._pointerInput.panningSensibility = 1;\n      this._pointerInput.pinchPrecision = 0.1;\n\n      this._pointerInput.multiTouchPanAndZoom = false;\n    }\n\n    const wheelInput = camera.inputs.attached\n      .mousewheel as ArcRotateCameraMouseWheelInput;\n\n    if (wheelInput)\n      wheelInput.customComputeDeltaFromMouseWheel = (\n        wheelDelta: number,\n        input: ArcRotateCameraMouseWheelInput,\n        event: IWheelEvent\n      ) => {\n        if (!this.EnableZoom) return 0;\n        let delta = 0;\n        if (this.wheelDeltaPercentage && !event.altKey) {\n          delta = this._computeDeltaFromMouseWheelLegacyEvent(\n            wheelDelta,\n            camera.radius\n          );\n\n          // If zooming in, estimate the target radius and use that to compute the delta for inertia\n          // this will stop multiple scroll events zooming in from adding too much inertia\n          if (delta > 0) {\n            let estimatedTargetRadius = camera.radius;\n            let targetInertia = camera.inertialRadiusOffset + delta;\n            for (let i = 0; i < 20 && Math.abs(targetInertia) > 0.001; i++) {\n              estimatedTargetRadius -= targetInertia;\n              targetInertia *= camera.inertia;\n            }\n            estimatedTargetRadius = Scalar.Clamp(\n              estimatedTargetRadius,\n              0,\n              Number.MAX_VALUE\n            );\n            delta = this._computeDeltaFromMouseWheelLegacyEvent(\n              wheelDelta,\n              estimatedTargetRadius\n            );\n          }\n        } else {\n          delta = wheelDelta / (camera.wheelPrecision * 40);\n        }\n\n        return delta;\n      };\n\n    if (this._mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      this.initOrthCamera();\n    } else {\n      this.initPerCamera();\n    }\n  }\n  set WheelSpeed(v: number) {\n    this._camera.wheelPrecision = this.wheelSpeed;\n  }\n  get Mode() {\n    return this._mode;\n  }\n  /**0-透视相机 1-正交相机 */\n  set Mode(v: number) {\n    if (v !== Camera.ORTHOGRAPHIC_CAMERA && v !== Camera.PERSPECTIVE_CAMERA)\n      return;\n\n    this._mode = v;\n    this._camera.mode = v;\n    if (v === Camera.ORTHOGRAPHIC_CAMERA) {\n      this._camera.radius = ORTH_SIZE;\n      this.initOrthCamera();\n    } else {\n      this._camera.radius = this._radius;\n      this.initPerCamera();\n    }\n  }\n  set ViewMode(v: CameraViewMode) {\n    switch (v) {\n      case CameraViewMode.Up:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 0, 10));\n        break;\n      case CameraViewMode.Down:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 0, -10));\n        break;\n      case CameraViewMode.Left:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(-10));\n        break;\n      case CameraViewMode.Right:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(10));\n        break;\n      case CameraViewMode.Front:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 10));\n        break;\n      case CameraViewMode.Back:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, -10));\n        break;\n      case CameraViewMode.SW:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(10, 10, 10));\n        break;\n      default:\n        break;\n    }\n  }\n\n  initPerCamera() {\n    if (this.customWheel) {\n      this._scene.onPointerObservable.remove(this.customWheel);\n      this.customWheel = null;\n      if (this.EnableZoom)\n        this._camera.inputs.attached.mousewheel.attachControl();\n    }\n  }\n  attachControl() {\n    // This attaches the camera to the canvas\n    this._camera.attachControl(this._canvas, true, true);\n  }\n  detachControl() {\n    this._camera.detachControl();\n  }\n  lookAt(target: IVector3) {\n    this._camera.setTarget(iVector2Vector(target));\n  }\n  rotateAround(\n    option: ICameraRotationAnimation\n  ): UndefinedType<IAnimateReturn> {\n    const {\n      target,\n      angleX,\n      angleY,\n      frame = 30,\n      time = 10,\n      loop = false,\n    } = option;\n\n    if (!angleX && !angleY) {\n      console.error(\"angleX和angleY至少有一个必填\");\n      return;\n    }\n\n    if (target) {\n      this._camera.target.copyFrom(iVector2Vector(target));\n    }\n\n    const group = new AnimationGroup(\"camera-around-group\");\n    if (angleX) {\n      const rotate = new Animation(\n        \"camera-around\",\n        \"alpha\",\n        frame,\n        Animation.ANIMATIONTYPE_FLOAT\n      );\n\n      let origin = this._camera.inertialAlphaOffset;\n\n      rotate.setKeys([\n        {\n          frame: 0,\n          value: 0,\n        },\n        {\n          frame: (time / 2) * frame,\n          value: angleX / 2,\n        },\n        {\n          frame: time * frame,\n          value: angleX,\n        },\n      ]);\n      group.addTargetedAnimation(rotate, this._camera);\n    }\n    if (angleY) {\n      const rotate = new Animation(\n        \"camera-around\",\n        \"beta\",\n        frame,\n        Animation.ANIMATIONTYPE_FLOAT\n      );\n\n      rotate.setKeys([\n        {\n          frame: 0,\n          value: 0,\n        },\n        {\n          frame: (time / 2) * frame,\n          value: angleY / 2,\n        },\n        {\n          frame: time * frame,\n          value: angleY,\n        },\n      ]);\n      group.addTargetedAnimation(rotate, this._camera);\n    }\n\n    group.play(loop);\n\n    return {\n      clear: () => {\n        group.dispose();\n        this._animateGroup = null;\n      },\n      stop: () => group.stop(),\n      pause: () => group.pause(),\n      reset: () => group.reset(),\n      restart: () => group.restart(),\n    };\n  }\n  moveTo(option: {\n    alpha?: number;\n    beta?: number;\n    radius?: number;\n    target?: IVector3;\n    time?: number;\n    entity?: Entity;\n    type?: string;\n  }) {\n    let { alpha, beta, radius, target, time = 1, entity } = option;\n    if (\n      alpha === undefined &&\n      beta === undefined &&\n      radius === undefined &&\n      target === undefined\n    )\n      return;\n\n    const group = new AnimationGroup(\"camera-move-to\", this._scene);\n    const frame = 30;\n\n    if (alpha !== undefined) {\n      const alAnimation = new Animation(\n        \"alpha-a\",\n        \"alpha\",\n        frame,\n        Animation.ANIMATIONTYPE_FLOAT\n      );\n      alAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.alpha,\n        },\n        {\n          frame: time * frame,\n          value: alpha,\n        },\n      ]);\n\n      group.addTargetedAnimation(alAnimation, this._camera);\n    }\n\n    if (beta !== undefined) {\n      const btAnimation = new Animation(\n        \"beta-a\",\n        \"beta\",\n        frame,\n        Animation.ANIMATIONTYPE_FLOAT\n      );\n      btAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.beta,\n        },\n        {\n          frame: time * frame,\n          value: beta,\n        },\n      ]);\n\n      group.addTargetedAnimation(btAnimation, this._camera);\n    }\n    if (radius !== undefined) {\n      const btAnimation = new Animation(\n        \"radius-a\",\n        \"radius\",\n        frame,\n        Animation.ANIMATIONTYPE_FLOAT\n      );\n      btAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.radius,\n        },\n        {\n          frame: time * frame,\n          value: radius,\n        },\n      ]);\n\n      group.addTargetedAnimation(btAnimation, this._camera);\n    }\n\n    if (!target && entity) {\n      const { extendSize, minimumWorld, maximumWorld } = entity.BoundingBox;\n      if (!extendSize.equalsWithEpsilon(Vector3.Zero())) {\n        const bottom = minimumWorld.y;\n        const top = maximumWorld.y;\n        const zoomTargetY = bottom + (top - bottom) * 0.5;\n        const radiusWorld = maximumWorld.subtract(minimumWorld).scale(0.5);\n        const centerWorld = minimumWorld.add(radiusWorld);\n        target = { x: centerWorld.x, y: zoomTargetY, z: centerWorld.z };\n      }\n    }\n\n    if (target !== undefined) {\n      const btAnimation = new Animation(\n        \"target-a\",\n        \"target\",\n        frame,\n        Animation.ANIMATIONTYPE_VECTOR3\n      );\n      btAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.target,\n        },\n        {\n          frame: time * frame,\n          value: iVector2Vector(target),\n        },\n      ]);\n\n      group.addTargetedAnimation(btAnimation, this._camera);\n    }\n    return {\n      start: () => {\n        group.start();\n        return new Promise((res) => group.onAnimationEndObservable.add(res));\n      },\n      clear: () => {\n        group.dispose();\n        this._animateGroup = null;\n      },\n      stop: () => group.stop(),\n      pause: () => group.pause(),\n      reset: () => group.reset(),\n      restart: () => group.restart(),\n    };\n  }\n  update() {\n    this._camera.mode = this._mode;\n    this._camera.setTarget(this._target);\n    this._camera.alpha = this._alpha;\n    this._camera.beta = this._beta;\n\n    this._camera.lowerRadiusLimit = this._lowerRadiusLimit;\n    this._camera.upperRadiusLimit = this._upperRadiusLimit;\n    this._camera.lowerAlphaLimit = this._lowerAlphaLimit;\n    this._camera.upperAlphaLimit = this._upperAlphaLimit;\n    this._camera.lowerBetaLimit = this._lowerBetaLimit;\n    this._camera.upperBetaLimit = this._upperBetaLimit;\n\n    this._camera.minZ = this._minZ;\n    this._camera.maxZ = this._maxZ;\n\n    this._camera.panningOriginTarget.copyFrom(this._originPanTarget);\n    this._camera.panningAxis.copyFrom(this._panningAxis);\n\n    this._camera.panningDistanceLimit = this.PanDistance;\n\n    if (this._mode === Camera.PERSPECTIVE_CAMERA)\n      this._camera.radius = this._radius;\n    else this._camera.radius = ORTH_SIZE;\n\n    this._pointerInput.enablePan = this.EnablePan;\n    this._pointerInput.enableRotate = this.EnableRotate;\n\n    this._pointerInput.multiTouchPanning = this.EnablePan;\n\n    this._pointerInput.pinchZoom = this.EnableZoom;\n\n    if (this._mode === Camera.PERSPECTIVE_CAMERA) {\n      if (this.EnableZoom) {\n        this._camera.inputs.attached.mousewheel.attachControl();\n      } else this._camera.inputs.attached.mousewheel.detachControl();\n    }\n  }\n  reset() {\n    this._target.copyFrom(Vector3.Zero());\n    this._alpha = DEFAULT_ALPHA;\n    this._beta = DEFAULT_BETA;\n    this._radius = DEFAULT_RADIUS;\n    this._lowerRadiusLimit = 0.01;\n    this._upperRadiusLimit = undefined;\n    this._lowerAlphaLimit = undefined;\n    this._upperAlphaLimit = undefined;\n    this._lowerBetaLimit = undefined;\n    this._upperBetaLimit = undefined;\n    this._minZ = 1;\n    this._maxZ = SKYBOX_SIZE;\n    this.update();\n  }\n  writeFile(filer: HCFiler) {\n    filer.write(5);\n    super.writeFile(filer);\n    filer.write(this._alpha);\n    filer.write(this._beta);\n    filer.write(this._radius);\n\n    filer.write(this._lowerRadiusLimit);\n    filer.write(this._upperRadiusLimit);\n\n    filer.write(this._lowerAlphaLimit);\n    filer.write(this._upperAlphaLimit);\n\n    filer.write(this._lowerBetaLimit);\n    filer.write(this._upperBetaLimit);\n\n    //pan limit\n    filer.write(this._panDistance);\n    filer.write(this._panningAxis.x);\n    filer.write(this._panningAxis.y);\n    filer.write(this._panningAxis.z);\n    filer.write(this._originPanTarget.x);\n    filer.write(this._originPanTarget.y);\n    filer.write(this._originPanTarget.z);\n\n    filer.write(this._minZ);\n    filer.write(this._maxZ);\n  }\n  readFile(filer: HCFiler) {\n    const ver = filer.read();\n    if (ver > 1) {\n      super.readFile(filer);\n    }\n    this._alpha = filer.read();\n    this._beta = filer.read();\n    this._radius = filer.read();\n\n    if (ver > 2) {\n      this._lowerRadiusLimit = filer.read();\n      this._upperRadiusLimit = filer.read();\n\n      this._lowerAlphaLimit = filer.read();\n      this._upperAlphaLimit = filer.read();\n\n      this._lowerBetaLimit = filer.read();\n      this._upperBetaLimit = filer.read();\n    }\n\n    if (ver > 3) {\n      this._panDistance = filer.read();\n      this._panningAxis.x = filer.read();\n      this._panningAxis.y = filer.read();\n      this._panningAxis.z = filer.read();\n      this._originPanTarget.x = filer.read();\n      this._originPanTarget.y = filer.read();\n      this._originPanTarget.z = filer.read();\n    }\n\n    if (ver > 4) {\n      this._minZ = filer.read();\n      this._maxZ = filer.read();\n    }\n\n    if (this._mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      this.initOrthCamera();\n    }\n\n    this.update();\n  }\n  private _computeDeltaFromMouseWheelLegacyEvent(\n    mouseWheelDelta: number,\n    radius: number\n  ) {\n    let delta = 0;\n    const wheelDelta =\n      mouseWheelDelta * 0.01 * this.wheelDeltaPercentage * radius;\n    if (mouseWheelDelta > 0) {\n      delta = wheelDelta / (1.0 + this.wheelDeltaPercentage);\n    } else {\n      delta = wheelDelta * (1.0 + this.wheelDeltaPercentage);\n    }\n    return delta;\n  }\n}\n","export function isMobile() {\n  return /Mobi|Android|iPhone/i.test(navigator.userAgent);\n}\n","import {\n  Animation,\n  AnimationGroup,\n  Camera,\n  FreeCamera,\n  IWheelEvent,\n  Observer,\n  PointerEventTypes,\n  PointerInfo,\n  Scene,\n  Vector3,\n} from \"../../babylon\";\n\nimport { AppEvent } from \"../../core/AppEvent\";\nimport { HCFiler, IVector3 } from \"@hc/core\";\nimport { CameraEnable, CameraViewMode } from \"../../types/camera.types\";\nimport { KeyBoard } from \"../../utils\";\nimport { iVector2Vector, setVecLike2Vector } from \"../../utils/vector\";\nimport { SKYBOX_SIZE } from \"../../contants\";\nimport { BaseCamera } from \"./BaseCamera\";\nimport { PathAnimation } from \"../../animates/PathAnimation\";\n\nexport class FreeCameraControl extends BaseCamera {\n  protected _camera: FreeCamera;\n  protected customWheel: Observer<PointerInfo>;\n\n  constructor(protected _scene: Scene, protected _canvas: HTMLCanvasElement) {\n    super(_scene, _canvas);\n    if (!_scene || !_canvas) return;\n    this.init();\n    this._camera.onViewMatrixChangedObservable.add((c: FreeCamera) => {\n      this._position.copyFrom(c.position);\n      this._target.copyFrom(c.target);\n      AppEvent.trigger({ type: \"CameraUpdate\", target: this as any });\n    });\n  }\n  get EnableZoom() {\n    return !!(this._enable & CameraEnable.Zoom);\n  }\n  set EnableZoom(v: boolean) {\n    if (v === this.EnableZoom) return;\n    if (v) {\n      this._enable |= CameraEnable.Zoom;\n    } else {\n      this._enable &= ~CameraEnable.Zoom;\n    }\n    if (this._mode === Camera.PERSPECTIVE_CAMERA) {\n      if (v) {\n        this._camera.inputs.attached.mousewheel.attachControl();\n      } else this._camera.inputs.attached.mousewheel.detachControl();\n    }\n  }\n  get IsFlying() {\n    return this._flying;\n  }\n\n  get Position() {\n    return {\n      x: this._camera.position.x,\n      y: this._camera.position.y,\n      z: this._camera.position.z,\n    };\n  }\n  set Position(v: IVector3) {\n    const position = new Vector3();\n    setVecLike2Vector(position, v);\n    this._camera.position.copyFromFloats(position.x, position.y, position.z);\n  }\n  get Target() {\n    return { x: this._target.x, y: this._target.y, z: this._target.z };\n  }\n  set Target(v: IVector3) {\n    setVecLike2Vector(this._target, v);\n    this._camera.setTarget(this._target);\n  }\n  zoomTo(target: Vector3, size: Vector3) {\n    this._camera.setTarget(new Vector3(target.x, target.y));\n  }\n  zoomByBoundBox(min: Vector3, max: Vector3) {\n    super.zoomByBoundBox(min, max);\n  }\n\n  init() {\n    const camera = new FreeCamera(\n      \"MainFreeCamera\",\n      this._position,\n      this._scene\n    );\n    camera.inputs._mouseInput.buttons = [1];\n    camera.keysDown = [KeyBoard.KeyS];\n    camera.keysDownward = [KeyBoard.ArrowDown];\n    camera.keysUp = [KeyBoard.KeyW];\n    camera.keysUpward = [KeyBoard.ArrowUp];\n    camera.keysLeft = [KeyBoard.KeyA];\n    camera.keysRight = [KeyBoard.KeyD];\n    camera.inputs.addMouseWheel();\n    camera.maxZ = SKYBOX_SIZE;\n\n    this._camera = camera;\n\n    if (this._mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      this.initOrthCamera();\n    } else {\n      this.initPerCamera();\n    }\n  }\n  set ViewMode(v: CameraViewMode) {\n    switch (v) {\n      case CameraViewMode.Up:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 0, 10));\n        break;\n      case CameraViewMode.Down:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 0, -10));\n        break;\n      case CameraViewMode.Left:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(-10));\n        break;\n      case CameraViewMode.Right:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(10));\n        break;\n      case CameraViewMode.Front:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, 10));\n        break;\n      case CameraViewMode.Back:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(0, -10));\n        break;\n      case CameraViewMode.SW:\n        this._camera.position = this._camera.target\n          .clone()\n          .add(new Vector3(10, 10, 10));\n        break;\n      default:\n        break;\n    }\n  }\n  initOrthCamera() {\n    this._camera.orthoTop = this.size;\n    this._camera.orthoBottom = -this.size;\n    this._camera.orthoLeft = -this.size * this.Aspect;\n    this._camera.orthoRight = this.size * this.Aspect;\n    this._camera.inputs.attached.mousewheel.detachControl();\n    this.customWheel = this._scene.onPointerObservable.add((p) => {\n      if (!this.EnableZoom) return;\n      const event = p.event as IWheelEvent;\n\n      let wheelDelta = 0;\n\n      if (event.wheelDelta) {\n        wheelDelta = -event.wheelDelta;\n      } else {\n        wheelDelta = -(event.deltaY || event.detail) * 60;\n      }\n\n      this.zoomScale += wheelDelta / (this.wheelSpeed * 100);\n\n      if (this.zoomScale < 0) {\n        this.zoomScale = 0.001;\n        return;\n      }\n\n      this.updateOrthCamera();\n    }, PointerEventTypes.POINTERWHEEL);\n  }\n  initPerCamera() {\n    if (this.customWheel) {\n      this._scene.onPointerObservable.remove(this.customWheel);\n      this.customWheel = null;\n      if (this.EnableZoom)\n        this._camera.inputs.attached.mousewheel.attachControl();\n    }\n  }\n  attachControl() {\n    this._camera.attachControl(this._canvas, true);\n  }\n  detachControl() {\n    this._camera.detachControl();\n  }\n  lookAt(target: IVector3) {\n    this._camera.setTarget(iVector2Vector(target));\n  }\n  moveTo(option: {\n    position?: IVector3;\n    target?: IVector3;\n    time?: number;\n    type?: string;\n  }) {\n    const { target, time = 1, position } = option;\n    if (position === undefined && target === undefined) return;\n\n    const group = new AnimationGroup(\"camera-move-to\", this._scene);\n    const frame = 30;\n\n    if (target !== undefined) {\n      const btAnimation = new Animation(\n        \"target-a\",\n        \"target\",\n        frame,\n        Animation.ANIMATIONTYPE_VECTOR3\n      );\n      btAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.target.clone(),\n        },\n        {\n          frame: time * frame,\n          value: iVector2Vector(target),\n        },\n      ]);\n\n      group.addTargetedAnimation(btAnimation, this._camera);\n    }\n    if (position !== undefined) {\n      const btAnimation = new Animation(\n        \"position\",\n        \"position\",\n        frame,\n        Animation.ANIMATIONTYPE_VECTOR3\n      );\n      btAnimation.setKeys([\n        {\n          frame: 0,\n          value: this._camera.position.clone(),\n        },\n        {\n          frame: time * frame,\n          value: iVector2Vector(position),\n        },\n      ]);\n\n      group.addTargetedAnimation(btAnimation, this._camera);\n    }\n    return {\n      start: () => {\n        group.start(false, 1, 0, frame * time);\n        return new Promise((res) =>\n          group.onAnimationGroupEndObservable.add(res)\n        );\n      },\n      clear: () => {\n        group.dispose();\n        this._animateGroup = null;\n      },\n      stop: () => group.stop(),\n      pause: () => group.pause(),\n      reset: () => group.reset(),\n      restart: () => group.restart(),\n    };\n  }\n  moveByPath(option: { path: (Vector3 | IVector3)[]; time: number }) {\n    if (option.path.length === 0) return Promise.resolve(false);\n    const time = option.time;\n    const points = option.path.map(iVector2Vector);\n    const an = new PathAnimation(this._camera, {\n      path: points,\n      time,\n    });\n\n    return an;\n  }\n  update() {\n    this._camera.mode = this._mode;\n    this._camera.setTarget(this._target);\n    this._camera.position = this._position;\n\n    if (this._mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      this.updateOrthCamera();\n    }\n  }\n  reset() {\n    this._target.copyFrom(Vector3.Zero());\n    this.update();\n  }\n  updateOrthCamera() {\n    this._camera.orthoTop = this.size * this.zoomScale;\n    this._camera.orthoBottom = -this.size * this.zoomScale;\n    this._camera.orthoLeft = -this.size * this.zoomScale * this.Aspect;\n    this._camera.orthoRight = this.size * this.zoomScale * this.Aspect;\n  }\n  writeFile(filer: HCFiler) {\n    filer.write(2);\n    super.writeFile(filer);\n    filer.write(this._position.x);\n    filer.write(this._position.y);\n    filer.write(this._position.z);\n  }\n  readFile(filer: HCFiler) {\n    const ver = filer.read();\n    if (ver > 1) {\n      super.readFile(filer);\n    }\n    this._position.x = filer.read();\n    this._position.y = filer.read();\n    this._position.z = filer.read();\n\n    this.update();\n  }\n}\n","import { Entity } from \"./../../entitys/Entity\";\nimport { ArcRotateCameraControl } from \"./ArcRotateCameraControl\";\nimport { HCFiler, ISerialize, IVector3 } from \"@hc/core\";\nimport { FreeCameraControl } from \"./FreeCameraControl\";\nimport { Scene } from \"../../babylon\";\nimport { BaseCamera } from \"./BaseCamera\";\n\nexport enum CameraType {\n  ArcRotate = 0,\n  FreeCamera = 1,\n  Follow = 2,\n}\n\nexport class CameraManager implements ISerialize {\n  private _type = CameraType.ArcRotate;\n  private _control: BaseCamera;\n  public ArcRotateControl: ArcRotateCameraControl;\n  public FreeControl: FreeCameraControl;\n  constructor(private _scene: Scene, private _canvas: HTMLCanvasElement) {\n    this.init();\n  }\n  get Type() {\n    return this._type;\n  }\n  set Type(v: CameraType) {\n    this._type = v;\n    this.switch();\n  }\n  get Control() {\n    return this._control;\n  }\n  get Camera() {\n    return this._control.CurrentCamera;\n  }\n  get ArcRotateCamera() {\n    return this.ArcRotateControl.CurrentCamera;\n  }\n  get FreeCamera() {\n    return this.FreeControl.CurrentCamera;\n  }\n  get Alpha() {\n    return this._control.Alpha;\n  }\n  set Alpha(v) {\n    this._control.Alpha = v;\n  }\n  get Beta() {\n    return this._control.Beta;\n  }\n  set Beta(v) {\n    this._control.Beta = v;\n  }\n  get Radius() {\n    return this.ArcRotateControl.Radius;\n  }\n  set Radius(v: number) {\n    this.ArcRotateControl.Radius = v;\n  }\n  get Position() {\n    return this.Control.Position;\n  }\n  set Position(v: IVector3) {\n    this.Control.Position = v;\n  }\n  get Target() {\n    return this.Control.Target;\n  }\n  set Target(v) {\n    this.Control.Target = v;\n  }\n  get Mode() {\n    return this.Control.Mode;\n  }\n  set Mode(v) {\n    this.Control.Mode = v;\n  }\n  get ZoomScale() {\n    return this.Control.zoomScale;\n  }\n  init() {\n    this.ArcRotateControl = new ArcRotateCameraControl(\n      this._scene,\n      this._canvas\n    );\n    this.FreeControl = new FreeCameraControl(this._scene, this._canvas);\n    this._control = this.ArcRotateControl;\n    this._control.active();\n  }\n  switch() {\n    this._control.detachControl();\n    switch (this._type) {\n      case CameraType.ArcRotate:\n        this._control = this.ArcRotateControl;\n        break;\n      case CameraType.FreeCamera:\n        this._control = this.FreeControl;\n        break;\n      case CameraType.Follow:\n    }\n    this._control.active();\n    this.switchEvent(this);\n  }\n  switchEvent(c: CameraManager) {}\n  zoomAll(autoLimit = false) {\n    this._control.zoomAll(autoLimit);\n  }\n  zoomToEntity(en: Entity) {\n    this._control.zoomToEntity(en);\n  }\n  reset() {\n    this.ArcRotateControl.reset();\n    this.FreeControl.reset();\n  }\n  destory() {\n    this.ArcRotateControl.destory();\n    this.FreeControl.destory();\n  }\n\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.write(this._type);\n    this.ArcRotateControl.writeFile(file);\n    this.FreeControl.writeFile(file);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    this._type = file.read();\n    this.ArcRotateControl.readFile(file);\n    this.FreeControl.readFile(file);\n    this.switch();\n  }\n}\n","import { CubeTexture, HDRCubeTexture, Scene } from \"../babylon\";\n\nexport class LocalStorageHelper {\n  public static ReadLocalStorageValue(key: string, defaultValue: number) {\n    if (typeof Storage !== \"undefined\" && localStorage.getItem(key) !== null) {\n      return parseInt(localStorage.getItem(key)!);\n    }\n\n    return defaultValue;\n  }\n}\n\nexport class EnvironmentTools {\n  public static SkyboxPath = \"\";\n  public static Skyboxes = [\n    \"https://hcwl-cdn.cdn.bcebos.com/hc3d/envs/environmentSpecular.env\",\n    \"https://hcwl-cdn.cdn.bcebos.com/hc3d/envs/studio.env\",\n  ];\n\n  public static SkyboxesNames = [\"Default\", \"Studio\"];\n\n  public static LoadSkyboxPathTexture(scene: Scene) {\n    const defaultSkyboxIndex = Math.max(\n      0,\n      LocalStorageHelper.ReadLocalStorageValue(\"defaultSkyboxId\", 0)\n    );\n    const path = this.SkyboxPath || this.Skyboxes[defaultSkyboxIndex];\n    if (path.indexOf(\".hdr\") === path.length - 4) {\n      return new HDRCubeTexture(path, scene, 256, false, true, false, true);\n    }\n    return CubeTexture.CreateFromPrefilteredData(path, scene);\n  }\n}\n","import { Animation } from \"../babylon\";\n\nexport function getAnimation(\n  from: number,\n  to: number,\n  key: string,\n  time: number\n) {\n  const keys = [\n    { frame: 0, value: from },\n    { frame: 30 * time, value: to },\n  ];\n\n  const animation = new Animation(\n    \"animation\" + Date.now(),\n    key,\n    30,\n    Animation.ANIMATIONTYPE_FLOAT,\n    Animation.ANIMATIONLOOPMODE_CONSTANT\n  );\n  animation.setKeys(keys);\n\n  return animation;\n}\n","import { SkyboxMode } from \"../../types/viewer.types\";\nimport {\n  Engine,\n  CubeTexture,\n  HDRCubeTexture,\n  Mesh,\n  GlowLayer,\n  Color4,\n  Color3,\n  StandardMaterial,\n  Texture,\n  BaseTexture,\n  ReflectionProbe,\n  PBRMaterial,\n  Vector3,\n  Material,\n  Layer,\n  CreateBox,\n  Observable,\n  AnimationGroup,\n  SpotLight,\n  Scene,\n  SkyMaterial,\n} from \"../../babylon\";\nimport { AppConfig } from \"../../app/appConfig\";\nimport { HCFiler, ISerialize, IVector3 } from \"@hc/core\";\nimport { setVecLike2Vector } from \"../../utils/vector\";\nimport { sleep } from \"../../utils/utils\";\nimport { SKYBOX_SIZE } from \"../../contants\";\nimport { EnvironmentTools } from \"../../utils/sceneEnv\";\nimport { AppEvent } from \"../../core/AppEvent\";\nimport { getAnimation } from \"../../utils/antimationUtils\";\nimport { hexToRgba, parseRgbaColor } from \"../../utils\";\nimport { AppStore } from \"../../app/AppStore\";\nimport { EventEnum } from \"../../enums\";\n\n//https://forum.babylonjs.com/t/gradient-for-smooth-scene-limitations/20751 场景渐变\n//https://playground.babylonjs.com/#9VC8L#2 渐变色\n\nconst ExcludesReflect = [\n  \"groundMaterial\",\n  \"skyMaterial\",\n  \"skyBox\",\n  \"default material\",\n];\n\nconst extensions = [\"px.jpg\", \"py.jpg\", \"pz.jpg\", \"nx.jpg\", \"ny.jpg\", \"nz.jpg\"];\nconst DefaultClearColor = new Color4(0, 0, 0);\n\nexport enum UpdateSceneFlag {\n  None = 0b0000000,\n  Mode = 0b00001,\n  Env = 0b00010,\n  Param = 0b00100,\n  All = 0b1111111,\n}\n\nexport class SceneControl implements ISerialize {\n  private _scene: Scene;\n  private _skybox = \"\";\n  private _image = \"\";\n\n  private _skyboxMesh: Mesh;\n  private _standMaterial: StandardMaterial;\n  private _pbrMaterial: PBRMaterial;\n  private _skyMaterial: SkyMaterial;\n  private _glowLayer: GlowLayer;\n  private _mode = SkyboxMode.None;\n  private _reflectionProbe: ReflectionProbe;\n  //浊度\n  private _turbidity = 10;\n  //亮度 0-1,190\n  private _luminance = 1;\n  private _rayleigh = 2;\n  private _sunPosition = new Vector3(0, 100, 0);\n  private _inclination = 0;\n  private _azimuth = 0.25;\n  private _mieDirectionalG = 0.8;\n  private _mieCoefficient = 0.005;\n  private _isReflect = false;\n  private _layer: Layer;\n  private reslove: (...arg) => void;\n  private _env: string;\n  private _iblIntensity = 1;\n  private _cacheEnv = \"\";\n  /** 环境纹理配置 */\n  private _envTextureOption = {\n    rotationY: 0,\n    level: 1,\n  };\n  /**天空盒纹理配置,预留 */\n  private _skyTextureOption = {\n    rotationY: 0,\n    level: 1,\n  };\n  private _isShadow = false;\n  LoadObserable = new Observable<boolean>();\n  ToggleShadowObserable = new Observable<boolean>();\n  constructor(engine: Engine) {\n    if (!engine) return;\n    this._scene = new Scene(engine, {\n      useMaterialMeshMap: !AppConfig.lowPerformance,\n      useClonedMeshMap: !AppConfig.lowPerformance,\n      useGeometryUniqueIdsMap: !AppConfig.lowPerformance,\n    });\n    this._scene.ambientColor = Color3.FromHexString(\"#222222\");\n    this._scene.useRightHandedSystem = true;\n    this.BlockMaterialUpdate = true;\n    this._scene.clearColor = DefaultClearColor;\n\n    this.initReflection();\n\n    this.init();\n  }\n  init() {\n    const gl = new GlowLayer(\"glow\", this._scene);\n    gl.intensity = 0.5;\n    this._glowLayer = gl;\n  }\n  initReflection() {\n    if (this._reflectionProbe) {\n      this._reflectionProbe.dispose();\n    }\n    const rp = new ReflectionProbe(\"ref\", 512, this._scene);\n\n    this._reflectionProbe = rp;\n  }\n  /**场景是否存在环境 */\n  get IsExistEnv() {\n    return this._env || this._cacheEnv;\n  }\n  get Scene() {\n    return this._scene;\n  }\n  get Mode() {\n    return this._mode;\n  }\n  set Mode(v: SkyboxMode) {\n    if (v === this._mode) return;\n    this._mode = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get Skybox() {\n    return this._skybox;\n  }\n  set Skybox(url: string) {\n    if (this._skybox === url) return;\n    this._skybox = url;\n    this.showSkyBox();\n  }\n\n  set BackgroundUrl(url: string) {\n    if (this.isImageType(url)) {\n      this.Image = url;\n      this.Mode = SkyboxMode.Image;\n    } else {\n      this.Skybox = url;\n      this.Mode = SkyboxMode.Skybox;\n    }\n  }\n  get Image() {\n    return this._image;\n  }\n  set Image(url: string) {\n    if (this._image === url) return;\n    this._image = url;\n    this.showImage();\n  }\n\n  get AmbientColor() {\n    return this._scene.ambientColor.toHexString();\n  }\n  set AmbientColor(v: string) {\n    this.Scene.ambientColor = Color3.FromHexString(v);\n  }\n\n  get EmissiveIntensity() {\n    return this._glowLayer.intensity;\n  }\n  set EmissiveIntensity(v: number) {\n    this._glowLayer.intensity = v;\n  }\n\n  get Background(): string {\n    const string = this.Scene.clearColor.toHexString();\n    if (string.endsWith(\"FF\")) {\n      return string.slice(0, 7);\n    } else {\n      return hexToRgba(string);\n    }\n  }\n  set Background(v: Color4 | string | [number, number, number, number?]) {\n    if (!v) return;\n    if (typeof v === \"string\") {\n      if (v.startsWith(\"#\")) {\n        this.Scene.clearColor = Color4.FromHexString(v);\n      } else if (v.startsWith(\"rgb\")) {\n        const color = parseRgbaColor(v);\n        this.Scene.clearColor = new Color4(\n          color.r / 255,\n          color.g / 255,\n          color.b / 255,\n          color.a\n        );\n      }\n    } else {\n      if (Array.isArray(v))\n        this.Scene.clearColor = new Color4(\n          v[0] / 255,\n          v[1] / 255,\n          v[2] / 255,\n          v[3] ?? 1\n        );\n      else this.Scene.clearColor = v;\n    }\n  }\n  get Turbidity() {\n    return this._turbidity;\n  }\n  set Turbidity(v: number) {\n    if (v === this._turbidity) return;\n    this._turbidity = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get Rayleigh() {\n    return this._rayleigh;\n  }\n  set Rayleigh(v: number) {\n    if (v === this._rayleigh) return;\n    this._rayleigh = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get Luminance() {\n    return this._luminance;\n  }\n  set Luminance(v: number) {\n    if (v === this._luminance) return;\n    this._luminance = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get SunPosition() {\n    return {\n      x: this._sunPosition.x,\n      y: this._sunPosition.y,\n      z: this._sunPosition.z,\n    };\n  }\n  set SunPosition(v: IVector3) {\n    setVecLike2Vector(this._sunPosition, v);\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get Inclination() {\n    return this._inclination;\n  }\n  set Inclination(v: number) {\n    if (v === this._inclination) return;\n    this._inclination = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get Azimuth() {\n    return this._azimuth;\n  }\n  set Azimuth(v: number) {\n    if (v === this._azimuth) return;\n    this._azimuth = v;\n    this.update(UpdateSceneFlag.Mode);\n  }\n  get IsReflect() {\n    return this._isReflect;\n  }\n  set IsReflect(v: boolean) {\n    if (v === this._isReflect) return;\n    this._isReflect = v;\n    if (v) {\n      this._scene.onNewMaterialAddedObservable.add(this.watchMaterial);\n      this.reflect();\n    } else {\n      this._scene.onNewMaterialAddedObservable.removeCallback(\n        this.watchMaterial\n      );\n      this.cancelReflect();\n    }\n  }\n  get BlockMaterialUpdate() {\n    return this._scene.blockMaterialDirtyMechanism;\n  }\n  set BlockMaterialUpdate(v: boolean) {\n    this._scene.blockMaterialDirtyMechanism = v;\n  }\n  get Env() {\n    return this._env;\n  }\n  set Env(v: string) {\n    if (v === this._env) return;\n    this._env = v;\n    this.update(UpdateSceneFlag.Env);\n  }\n  get IBLIntensity() {\n    return this._iblIntensity;\n  }\n  set IBLIntensity(v) {\n    this._iblIntensity = v;\n    this.update(UpdateSceneFlag.Param);\n  }\n  get EnvRotation() {\n    return this._envTextureOption.rotationY;\n  }\n  set EnvRotation(v: number) {\n    this._envTextureOption.rotationY = v;\n    this.update(UpdateSceneFlag.Param);\n  }\n  /**\n   * 是否开启阴影\n   */\n  get IsShadow() {\n    return this._isShadow;\n  }\n  set IsShadow(v: boolean) {\n    if (this._isShadow === v) return;\n    this._isShadow = v;\n    /**通知阴影状态以及切换 */\n    this.ToggleShadowObserable.notifyObservers(v);\n  }\n  debugger(config: any = {}) {\n    if (AppConfig.debugger) {\n      this._scene.debugLayer.show({\n        embedMode: true,\n        ...config,\n      });\n    }\n  }\n  toggleShowEnv() {\n    if (this._env) {\n      this._cacheEnv = this._env;\n      this._env = \"\";\n    } else {\n      this._env = this._cacheEnv;\n    }\n    this.loadEnv();\n  }\n  render() {\n    if (this._scene.activeCamera) {\n      this._scene.render();\n    }\n  }\n  update(flag = UpdateSceneFlag.All) {\n    if (flag & UpdateSceneFlag.Mode) {\n      switch (this._mode) {\n        case SkyboxMode.Image:\n          this.showImage();\n          break;\n        case SkyboxMode.Skybox:\n          this.showSkyBox();\n          break;\n        case SkyboxMode.Sun:\n          this.getSkyBox();\n          this._skyMaterial.inclination = this._inclination;\n          this._skyMaterial.azimuth = this._azimuth;\n          // this._skyMaterial.sunPosition = this._sunPosition;\n          this._skyMaterial.rayleigh = this._rayleigh;\n          this._skyMaterial.turbidity = this._turbidity;\n          this._skyMaterial.luminance = this._luminance;\n          this._skyMaterial.mieDirectionalG = this._mieDirectionalG;\n          this._skyMaterial.mieCoefficient = this._mieCoefficient;\n          break;\n        case SkyboxMode.Env:\n          break;\n        default:\n          this.hiddenSkyBox();\n      }\n    }\n\n    if (flag & UpdateSceneFlag.Env) this.loadEnv();\n\n    if (flag & UpdateSceneFlag.Param) {\n      this._scene.environmentIntensity = this._iblIntensity;\n      if (this._scene.environmentTexture) {\n        (this._scene.environmentTexture as CubeTexture).rotationY =\n          this._envTextureOption.rotationY;\n      }\n    }\n    AppEvent.trigger({ type: EventEnum.UpdateScene, target: null });\n  }\n  async reflect() {\n    this.BlockMaterialUpdate = false;\n    let i = 0;\n    for (const material of this._scene.materials) {\n      if (ExcludesReflect.includes(material.name)) continue;\n      this.reflectMaterial(material);\n      if (i === 5) {\n        await sleep(100);\n        i = 0;\n      } else i++;\n    }\n    this.BlockMaterialUpdate = true;\n  }\n  async cancelReflect() {\n    this.BlockMaterialUpdate = false;\n    let i = 0;\n    for (const material of this._scene.materials) {\n      if (ExcludesReflect.includes(material.name)) continue;\n      this.cancelReflectMaterial(material);\n      if (i === 5) {\n        await sleep(100);\n        i = 0;\n      } else i++;\n    }\n    this.BlockMaterialUpdate = true;\n  }\n  createDefaultEnv() {\n    this._scene.environmentTexture = EnvironmentTools.LoadSkyboxPathTexture(\n      this._scene\n    );\n    this._scene.createDefaultSkybox(\n      this._scene.environmentTexture,\n      true,\n      (this._scene.activeCamera!.maxZ - this._scene.activeCamera!.minZ) / 2,\n      0.3,\n      false\n    );\n  }\n  loadEnv(path: string = this._env) {\n    setTimeout(() => {\n      this.BlockMaterialUpdate = true;\n    }, 100);\n    this.BlockMaterialUpdate = false;\n    if (path) {\n      const texture = CubeTexture.CreateFromPrefilteredData(\n        AppConfig.SkyBox_URL + path,\n        this._scene\n      );\n      texture.onLoadObservable.add(this.onLoad);\n\n      this._scene.environmentTexture = texture;\n      return texture;\n    } else {\n      this._scene.environmentTexture = null;\n      return null;\n    }\n  }\n  reset() {\n    this._skybox = \"\";\n    this._env = \"\";\n    this._cacheEnv = \"\";\n    this._image = \"\";\n    this._isReflect = false;\n    this._isShadow = false;\n    this._mode = SkyboxMode.None;\n    this._scene.clearColor = DefaultClearColor;\n    this._scene.ambientColor = Color3.FromHexString(\"#222222\");\n    this._reflectionProbe.dispose();\n    this._reflectionProbe = new ReflectionProbe(\"ref\", 512, this._scene);\n    this.update();\n  }\n  writeFile(file: HCFiler): void {\n    file.write(6);\n    file.write(this._skybox);\n    file.write(this.EmissiveIntensity);\n    file.write(this.Background);\n    file.write(this.AmbientColor);\n\n    file.write(this._mode);\n    file.write(this._turbidity);\n    file.write(this._luminance);\n    file.write(this._rayleigh);\n    file.write(this._sunPosition.x);\n    file.write(this._sunPosition.y);\n    file.write(this._sunPosition.z);\n    file.write(this._isReflect);\n\n    file.write(this._inclination);\n    file.write(this._azimuth);\n\n    file.write(this._image);\n\n    //v4\n    file.write(this._env);\n    file.write(this._envTextureOption.rotationY);\n\n    //v5\n    file.write(this._iblIntensity);\n\n    //v6\n    file.write(this._isShadow);\n  }\n  readFile(file: HCFiler): void {\n    this.initReflection();\n\n    const v = file.read();\n    this._skybox = file.read();\n    this.EmissiveIntensity = file.read();\n    this.Background = file.read();\n\n    this.AmbientColor = file.read();\n\n    this._mode = file.read();\n    this._turbidity = file.read();\n    this._luminance = file.read();\n    this._rayleigh = file.read();\n    this._sunPosition.x = file.read();\n    this._sunPosition.y = file.read();\n    this._sunPosition.z = file.read();\n    this.IsReflect = file.read();\n\n    if (v > 1) {\n      this._inclination = file.read();\n      this._azimuth = file.read();\n    }\n    if (v > 2) {\n      this._image = file.read();\n    }\n\n    //兼容旧数据\n    if (!this._image && this.isImageType(this._skybox)) {\n      this._image = this._skybox;\n      this._skybox = \"\";\n      this._mode = SkyboxMode.Image;\n    }\n\n    if (v > 3) {\n      this._env = file.read();\n      this._envTextureOption.rotationY = file.read();\n    }\n    if (v > 4) {\n      this._iblIntensity = file.read();\n    }\n    if (v > 5) {\n      this.IsShadow = file.read();\n    }\n\n    this.update();\n  }\n  /**TODO:港口项目临时用的脚本，需要移除 */\n  testLights() {\n    let [x, y, z] = [275, 30, 180];\n    let [x1, z1] = [225, 146];\n    let [x2, z2] = [80, 148];\n    let [x3, z3] = [-71, 190];\n\n    const points = [\n      // new Vector3(x, y, z),\n      new Vector3(x, y, z - 36),\n      // new Vector3(x, y, z - 36 * 2),\n\n      // new Vector3(x1, y, z1),\n      new Vector3(x1 - 43, y, z1),\n      // new Vector3(x1 - 43 * 2, y, z1),\n      // new Vector3(x1, y, z1 - 30),\n      new Vector3(x1 - 43, y, z1 - 30),\n      // new Vector3(x1 - 43 * 2, y, z1 - 30),\n\n      // new Vector3(x2, y, z2),\n      new Vector3(x2 - 43, y, z2),\n      // new Vector3(x2 - 43 * 2, y, z2),\n      // new Vector3(x2, y, z2 - 30),\n      // new Vector3(x2 - 43, y, z2 - 30),\n      // new Vector3(x2 - 43 * 2, y, z2 - 30),\n\n      // new Vector3(x3, y, z3),\n      new Vector3(x3, y, z3 - 43),\n      // new Vector3(x3, y, z3 + 43 * 2),\n      // new Vector3(x3 - 30, y, z3),\n      // new Vector3(x3 - 30, y, z3 - 43),\n      // new Vector3(x3 - 30, y, z3 + 43 * 2),\n    ];\n    let index = 1;\n    let intensity = 3000;\n    let range = 1000;\n\n    this._scene.materials.forEach(\n      //@ts-ignore\n      (m) => (m.maxSimultaneousLights = points.length + 1)\n    );\n\n    for (const pos of points) {\n      const spot = new SpotLight(\n        \"s\" + index++,\n        pos,\n        new Vector3(0, -1),\n        Math.PI * 2,\n        2,\n        this._scene\n      );\n      spot.intensity = intensity;\n      spot.range = range;\n    }\n  }\n  /**TODO:港口项目临时用的脚本，需要移除 */\n  day2Evening(isRevert = false) {\n    if (!this._skyMaterial) return;\n    let time = 6;\n\n    const TV = [this._turbidity, 1];\n    const RV = [this._rayleigh, 0];\n    const LV = [this._luminance, 0.8];\n    const IV = [this._inclination, -0.48];\n    const AV = [this._inclination, -0.48];\n    const LIV = [1, -0.1];\n\n    if (isRevert) {\n      TV.reverse();\n      RV.reverse();\n      LV.reverse();\n      IV.reverse();\n      AV.reverse();\n      LIV.reverse();\n    }\n\n    const group = new AnimationGroup(\"d2e\");\n\n    const turAn = getAnimation(TV[0], TV[1], \"material.turbidity\", time);\n\n    const RayleighAn = getAnimation(RV[0], RV[1], \"material.rayleigh\", time);\n\n    const lumAn = getAnimation(LV[0], LV[1], \"material.luminance\", time);\n\n    const intAn = getAnimation(IV[0], IV[1], \"material.inclination\", time);\n    const AzAn = getAnimation(AV[0], AV[1], \"material.azimuth\", time);\n\n    const light = this._scene.lights[0];\n    const SceneAn = getAnimation(LIV[0], LIV[1], \"intensity\", time);\n\n    this._scene.stopAnimation(this._skyboxMesh);\n    this._scene.stopAnimation(light);\n\n    for (const a of [turAn, RayleighAn, lumAn, intAn, AzAn])\n      group.addTargetedAnimation(a, this._skyboxMesh);\n\n    group.addTargetedAnimation(SceneAn, light);\n\n    group.start(false, 1, 0, 30 * time);\n\n    // this._scene.beginDirectAnimation(\n    //   this._skyboxMesh,\n    //   [turAn, RayleighAn, lumAn, intAn, AzAn],\n    //   0,\n    //   30 * time,\n    //   false,\n    //   1\n    // );\n    // this._scene.beginDirectAnimation(light, [SceneAn], 0, 30 * time, false, 1);\n  }\n  showFog(start = 200, end = 1000) {\n    this._scene.fogMode = Scene.FOGMODE_LINEAR;\n    this._scene.fogColor = new Color3(0.9, 0.9, 0.85);\n    this._scene.fogDensity = 0.01;\n    this._scene.fogStart = start;\n    this._scene.fogEnd = end;\n  }\n  private isImageType(url: string) {\n    return [\"png\", \"jpg\", \"jpeg\"].some((a) => url.endsWith(a));\n  }\n  private showSkyBox() {\n    if (this._skybox) {\n      this.hiddenLayer();\n      if (this._skybox.endsWith(\"hdr\")) {\n        this.setSkyboxByHdr(AppConfig.SkyBox_URL + this._skybox);\n      } else {\n        this.reslove = AppStore.Wait();\n        AppEvent.trigger({ type: \"loadingBackground\", target: null });\n        this.setEnvTexture(\n          new CubeTexture(\n            AppConfig.SkyBox_URL + this._skybox,\n            this._scene,\n            extensions,\n            undefined,\n            null,\n            this.onLoad\n          )\n        );\n      }\n    } else {\n      this.hiddenSkyBox();\n    }\n  }\n  private showImage() {\n    if (this._image) {\n      this.hiddenBox();\n      if (!this._layer) {\n        this._layer = new Layer(\n          \"GlobalBackground\",\n          AppConfig.SkyBox_URL + this._image,\n          this._scene,\n          true\n        );\n      } else {\n        this.reslove = AppStore.Wait();\n        AppEvent.trigger({ type: \"loadingBackground\", target: null });\n        this._layer.isEnabled = true;\n        (this._layer.texture as Texture).updateURL(\n          AppConfig.SkyBox_URL + this._image,\n          null,\n          this.onLoad\n        );\n      }\n    } else {\n      this.hiddenSkyBox();\n    }\n  }\n  private hiddenLayer() {\n    if (this._layer) this._layer.isEnabled = false;\n  }\n  private hiddenBox() {\n    if (this._skyboxMesh) {\n      this._skyboxMesh.setEnabled(false);\n    }\n  }\n  private hiddenSkyBox() {\n    this.hiddenBox();\n    this.hiddenLayer();\n  }\n  private setSkyboxByHdr(url: string) {\n    const cubeTexture = new HDRCubeTexture(url, this._scene, 512);\n    this.setEnvTexture(cubeTexture);\n  }\n  private getSkyBox() {\n    const box = this.createSkybox();\n    box.setEnabled(true);\n\n    if (this._mode === SkyboxMode.Sun) {\n      box.material = this.getSkyMaterial();\n    } else if (this._mode === SkyboxMode.Env) {\n      box.material = this.getPBRMaterial();\n    } else {\n      box.material = this.getStandMaterial();\n    }\n\n    return box;\n  }\n  private createSkybox() {\n    if (this._skyboxMesh) return this._skyboxMesh;\n\n    const skybox = CreateBox(\"skybox\", { size: SKYBOX_SIZE }, this._scene);\n    skybox.isPickable = false;\n    skybox.infiniteDistance = true;\n    skybox.ignoreCameraMaxZ = true;\n\n    this._reflectionProbe.renderList.push(skybox);\n\n    this._skyboxMesh = skybox;\n\n    return this._skyboxMesh;\n  }\n  private getStandMaterial() {\n    if (this._standMaterial) return this._standMaterial;\n    const skyboxMaterial = new StandardMaterial(\"skyBox\", this._scene);\n\n    this._standMaterial = skyboxMaterial;\n\n    skyboxMaterial.backFaceCulling = false;\n\n    skyboxMaterial.disableLighting = true;\n    this._standMaterial = skyboxMaterial;\n\n    return this._standMaterial;\n  }\n  private getPBRMaterial() {\n    if (this._pbrMaterial) return this._pbrMaterial;\n    const hdrSkyboxMaterial = new PBRMaterial(\"skyBox\", this._scene);\n    hdrSkyboxMaterial.backFaceCulling = false;\n    if (hdrSkyboxMaterial.reflectionTexture) {\n      hdrSkyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\n    }\n    hdrSkyboxMaterial.microSurface = 1.0;\n    hdrSkyboxMaterial.disableLighting = true;\n    hdrSkyboxMaterial.twoSidedLighting = true;\n    this._pbrMaterial = hdrSkyboxMaterial;\n    return this._pbrMaterial;\n  }\n  private getSkyMaterial() {\n    if (this._skyMaterial) return this._skyMaterial;\n\n    const material = new SkyMaterial(\"skyMaterial\", this._scene);\n    // material.useSunPosition = true;\n    material.backFaceCulling = false;\n    this._skyMaterial = material;\n\n    return this._skyMaterial;\n  }\n  private setEnvTexture(environmentTexture: BaseTexture) {\n    const skybox = this.getSkyBox();\n    const skyboxMaterial = skybox.material as StandardMaterial | PBRMaterial;\n    skyboxMaterial.reflectionTexture = environmentTexture;\n    if (skyboxMaterial.reflectionTexture) {\n      skyboxMaterial.reflectionTexture.coordinatesMode = Texture.SKYBOX_MODE;\n    }\n  }\n  private watchMaterial = (material: Material) => {\n    setTimeout(() => {\n      this.reflectMaterial(material);\n    }, 0);\n  };\n  private reflectMaterial(material: Material) {\n    if (ExcludesReflect.includes(material.name)) return;\n    if (\n      material instanceof StandardMaterial ||\n      material instanceof PBRMaterial\n    ) {\n      this.BlockMaterialUpdate = false;\n      // material.unfreeze();\n      const oldRefl = (<StandardMaterial | PBRMaterial>material)\n        .reflectionTexture;\n\n      material.metadata = oldRefl;\n\n      (<StandardMaterial | PBRMaterial>material).reflectionTexture =\n        this._reflectionProbe.cubeTexture;\n\n      if (material instanceof PBRMaterial) material.realTimeFiltering = true;\n      // setTimeout(() => {\n      //   material.freeze();\n      // }, 0);\n      this.BlockMaterialUpdate = true;\n    }\n  }\n  private cancelReflectMaterial(material: Material) {\n    if (ExcludesReflect.includes(material.name)) return;\n    if (\n      material instanceof StandardMaterial ||\n      material instanceof PBRMaterial\n    ) {\n      // material.unfreeze();\n\n      (<StandardMaterial | PBRMaterial>material).reflectionTexture =\n        material.metadata;\n\n      material.metadata = null;\n\n      //@ts-ignore\n      material.realTimeFiltering = false;\n\n      // setTimeout(() => {\n      //   material.freeze();\n      // }, 0);\n    }\n  }\n  private onLoad = () => {\n    AppEvent.trigger({ type: \"loadBackground\", target: null });\n    this.LoadObserable.notifyObservers(true);\n    if (this.reslove) {\n      this.reslove();\n      this.reslove = null;\n    }\n  };\n}\n","import {\n  Camera,\n  Color4,\n  DefaultRenderingPipeline,\n  Scene,\n  Tools,\n} from \"../../babylon\";\nimport { enableUpdateMaterialDirtyMechanismOnce } from \"../../utils/babylonUtils\";\nimport type { SceneControl } from \"./Scene\";\nimport { ImageProcessingConfiguration } from \"@babylonjs/core/Materials/imageProcessingConfiguration\";\nimport { DepthOfFieldEffectBlurLevel } from \"@babylonjs/core/PostProcesses/depthOfFieldEffect\";\nimport { HCFiler, ISerialize } from \"@hc/core\";\n\nexport class SceneEffectManager implements ISerialize {\n  #pipeline: DefaultRenderingPipeline;\n  #bloomEnabled = false;\n  #bloomThreshold = 0.9;\n  #bloomWeight = 0.15;\n  #bloomKernel = 64;\n  #bloomScale = 1;\n  #depthOfFieldEnabled = false;\n  #depthOfFieldBlurLevel = DepthOfFieldEffectBlurLevel.Low;\n  #focusDistance = 2000;\n  #focalLength = 50;\n  #fStop = 1.4;\n  #lensSize = 50;\n  #vignetteEnabled = false;\n  #vignetteBlendMode = ImageProcessingConfiguration.VIGNETTEMODE_MULTIPLY;\n  #vignetteColor = new Color4(0, 0, 0, 0);\n  #vignetteWeight = 1.5;\n  #imageProcessingEnabled = true;\n  #contrast = 1;\n  #exposure = 1;\n  #sharpenEnabled = false;\n  #edgeAmount = 1;\n  #colorAmount = 0.3;\n  constructor(private scene: Scene, private camera: Camera) {\n    this.init();\n  }\n  get Pipeline() {\n    return this.#pipeline;\n  }\n  /** 开启泛光 */\n  get EnableBloom() {\n    return this.#bloomEnabled;\n  }\n  set EnableBloom(v: boolean) {\n    this.#bloomEnabled = v;\n    this.update();\n  }\n  /**\n   * 阀值,如果场景中物体的亮度超过这个阀值才会发生高光溢出\n   *\n   * @memberof SceneEffectManager\n   */\n  get BloomThreshold() {\n    return this.#bloomThreshold;\n  }\n  set BloomThreshold(v: number) {\n    this.#bloomThreshold = v;\n    this.update();\n  }\n  /**\n   * 发生高光溢出的强度(0~1)\n   *\n   * @memberof SceneEffectManager\n   */\n  get BloomWeight() {\n    return this.#bloomWeight;\n  }\n  set BloomWeight(v: number) {\n    this.#bloomWeight = v;\n    this.update();\n  }\n  get BloomKernel() {\n    return this.#bloomKernel;\n  }\n  /**\n   * 光模糊扩散的范围(1~500)\n   *\n   * @memberof SceneEffectManager\n   */\n  set BloomKernel(v: number) {\n    this.#bloomKernel = v;\n    this.update();\n  }\n  get BloomScale() {\n    return this.#bloomScale;\n  }\n  /**泛光规模,越低性能越好(0~1) */\n  set BloomScale(v: number) {\n    if (!v) {\n      Tools.Error(\"值必须大于1\");\n      return;\n    }\n    this.#bloomScale = v;\n    this.update();\n  }\n  //-----------------景深-----------------------\n  /**开启景深 */\n  get DepthOfFieldEnabled() {\n    return this.#depthOfFieldEnabled;\n  }\n  set DepthOfFieldEnabled(v: boolean) {\n    this.#depthOfFieldEnabled = v;\n    this.update();\n  }\n  /**\n   * 模糊等级,越高性能越低\n   *\n   * @memberof SceneEffectManager\n   */\n  get DepthOfFieldBlurLevel() {\n    return this.#depthOfFieldBlurLevel;\n  }\n  set DepthOfFieldBlurLevel(v: DepthOfFieldEffectBlurLevel) {\n    this.#depthOfFieldBlurLevel = v;\n    this.update();\n  }\n  /**焦距 */\n  get FocusDistance() {\n    return this.#focusDistance;\n  }\n  set FocusDistance(v: number) {\n    this.#focusDistance = v;\n    this.update();\n  }\n  /**相机焦距 */\n  get FocalLength() {\n    return this.#focalLength;\n  }\n  set FocalLength(v: number) {\n    this.#focalLength = v;\n    this.update();\n  }\n  /**光圈測量值 */\n  get FStop() {\n    return this.#fStop;\n  }\n  set FStop(v: number) {\n    this.#fStop = v;\n    this.update();\n  }\n  /**\n   *镜头尺寸\n   *\n   * @memberof SceneEffectManager\n   */\n  get LensSize() {\n    return this.#lensSize;\n  }\n  set LensSize(v: number) {\n    this.#lensSize = v;\n    this.update();\n  }\n  //--------------晕光-----------------\n\n  get VignetteEnabled() {\n    return this.#vignetteEnabled;\n  }\n  set VignetteEnabled(v: boolean) {\n    this.#vignetteEnabled = v;\n    this.update();\n  }\n  get VignetteBlendMode() {\n    return this.#vignetteBlendMode as 0 | 1;\n  }\n  set VignetteBlendMode(v: 0 | 1) {\n    this.#vignetteBlendMode = v;\n    this.update();\n  }\n  get VignetteColor() {\n    return this.#vignetteColor.toHexString();\n  }\n  set VignetteColor(v: string) {\n    this.#vignetteColor = Color4.FromHexString(v);\n    this.update();\n  }\n  get VignetteWeight() {\n    return this.#vignetteWeight;\n  }\n  set VignetteWeight(v: number) {\n    this.#vignetteWeight = v;\n    this.update();\n  }\n  //---------------图像处理--------------------------\n  get ImageProcessEnable() {\n    return this.#imageProcessingEnabled;\n  }\n  set ImageProcessEnable(v: boolean) {\n    this.#imageProcessingEnabled = v;\n    this.update();\n  }\n  /**\n   * 对比度\n   *\n   * @memberof SceneEffectManager\n   */\n  get Contrast() {\n    return this.#contrast;\n  }\n  set Contrast(v: number) {\n    this.#contrast = v;\n    this.update();\n  }\n  /**\n   * 曝光度\n   *\n   * @memberof SceneEffectManager\n   */\n  get Exposure() {\n    return this.#exposure;\n  }\n  set Exposure(v: number) {\n    this.#exposure = v;\n    this.update();\n  }\n  //---------------锐化-------------------\n  get SharpenEnabled() {\n    return this.#sharpenEnabled;\n  }\n  set SharpenEnabled(v: boolean) {\n    this.#sharpenEnabled = v;\n    this.update();\n  }\n  /**\n   * 边缘强度\n   *\n   * @memberof SceneEffectManager\n   */\n  get EdgeAmount() {\n    return this.#edgeAmount;\n  }\n  set EdgeAmount(v: number) {\n    this.#edgeAmount = v;\n    this.update();\n  }\n  /**\n   * 颜色强度\n   *\n   * @memberof SceneEffectManager\n   */\n  get ColorAmount() {\n    return this.#colorAmount;\n  }\n  set ColorAmount(v: number) {\n    this.#colorAmount = v;\n    this.update();\n  }\n  init() {\n    this.#pipeline = new DefaultRenderingPipeline(\n      \"默认渲染管线\",\n      false,\n      this.scene,\n      [this.camera]\n    );\n  }\n  update() {\n    if (this.#pipeline) {\n      enableUpdateMaterialDirtyMechanismOnce(this.scene);\n      this.#pipeline.bloomEnabled = this.#bloomEnabled;\n      this.#pipeline.bloomThreshold = this.#bloomThreshold;\n      this.#pipeline.bloomWeight = this.#bloomWeight;\n      this.#pipeline.bloomKernel = this.#bloomKernel;\n      this.#pipeline.bloomScale = this.#bloomScale;\n      this.#pipeline.depthOfFieldEnabled = this.#depthOfFieldEnabled;\n      this.#pipeline.depthOfFieldBlurLevel = this.#depthOfFieldBlurLevel;\n\n      this.#pipeline.imageProcessingEnabled = this.#imageProcessingEnabled;\n      this.#pipeline.sharpenEnabled = this.#sharpenEnabled;\n\n      if (this.#pipeline.sharpen) {\n        this.#pipeline.sharpen.edgeAmount = this.#edgeAmount;\n        this.#pipeline.sharpen.colorAmount = this.#colorAmount;\n      }\n\n      if (this.#pipeline.depthOfField) {\n        this.#pipeline.depthOfField.focusDistance = this.#focusDistance;\n        this.#pipeline.depthOfField.focalLength = this.#focalLength;\n        this.#pipeline.depthOfField.fStop = this.#fStop;\n        this.#pipeline.depthOfField.lensSize = this.#lensSize;\n      }\n\n      const updateImageProcessing = () => {\n        if (this.#pipeline.imageProcessing) {\n          enableUpdateMaterialDirtyMechanismOnce(this.scene);\n          this.#pipeline.imageProcessing.contrast = this.#contrast;\n          this.#pipeline.imageProcessing.exposure = this.#exposure;\n\n          this.#pipeline.imageProcessing.vignetteEnabled =\n            this.#vignetteEnabled;\n          this.#pipeline.imageProcessing.vignetteBlendMode =\n            this.#vignetteBlendMode;\n          this.#pipeline.imageProcessing.vignetteColor = this.#vignetteColor;\n          this.#pipeline.imageProcessing.vignetteWeight = this.#vignetteWeight;\n        }\n      };\n\n      if (!this.#pipeline.imageProcessing) {\n        this.#pipeline.onBuildObservable.addOnce(updateImageProcessing);\n      } else {\n        updateImageProcessing();\n      }\n    }\n  }\n  reset() {\n    this.#bloomEnabled = false;\n    this.#depthOfFieldEnabled = false;\n    this.#imageProcessingEnabled = false;\n    this.#vignetteEnabled = false;\n    this.#sharpenEnabled = false;\n    this.update();\n  }\n\n  readFile(file: HCFiler): void {\n    file.read();\n    this.#bloomEnabled = file.read();\n    this.#bloomThreshold = file.read();\n    this.#bloomWeight = file.read();\n    this.#bloomKernel = file.read();\n    this.#bloomScale = file.read();\n\n    this.#depthOfFieldEnabled = file.read();\n    this.#depthOfFieldBlurLevel = file.read();\n    this.#focusDistance = file.read();\n    this.#focalLength = file.read();\n    this.#fStop = file.read();\n    this.#lensSize = file.read();\n\n    this.#imageProcessingEnabled = file.read();\n    this.#contrast = file.read();\n    this.#exposure = file.read();\n\n    this.#vignetteEnabled = file.read();\n    this.#vignetteBlendMode = file.read();\n    const hex = file.read();\n    this.#vignetteColor = Color4.FromHexString(hex);\n    this.#vignetteWeight = file.read();\n\n    this.#sharpenEnabled = file.read();\n    this.#edgeAmount = file.read();\n    this.#colorAmount = file.read();\n    requestIdleCallback(() => {\n      this.update();\n    });\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n\n    file.write(this.#bloomEnabled);\n    file.write(this.#bloomThreshold);\n    file.write(this.#bloomWeight);\n    file.write(this.#bloomKernel);\n    file.write(this.#bloomScale);\n\n    file.write(this.#depthOfFieldEnabled);\n    file.write(this.#depthOfFieldBlurLevel);\n    file.write(this.#focusDistance);\n    file.write(this.#focalLength);\n    file.write(this.#fStop);\n    file.write(this.#lensSize);\n\n    file.write(this.#imageProcessingEnabled);\n    file.write(this.#contrast);\n    file.write(this.#exposure);\n\n    file.write(this.#vignetteEnabled);\n    file.write(this.#vignetteBlendMode);\n    file.write(this.#vignetteColor.toHexString());\n    file.write(this.#vignetteWeight);\n\n    file.write(this.#sharpenEnabled);\n    file.write(this.#edgeAmount);\n    file.write(this.#colorAmount);\n  }\n}\n","import {\n  ArcRotateCamera,\n  FreeCamera,\n  Scene,\n  TransformNode,\n  Vector3,\n} from \"../babylon\";\nimport { Ellipse, TextBlock, AdvancedDynamicTexture } from \"../babylon\";\nimport { CameraManager } from \"./cameras\";\n\ntype ViewHelperAxes = {\n  color: string;\n  height: number;\n  dir: \"x\" | \"y\" | \"z\";\n  cameraHeight: number;\n  scene: Scene;\n  cm: CameraManager;\n  reverse?: boolean;\n};\n\nexport function getViewHelperAxes(\n  {\n    color,\n    dir,\n    height,\n    cameraHeight,\n    scene,\n    cm,\n    reverse = false,\n  }: ViewHelperAxes,\n  advancedTexture: AdvancedDynamicTexture\n) {\n  const mark = reverse ? -1 : 1;\n  const labelRoot = new TransformNode(\n    `${reverse ? \"-\" : \"\"}${dir}-label`,\n    scene\n  );\n  labelRoot.position[dir] = height * mark;\n\n  const axesLabel = new Ellipse();\n  axesLabel.isPointerBlocker = true;\n  axesLabel.width = \"120px\";\n  axesLabel.height = \"120px\";\n  axesLabel.thickness = 4;\n  axesLabel.color = color;\n  axesLabel.background = color;\n\n  const label = new TextBlock(dir, (reverse ? \"-\" : \"\") + dir.toUpperCase());\n  label.fontSize = 70;\n  label.fontWeight = \"400\";\n  label.color = \"#000000\";\n  axesLabel.addControl(label);\n\n  const activeCamera = scene.activeCamera as ArcRotateCamera;\n\n  axesLabel.onPointerClickObservable.add((info) => {\n    activeCamera.restoreState();\n    const vec = new Vector3();\n    const vec2 = new Vector3();\n\n    vec2[dir] = cameraHeight * mark;\n\n    if (cm.Camera instanceof ArcRotateCamera) {\n      const camera = cm.Camera;\n      const dist = camera.radius;\n      vec[dir] = dist * mark;\n      cm.Position = camera.target.add(vec);\n    } else if (cm.Camera instanceof FreeCamera) {\n      const dist = Vector3.Distance(cm.Camera.target, cm.Camera.position);\n      vec[dir] = dist * mark;\n      cm.Target = cm.Camera.position.add(vec);\n    }\n    activeCamera.setPosition(vec2);\n  });\n  axesLabel.onPointerEnterObservable.add(() => {\n    label.color = \"#ffffff\";\n  });\n  axesLabel.onPointerOutObservable.add(() => {\n    label.color = \"#000000\";\n  });\n\n  advancedTexture.addControl(axesLabel);\n  axesLabel.linkWithMesh(labelRoot);\n\n  return axesLabel;\n}\n","import {\n  ArcRotateCamera,\n  Color3,\n  CreateCylinder,\n  Engine,\n  FreeCamera,\n  Frustum,\n  Observer,\n  Plane,\n  Scene,\n  StandardMaterial,\n  TargetCamera,\n  TransformNode,\n  Vector3,\n  Viewport,\n  AdvancedDynamicTexture,\n  Ellipse,\n} from \"../../babylon\";\nimport { CameraManager } from \"../cameras\";\n\nimport { getViewHelperAxes } from \"../ViewHelperAxes\";\n\nexport class SceneHelper {\n  private _scene: Scene;\n  private _cameraHeight = 3.2;\n  private ellipses: Ellipse[] = [];\n  private FreeObserver: Observer<TargetCamera>;\n  stopRender = false;\n  constructor(\n    private engine: Engine,\n    originScene: Scene,\n    private cameraManger: CameraManager\n  ) {\n    this.init();\n    this.initViewHelper();\n    const frustumPlanes = Frustum.GetPlanes(this._scene.getTransformMatrix());\n    this._scene.registerBeforeRender(() => {\n      this.ellipses.forEach((item) => {\n        if (\n          item.linkedMesh &&\n          this.isInFrustum(frustumPlanes, item.linkedMesh.position)\n        ) {\n          this.changeZIndex(\n            item,\n            item.linkedMesh,\n            Math.round(\n              1000 /\n                originScene.activeCamera.position\n                  .subtract(item.linkedMesh.position)\n                  .length()\n            )\n          );\n        }\n      });\n    });\n\n    originScene.onActiveCameraChanged.add((s) => {\n      if (s.activeCamera instanceof FreeCamera && !this.FreeObserver) {\n        this.FreeObserver =\n          originScene.activeCamera.onViewMatrixChangedObservable.add(\n            this.onFreeChange\n          );\n      }\n    });\n\n    if (\n      this._scene.activeCamera instanceof ArcRotateCamera &&\n      originScene.activeCamera instanceof ArcRotateCamera\n    ) {\n      this._scene.activeCamera.alpha = originScene.activeCamera.alpha;\n      this._scene.activeCamera.beta = originScene.activeCamera.beta;\n    }\n\n    originScene.activeCamera.onViewMatrixChangedObservable.add(\n      this.onArcRotateChange\n    );\n  }\n  get Scene() {\n    return this._scene;\n  }\n  public render() {\n    if (this._scene.activeCamera && !this.stopRender) {\n      this._scene.render();\n    }\n  }\n  private init() {\n    const scene = new Scene(this.engine);\n    scene.autoClear = false;\n    scene.ambientColor = Color3.White();\n\n    scene.createDefaultCamera(true, true, true);\n    scene.useRightHandedSystem = true;\n    const activeCamera = scene.activeCamera as ArcRotateCamera;\n\n    activeCamera.viewport = new Viewport(0.85, 0.85, 0.15, 0.15);\n\n    activeCamera.detachControl();\n    activeCamera.target = Vector3.Zero();\n    activeCamera.setPosition(new Vector3(0, 0, this._cameraHeight));\n\n    this._scene = scene;\n  }\n  private initViewHelper() {\n    const height = 1;\n    const option = { diameter: 0.05, height, tessellation: 96 };\n\n    const root = new TransformNode(\"viewerHelper\", this._scene);\n\n    const Red = \"#ff3653\";\n    const Green = \"#8adb00\";\n    const Blue = \"#2c8fff\";\n\n    //x-line\n    const xl = CreateCylinder(\"x-line\", option, this._scene);\n\n    xl.position.x += height / 2;\n    xl.rotation.z = Math.PI / 2;\n\n    xl.parent = root;\n\n    const xMlt = new StandardMaterial(\"\", this._scene);\n    xMlt.ambientColor = Color3.FromHexString(Red);\n    xl.material = xMlt;\n\n    const yl = CreateCylinder(\"y-line\", option, this._scene);\n\n    const yMlt = new StandardMaterial(\"\", this._scene);\n    yMlt.ambientColor = Color3.FromHexString(Green);\n    yl.material = yMlt;\n    yl.position.y += height / 2;\n\n    const zl = CreateCylinder(\"z-line\", option, this._scene);\n\n    const zMlt = new StandardMaterial(\"\", this._scene);\n    zMlt.ambientColor = Color3.FromHexString(Blue);\n    zl.material = zMlt;\n\n    zl.rotation.x = Math.PI / 2;\n    zl.position.z += height / 2;\n\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"UI\",\n      true,\n      this._scene\n    );\n\n    const opt = {\n      height,\n      cameraHeight: this._cameraHeight,\n      scene: this._scene,\n      cm: this.cameraManger,\n    };\n\n    this.ellipses.push(\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"x\",\n          color: Red,\n        },\n        advancedTexture\n      ),\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"x\",\n          color: Red,\n          reverse: true,\n        },\n        advancedTexture\n      ),\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"y\",\n          color: Green,\n        },\n        advancedTexture\n      ),\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"y\",\n          color: Green,\n          reverse: true,\n        },\n        advancedTexture\n      ),\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"z\",\n          color: Blue,\n        },\n        advancedTexture\n      ),\n      getViewHelperAxes(\n        {\n          ...opt,\n          dir: \"z\",\n          color: Blue,\n          reverse: true,\n        },\n        advancedTexture\n      )\n    );\n  }\n  private changeZIndex(label: Ellipse, mesh: TransformNode, zIndex: number) {\n    label.zIndex = zIndex;\n    // Need to relink mesh\n    label.linkWithMesh(mesh);\n  }\n  private isInFrustum(frustumPlanes: Plane[], center: Vector3): boolean {\n    for (let i = 0; i < 6; i++) {\n      if (frustumPlanes[i].dotCoordinate(center) < 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n  private onArcRotateChange = (c: ArcRotateCamera) => {\n    const activeCamera = this.Scene.activeCamera;\n    if (activeCamera instanceof ArcRotateCamera) {\n      activeCamera.alpha = c.alpha;\n      activeCamera.beta = c.beta;\n    }\n  };\n  private onFreeChange = (c: FreeCamera) => {\n    const activeCamera = this.Scene.activeCamera;\n    if (activeCamera instanceof ArcRotateCamera) {\n      const vec = c.position\n        .subtract(c.target)\n        .normalize()\n        .scale(this._cameraHeight);\n      activeCamera.position = vec;\n    }\n  };\n}\n","import { AppConfig } from \"../app/appConfig\";\nimport {\n  ArcRotateCamera,\n  AxesViewer,\n  Camera,\n  Color3,\n  Engine,\n  EngineOptions,\n  HemisphericLight as BHLight,\n  Matrix,\n  Mesh,\n  MeshBuilder,\n  Observer,\n  Scene,\n  Tools,\n  UtilityLayerRenderer,\n  Vector3,\n  GridMaterial,\n  Texture,\n} from \"../babylon\";\nimport { AdvancedDynamicTexture } from \"../babylon\";\nimport { GoundSize } from \"../contants\";\nimport { HighlightManager } from \"../editor/HighlightManager\";\nimport { HemisphericLight } from \"../entitys/lights/HemisphericLight\";\nimport { b64toBlob, sleep } from \"../utils/utils\";\nimport { AppStore } from \"./../app/AppStore\";\nimport { iVector2Vector, TempVector } from \"./../utils/vector\";\nimport { CameraManager, CameraType } from \"./cameras/CameraManager\";\nimport { SceneControl } from \"./scenes/Scene\";\nimport { SceneEffectManager } from \"./scenes/SceneEffectManager\";\nimport { SceneHelper } from \"./scenes/SceneHelper\";\nimport { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\nimport { IScreenshotSize } from \"@babylonjs/core/Misc/interfaces/screenshotSize\";\nimport { begin } from \"@hc/aop\";\nimport { HCFiler, IVector3 } from \"@hc/core\";\n\n/**渲染视图 */\nexport class Viewer {\n  engine: Engine;\n  sceneControl: SceneControl;\n  cameraManager: CameraManager;\n  ground: Mesh;\n  utilLayer: UtilityLayerRenderer;\n  hemisphericLight: HemisphericLight;\n  highlightManager: HighlightManager;\n  private _showWorldAxes = false;\n  private _worldAxes: AxesViewer;\n  private _engineOption: EngineOptions = {\n    preserveDrawingBuffer: false,\n    stencil: true,\n    useHighPrecisionMatrix: true,\n    premultipliedAlpha: false,\n    antialias: !AppConfig.lowPerformance,\n    forceSRGBBufferSupportState: false,\n    doNotHandleContextLost: AppConfig.lowPerformance,\n  };\n  private _sceneHelper: SceneHelper;\n  private _advancedDynamicTexture: AdvancedDynamicTexture;\n  private Reading = false;\n  private pauseRender = false;\n  private sceneObjects: Mesh[] = [];\n  #sceneEffectManager: SceneEffectManager;\n  constructor(\n    public canvas: HTMLCanvasElement,\n    private preview = false,\n    private _option = { defaultLight: false }\n  ) {\n    this.init();\n    this._regiser();\n    this.render();\n  }\n  get Scene() {\n    return this.sceneControl.Scene;\n  }\n  get ShowAxesViewer() {\n    return this._showWorldAxes;\n  }\n  set ShowAxesViewer(v: boolean) {\n    this._showWorldAxes = v;\n    if (this._worldAxes) {\n      this._worldAxes.xAxis.setEnabled(v);\n      this._worldAxes.yAxis.setEnabled(v);\n      this._worldAxes.zAxis.setEnabled(v);\n    }\n  }\n  get AmbientColor() {\n    return this.Scene.ambientColor;\n  }\n  set AmibentColor(v: string) {\n    this.Scene.ambientColor = Color3.FromHexString(v);\n  }\n  get GuiContainer() {\n    return this._advancedDynamicTexture;\n  }\n  get PauseRender() {\n    return this.PauseRender;\n  }\n  set PauseRender(v: boolean) {\n    if (v === this.pauseRender) return;\n    this.pauseRender = v;\n    if (v)\n      setTimeout(() => {\n        this.engine.clear(\n          this.Scene.clearColor,\n          this.Scene.autoClear ||\n            this.Scene.forceWireframe ||\n            this.Scene.forcePointsCloud,\n          this.Scene.autoClearDepthAndStencil,\n          this.Scene.autoClearDepthAndStencil\n        );\n      }, 0);\n  }\n  get IsPreview() {\n    return this.preview;\n  }\n  async getPreviewUrl(\n    isReset = false,\n    size: number | IScreenshotSize = 400,\n    isCover = false\n  ): Promise<string> {\n    //截图时隐藏视图无关的工具\n    if (this._sceneHelper) this._sceneHelper.stopRender = true;\n    if (this.utilLayer)\n      this.utilLayer.utilityLayerScene.rootNodes.forEach((r) => {\n        r.metadata = r.isEnabled();\n        r.setEnabled(false);\n      });\n\n    let [width, height] =\n      typeof size === \"number\"\n        ? [size, size]\n        : [size.width ?? size.height, size.height ?? size.width];\n\n    if (isReset) {\n      this.setSize(width, height);\n      this.stopRender();\n      this.sceneControl.render();\n    }\n    const png = this.canvas.toDataURL();\n\n    if (isReset) {\n      this.setSize();\n      this.render();\n    }\n\n    //还原工具\n    if (this._sceneHelper) this._sceneHelper.stopRender = false;\n    if (this.utilLayer)\n      this.utilLayer.utilityLayerScene.rootNodes.forEach((r) => {\n        r.setEnabled(r.metadata);\n      });\n\n    return png;\n  }\n  async getBlob(isReset = false) {\n    const url = await this.getPreviewUrl(isReset);\n    return b64toBlob(url);\n  }\n  get ShowGround() {\n    return this.ground.isEnabled();\n  }\n  set ShowGround(v: boolean) {\n    this.ground.setEnabled(v);\n  }\n  get EffectManager() {\n    return this.#sceneEffectManager;\n  }\n  //初始化\n  init() {\n    this._initEngine();\n    this._initScene();\n    this._initCamera();\n    if (this._option.defaultLight) {\n      this._initLight();\n    }\n\n    if (!this.preview) {\n      this._initSceneHelper();\n    }\n\n    AppStore.Scene = this.Scene;\n\n    this.highlightManager = new HighlightManager(this);\n\n    this.setSize();\n\n    const advancedTexture = AdvancedDynamicTexture.CreateFullscreenUI(\n      \"MainGuiContainer\",\n      true,\n      this.Scene\n    );\n\n    this._advancedDynamicTexture = advancedTexture;\n    this.#sceneEffectManager = new SceneEffectManager(this.Scene, this.Camera);\n  }\n  initEditor() {\n    this.utilLayer = new UtilityLayerRenderer(this.Scene);\n    this._worldAxes = new AxesViewer(this.utilLayer.utilityLayerScene, 1, 0);\n    this._worldAxes.xAxis.setEnabled(this._showWorldAxes);\n    this._worldAxes.yAxis.setEnabled(this._showWorldAxes);\n    this._worldAxes.zAxis.setEnabled(this._showWorldAxes);\n\n    this.cameraManager.ArcRotateControl.onRadiusChangeObserver.add((camera) => {\n      this.updateAxes();\n    });\n    this.cameraManager.ArcRotateControl.onZommScaleChangeObserver.add(\n      (camera) => {\n        this.updateAxes();\n      }\n    );\n\n    const ground = MeshBuilder.CreateGround(\n      \"WORLD_GROUND\",\n      { width: GoundSize, height: GoundSize },\n      this.Scene\n    );\n\n    ground.isPickable = false;\n\n    const m = new GridMaterial(\"groundMaterial\", this.Scene);\n    m.lineColor = new Color3(79 / 255, 79 / 255, 79 / 255);\n    m.mainColor = new Color3(61 / 255, 61 / 255, 61 / 255);\n    m.opacity = 0.98;\n    m.backFaceCulling = false;\n    m.gridRatio = 10;\n    m.freeze();\n\n    ground.material = m;\n\n    this.ground = ground;\n    this.highlightManager.exclude(ground);\n\n    begin(\n      this.cameraManager,\n      this.cameraManager.switchEvent,\n      (c: CameraManager) => {\n        if (this._worldAxes) {\n          const isShow = this._showWorldAxes && c.Type === CameraType.ArcRotate;\n          this._worldAxes.xAxis.setEnabled(isShow);\n          this._worldAxes.yAxis.setEnabled(isShow);\n          this._worldAxes.zAxis.setEnabled(isShow);\n        }\n      }\n    );\n  }\n  get Width() {\n    return this.engine.getRenderWidth();\n  }\n  get Height() {\n    return this.engine.getRenderHeight();\n  }\n  get Camera() {\n    return this.cameraManager.Camera;\n  }\n  get FPS() {\n    return this.engine.getFps();\n  }\n  setSize(w?: number, h?: number) {\n    this.engine.setSize(\n      w ?? this.canvas.parentElement.clientWidth,\n      h ?? this.canvas.parentElement.clientHeight\n    );\n  }\n  world2screen(pt: IVector3) {\n    return Vector3.Project(\n      iVector2Vector(pt),\n      Matrix.IdentityReadOnly,\n      this.Scene.getTransformMatrix(),\n      this.Camera.viewport.toGlobal(\n        this.Scene.getEngine().getRenderWidth(),\n        this.Scene.getEngine().getRenderHeight()\n      )\n    );\n  }\n  screen2World(p: { x: number; y: number }) {\n    const ray = this.Scene.createPickingRay(\n      p.x,\n      p.y,\n      this.Scene.getViewMatrix(),\n      this.cameraManager.Camera,\n      true\n    );\n    if (this.ground) this.ground.isPickable = true;\n    //@ts-ignore\n    const pickinfo = ray.intersectsMesh(this.ground || this.Plane);\n\n    if (this.ground) this.ground.isPickable = false;\n\n    if (pickinfo.hit) return pickinfo.pickedPoint;\n\n    return null;\n  }\n  render() {\n    this.engine.runRenderLoop(this.renderFunction);\n  }\n  stopRender() {\n    this.engine.stopRenderLoop();\n  }\n  destory() {\n    if (this.Scene !== AppStore.MainScene && AppStore.Scene === this.Scene) {\n      console.info(\"切换回主场景\");\n      AppStore.Scene = AppStore.MainScene;\n    }\n    this.cameraManager.destory();\n    this.engine.dispose();\n  }\n  on(type: \"rendered\", callback: (d: Scene) => void) {\n    let observer: Observer<Scene>;\n    if (type === \"rendered\") {\n      observer = this.Scene.onAfterRenderObservable.add(callback);\n      return () => {\n        this.Scene.onAfterRenderObservable.remove(observer);\n      };\n    }\n\n    return () => {};\n  }\n  zoomAll(autoLimit = false) {\n    this.cameraManager.zoomAll(autoLimit);\n  }\n  reset() {\n    this.cameraManager.reset();\n    this.sceneControl.reset();\n    this.#sceneEffectManager.reset();\n    this.updateAxes(true);\n  }\n  setCursor(type: string) {\n    this.canvas.parentElement.style.cursor = type;\n  }\n  loadGroundImage(image: string | File): Promise<Mesh> {\n    let texture: Texture;\n    if (typeof image === \"string\") {\n      texture = new Texture(image, this.Scene);\n    } else {\n      texture = Texture.LoadFromDataString(\"ground-image\", image, this.Scene);\n    }\n    const mtl = new StandardMaterial(\"ground-image-mtl\", this.Scene);\n    mtl.specularColor = Color3.Black();\n    mtl.diffuseTexture = texture;\n    mtl.backFaceCulling = false;\n    texture.vAng = Math.PI;\n    texture.wAng = Math.PI;\n    return new Promise((res) => {\n      texture.onLoadObservable.addOnce((data) => {\n        const plane = MeshBuilder.CreateGround(\n          \"ground-iamge\",\n          data.getSize(),\n          this.Scene\n        );\n        plane.material = mtl;\n        plane.freezeWorldMatrix();\n        mtl.freeze();\n        this.sceneObjects.push(plane);\n        res(plane);\n      });\n    });\n  }\n  destoryGroundImage() {\n    this.sceneObjects.forEach((o) => o.dispose(false, true));\n    this.sceneObjects.length = 0;\n  }\n  focus() {\n    this.canvas.focus();\n  }\n  private _regiser() {\n    //\n  }\n  private _initEngine() {\n    const engine = new Engine(\n      this.canvas,\n      !AppConfig.lowPerformance,\n      this._engineOption\n    );\n    this.engine = engine;\n  }\n  private _initScene() {\n    this.sceneControl = new SceneControl(this.engine);\n  }\n  private _initCamera() {\n    this.cameraManager = new CameraManager(this.Scene, this.canvas);\n  }\n  private _initLight() {\n    const light = new BHLight(\"global-light\", new Vector3(1, 1, 1), this.Scene);\n  }\n  private _initSceneHelper() {\n    this._sceneHelper = new SceneHelper(\n      this.engine,\n      this.Scene,\n      this.cameraManager\n    );\n  }\n  private updateAxes(init = false) {\n    if (!this.utilLayer) return;\n    const activeCamera = this.utilLayer.utilityLayerScene\n      .activeCamera as ArcRotateCamera;\n    const cameraPosition = activeCamera.globalPosition;\n    this._worldAxes.xAxis.position.subtractToRef(cameraPosition, TempVector);\n    const dist = TempVector.length();\n\n    if (this.Camera.mode === Camera.ORTHOGRAPHIC_CAMERA) {\n      const fuzz = this.cameraManager.ZoomScale;\n      this._worldAxes.xAxis.scaling.setAll(100 * fuzz);\n      this._worldAxes.yAxis.scaling.setAll(100 * fuzz);\n      this._worldAxes.zAxis.scaling.setAll(100 * fuzz);\n    } else if (init) {\n      this._worldAxes.xAxis.scaling.setAll(1);\n      this._worldAxes.yAxis.scaling.setAll(1);\n      this._worldAxes.zAxis.scaling.setAll(1);\n    } else {\n      const FUZZ = 15;\n      this._worldAxes.xAxis.scaling.setAll((dist / FUZZ) * 4);\n      this._worldAxes.yAxis.scaling.setAll((dist / FUZZ) * 4);\n      this._worldAxes.zAxis.scaling.setAll((dist / FUZZ) * 4);\n    }\n  }\n  renderEvent() {}\n  clearScene() {\n    for (const root of this.Scene.rootNodes) {\n      if (root.metadata?.needDispose) {\n        root.dispose(false, true);\n      }\n    }\n  }\n  writeFile(filer: HCFiler) {\n    filer.write(2);\n    this.cameraManager.writeFile(filer);\n    this.sceneControl.writeFile(filer);\n    this.#sceneEffectManager.writeFile(filer);\n  }\n  readFile(filer: HCFiler) {\n    this.Reading = true;\n    const ver = filer.read();\n    this.cameraManager.readFile(filer);\n    this.sceneControl.readFile(filer);\n    if (ver > 1) {\n      this.#sceneEffectManager.readFile(filer);\n    } else {\n      this.#sceneEffectManager.reset();\n    }\n\n    this.Reading = false;\n    this.updateAxes(true);\n  }\n  clearCache() {\n    this.Scene.cleanCachedTextureBuffer();\n    this.engine.clearInternalTexturesCache();\n  }\n  private renderFunction = () => {\n    this.renderEvent();\n    if (this.Reading || this.pauseRender) return;\n    this.sceneControl.render();\n    if (this._sceneHelper) this._sceneHelper.render();\n  };\n}\n","import { AppStore } from \"../app/AppStore\";\nimport { Color3, Color4, Scene, StandardMaterial } from \"../babylon\";\nimport { ColorPalette } from \"../utils/color\";\n\nStandardMaterial.AmbientTextureEnabled = false;\n\nexport namespace CommonMaterials {\n  const _BasicMaterialMap = new Map<number, StandardMaterial>();\n  const _BasicWireframeMaterialMap = new Map<number, StandardMaterial>();\n  let DefaultStandardMaterial: StandardMaterial;\n  export function getColor3(index: number) {\n    return Color3.FromArray(ColorPalette[index].map((c) => c / 255));\n  }\n  export function getColor4(index: number) {\n    return Color4.FromArray(ColorPalette[index].map((c) => c / 255));\n  }\n  export function getColor3fromHex(index: string) {\n    return Color3.FromHexString(index);\n  }\n  export function getColorArray(index: number) {\n    return ColorPalette[index].map((c) => c / 255);\n  }\n  export function getStandMaterial(colorIndex: number, scene: Scene) {\n    if (_BasicMaterialMap.has(colorIndex))\n      return _BasicMaterialMap.get(colorIndex);\n    let mtl = new StandardMaterial(\"__common_color_\" + colorIndex, scene);\n    mtl.backFaceCulling = false;\n    mtl.diffuseColor = getColor3(colorIndex);\n    _BasicMaterialMap.set(colorIndex, mtl);\n    return mtl;\n  }\n  export function getWireframeStandMaterial(colorIndex: number, scene: Scene) {\n    if (_BasicWireframeMaterialMap.has(colorIndex))\n      return _BasicWireframeMaterialMap.get(colorIndex);\n    let mtl = new StandardMaterial(\"__common__wf_color_\" + colorIndex, scene);\n    mtl.diffuseColor = getColor3(colorIndex);\n    mtl.alpha = 0.0;\n    _BasicWireframeMaterialMap.set(colorIndex, mtl);\n    return mtl;\n  }\n  export function clear() {\n    _BasicMaterialMap.clear();\n    _BasicWireframeMaterialMap.clear();\n  }\n  export function getDefaultStandardMaterial() {\n    if (!DefaultStandardMaterial) {\n      DefaultStandardMaterial = getStandMaterial(9, AppStore.Scene);\n    }\n    return DefaultStandardMaterial;\n  }\n}\n","import { StandardMaterial } from \"@babylonjs/core/Materials/standardMaterial\";\nimport { Entity } from \"./Entity\";\nimport { Color4, Mesh, PBRMaterial, VertexData } from \"../babylon\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { CommonMaterials } from \"../materials/commonMaterials\";\nimport { ColorPalette, getColor3 } from \"./../utils/color\";\nimport { AppEvent } from \"../core\";\n\n/**\n * 3D基础实体基类\n *\n * @export\n * @abstract\n * @class Solid3D\n * @extends {Entity}\n */\nexport abstract class Solid3D extends Entity {\n  protected static VertexDataCache = new Map<string, VertexData>();\n  constructor() {\n    super();\n  }\n  get VertextData(): VertexData {\n    return null;\n  }\n  initDrawObject(renderType = RenderType.Conceptual) {\n    const mesh = new Mesh(this.UniqueName, Entity.Scene);\n    const vx = this.VertextData;\n    vx.applyToMesh(mesh);\n\n    if (renderType === RenderType.Wireframe) {\n      mesh.enableEdgesRendering();\n      mesh.edgesColor = Color4.FromArray(ColorPalette[this.ColorIndex]);\n    }\n    this.updateMaterial(renderType, mesh);\n\n    mesh.receiveShadows = true;\n\n    //推迟触发加载完成事件,浏览器空闲时触发加载完成事件\n    requestIdleCallback(() => {\n      AppEvent.trigger({ type: \"load\", target: this });\n      this.trigger({ type: \"load\", target: this });\n    });\n\n    return mesh;\n  }\n  updateDrawObject(renderType: RenderType, obj: Mesh) {\n    if (!obj) return;\n    obj.geometry.setAllVerticesData(this.VertextData);\n    obj.visibility = this._opacity;\n  }\n  updateMaterial(type?: RenderType, obj?: Mesh) {\n    const m = obj ?? (this.RenderObject as Mesh);\n    const renderType = type ?? this.RenderType;\n    switch (renderType) {\n      case RenderType.Wireframe:\n        m.material = CommonMaterials.getWireframeStandMaterial(\n          this._colorIndex,\n          Entity.Scene\n        );\n        break;\n      case RenderType.Physical:\n      case RenderType.Conceptual: {\n        const mtl = CommonMaterials.getStandMaterial(\n          this.ColorIndex,\n          Entity.Scene\n        );\n        m.material = mtl;\n        break;\n      }\n      default:\n        break;\n    }\n\n    if (this.Material) {\n      m.material = this.Material.Material;\n      if (this.Color) {\n        if (m.material instanceof StandardMaterial) {\n          m.material.diffuseColor = getColor3(this.Color);\n        } else if (m.material instanceof PBRMaterial) {\n          m.material.albedoColor = getColor3(this.Color);\n        }\n      }\n    }\n\n    for (const [name, mid] of this._materialMap) {\n      if (m.id === name) {\n        if (mid.Object?.Material) m.material = mid.Object.Material;\n      }\n    }\n  }\n}\n","import { CreateBoxVertexData, Matrix, VertexData } from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { CenterType } from \"../types/entity.types\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Box extends Solid3D {\n  static type = \"Box\";\n  private width = 10;\n  private height = 10;\n  private depth = 10;\n  private _center: CenterType = CenterType.Center;\n  protected _name = \"盒子\";\n  constructor(\n    option = { width: 10, height: 10, depth: 10, center: CenterType.Center }\n  ) {\n    super();\n    this.width = option.width ?? this.width;\n    this.height = option.height ?? this.height;\n    this.depth = option.depth ?? this.depth;\n    this._center = option.center ?? CenterType.Center;\n  }\n  get Width() {\n    return this.width;\n  }\n  set Width(v: number) {\n    if (v === this.width) return;\n    this.writeSnapshoot();\n    this.width = v;\n    this.update();\n  }\n  get Height() {\n    return this.height;\n  }\n  set Height(v: number) {\n    if (v === this.height) return;\n    this.writeSnapshoot();\n    this.height = v;\n    this.update();\n  }\n  get Depth() {\n    return this.depth;\n  }\n  set Depth(v: number) {\n    if (v === this.depth) return;\n    this.writeSnapshoot();\n    this.depth = v;\n    this.update();\n  }\n  get CenterPosition() {\n    return this._center;\n  }\n  set CenterPosition(c: CenterType) {\n    if (c === this.depth) return;\n    this.writeSnapshoot();\n    this._center = c;\n    this.update();\n  }\n  get TranslateMtx() {\n    let [x, y, z] = [0, 0, 0];\n    switch (this._center) {\n      case CenterType.Center:\n        break;\n      case CenterType.Bottom:\n        z = this.depth / 2;\n        break;\n      case CenterType.Top:\n        z = -this.depth / 2;\n        break;\n      case CenterType.Left:\n        x = this.width / 2;\n        break;\n      case CenterType.Right:\n        x = -this.width / 2;\n        break;\n      case CenterType.Front:\n        y = -this.Height / 2;\n        break;\n      case CenterType.Back:\n        y = this.Height / 2;\n        break;\n      case CenterType.LFB:\n        [x, y, z] = [this.width / 2, this.height / 2, this.depth / 2];\n        break;\n      case CenterType.RFB:\n        [x, y, z] = [-this.width / 2, this.height / 2, this.depth / 2];\n        break;\n      case CenterType.LBB:\n        [x, y, z] = [this.width / 2, -this.height / 2, this.depth / 2];\n        break;\n      case CenterType.RBB:\n        [x, y, z] = [-this.width / 2, -this.height / 2, this.depth / 2];\n        break;\n    }\n\n    return Matrix.Translation(x, y, z);\n  }\n  get VertextData(): VertexData {\n    const key = `${this.width}-${this.height}-${this.depth}-${this._center}`;\n    let vd = Box.VertexDataCache.get(key);\n    if (!vd) {\n      vd = CreateBoxVertexData({\n        width: this.width,\n        height: this.height,\n        depth: this.depth,\n      });\n      vd.transform(this.TranslateMtx);\n      Box.VertexDataCache.set(key, vd);\n    }\n    return vd;\n  }\n\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.width);\n    file.write(this.height);\n    file.write(this.depth);\n    file.write(this._center);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.width = file.read();\n    this.height = file.read();\n    this.depth = file.read();\n    this._center = file.read();\n    this.update();\n  }\n}\n","import { LinesMesh, Vector3 } from \"../../babylon\";\nimport { CommonMaterials } from \"../../materials/commonMaterials\";\nimport { Entity } from \"../Entity\";\n\nexport abstract class Curve extends Entity {\n  updateMaterial() {\n    const l = this.RenderObject as LinesMesh;\n    l.color = CommonMaterials.getColor3(this.ColorIndex);\n  }\n  /**\n   * 曲线点的原始位置\n   *\n   * @readonly\n   * @memberof Lines\n   */\n  get Points(): Vector3[] {\n    return [];\n  }\n  /**\n   * 曲线点的实际位置\n   *\n   * @readonly\n   * @type {Vector3[]}\n   * @memberof Curve\n   */\n  get Shape(): Vector3[] {\n    return this.Points;\n  }\n  get AllPoints() {\n    return this.Points;\n  }\n  get StartPoint() {\n    return new Vector3();\n  }\n  get EndPoint() {\n    return new Vector3();\n  }\n  get MidPoint() {\n    return new Vector3();\n  }\n  get Length() {\n    return 0;\n  }\n  reverse() {\n    return this;\n  }\n}\n","import { CreateLineSystemVertexData } from \"@babylonjs/core\";\n\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\n\nimport { LinesMesh, MeshBuilder, Vector3 } from \"../../babylon\";\nimport { DefaultIntersectionThreshold } from \"../../contants\";\nimport { UpdateFlag } from \"../../enums\";\nimport { RenderType } from \"../../types/renderTypes\";\nimport { arrayLast } from \"../../utils/array\";\nimport { iVector2Vector, vec2Vec3Like } from \"../../utils/vector\";\nimport { Entity } from \"../Entity\";\nimport { Curve } from \"./Curve\";\n\n@Factory\nexport class Lines extends Curve {\n  static type = \"Lines\";\n  private points: IVector3[] = [];\n  constructor(option?: { points?: IVector3[] }) {\n    super();\n    this.points = option?.points\n      ? option?.points.map(iVector2Vector)\n      : [new Vector3(), new Vector3(1)];\n  }\n  get Points() {\n    return this.points.map(iVector2Vector);\n  }\n  get StartPoint() {\n    return iVector2Vector(this.points[0]);\n  }\n  get EndPoint() {\n    return iVector2Vector(arrayLast(this.points));\n  }\n  get Length() {\n    return this.points.reduce((preV, value, currentIndex) => {\n      if (currentIndex === 0) return 0;\n      return (\n        preV +\n        Vector3.Distance(\n          iVector2Vector(this.points[currentIndex - 1]),\n          iVector2Vector(value)\n        )\n      );\n    }, 0);\n  }\n  addPoint(p: IVector3) {\n    this.points.push(p);\n    this.update(UpdateFlag.Geometry);\n  }\n  updatePointByIndex(index: number, newP: IVector3) {\n    const p = this.points[index];\n    if (p) {\n      p.x = newP.x;\n      p.y = newP.y;\n      p.z = newP.z;\n      this.update(UpdateFlag.Geometry);\n      return true;\n    }\n    return false;\n  }\n  pop() {\n    this.points.pop();\n    this.update(UpdateFlag.Geometry);\n  }\n  initDrawObject(renderType: RenderType) {\n    const lines = MeshBuilder.CreateLines(\n      \"line\" + this.Id,\n      {\n        points: this.points.map((p) => iVector2Vector(p)),\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    lines.isNearPickable = true;\n    lines.intersectionThreshold = DefaultIntersectionThreshold;\n    return lines;\n  }\n  updateDrawObject(renderType: RenderType, obj: LinesMesh) {\n    if (!obj) return;\n    const vertexData = CreateLineSystemVertexData({\n      lines: [this.Points],\n    });\n\n    vertexData.applyToMesh(obj);\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.points.length);\n    for (const p of this.points) {\n      file.writeVector3(p);\n    }\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    const count = file.read();\n    this.points.length = 0;\n    for (let i = 0; i < count; i++) {\n      const p = new Vector3();\n      file.readVector3(p);\n      this.points.push(p);\n    }\n    this.update();\n  }\n\n  getDragPoints(): Vector3[] {\n    return this.Points.map((p) => Vector3.TransformCoordinates(p, this.Matrix));\n  }\n  moveDragPoint(vec: Vector3, index: number) {\n    for (let i = 0; i < this.points.length; i++) {\n      if (i === index) {\n        const p = iVector2Vector(this.points[i]);\n        p.addToRef(vec, p);\n        Object.assign(this.points[i], vec2Vec3Like(p));\n        break;\n      }\n    }\n    this.update(UpdateFlag.Geometry);\n  }\n}\n","import { LinesMesh, MeshBuilder, Vector3 } from \"../../babylon\";\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport { RenderType } from \"../../types/renderTypes\";\nimport { Curve } from \"./Curve\";\nimport { Entity } from \"../Entity\";\nimport { iVector2Vector } from \"../../utils/vector\";\nimport { DefaultIntersectionThreshold } from \"../../contants\";\n\n@Factory\nexport class Line extends Curve {\n  static type = \"Line\";\n  private start = new Vector3();\n  private end = new Vector3();\n  constructor(option?: { start: IVector3; end: IVector3 }) {\n    super();\n    this.start = option?.start ? iVector2Vector(option.start) : this.start;\n    this.end = option?.end ? iVector2Vector(option.end) : this.end;\n  }\n  get Points() {\n    return [this.start, this.end];\n  }\n  get StartPoint() {\n    return this.start;\n  }\n  get EndPoint() {\n    return this.end;\n  }\n  get MidPoint() {\n    return Vector3.Center(this.start, this.end);\n  }\n  get Length() {\n    return Vector3.Distance(this.start, this.end);\n  }\n  initDrawObject(renderType: RenderType) {\n    const lines = MeshBuilder.CreateLines(\n      \"line\" + this.Id,\n      {\n        points: [this.start, this.end],\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    lines.isNearPickable = true;\n    lines.intersectionThreshold = DefaultIntersectionThreshold;\n    return lines;\n  }\n  updateDrawObject(renderType: RenderType, obj: LinesMesh) {\n    if (!obj) return;\n    MeshBuilder.CreateLines(\n      \"line\" + this.Id,\n      {\n        points: [this.start, this.end],\n        updatable: true,\n        instance: obj,\n      },\n      Entity.Scene\n    );\n  }\n  reverse() {\n    [this.start, this.end] = [this.end, this.start];\n    return this;\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    this.update();\n  }\n\n  getDragPoints(): Vector3[] {\n    return this.Points.map((p) => Vector3.TransformCoordinates(p, this.Matrix));\n  }\n  moveDragPoint(vec: Vector3, index: number) {}\n}\n","import { CreateLineSystemVertexData } from \"@babylonjs/core\";\n\nimport { Factory, HCFiler } from \"@hc/core\";\n\nimport {\n  Curve3,\n  LinesMesh,\n  MeshBuilder,\n  Vector2,\n  Vector3,\n} from \"../../babylon\";\nimport { DefaultIntersectionThreshold } from \"../../contants\";\nimport { RenderType } from \"../../types/renderTypes\";\nimport { equaln } from \"../../utils\";\nimport { getPolylineCenter } from \"../../utils/curveUtils\";\nimport { Entity } from \"../Entity\";\nimport { Curve } from \"./Curve\";\nimport { IPolylineData, PolylineData } from \"./types\";\n\n@Factory\nexport class Polyline extends Curve {\n  static type = \"Polyline\";\n  protected _name = \"多段线\";\n  private dataList: PolylineData[] = [];\n  constructor(option?: { dataList: IPolylineData[] }) {\n    super();\n    if (option?.dataList) {\n      this.dataList = option.dataList.map((d) => this.toPolylineData(d));\n    }\n  }\n\n  /**\n   * 顶点数据\n   *\n   * 使用浅拷贝，避免直接修改顶点信息\n   */\n  get Vertices() {\n    return [...this.dataList];\n  }\n\n  /**\n   * 顶点数量\n   */\n  get VertexCount() {\n    return this.dataList.length;\n  }\n\n  get Points(): Vector3[] {\n    let points = [];\n    this.dataList.forEach((data, i) => {\n      if (i > 0) {\n        const fp = this.dataList[i - 1].pt;\n        const ep = data.pt;\n        const sp = getPolylineCenter(fp, ep, this.dataList[i - 1].bulge);\n\n        points = data.bulge\n          ? [\n              ...points,\n              ...Curve3.ArcThru3Points(\n                new Vector3(fp.x, 0, fp.y),\n                new Vector3(sp.x, 0, sp.y),\n                new Vector3(ep.x, 0, ep.y)\n              ).getPoints(),\n            ]\n          : [...points, new Vector3(sp.x, 0, sp.y), new Vector3(ep.x, 0, ep.y)];\n      } else {\n        points.push(new Vector3(data.pt.x, 0, data.pt.y));\n      }\n    });\n\n    return points;\n  }\n  get Shape() {\n    let points: Vector3[] = [];\n    for (let i = 0; i < this.dataList.length - 1; i++) {\n      const data = this.dataList[i];\n      const data2 = this.dataList[i + 1];\n      const p1 = data.pt;\n      const p2 = data2.pt;\n      if (equaln(data.bulge, 0)) {\n        points.push(new Vector3(p1.x, 0, p1.y));\n      } else {\n        const center = getPolylineCenter(p1, p2, data.bulge);\n        const curve = Curve3.ArcThru3Points(\n          new Vector3(p1.x, 0, p1.y),\n          new Vector3(center.x, 0, center.y),\n          new Vector3(p2.x, 0, p2.y)\n        );\n        const pts = curve.getPoints();\n        pts.pop();\n        points.push(...pts);\n      }\n\n      if (i + 1 === this.dataList.length - 1) {\n        points.push(new Vector3(p2.x, 0, p2.y));\n      }\n    }\n    return points;\n  }\n  get AllPoints() {\n    return this.Shape.map((p) => Vector3.TransformCoordinates(p, this.Matrix));\n  }\n  //返回3D展示对象\n  initDrawObject(renderType = RenderType.Wireframe) {\n    const arcLine = MeshBuilder.CreateLines(\n      this.UniqueName,\n      { points: this.Shape, updatable: true },\n      Entity.Scene\n    );\n    arcLine.isNearPickable = true;\n    arcLine.intersectionThreshold = DefaultIntersectionThreshold;\n    return arcLine;\n  }\n  //更新3D对象\n  updateDrawObject(renderType: RenderType, obj: LinesMesh) {\n    if (!obj) return;\n\n    const vertexData = CreateLineSystemVertexData({\n      lines: [this.Shape],\n    });\n\n    vertexData.applyToMesh(obj);\n  }\n  //序列化对象\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.writeAnyArray(this.dataList, (d) => {\n      file.write(d.pt.x);\n      file.write(d.pt.y);\n      file.write(d.bulge);\n    });\n  }\n  //反序列化对象\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    file.read();\n    file.readAnyArray(() => {\n      const data: PolylineData = {\n        pt: new Vector2(),\n        bulge: 0,\n      };\n      data.pt.x = file.read();\n      data.pt.y = file.read();\n      data.bulge = file.read();\n      this.dataList.push(data);\n    });\n    this.update();\n  }\n\n  /**\n   * 添加新的点\n   *\n   * @param data 需要添加的点数据\n   */\n  appendVertex(...data: IPolylineData[]) {\n    this.dataList.push(...data.map((item) => this.toPolylineData(item)));\n    this.update();\n  }\n\n  /**\n   * 更新指定点的数据\n   *\n   * @param index 点的索引位置\n   * @param data 新的点数据，会使用该数据替换指定 `index` 位置的值\n   * @returns\n   */\n  updateVertexAt(index: number, data: IPolylineData) {\n    const dataList = [...this.dataList];\n\n    if (!dataList[index]) {\n      return;\n    }\n\n    dataList.splice(index, 1, this.toPolylineData(data));\n\n    this.dataList = dataList;\n\n    this.update();\n  }\n\n  /**\n   * 移除指定位置的顶点\n   *\n   * @param index 点的索引位置，当为负数的时候表示倒数位置\n   * @returns\n   */\n  removeVertexAt(index: number) {\n    if (!this.dataList.at(index)) {\n      return;\n    }\n\n    this.dataList.splice(index, 1);\n    this.update();\n  }\n\n  private toPolylineData(data: IPolylineData): PolylineData {\n    return {\n      pt: new Vector2(data.pt.x, data.pt.y),\n      bulge: data.bulge,\n    };\n  }\n}\n","import { CreateSphereVertexData, VertexData } from \"../babylon\";\n\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Sphere extends Solid3D {\n  static type = \"Sphere\";\n  protected _name = \"球\";\n  private diameter = 10;\n  private arc = 10;\n  constructor(option = { diameter: 1, arc: 1 }) {\n    super();\n    this.diameter = option.diameter ?? this.diameter;\n    this.arc = option.arc ?? this.arc;\n  }\n  get Diameter() {\n    return this.diameter;\n  }\n  set Diameter(v: number) {\n    if (v === this.diameter) return;\n    this.writeSnapshoot();\n    this.diameter = v;\n    this.update();\n  }\n\n  get VertextData(): VertexData {\n    return CreateSphereVertexData({\n      diameter: this.diameter,\n      arc: this.arc,\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.diameter);\n    file.write(this.arc);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.diameter = file.read();\n    this.arc = file.read();\n    this.update();\n  }\n}\n","import { CreateCylinderVertexData, VertexData } from \"../babylon\";\nimport { HCFiler, Factory } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Cylinder extends Solid3D {\n  static type = \"Cylinder\";\n  protected _name = \"圆柱\";\n  private diameterTop = 10;\n  private diameterBottom = 10;\n  private height = 10;\n  private tessellation: number = undefined;\n  private arc = 10;\n  constructor(\n    option = { diameterTop: 10, diameterBottom: 10, height: 10, arc: 10 }\n  ) {\n    super();\n    this.diameterTop = option.diameterTop ?? 10;\n    this.diameterBottom = option.diameterBottom ?? 10;\n    this.height = option.height ?? 10;\n    this.arc = option.arc ?? 10;\n  }\n  get DiameterTop() {\n    return this.diameterTop;\n  }\n  set DiameterTop(v: number) {\n    if (v === this.diameterTop) return;\n    this.writeSnapshoot();\n    this.diameterTop = v;\n    this.update();\n  }\n  get DiameterBottom() {\n    return this.diameterBottom;\n  }\n  set DiameterBottom(v: number) {\n    if (v === this.diameterBottom) return;\n    this.writeSnapshoot();\n    this.diameterBottom = v;\n    this.update();\n  }\n  get Height() {\n    return this.height;\n  }\n  set Height(v: number) {\n    if (v === this.height) return;\n    this.writeSnapshoot();\n    this.height = v;\n    this.update();\n  }\n  get Tessellation() {\n    return this.tessellation;\n  }\n  set Tessellation(v: number) {\n    if (v === this.tessellation) return;\n    this.writeSnapshoot();\n    this.tessellation = v;\n    this.update();\n  }\n  get VertextData(): VertexData {\n    return CreateCylinderVertexData({\n      diameterTop: this.diameterTop,\n      diameterBottom: this.diameterBottom,\n      height: this.height,\n      arc: this.arc,\n      tessellation: this.tessellation,\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.diameterTop);\n    file.write(this.diameterBottom);\n    file.write(this.height);\n    file.write(this.tessellation);\n    file.write(this.arc);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.diameterTop = file.read();\n    this.diameterBottom = file.read();\n    this.height = file.read();\n    this.tessellation = file.read();\n    this.arc = file.read();\n    this.update();\n  }\n}\n","import { CreatePlaneVertexData, VertexData } from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Plane extends Solid3D {\n  static type = \"Plane\";\n  protected _name = \"平面\";\n  private width = 10;\n  private height = 10;\n  constructor(option?: { width: number; height: number }) {\n    super();\n    this.width = option?.width ?? this.width;\n    this.height = option?.height ?? this.height;\n  }\n  get Width() {\n    return this.width;\n  }\n  set Width(v: number) {\n    if (v === this.width) return;\n    this.writeSnapshoot();\n    this.width = v;\n    this.update();\n  }\n  get Height() {\n    return this.height;\n  }\n  set Height(v: number) {\n    if (v === this.height) return;\n    this.writeSnapshoot();\n    this.height = v;\n    this.update();\n  }\n  get VertextData(): VertexData {\n    return CreatePlaneVertexData({\n      width: this.width,\n      height: this.height,\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.width);\n    file.write(this.height);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.width = file.read();\n    this.height = file.read();\n    this.update();\n  }\n}\n","import {\n  CreateCapsuleVertexData,\n  ICreateCapsuleOptions,\n  VertexData,\n} from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Capsule extends Solid3D {\n  static type = \"Capsule\";\n  private radius: number;\n  private radiusTop: number;\n  private radiusBottom: number;\n  private height: number;\n  private subdivisions = 20;\n  private tessellation = 16;\n  private capSubdivisions = 6;\n  private topCapSubdivisions: number;\n  private bottomCapSubdivisions: number;\n  constructor(\n    option: ICreateCapsuleOptions = {\n      radius: 1,\n      radiusTop: undefined,\n      radiusBottom: undefined,\n      height: 1,\n      subdivisions: 2,\n      tessellation: 2,\n      capSubdivisions: 6,\n    }\n  ) {\n    super();\n\n    this.height = option.height ?? 20;\n    this.radius = option.radius ?? 5;\n    this.subdivisions = option.subdivisions ?? 2;\n    this.tessellation = option.tessellation ?? 16;\n    this.capSubdivisions = option.capSubdivisions ?? 6;\n\n    this.radiusTop = option.radiusTop;\n    this.radiusBottom = option.radiusBottom;\n    this.topCapSubdivisions = option.topCapSubdivisions;\n    this.bottomCapSubdivisions = option.bottomCapSubdivisions;\n  }\n  get Radius() {\n    return this.radius;\n  }\n  set Radius(v: number) {\n    if (v === this.radius) return;\n    this.writeSnapshoot();\n    this.radius = v;\n    this.update();\n  }\n  get RadiusTop() {\n    return this.radiusTop;\n  }\n  set RadiusTop(v: number) {\n    if (v === this.radiusTop) return;\n    this.writeSnapshoot();\n    this.radiusTop = v;\n    this.update();\n  }\n  get RadiusBottom() {\n    return this.radiusBottom;\n  }\n  set RadiusBottom(v: number) {\n    if (v === this.radiusBottom) return;\n    this.writeSnapshoot();\n    this.radiusBottom = v;\n    this.update();\n  }\n  get CapSubdivisions() {\n    return this.capSubdivisions;\n  }\n  set CapSubdivisions(v: number) {\n    if (v === this.capSubdivisions) return;\n    this.writeSnapshoot();\n    this.capSubdivisions = v;\n    this.update();\n  }\n  get TopCapSubdivisions() {\n    return this.topCapSubdivisions;\n  }\n  set TopCapSubdivisions(v: number) {\n    if (v === this.topCapSubdivisions) return;\n    this.writeSnapshoot();\n    this.topCapSubdivisions = v;\n    this.update();\n  }\n  get BottomCapSubdivisions() {\n    return this.bottomCapSubdivisions;\n  }\n  set BottomCapSubdivisions(v: number) {\n    if (v === this.bottomCapSubdivisions) return;\n    this.writeSnapshoot();\n    this.bottomCapSubdivisions = v;\n    this.update();\n  }\n\n  get Height() {\n    return this.height;\n  }\n  set Height(v: number) {\n    if (v === this.height) return;\n    this.writeSnapshoot();\n    this.height = v;\n    this.update();\n  }\n  get Subdivisions() {\n    return this.subdivisions;\n  }\n  set Subdivisions(v: number) {\n    if (v === this.subdivisions) return;\n    this.writeSnapshoot();\n    this.subdivisions = v;\n    this.update();\n  }\n  get Tessellation() {\n    return this.tessellation;\n  }\n  set Tessellation(v: number) {\n    if (v === this.tessellation) return;\n    this.writeSnapshoot();\n    this.tessellation = v;\n    this.update();\n  }\n  get VertextData(): VertexData {\n    return CreateCapsuleVertexData({\n      radius: this.radius,\n      radiusTop: this.radiusTop,\n      radiusBottom: this.radiusBottom,\n      height: this.height,\n      subdivisions: this.subdivisions,\n      tessellation: this.tessellation,\n      capSubdivisions: this.capSubdivisions,\n      topCapSubdivisions: this.topCapSubdivisions,\n      bottomCapSubdivisions: this.bottomCapSubdivisions,\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.radius);\n    file.write(this.height);\n    file.write(this.subdivisions);\n    file.write(this.tessellation);\n    file.write(this.capSubdivisions);\n\n    file.write(this.radiusTop);\n    file.write(this.radiusBottom);\n    file.write(this.topCapSubdivisions);\n    file.write(this.bottomCapSubdivisions);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.radius = file.read();\n    this.height = file.read();\n    this.subdivisions = file.read();\n    this.tessellation = file.read();\n    this.capSubdivisions = file.read();\n\n    this.radiusTop = file.read();\n    this.radiusBottom = file.read();\n    this.topCapSubdivisions = file.read();\n    this.bottomCapSubdivisions = file.read();\n    this.update();\n  }\n}\n","import { CreateTorusVertexData } from \"../babylon\";\n\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\n\n@Factory\nexport class Torus extends Solid3D {\n  static type = \"Torus\";\n  private diameter = 1;\n  private tessellation: number;\n  private thickness = 0.1;\n  constructor(\n    option = {\n      diameter: 1,\n      tessellation: 2,\n      thickness: 0.1,\n    }\n  ) {\n    super();\n    this.diameter = option.diameter ?? 1;\n    this.tessellation = option.tessellation ?? 32;\n    this.thickness = option.thickness ?? 0.1;\n  }\n  get Diameter() {\n    return this.diameter;\n  }\n  set Diameter(v: number) {\n    if (v === this.diameter) return;\n    this.writeSnapshoot();\n    this.diameter = v;\n    this.update();\n  }\n  get Tthickness() {\n    return this.thickness;\n  }\n  set Tthickness(v: number) {\n    if (v === this.thickness) return;\n    this.writeSnapshoot();\n    this.thickness = v;\n    this.update();\n  }\n  get Tessellation() {\n    return this.tessellation;\n  }\n  set Tessellation(v: number) {\n    if (v === this.tessellation) return;\n    this.writeSnapshoot();\n    this.tessellation = v;\n    this.update();\n  }\n  get VertextData() {\n    return CreateTorusVertexData({\n      diameter: this.diameter,\n      tessellation: this.tessellation,\n      thickness: this.thickness,\n    });\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.diameter);\n    file.write(this.thickness);\n    file.write(this.tessellation);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.diameter = file.read();\n    this.thickness = file.read();\n    this.tessellation = file.read();\n    this.update();\n  }\n}\n","import {\n  Color3,\n  CreateGroundVertexData,\n  Mesh,\n  StandardMaterial,\n  Texture,\n  VertexData,\n} from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { Solid3D } from \"./Solid3D\";\nimport { RenderType } from \"../types\";\nimport { UpdateFlag } from \"../enums\";\n\n@Factory\nexport class Ground extends Solid3D {\n  static type = \"Ground\";\n  protected _name = \"地面\";\n  private width = 10;\n  private height = 10;\n  onlyGround = false;\n  constructor(option?: { width: number; height: number }) {\n    super();\n    this.width = option?.width ?? this.width;\n    this.height = option?.height ?? this.height;\n  }\n  get Width() {\n    return this.width;\n  }\n  set Width(v: number) {\n    if (v === this.width) return;\n    this.writeSnapshoot();\n    this.width = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  get Height() {\n    return this.height;\n  }\n  set Height(v: number) {\n    if (v === this.height) return;\n    this.writeSnapshoot();\n    this.height = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  get VertextData(): VertexData {\n    return CreateGroundVertexData({\n      width: this.width,\n      height: this.height,\n    });\n  }\n  loadGroundImage(image: string | File, isInit = true) {\n    this.onlyGround = true;\n    let texture: Texture;\n    if (typeof image === \"string\") {\n      texture = new Texture(image, this.Scene);\n    } else {\n      texture = Texture.LoadFromDataString(\"ground-image\", image, this.Scene);\n    }\n\n    const mtl = new StandardMaterial(\"ground-image-mtl\", this.Scene);\n    mtl.specularColor = Color3.Black();\n    mtl.diffuseTexture = texture;\n    mtl.backFaceCulling = false;\n    texture.vAng = Math.PI;\n    texture.wAng = Math.PI;\n    return new Promise((res) => {\n      texture.onLoadObservable.addOnce((data) => {\n        const size = data.getSize();\n        if (isInit) {\n          this.width = size.width;\n          this.Height = size.height;\n        }\n        this.RenderObject.material = mtl;\n        mtl.freeze();\n        res(this);\n      });\n    });\n  }\n  updateMaterial(type?: RenderType, obj?: Mesh) {\n    if (this.onlyGround) return;\n    super.updateMaterial(type, obj);\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.width);\n    file.write(this.height);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.width = file.read();\n    this.height = file.read();\n    this.update();\n  }\n}\n","import { autoUpdate } from \"../../core/autoUpdate\";\nimport { Entity } from \"../Entity\";\nimport { HCFiler } from \"@hc/core\";\nimport {\n  IShadowLight,\n  Mesh,\n  ShadowGenerator,\n  TransformNode,\n  Vector3,\n} from \"../../babylon\";\nimport { AppStore } from \"../../app/AppStore\";\nimport { RenderTargetTexture } from \"@babylonjs/core/Materials/Textures/renderTargetTexture\";\n\nexport abstract class Light extends Entity {\n  isLight = true;\n  @autoUpdate Intensity = 1;\n  /**颜色 */\n  @autoUpdate Diffuse = \"#ffffff\";\n  /**高光 */\n  @autoUpdate Specular = \"#ffffff\";\n  @autoUpdate VisiableHelper = true;\n  /**偏差 */\n  private _bias = 0.0001;\n  /**深度偏差 */\n  private _normalBias = 0;\n  private _filteringQuality = ShadowGenerator.QUALITY_MEDIUM;\n  private _darkness = 0;\n  protected _color = \"#ffffff\";\n  protected helper: TransformNode;\n  protected _shadowGenerator: ShadowGenerator;\n  get HasShadowGenerator() {\n    return !!this._shadowGenerator;\n  }\n  get Color() {\n    return this._color;\n  }\n  set Color(v: string) {\n    if (v === this._color) return;\n    this.writeSnapshoot();\n    this._color = v;\n    this.update();\n  }\n  get Bias() {\n    return this._bias;\n  }\n  set Bias(v: number) {\n    if (v === this._bias) return;\n    this.writeSnapshoot();\n    this._bias = v;\n    this.updateShadowCaster();\n  }\n\n  get NormalBias() {\n    return this._normalBias;\n  }\n  set NormalBias(v: number) {\n    if (v === this._normalBias) return;\n    this.writeSnapshoot();\n    this._normalBias = v;\n    this.updateShadowCaster();\n  }\n  get Darkness() {\n    return this._darkness;\n  }\n  set Darkness(v: number) {\n    if (v === this._darkness) return;\n    this.writeSnapshoot();\n    this._darkness = v;\n    this.updateShadowCaster();\n  }\n  /**值为0-高质量,1-中等质量，3-低质量 */\n  get FilteringQuality() {\n    return this._filteringQuality;\n  }\n  set FilteringQuality(v: number) {\n    if (v === this._filteringQuality) return;\n    this.writeSnapshoot();\n    this._filteringQuality = v;\n    this.updateShadowCaster();\n  }\n\n  addShadowCaster(entitys: Entity[]) {\n    if (!this._shadowGenerator) return;\n    for (const en of entitys) {\n      if (!en.Visiable) continue;\n      if (en.EnableShadow) {\n        const ms = en.DrawObject.getChildMeshes();\n        for (const m of ms) this._shadowGenerator.addShadowCaster(m);\n      }\n    }\n    this.updateShadowCaster();\n  }\n  updateShadowCaster() {\n    if (this._shadowGenerator) {\n      this._shadowGenerator.filteringQuality = this._filteringQuality;\n      this._shadowGenerator.bias = this._bias;\n      this._shadowGenerator.normalBias = this._normalBias;\n      this._shadowGenerator.darkness = this._darkness;\n      this._shadowGenerator.getShadowMap().resetRefreshCounter();\n    }\n  }\n  removeShadowCaster(entitys?: Entity[]) {\n    if (!this._shadowGenerator) return;\n    if (!entitys) {\n      const ms = this._shadowGenerator.getShadowMap().renderList.slice();\n\n      for (const m of ms) {\n        this._shadowGenerator.removeShadowCaster(m);\n      }\n    } else {\n      for (const en of entitys) {\n        const ms = en.DrawObject.getChildMeshes();\n        for (const m of ms) this._shadowGenerator.removeShadowCaster(m);\n      }\n    }\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(3);\n    file.write(this.Intensity);\n    file.write(this.Diffuse);\n    file.write(this.Specular);\n    //v3\n    file.write(this.HasShadowGenerator);\n    if (this.HasShadowGenerator) {\n      file.write(this._bias);\n      file.write(this._normalBias);\n      file.write(this._darkness);\n      file.write(this._filteringQuality);\n    }\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.Intensity = file.read();\n    if (ver > 1) {\n      this.Diffuse = file.read();\n      this.Specular = file.read();\n    }\n\n    if (ver > 2) {\n      const hasShadow = file.read();\n      if (hasShadow) {\n        this._bias = file.read();\n        this._normalBias = file.read();\n        this._darkness = file.read();\n        this._filteringQuality = file.read();\n      }\n    }\n  }\n  protected initShadowGenerator(light: IShadowLight) {\n    this._shadowGenerator = new ShadowGenerator(2048, light, true);\n    this._shadowGenerator.useExponentialShadowMap = false;\n    this._shadowGenerator.usePercentageCloserFiltering = true;\n    this._shadowGenerator.filteringQuality = ShadowGenerator.QUALITY_MEDIUM;\n    // 默认只生成一次阴影;\n    this._shadowGenerator.getShadowMap().refreshRate =\n      RenderTargetTexture.REFRESHRATE_RENDER_ONCE;\n    this.updateShadowCaster();\n  }\n  protected createHelper(root: Mesh) {\n    if (AppStore.MainViewer.IsPreview) {\n      return;\n    }\n    const helper = this.getHelper();\n    if (helper) helper.parent = root;\n  }\n  protected getHelper(): TransformNode {\n    return null;\n  }\n  protected updateHelper(helper: TransformNode) {}\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { Light } from \"./Light\";\nimport { RenderType } from \"../../types/renderTypes\";\nimport {\n  Mesh,\n  MeshBuilder,\n  PointLight as BPointLight,\n  StandardMaterial,\n  TransformNode,\n  Vector3,\n} from \"../../babylon\";\nimport { CommonMaterials } from \"../../materials/commonMaterials\";\nimport { autoUpdate } from \"../../core/autoUpdate\";\nimport { Entity } from \"../Entity\";\n\n@Factory\nexport class PointLight extends Light {\n  static type = \"PointLight\";\n  protected _name = \"点光源\";\n  /**范围 */\n  @autoUpdate Range = 100;\n  initDrawObject(renderType = RenderType.Conceptual) {\n    const root = new Mesh(this.UniqueName + \"_root\", Entity.Scene);\n    const light = new BPointLight(\n      this.UniqueName,\n      Vector3.Zero(),\n      Entity.Scene\n    );\n    light.parent = root;\n\n    this.createHelper(root);\n\n    this.initShadowGenerator(light);\n    return root;\n  }\n\n  updateDrawObject(renderType, obj: Mesh) {\n    if (!obj || obj.getChildren().length === 0) return;\n    const light = obj.getChildren()[0] as BPointLight;\n    light.diffuse = CommonMaterials.getColor3fromHex(this.Diffuse);\n    light.specular = CommonMaterials.getColor3fromHex(this.Specular);\n    light.intensity = this.Intensity;\n    light.range = this.Range;\n    this.updateHelper(obj.getChildren()[1] as Mesh);\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(2);\n    file.write(this.Range);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.Range = file.read();\n    this.update();\n  }\n  protected getHelper() {\n    const mesh = MeshBuilder.CreateSphere(\n      \"helper_\" + this.UniqueName,\n      {\n        diameter: 0.5,\n      },\n      Entity.Scene\n    );\n    return mesh;\n  }\n  protected updateHelper(obj: Mesh) {\n    if (!obj) return;\n    obj.setEnabled(this.VisiableHelper);\n  }\n}\n","import {\n  Color3,\n  HemisphericLight as HemisphericLight2,\n  Mesh,\n  TransformNode,\n  Vector3,\n} from \"../../babylon\";\nimport { Light } from \"./Light\";\nimport { Vec3Array } from \"../../types\";\nimport { Entity } from \"../Entity\";\nimport { HCFiler, Factory } from \"@hc/core\";\n\n@Factory\nexport class HemisphericLight extends Light {\n  static type = \"HemisphericLight\";\n  private _dir: Vec3Array = [1, 1, 1];\n  protected _name = \"全局光\";\n  initDrawObject(renderType) {\n    const node = new Mesh(this.UniqueName, Entity.Scene);\n    const light = new HemisphericLight2(\n      this.UniqueName + \"-1\",\n      Vector3.FromArray(this._dir),\n      Entity.Scene\n    );\n    light.parent = node;\n    light.diffuse = Color3.FromHexString(this.Color);\n    return node;\n  }\n  updateDrawObject(renderType, obj: TransformNode) {\n    if (!obj || obj.getChildren().length === 0) return;\n    const light = obj.getChildren()[0] as HemisphericLight2;\n    light.intensity = this.Intensity;\n    light.direction.fromArray(this._dir);\n    light.diffuse = Color3.FromHexString(this.Color);\n  }\n  readFile(filer: HCFiler) {\n    super.readFile(filer);\n    this.update();\n  }\n}\n","import { Factory, HCFiler, IVector3 } from \"@hc/core\";\n\nimport {\n  Color3,\n  Curve3,\n  LinesMesh,\n  Mesh,\n  MeshBuilder,\n  SpotLight as SpotLight2,\n  TransformNode,\n  UtilityLayerRenderer,\n  Vector3,\n} from \"../../babylon\";\nimport { autoUpdate } from \"../../core/autoUpdate\";\nimport { AxisDragGizmo } from \"../../editor/gizmo/AxisDragGizmo\";\nimport { CommonMaterials } from \"../../materials/commonMaterials\";\nimport { iVector2Vector, vec2Vec3Like } from \"./../../utils/vector\";\nimport { Entity } from \"./../Entity\";\nimport { Light } from \"./Light\";\n\nconst STEP = 32;\nconst HELPER_STEP = 100;\n\n/**\n * 射灯\n * @see https://hc3dol.gkiiot.com/#17\n */\n@Factory\nexport class SpotLight extends Light {\n  static type = \"SpotLight\";\n  protected _name = \"射灯\";\n  /**范围 */\n  private gizmo: AxisDragGizmo;\n  private points: Array<Vector3> = [];\n  @autoUpdate Range = 150;\n  @autoUpdate private Height = 100; //助手高度\n  @autoUpdate Direction: IVector3 = { x: 0, y: -1, z: 0 };\n  @autoUpdate Angle = Math.PI / 3;\n\n  /**方向 */\n  get BDirection() {\n    return iVector2Vector(this.Direction);\n  }\n  get Points() {\n    return [new Vector3(0, 0, this.Height / 2), new Vector3(0, 0, this.Range)];\n  }\n\n  get Radius() {\n    return this.Height * Math.tan(this.Angle / 2);\n  }\n  initDrawObject() {\n    const root = new Mesh(this.UniqueName + \"_root\", Entity.Scene);\n    const light = new SpotLight2(\n      this.UniqueName,\n      Vector3.Zero(),\n      this.BDirection,\n      this.Angle,\n      2,\n      Entity.Scene\n    );\n    light.parent = root;\n    light.diffuse = CommonMaterials.getColor3(this.ColorIndex);\n    light.intensity = this.Intensity;\n    light.range = this.Range;\n    this.initShadowGenerator(light);\n    this.createHelper(root);\n\n    return root;\n  }\n  updateDrawObject(type, obj: Mesh) {\n    const nodes = obj.getChildren();\n    const light = nodes[0] as SpotLight2;\n    light.intensity = this.Intensity;\n    light.range = this.Range;\n    light.direction.copyFrom(this.BDirection);\n    light.diffuse = CommonMaterials.getColor3fromHex(this.Diffuse);\n    light.specular = CommonMaterials.getColor3fromHex(this.Specular);\n    light.angle = this.Angle;\n\n    this.updateHelper(nodes[1] as TransformNode);\n  }\n\n  getDragPoints() {\n    const obj = this.RenderObject;\n    const helper = obj.getChildren()[1];\n\n    return this.Points.map((p) => {\n      let currentPoint = Vector3.TransformCoordinates(\n        p,\n        helper.getWorldMatrix()\n      );\n      this.points.push(currentPoint);\n      return currentPoint;\n    });\n  }\n  moveDragPoint(vec: Vector3, index: number) {\n    const p = this.points[index];\n    p.addToRef(vec, p);\n    if (index === 0) {\n      this.Direction = vec2Vec3Like(p.subtract(this._position).normalize());\n    } else {\n      this.Range = Vector3.Distance(p, this._position);\n    }\n  }\n\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.Range);\n    file.writeVector3(this.Direction);\n    file.write(this.Angle);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.Range = file.read();\n    file.readVector3(this.Direction);\n    this.Angle = file.read();\n    this.update();\n  }\n  destory() {\n    super.destory();\n    this.gizmo && this.gizmo.dispose();\n  }\n  protected getHelper() {\n    const root = new TransformNode(\"root\");\n\n    const objects: Mesh[] = [];\n    const color = Color3.Green();\n\n    let mainLine = MeshBuilder.CreateLines(\n      \"lines\",\n      {\n        points: [new Vector3(), new Vector3()],\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    mainLine.color = color;\n    mainLine.isPickable = false;\n\n    // 创建一个箭头\n    const arrow = MeshBuilder.CreateSphere(\n      \"light_helper_range\",\n      {\n        diameter: 0.5,\n      },\n      Entity.Scene\n    );\n    let utilLayer = new UtilityLayerRenderer(Entity.Scene);\n    let gizmo = new AxisDragGizmo(\n      new Vector3(0, 0, 1),\n      CommonMaterials.getColor3(2),\n      utilLayer\n    );\n\n    this.gizmo = gizmo;\n    gizmo.updateGizmoPositionToMatchAttachedMesh = true;\n    const dragBehavior = gizmo.dragBehavior;\n    dragBehavior.dragDeltaRatio = 1;\n    dragBehavior.onDragObservable.add((e) => {\n      let range = Vector3.Distance(e.dragPlanePoint, this._position);\n\n      range = range > HELPER_STEP ? HELPER_STEP : range;\n\n      this.Height = HELPER_STEP - range;\n      let angle = (range / HELPER_STEP) * 180;\n      this.Angle = angle * (Math.PI / 180); //角度转弧度\n    });\n    gizmo.attachedMesh = arrow;\n\n    // 创建圆锥\n    const circle = MeshBuilder.CreateLines(\n      \"lines\",\n      {\n        points: Array.from({ length: STEP + 1 }, () => new Vector3()),\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    circle.color = color;\n    // 创建圆锥的线\n    let arrowLine1 = MeshBuilder.CreateLines(\n      \"lines\",\n      {\n        points: [new Vector3(), new Vector3(), new Vector3()],\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    arrowLine1.color = color;\n    arrowLine1.isPickable = false;\n\n    // 创建圆锥的线\n    let arrowLine2 = MeshBuilder.CreateLines(\n      \"lines\",\n      {\n        points: [new Vector3(), new Vector3(), new Vector3()],\n        updatable: true,\n      },\n      Entity.Scene\n    );\n    arrowLine2.color = color;\n    arrowLine2.isPickable = false;\n\n    objects.push(mainLine, arrow, circle, arrowLine1, arrowLine2);\n\n    objects.forEach((m) => {\n      m.parent = root;\n    });\n\n    return root;\n  }\n\n  protected updateHelper(obj: TransformNode) {\n    if (!obj) return;\n    obj.setEnabled(this.VisiableHelper);\n\n    const nodes = obj.getChildren() as Mesh[];\n\n    const lines = nodes[0] as LinesMesh;\n    MeshBuilder.CreateLines(\"lines\", {\n      points: [new Vector3(), new Vector3(0, 0, this.Range)],\n      instance: lines,\n    });\n\n    //圆锥\n    const rangeSphere = nodes[1] as Mesh;\n    rangeSphere.position.z = this.Height / 2;\n\n    //圆环\n    const rangelines = nodes[2] as LinesMesh;\n    rangelines.position.z = this.Height;\n    const radius = this.Radius;\n\n    // this.Range * Math.sin(this.Angle / 2);\n    const circle = Curve3.ArcThru3Points(\n      new Vector3(radius),\n      new Vector3(0, radius),\n      new Vector3(-radius),\n      STEP,\n      true,\n      true\n    );\n    MeshBuilder.CreateLines(null, {\n      points: circle.getPoints(),\n      instance: rangelines,\n    });\n\n    //圆锥线1\n    const lines3 = nodes[3] as LinesMesh;\n    MeshBuilder.CreateLines(null, {\n      instance: lines3,\n      points: [\n        new Vector3(-radius, 0, this.Height),\n        new Vector3(),\n        new Vector3(radius, 0, this.Height),\n      ],\n      updatable: true,\n    });\n    //圆锥线2\n    const lines4 = nodes[4] as LinesMesh;\n    MeshBuilder.CreateLines(null, {\n      instance: lines4,\n      points: [\n        new Vector3(0, radius, this.Height),\n        new Vector3(),\n        new Vector3(0, -radius, this.Height),\n      ],\n      updatable: true,\n    });\n    obj.lookAt(this.BDirection);\n  }\n}\n","import {\n  Color3,\n  DirectionalLight as DirectionalLight2,\n  Mesh,\n  MeshBuilder,\n  TransformNode,\n  Vector3,\n} from \"../../babylon\";\n\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport { CommonMaterials } from \"../../materials/commonMaterials\";\nimport { Light } from \"./Light\";\nimport { Entity } from \"./../Entity\";\nimport { iVector2Vector, vec2Vec3Like } from \"../../utils/vector\";\nimport { autoUpdate } from \"../../core\";\n\nconst LENGTH = 1000;\n\n/**\n * 日光\n * @see https://hc3dol.gkiiot.com/#22\n */\n@Factory\nexport class DirectionalLight extends Light {\n  static type = \"DirectionalLight\";\n  protected _name = \"方向光\";\n  protected _position = new Vector3(0, 100);\n  /**方向 */\n  @autoUpdate Direction = { x: -1, y: -1, z: -1 };\n\n  get BDirection() {\n    return iVector2Vector(this.Direction);\n  }\n\n  initDrawObject() {\n    const root = new Mesh(this.UniqueName + \"_root\", Entity.Scene);\n    const light = new DirectionalLight2(\n      this.UniqueName,\n      this.BDirection,\n      Entity.Scene\n    );\n    light.parent = root;\n    light.autoCalcShadowZBounds = true;\n    this.initShadowGenerator(light);\n\n    this.createHelper(root);\n\n    return root;\n  }\n\n  updateDrawObject(type, obj: Mesh) {\n    const nodes = obj.getChildren();\n    const light = nodes[0] as DirectionalLight2;\n    light.direction = this.BDirection;\n    light.diffuse = CommonMaterials.getColor3fromHex(this.Diffuse);\n    light.specular = CommonMaterials.getColor3fromHex(this.Specular);\n    light.intensity = this.Intensity;\n    this.updateHelper(nodes[1] as TransformNode);\n    this.updateShadowCaster();\n  }\n  getDragPoints() {\n    return [];\n  }\n  moveDragPoint(endPoint: Vector3) {\n    this.Direction = vec2Vec3Like(\n      endPoint.subtract(this.RenderObject.absolutePosition).normalize()\n    );\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n\n    file.writeVector3(this.Direction);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    file.readVector3(this.Direction);\n    this.update();\n  }\n  protected getHelper() {\n    const root = new TransformNode(\"root\");\n\n    const dirctSphere = MeshBuilder.CreateCylinder(\n      \"light_helper\",\n      {\n        diameterBottom: 0,\n        diameterTop: 5,\n        height: 10,\n      },\n      Entity.Scene\n    );\n\n    dirctSphere.parent = root;\n    dirctSphere.rotation.x = -Math.PI / 2;\n    // dirctSphere.position.z = -LENGTH / 10;\n\n    // 创建线\n\n    let lines = MeshBuilder.CreateLines(\n      \"lines\",\n      {\n        points: [new Vector3(0, 0, -LENGTH / 2), new Vector3(0, 0, LENGTH / 2)],\n      },\n      Entity.Scene\n    );\n    lines.color = Color3.Green();\n    lines.isPickable = false;\n    lines.parent = root;\n    return root;\n  }\n  protected updateHelper(obj: TransformNode) {\n    if (!obj) return;\n    obj.setEnabled(this.VisiableHelper);\n    obj.lookAt(this.BDirection);\n  }\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { Entity } from \"./Entity\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { Curve } from \"./curves/Curve\";\nimport { autoRecord } from \"../core\";\nimport { CreateTube, Mesh, Vector3 } from \"../babylon\";\nimport { Lines } from \"./curves/Lines\";\nimport { Solid3D } from \"./Solid3D\";\n\n/**\n * 管道\n *\n */\n@Factory\nexport class Tube extends Solid3D {\n  static type = \"Tube\";\n  private _curve: Curve;\n  @autoRecord Radius: number;\n  constructor(option?: { radius?: number; curve: Curve }) {\n    super();\n    this.Radius = option?.radius ?? 10;\n    this._curve = option?.curve ?? new Lines();\n  }\n  get Curve() {\n    return this._curve;\n  }\n  initDrawObject(renderType = RenderType.Conceptual) {\n    return CreateTube(\n      this.UniqueName,\n      {\n        path: this._curve.Points,\n        sideOrientation: Mesh.DOUBLESIDE,\n        updatable: true,\n      },\n      Entity.Scene\n    );\n  }\n  updateDrawObject(renderType: RenderType, obj: Mesh) {\n    CreateTube(this.UniqueName, {\n      path: this._curve.Points,\n      instance: obj,\n    });\n  }\n  /**\n   * 管道变形动画\n   * @param updateFunction 变形函数 path 为各个节点，k为当前帧\n   * @param speed 变形速度，默认为0.01\n   * @see https://hc3dol.gkiiot.com/#19\n   * @returns\n   */\n  morph(updateFunction: (path: Vector3[], k: number) => void, speed = 0.01) {\n    if (!updateFunction) return;\n    const originPoints = this._curve.Points;\n\n    let k = 0;\n    let pause = false;\n    const points = originPoints.map((p) => p.clone());\n\n    const callback = () => {\n      if (pause) return;\n      updateFunction(points, k);\n      CreateTube(null, { path: points, instance: this.RenderObject });\n      k += speed;\n    };\n    Entity.Scene.registerBeforeRender(callback);\n\n    return {\n      stop: () => {\n        Entity.Scene.unregisterBeforeRender(callback);\n        this.update();\n      },\n      pause: () => {\n        pause = true;\n      },\n      restart: () => {\n        pause = false;\n      },\n    };\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    file.read(); // 版本\n    this.update();\n  }\n}\n","import { HCFiler, ISerialize } from \"@hc/core\";\nimport { Vector3 } from \"../../babylon\";\n\nexport type IDoorOption = {\n  left?: number;\n  width?: number;\n  height?: number;\n};\n\nexport class Door implements ISerialize {\n  static type = \"Door\";\n  public left = 0;\n  public width = 1;\n  public height = 1;\n  public position = Vector3.Zero();\n  public url = \"\";\n  constructor(option?: IDoorOption) {\n    this.left = option?.left ?? 0;\n    this.width = option?.width ?? 1;\n    this.height = option?.height ?? 1;\n  }\n  fromJSON(option?: IDoorOption) {\n    this.left = option?.left ?? this.left;\n    this.width = option?.width ?? this.width;\n    this.height = option?.height ?? this.height;\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.write(this.left);\n    file.write(this.width);\n    file.write(this.height);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    this.left = file.read();\n    this.width = file.read();\n    this.height = file.read();\n  }\n}\n","export const compareLeft = function (a, b) {\n  return a.left - b.left;\n};\n","import { HCFiler, ISerialize } from \"@hc/core\";\nimport { Vector3 } from \"../../babylon\";\n\nexport type IWindowOption = {\n  left?: number;\n  bottom?: number;\n  width?: number;\n  height?: number;\n};\n\nexport class Win implements ISerialize {\n  static type = \"Win\";\n  public left = 0;\n  public bottom = 0;\n  public width = 1;\n  public height = 1;\n  public position = Vector3.Zero();\n  public url = \"\";\n  constructor(option?: IWindowOption) {\n    this.left = option?.left ?? 0;\n    this.bottom = option?.bottom ?? 0;\n    this.width = option?.width ?? 1;\n    this.height = option?.height ?? 1;\n  }\n  fromJSON(option: IWindowOption) {\n    this.left = option?.left ?? 0;\n    this.bottom = option?.bottom ?? 0;\n    this.width = option?.width ?? 1;\n    this.height = option?.height ?? 1;\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.write(this.left);\n    file.write(this.bottom);\n    file.write(this.width);\n    file.write(this.height);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    this.left = file.read();\n    this.bottom = file.read();\n    this.width = file.read();\n    this.height = file.read();\n  }\n}\n","import { HCFiler, ISerialize } from \"@hc/core\";\nimport { Vector3 } from \"../../babylon\";\nimport { Door } from \"./Door\";\nimport { Win } from \"./Windows\";\n\nexport class WallPlane implements ISerialize {\n  static type = \"WallPlane\";\n  corner: Vector3;\n  doors: Door[] = [];\n  windows: Win[] = [];\n  constructor(v: Vector3 = new Vector3()) {\n    this.corner = v;\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.writeVector3(this.corner);\n    file.writeAnyArray(this.doors, file.writeObject);\n    file.writeAnyArray(this.windows, file.writeObject);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    file.readVector3(this.corner);\n    file.readAnyArrayAndPush(this.doors, () => file.readObject(new Door()));\n    file.readAnyArrayAndPush(this.windows, () => file.readObject(new Win()));\n  }\n}\n","import { Color4 } from \"@babylonjs/core/Maths/math.color\";\nimport {\n  Matrix,\n  Vector2,\n  Vector3,\n  Vector4,\n} from \"@babylonjs/core/Maths/math.vector\";\nimport { Mesh } from \"@babylonjs/core/Meshes/mesh\";\nimport { PolygonMeshBuilder } from \"@babylonjs/core/Meshes/polygonMesh\";\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport earcut from \"earcut\";\n\nimport { Axis, MeshBuilder, VertexData } from \"../../babylon\";\nimport { UpdateFlag } from \"../../enums\";\nimport { RenderType } from \"../../types/renderTypes\";\nimport { arrayLast, equaln, removeOne } from \"../../utils\";\nimport { getClosestPoint } from \"../../utils/curveUtils\";\nimport { Entity } from \"../Entity\";\nimport { Solid3D } from \"../Solid3D\";\nimport { Door, IDoorOption } from \"./Door\";\nimport { compareLeft } from \"./tools\";\nimport { WallPlane } from \"./WallPlane\";\nimport { IWindowOption, Win } from \"./Windows\";\n\nwindow[\"earcut\"] = earcut;\n\n@Factory\nexport class Wall extends Solid3D {\n  static type = \"Wall\";\n  private _thickness = 2;\n  private _height = 10;\n  private walls: WallPlane[] = [];\n  private options: Record<string, any> = {\n    interiorUV: new Vector4(0, 0, 1, 1),\n    exteriorUV: new Vector4(0, 0, 1, 1),\n    interiorColor: new Color4(1, 1, 1, 1),\n    outeriorColor: new Color4(1, 1, 1, 1),\n    exteriorColor: new Color4(1, 1, 1, 1),\n    interior: false,\n  };\n  private _outerOutline: Vector3[] = [];\n  private _innerOutline: Vector3[] = [];\n  protected _name = \"墙\";\n  constructor(option?: {\n    outline?: IVector3[];\n    thickness?: number;\n    height?: number;\n  }) {\n    super();\n    if (option?.outline) {\n      this.walls = option.outline.map(\n        (v) => new WallPlane(new Vector3(v.x, v.y, v.z))\n      );\n\n      if (\n        !this.options.interior &&\n        this.walls.length > 2 &&\n        !this.walls[0].corner.equalsWithEpsilon(arrayLast(this.walls).corner)\n      ) {\n        this.walls.push(this.walls[0]);\n      }\n    }\n\n    if (option?.height) {\n      this._height = option.height;\n    }\n    if (option?.thickness) {\n      this._thickness = option.thickness;\n    }\n  }\n  get VertextData(): VertexData {\n    return this.build();\n  }\n  get Thickness() {\n    return this._thickness;\n  }\n  set Thickness(v: number) {\n    if (v === this._thickness) return;\n    this.writeSnapshoot();\n    this._thickness = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  get Height() {\n    return this._height;\n  }\n  set Height(v: number) {\n    if (v === this._height) return;\n    this.writeSnapshoot();\n    this._height = v;\n    this.update(UpdateFlag.Geometry);\n  }\n  addWindowOrDoorByPosition(position: Vector3, isDoor = false) {\n    for (let i = 0; i < this.walls.length - 1; i++) {\n      let p1 = this.walls[i].corner;\n      let p2 = this.walls[i + 1].corner;\n\n      let p21 = new Vector2(p1.x, p1.z);\n      let p22 = new Vector2(p2.x, p2.z);\n\n      const info = getClosestPoint(\n        p21,\n        p22,\n        new Vector2(position.x, position.z)\n      );\n\n      //TODO:错略判断点在第几个墙上\n      if (equaln(info.dist, this._thickness)) {\n        if (isDoor) {\n          this.addDoor(i, {\n            left: Vector2.Distance(info.closestPt, p21),\n            width: Vector3.Distance(p1, p2) / 8,\n            height: position.y,\n          });\n        } else {\n          this.addWindow(i, {\n            left: Vector2.Distance(info.closestPt, p21),\n            width: Vector3.Distance(p1, p2) / 10,\n            height: this._height / 10,\n            bottom: position.y,\n          });\n        }\n\n        this.update(UpdateFlag.Geometry);\n        break;\n      }\n    }\n  }\n\n  initDrawObject(renderType = RenderType.Conceptual) {\n    const root = super.initDrawObject(renderType);\n\n    return root;\n  }\n  updateDrawObject(renderType: RenderType, obj: Mesh) {\n    super.updateDrawObject(renderType, obj);\n    if (obj) {\n      obj.getChildren().forEach((o) => o.dispose());\n      this.updateWinsAndDoors(obj);\n      this.updateGround(obj);\n    }\n  }\n  updateMaterial(type?: RenderType, obj?: Mesh) {\n    super.updateMaterial(type, obj);\n    const m = obj ?? (this.RenderObject as Mesh);\n    const meshs = m.getChildMeshes();\n    for (const m of meshs) {\n      const mtlId = this._materialMap.get(m.id);\n      if (mtlId) {\n        if (mtlId.Object?.Material) {\n          m.metadata = {\n            oldMtl: m.material,\n          };\n          m.material = mtlId.Object.Material;\n        }\n      } else {\n        if (m.metadata?.oldMtl) {\n          m.material = m.metadata.oldMtl;\n        }\n      }\n    }\n  }\n  addWindow(index: number, option: IWindowOption) {\n    this.walls[index].windows.push(new Win(option));\n  }\n  addDoor(index: number, option: IDoorOption) {\n    this.walls[index].doors.push(new Door(option));\n  }\n  updateWinsAndDoors(root: Mesh) {\n    for (let i = 0; i < this.walls.length - 1; i++) {\n      const w = this.walls[i];\n      const w1 = this.walls[i + 1];\n      const dir = w1.corner.subtract(w.corner).normalize();\n      const normal = dir.cross(Axis.Y);\n      const mtx = new Matrix();\n      Matrix.FromXYZAxesToRef(dir, Axis.Y, normal, mtx);\n\n      for (const win of w.windows) {\n        const p = new Vector3(\n          win.left + win.width / 2,\n          win.bottom + win.height / 2,\n          -this._thickness\n        );\n        Vector3.TransformCoordinatesToRef(p, mtx, p);\n        const plane = MeshBuilder.CreatePlane(\n          \"窗户\",\n          {\n            width: win.width,\n            height: win.height,\n            sideOrientation: Mesh.DOUBLESIDE,\n          },\n          root.getScene()\n        );\n        plane.metadata = { win: win };\n        plane.parent = root;\n        const m = mtx.clone().setTranslation(w.corner.add(p));\n        m.decomposeToTransformNode(plane);\n        plane.visibility = 0.8;\n      }\n\n      for (const door of w.doors) {\n        const p = new Vector3(\n          door.left + door.width / 2,\n          door.height / 2,\n          -this._thickness\n        );\n        Vector3.TransformCoordinatesToRef(p, mtx, p);\n        const plane = MeshBuilder.CreatePlane(\n          \"门\",\n          {\n            width: door.width,\n            height: door.height,\n            sideOrientation: Mesh.DOUBLESIDE,\n          },\n          root.getScene()\n        );\n        plane.metadata = { door: door };\n        plane.parent = root;\n        const m = mtx.clone().setTranslation(w.corner.add(p));\n        m.decomposeToTransformNode(plane);\n        plane.visibility = 0.2;\n      }\n    }\n  }\n  updateGround(root: Mesh) {\n    const points = this._innerOutline;\n    if (points.length > 0) {\n      const poly_tri = new PolygonMeshBuilder(\n        \"地板\",\n        points.map((p) => new Vector2(p.x, p.z)),\n        Entity.Scene\n      );\n      const ground = poly_tri.build();\n      ground.parent = root;\n    }\n  }\n  build() {\n    //获取墙体内外轮廓点\n    const { outerBaseCorners, innerBaseCorners } = this.getInOutContours();\n\n    //获取墙体上下面轮廓\n    const { innerTopCorners, outerTopCorners } = this.getTBContours(\n      outerBaseCorners,\n      innerBaseCorners\n    );\n\n    this._outerOutline = outerBaseCorners;\n    this._innerOutline = innerBaseCorners;\n\n    return this.generateWallVetexData(\n      outerBaseCorners,\n      innerBaseCorners,\n      innerTopCorners,\n      outerTopCorners\n    );\n  }\n  removeWinOrDoor(object: Win | Door) {\n    for (const w of this.walls) {\n      if (object instanceof Win) {\n        if (w.windows.includes(object)) {\n          removeOne(w.windows, object);\n          break;\n        }\n      } else {\n        if (w.doors.includes(object)) {\n          removeOne(w.doors, object);\n          break;\n        }\n      }\n    }\n    this.update();\n  }\n\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.Height);\n    file.write(this.Thickness);\n    file.writeAnyArray(this.walls, file.writeObject);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this._height = file.read();\n    this._thickness = file.read();\n    file.readAnyArrayAndPush(this.walls, () =>\n      file.readObject(new WallPlane())\n    );\n\n    this.update();\n  }\n\n  //构造墙体顶点数据\n\n  private generateWallVetexData(\n    outerBaseCorners: Vector3[],\n    innerBaseCorners: Vector3[],\n    innerTopCorners: Vector3[],\n    outerTopCorners: Vector3[]\n  ) {\n    //Arrays for vertex positions and indices\n    let positions: number[] = [];\n    let indices: number[] = [];\n    let uvs: number[] = [];\n    let colors: number[] = [];\n    const thickness = this._thickness;\n\n    let interiorIndex: number;\n\n    let interiorUV = this.options.interiorUV;\n    let exteriorUV = this.options.exteriorUV;\n\n    let interiorColor = this.options.interiorColor;\n    let exteriorColor = this.options.exteriorColor;\n\n    const nbWalls = this.walls.length;\n    const walls = this.walls;\n\n    let height = this._height;\n    let maxH = this._height;\n\n    let innerDoorCorners: Vector3[][][] = [];\n    let outerDoorCorners: Vector3[][][] = [];\n\n    let innerWindowCorners: Vector3[][][] = [];\n    let outerWindowCorners: Vector3[][][] = [];\n\n    //获取最长墙体长度\n    let maxL = 0;\n    for (let w = 0; w < this.walls.length - 1; w++) {\n      maxL = Math.max(\n        innerBaseCorners[w + 1].subtract(innerBaseCorners[w]).length(),\n        maxL\n      );\n    }\n\n    let polygonCorners: Vector2[];\n    let polygonTriangulation: PolygonMeshBuilder;\n    let wallData: { positions: number[]; indices: number[] };\n    let wallDirection = Vector3.Zero();\n    let wallNormal = Vector3.Zero();\n    let wallLength: number;\n    let exteriorWallLength: number;\n    let doorData: number[];\n    let windowData: number[];\n    let uvx: number, uvy: number;\n    let wallDiff: number;\n\n    for (let wallIndex = 0; wallIndex < nbWalls - 1; wallIndex++) {\n      const Wall = walls[wallIndex];\n      const NextWall = walls[wallIndex + 1];\n\n      NextWall.corner.subtractToRef(Wall.corner, wallDirection);\n      wallLength = wallDirection.length();\n      wallDirection.normalize();\n      wallNormal.x = wallDirection.z;\n      wallNormal.z = -1 * wallDirection.x;\n      exteriorWallLength = outerBaseCorners[wallIndex + 1]\n        .subtract(outerBaseCorners[wallIndex])\n        .length();\n      wallDiff = exteriorWallLength - wallLength;\n\n      //处理门数据\n      if (Wall.doors) {\n        Wall.doors.sort(compareLeft);\n      }\n      let doorLen = Wall.doors.length;\n\n      //墙内区域构建，墙宽高 扣除 门区域\n      polygonCorners = [];\n      polygonCorners.push(new Vector2(0, 0));\n\n      for (let d = 0; d < doorLen; d++) {\n        polygonCorners.push(new Vector2(Wall.doors[d].left, 0));\n        polygonCorners.push(\n          new Vector2(Wall.doors[d].left, Wall.doors[d].height)\n        );\n        polygonCorners.push(\n          new Vector2(\n            Wall.doors[d].left + Wall.doors[d].width,\n            Wall.doors[d].height\n          )\n        );\n        polygonCorners.push(\n          new Vector2(Wall.doors[d].left + Wall.doors[d].width, 0)\n        );\n      }\n\n      polygonCorners.push(new Vector2(wallLength, 0));\n      polygonCorners.push(new Vector2(wallLength, height));\n      polygonCorners.push(new Vector2(0, height));\n\n      //区域三角化\n      polygonTriangulation = new PolygonMeshBuilder(\n        \"墙体构建\",\n        polygonCorners,\n        Entity.Scene,\n        earcut\n      );\n\n      //处理窗户数据\n      //将窗户数据作为孔数据闯入 三角化工具\n      let winLen = Wall.windows.length;\n      let holes: Vector2[][] = [];\n      for (let winIndex = 0; winIndex < winLen; winIndex++) {\n        const Win = Wall.windows[winIndex];\n        let holeData: Vector2[] = [];\n        holeData.push(new Vector2(Win.left, Win.bottom));\n        holeData.push(new Vector2(Win.left + Win.width, Win.bottom));\n        holeData.push(\n          new Vector2(Win.left + Win.width, Win.height + Win.bottom)\n        );\n        holeData.push(new Vector2(Win.left, Win.height + Win.bottom));\n        holes.push(holeData);\n      }\n\n      for (let h = 0; h < holes.length; h++) {\n        polygonTriangulation.addHole(holes[h]);\n      }\n\n      // 构建并转换墙体到三维空间，并返回顶点信息\n      wallData = this.wallBuilder(polygonTriangulation, Wall, NextWall);\n\n      // 当前顶点数\n      let nbIndices = positions.length / 3;\n\n      //计算颜色和uv\n      //@ts-ignore\n      polygonTriangulation._points.elements.forEach(function (p) {\n        uvx = interiorUV.x + (p.x * (interiorUV.z - interiorUV.x)) / maxL;\n        uvy = interiorUV.y + (p.y * (interiorUV.w - interiorUV.y)) / height;\n        uvs.push(uvx, uvy);\n        colors.push(\n          interiorColor.r,\n          interiorColor.g,\n          interiorColor.b,\n          interiorColor.a\n        );\n      });\n\n      positions.push(...wallData.positions);\n      indices.push(...wallData.indices.map((idx) => idx + nbIndices));\n\n      interiorIndex = positions.length / 3;\n\n      //门窗缝隙 数据构建\n      //窗户顶点数据\n      //4个点3个值\n      windowData = wallData.positions.slice(3 * 4 * (doorLen + 1));\n      //门顶点数据\n      doorData = wallData.positions.slice(3, 3 * (4 * doorLen + 1));\n\n      //left, top left, top right, right\n      //获取门洞 拉伸信息\n      let doorCornersIn: Vector3[][] = [];\n      let doorCornersOut: Vector3[][] = [];\n      for (let dIndex = 0; dIndex < doorData.length / 12; dIndex++) {\n        let doorsIn: Vector3[] = [];\n        let doorsOut: Vector3[] = [];\n        for (let index = 0; index < 4; index++) {\n          let i = 3 * index + 12 * dIndex;\n          let i1 = 3 * index + 12 * dIndex + 1;\n          let i2 = 3 * index + 12 * dIndex + 2;\n          doorsIn.push(new Vector3(doorData[i], doorData[i1], doorData[i2]));\n          doorData[i] += thickness * wallNormal.x;\n          doorData[i2] += thickness * wallNormal.z;\n          doorsOut.push(new Vector3(doorData[i], doorData[i1], doorData[i2]));\n        }\n        doorCornersIn.push(doorsIn);\n        doorCornersOut.push(doorsOut);\n      }\n      innerDoorCorners.push(doorCornersIn);\n      outerDoorCorners.push(doorCornersOut);\n\n      //窗户洞顶点 顺序base left, top left, top right, base right\n      //拉伸窗洞数据\n      let windowCornersIn: Vector3[][] = [];\n      let windowCornersOut: Vector3[][] = [];\n      for (let wIndex = 0; wIndex < windowData.length / 12; wIndex++) {\n        let windowsIn: Vector3[] = [];\n        let windowsOut: Vector3[] = [];\n        for (let index = 0; index < 4; index++) {\n          let i = 3 * index + 12 * wIndex;\n          let i1 = 3 * index + 12 * wIndex + 1;\n          let i2 = 3 * index + 12 * wIndex + 2;\n          windowsIn.push(\n            new Vector3(windowData[i], windowData[i1], windowData[i2])\n          );\n          windowData[3 * index + 12 * wIndex] += thickness * wallNormal.x;\n          windowData[i2] += thickness * wallNormal.z;\n          windowsOut.push(\n            new Vector3(windowData[i], windowData[i1], windowData[i2])\n          );\n        }\n        windowCornersIn.push(windowsIn);\n        windowCornersOut.push(windowsOut);\n      }\n      innerWindowCorners.push(windowCornersIn);\n      outerWindowCorners.push(windowCornersOut);\n\n      //构造外墙数据\n      wallData.positions = [];\n\n      wallData.positions.push(\n        outerBaseCorners[wallIndex].x,\n        outerBaseCorners[wallIndex].y,\n        outerBaseCorners[wallIndex].z\n      );\n      wallData.positions.push(...doorData);\n      wallData.positions.push(\n        outerBaseCorners[wallIndex + 1].x,\n        outerBaseCorners[wallIndex + 1].y,\n        outerBaseCorners[(wallIndex + 1) % nbWalls].z\n      );\n      wallData.positions.push(\n        outerTopCorners[wallIndex + 1].x,\n        outerTopCorners[wallIndex + 1].y,\n        outerTopCorners[(wallIndex + 1) % nbWalls].z\n      );\n      wallData.positions.push(\n        outerTopCorners[wallIndex].x,\n        outerTopCorners[wallIndex].y,\n        outerTopCorners[wallIndex].z\n      );\n      wallData.positions.push(...windowData);\n\n      //外墙uv计算\n      //@ts-ignore\n      polygonTriangulation._points.elements.forEach(function (p) {\n        if (p.x === 0) {\n          uvx = exteriorUV.x;\n        } else if (wallLength - p.x < 1e-6) {\n          uvx =\n            exteriorUV.x +\n            ((wallDiff + p.x) * (exteriorUV.z - exteriorUV.x)) /\n              (maxL + wallDiff);\n        } else {\n          uvx =\n            exteriorUV.x +\n            ((0.5 * wallDiff + p.x) * (exteriorUV.z - exteriorUV.x)) /\n              (maxL + wallDiff);\n        }\n        uvy = exteriorUV.y + (p.y * (exteriorUV.w - exteriorUV.y)) / height;\n        uvs.push(uvx, uvy);\n      });\n\n      //当前顶点数\n      nbIndices = positions.length / 3;\n\n      positions.push(...wallData.positions);\n\n      //反转顶点，调整normal方向\n      wallData.indices.reverse();\n\n      indices.push(...wallData.indices.map((idx) => idx + nbIndices));\n\n      //墙体边缘构建\n      let doorCount = doorLen;\n      let doorNb = 0;\n\n      if (doorCount > 0) {\n        //base\n        nbIndices = positions.length / 3;\n\n        positions.push(\n          innerBaseCorners[wallIndex].x,\n          innerBaseCorners[wallIndex].y,\n          innerBaseCorners[wallIndex].z\n        );\n\n        positions.push(\n          outerBaseCorners[wallIndex].x,\n          outerBaseCorners[wallIndex].y,\n          outerBaseCorners[wallIndex].z\n        );\n\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][0].x,\n          innerDoorCorners[wallIndex][doorNb][0].y,\n          innerDoorCorners[wallIndex][doorNb][0].z\n        );\n\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][0].x,\n          outerDoorCorners[wallIndex][doorNb][0].y,\n          outerDoorCorners[wallIndex][doorNb][0].z\n        );\n\n        //上左\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        );\n\n        //左\n        uvs.push(exteriorUV.x, exteriorUV.y);\n\n        //上右\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) * Wall.doors[doorNb].left) / maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        );\n\n        //右\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) * Wall.doors[doorNb].left) / maxL,\n          exteriorUV.y\n        );\n\n        indices.push(\n          nbIndices,\n          nbIndices + 2,\n          nbIndices + 3,\n          nbIndices + 3,\n          nbIndices + 1,\n          nbIndices\n        );\n\n        //left side\n        nbIndices = positions.length / 3;\n\n        //br\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][0].x,\n          innerDoorCorners[wallIndex][doorNb][0].y,\n          innerDoorCorners[wallIndex][doorNb][0].z\n        );\n\n        //tr\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][1].x,\n          innerDoorCorners[wallIndex][doorNb][1].y,\n          innerDoorCorners[wallIndex][doorNb][1].z\n        );\n\n        //bl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][0].x,\n          outerDoorCorners[wallIndex][doorNb][0].y,\n          outerDoorCorners[wallIndex][doorNb][0].z\n        );\n\n        //tl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][1].x,\n          outerDoorCorners[wallIndex][doorNb][1].y,\n          outerDoorCorners[wallIndex][doorNb][1].z\n        );\n\n        //base right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        );\n\n        //top right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) * Wall.doors[doorNb].height) / maxH\n        );\n\n        //base Left\n        uvs.push(exteriorUV.x, exteriorUV.y);\n\n        //top Left\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        );\n\n        indices.push(\n          nbIndices,\n          nbIndices + 1,\n          nbIndices + 3,\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 2\n        );\n\n        //top\n        nbIndices = positions.length / 3; // current number of indices\n\n        //bl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][1].x,\n          innerDoorCorners[wallIndex][doorNb][1].y,\n          innerDoorCorners[wallIndex][doorNb][1].z\n        );\n\n        //br\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][2].x,\n          innerDoorCorners[wallIndex][doorNb][2].y,\n          innerDoorCorners[wallIndex][doorNb][2].z\n        );\n\n        //tl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][1].x,\n          outerDoorCorners[wallIndex][doorNb][1].y,\n          outerDoorCorners[wallIndex][doorNb][1].z\n        );\n\n        //tr\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][2].x,\n          outerDoorCorners[wallIndex][doorNb][2].y,\n          outerDoorCorners[wallIndex][doorNb][2].z\n        );\n\n        //base Left\n        uvs.push(exteriorUV.x, exteriorUV.y);\n\n        //base right\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].doors[doorNb].width) /\n              maxL,\n          exteriorUV.y\n        );\n\n        //top Left\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        );\n\n        //top right\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].doors[doorNb].width) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        );\n\n        indices.push(\n          nbIndices + 2,\n          nbIndices + 1,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices,\n          nbIndices + 1\n        );\n\n        //right side\n        nbIndices = positions.length / 3;\n\n        //tl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][2].x,\n          innerDoorCorners[wallIndex][doorNb][2].y,\n          innerDoorCorners[wallIndex][doorNb][2].z\n        );\n\n        //bl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][3].x,\n          innerDoorCorners[wallIndex][doorNb][3].y,\n          innerDoorCorners[wallIndex][doorNb][3].z\n        );\n\n        //tr\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][2].x,\n          outerDoorCorners[wallIndex][doorNb][2].y,\n          outerDoorCorners[wallIndex][doorNb][2].z\n        );\n\n        //br\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][3].x,\n          outerDoorCorners[wallIndex][doorNb][3].y,\n          outerDoorCorners[wallIndex][doorNb][3].z\n        );\n\n        //top Left\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        );\n\n        //base Left\n        uvs.push(exteriorUV.x, exteriorUV.y);\n\n        //top right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        );\n\n        //base right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        );\n\n        indices.push(\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices,\n          nbIndices + 1,\n          nbIndices + 3\n        );\n      }\n      doorCount--;\n      doorNb++;\n\n      while (doorCount > 0) {\n        //base\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb - 1][3].x,\n          innerDoorCorners[wallIndex][doorNb - 1][3].y,\n          innerDoorCorners[wallIndex][doorNb - 1][3].z\n        ); //bl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][0].x,\n          innerDoorCorners[wallIndex][doorNb][0].y,\n          innerDoorCorners[wallIndex][doorNb][0].z\n        ); //br\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb - 1][3].x,\n          outerDoorCorners[wallIndex][doorNb - 1][3].y,\n          outerDoorCorners[wallIndex][doorNb - 1][3].z\n        ); //tl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][0].x,\n          outerDoorCorners[wallIndex][doorNb][0].y,\n          outerDoorCorners[wallIndex][doorNb][0].z\n        ); //tr\n\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              (walls[wallIndex].doors[doorNb].left -\n                (walls[wallIndex].doors[doorNb - 1].left +\n                  walls[wallIndex].doors[doorNb - 1].width))) /\n              maxL /\n              maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              (walls[wallIndex].doors[doorNb].left -\n                (walls[wallIndex].doors[doorNb - 1].left +\n                  walls[wallIndex].doors[doorNb - 1].width))) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n\n        indices.push(\n          nbIndices,\n          nbIndices + 1,\n          nbIndices + 3,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices\n        );\n\n        //left side\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][0].x,\n          innerDoorCorners[wallIndex][doorNb][0].y,\n          innerDoorCorners[wallIndex][doorNb][0].z\n        ); //br\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][1].x,\n          innerDoorCorners[wallIndex][doorNb][1].y,\n          innerDoorCorners[wallIndex][doorNb][1].z\n        ); //tr\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][0].x,\n          outerDoorCorners[wallIndex][doorNb][0].y,\n          outerDoorCorners[wallIndex][doorNb][0].z\n        ); //bl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][1].x,\n          outerDoorCorners[wallIndex][doorNb][1].y,\n          outerDoorCorners[wallIndex][doorNb][1].z\n        ); //tl\n\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        ); //top right\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        ); //top Left\n\n        indices.push(\n          nbIndices,\n          nbIndices + 1,\n          nbIndices + 3,\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 2\n        );\n\n        //top\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][1].x,\n          innerDoorCorners[wallIndex][doorNb][1].y,\n          innerDoorCorners[wallIndex][doorNb][1].z\n        ); //bl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][2].x,\n          innerDoorCorners[wallIndex][doorNb][2].y,\n          innerDoorCorners[wallIndex][doorNb][2].z\n        ); //br\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][1].x,\n          outerDoorCorners[wallIndex][doorNb][1].y,\n          outerDoorCorners[wallIndex][doorNb][1].z\n        ); //tl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][2].x,\n          outerDoorCorners[wallIndex][doorNb][2].y,\n          outerDoorCorners[wallIndex][doorNb][2].z\n        ); //tr\n\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].doors[doorNb].width) /\n              maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].doors[doorNb].width) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n\n        indices.push(\n          nbIndices + 2,\n          nbIndices + 1,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices,\n          nbIndices + 1\n        );\n\n        //right side\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][2].x,\n          innerDoorCorners[wallIndex][doorNb][2].y,\n          innerDoorCorners[wallIndex][doorNb][2].z\n        ); //tl\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][3].x,\n          innerDoorCorners[wallIndex][doorNb][3].y,\n          innerDoorCorners[wallIndex][doorNb][3].z\n        ); //bl\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][2].x,\n          outerDoorCorners[wallIndex][doorNb][2].y,\n          outerDoorCorners[wallIndex][doorNb][2].z\n        ); //tr\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][3].x,\n          outerDoorCorners[wallIndex][doorNb][3].y,\n          outerDoorCorners[wallIndex][doorNb][3].z\n        ); //br\n\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        ); //top Left\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].doors[doorNb].height) /\n              maxH\n        ); //top right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        ); //base right\n\n        indices.push(\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices,\n          nbIndices + 1,\n          nbIndices + 3\n        );\n\n        doorCount--;\n        doorNb++;\n      }\n\n      doorNb--;\n      nbIndices = positions.length / 3; // current number of indices\n\n      //final base\n      if (doorLen > 0) {\n        positions.push(\n          innerDoorCorners[wallIndex][doorNb][3].x,\n          innerDoorCorners[wallIndex][doorNb][3].y,\n          innerDoorCorners[wallIndex][doorNb][3].z\n        ); //bl\n        positions.push(\n          innerBaseCorners[wallIndex + 1].x,\n          innerBaseCorners[wallIndex + 1].y,\n          innerBaseCorners[wallIndex + 1].z\n        ); //br\n        positions.push(\n          outerDoorCorners[wallIndex][doorNb][3].x,\n          outerDoorCorners[wallIndex][doorNb][3].y,\n          outerDoorCorners[wallIndex][doorNb][3].z\n        ); //tl\n        positions.push(\n          outerBaseCorners[wallIndex + 1].x,\n          outerBaseCorners[wallIndex + 1].y,\n          outerBaseCorners[wallIndex + 1].z\n        ); //tr\n\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              (wallLength -\n                (walls[wallIndex].doors[doorNb].left +\n                  walls[wallIndex].doors[doorNb].width))) /\n              maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              (wallLength -\n                (walls[wallIndex].doors[doorNb].left +\n                  walls[wallIndex].doors[doorNb].width))) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n      } else {\n        positions.push(\n          innerBaseCorners[wallIndex].x,\n          innerBaseCorners[wallIndex].y,\n          innerBaseCorners[wallIndex].z\n        ); //bl\n        positions.push(\n          innerBaseCorners[wallIndex + 1].x,\n          innerBaseCorners[wallIndex + 1].y,\n          innerBaseCorners[wallIndex + 1].z\n        ); //br\n        positions.push(\n          outerBaseCorners[wallIndex].x,\n          outerBaseCorners[wallIndex].y,\n          outerBaseCorners[wallIndex].z\n        ); //tl\n        positions.push(\n          outerBaseCorners[wallIndex + 1].x,\n          outerBaseCorners[wallIndex + 1].y,\n          outerBaseCorners[wallIndex + 1].z\n        ); //tr\n\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * wallLength) / maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * wallLength) / maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n      }\n      indices.push(\n        nbIndices,\n        nbIndices + 1,\n        nbIndices + 3,\n        nbIndices + 3,\n        nbIndices + 2,\n        nbIndices\n      );\n\n      //窗户边缘构建\n      for (let ww = 0; ww < innerWindowCorners[wallIndex].length; ww++) {\n        //left side\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerWindowCorners[wallIndex][ww][3].x,\n          innerWindowCorners[wallIndex][ww][3].y,\n          innerWindowCorners[wallIndex][ww][3].z\n        ); //tr\n        positions.push(\n          innerWindowCorners[wallIndex][ww][0].x,\n          innerWindowCorners[wallIndex][ww][0].y,\n          innerWindowCorners[wallIndex][ww][0].z\n        ); //br\n        positions.push(\n          outerWindowCorners[wallIndex][ww][3].x,\n          outerWindowCorners[wallIndex][ww][3].y,\n          outerWindowCorners[wallIndex][ww][3].z\n        ); //tl\n        positions.push(\n          outerWindowCorners[wallIndex][ww][0].x,\n          outerWindowCorners[wallIndex][ww][0].y,\n          outerWindowCorners[wallIndex][ww][0].z\n        ); //bl\n\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].windows[ww].height) /\n              maxH\n        ); //top right\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].windows[ww].height) /\n              maxH\n        ); //top Left\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n\n        indices.push(\n          nbIndices + 1,\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 2,\n          nbIndices + 3,\n          nbIndices\n        );\n\n        //base\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerWindowCorners[wallIndex][ww][0].x,\n          innerWindowCorners[wallIndex][ww][0].y,\n          innerWindowCorners[wallIndex][ww][0].z\n        ); //tl\n        positions.push(\n          innerWindowCorners[wallIndex][ww][1].x,\n          innerWindowCorners[wallIndex][ww][1].y,\n          innerWindowCorners[wallIndex][ww][1].z\n        ); //tr\n        positions.push(\n          outerWindowCorners[wallIndex][ww][0].x,\n          outerWindowCorners[wallIndex][ww][0].y,\n          outerWindowCorners[wallIndex][ww][0].z\n        ); //bl\n        positions.push(\n          outerWindowCorners[wallIndex][ww][1].x,\n          outerWindowCorners[wallIndex][ww][1].y,\n          outerWindowCorners[wallIndex][ww][1].z\n        ); //br\n\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].windows[ww].width) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].windows[ww].width) /\n              maxL,\n          exteriorUV.y\n        ); //base right\n\n        indices.push(\n          nbIndices + 1,\n          nbIndices,\n          nbIndices + 3,\n          nbIndices + 3,\n          nbIndices,\n          nbIndices + 2\n        );\n\n        //right side\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerWindowCorners[wallIndex][ww][1].x,\n          innerWindowCorners[wallIndex][ww][1].y,\n          innerWindowCorners[wallIndex][ww][1].z\n        ); //bl\n        positions.push(\n          innerWindowCorners[wallIndex][ww][2].x,\n          innerWindowCorners[wallIndex][ww][2].y,\n          innerWindowCorners[wallIndex][ww][2].z\n        ); //tl\n        positions.push(\n          outerWindowCorners[wallIndex][ww][1].x,\n          outerWindowCorners[wallIndex][ww][1].y,\n          outerWindowCorners[wallIndex][ww][1].z\n        ); //br\n        positions.push(\n          outerWindowCorners[wallIndex][ww][2].x,\n          outerWindowCorners[wallIndex][ww][2].y,\n          outerWindowCorners[wallIndex][ww][2].z\n        ); //tr\n\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].windows[ww].height) /\n              maxH\n        ); //top Left\n        uvs.push(\n          exteriorUV.x + ((exteriorUV.z - exteriorUV.x) * thickness) / maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(\n          exteriorUV.x + (exteriorUV.z - exteriorUV.x),\n          exteriorUV.y +\n            ((exteriorUV.w - exteriorUV.y) *\n              walls[wallIndex].windows[ww].height) /\n              maxH\n        ); //top right\n\n        indices.push(\n          nbIndices + 1,\n          nbIndices + 2,\n          nbIndices + 3,\n          nbIndices,\n          nbIndices + 2,\n          nbIndices + 1\n        );\n\n        //top\n        nbIndices = positions.length / 3; // current number of indices\n\n        positions.push(\n          innerWindowCorners[wallIndex][ww][2].x,\n          innerWindowCorners[wallIndex][ww][2].y,\n          innerWindowCorners[wallIndex][ww][2].z\n        ); //br\n        positions.push(\n          innerWindowCorners[wallIndex][ww][3].x,\n          innerWindowCorners[wallIndex][ww][3].y,\n          innerWindowCorners[wallIndex][ww][3].z\n        ); //bl\n        positions.push(\n          outerWindowCorners[wallIndex][ww][2].x,\n          outerWindowCorners[wallIndex][ww][2].y,\n          outerWindowCorners[wallIndex][ww][2].z\n        ); //tr\n        positions.push(\n          outerWindowCorners[wallIndex][ww][3].x,\n          outerWindowCorners[wallIndex][ww][3].y,\n          outerWindowCorners[wallIndex][ww][3].z\n        ); //tl\n\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].windows[ww].width) /\n              maxL,\n          exteriorUV.y\n        ); //base right\n        uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n        uvs.push(\n          exteriorUV.x +\n            ((exteriorUV.z - exteriorUV.x) *\n              walls[wallIndex].windows[ww].width) /\n              maxL,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top right\n        uvs.push(\n          exteriorUV.x,\n          exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n        ); //top Left\n\n        indices.push(\n          nbIndices + 3,\n          nbIndices,\n          nbIndices + 2,\n          nbIndices + 1,\n          nbIndices,\n          nbIndices + 3\n        );\n      }\n\n      //Construction of top of wall facets\n      nbIndices = positions.length / 3; // current number of indices\n\n      positions.push(\n        innerTopCorners[wallIndex].x,\n        innerTopCorners[wallIndex].y,\n        innerTopCorners[wallIndex].z\n      ); //tl\n      positions.push(\n        innerTopCorners[wallIndex + 1].x,\n        innerTopCorners[wallIndex + 1].y,\n        innerTopCorners[wallIndex + 1].z\n      ); //tr\n      positions.push(\n        outerTopCorners[wallIndex].x,\n        outerTopCorners[wallIndex].y,\n        outerTopCorners[wallIndex].z\n      ); //bl\n      positions.push(\n        outerTopCorners[wallIndex + 1].x,\n        outerTopCorners[wallIndex + 1].y,\n        outerTopCorners[wallIndex + 1].z\n      ); //br\n\n      uvx =\n        exteriorUV.x + (0.5 * wallDiff * (exteriorUV.z - exteriorUV.x)) / maxL;\n      uvs.push(\n        uvx,\n        exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n      ); //top Left\n\n      uvx =\n        exteriorUV.x +\n        ((0.5 * wallDiff + wallLength) * (exteriorUV.z - exteriorUV.x)) / maxL;\n      uvs.push(\n        uvx,\n        exteriorUV.y + ((exteriorUV.w - exteriorUV.y) * thickness) / maxH\n      ); //top right\n\n      uvs.push(exteriorUV.x, exteriorUV.y); //base Left\n      uvs.push(\n        exteriorUV.x +\n          ((exteriorUV.z - exteriorUV.x) * exteriorWallLength) /\n            (maxL + wallDiff),\n        exteriorUV.y\n      ); //base right\n\n      indices.push(\n        nbIndices + 1,\n        nbIndices,\n        nbIndices + 3,\n        nbIndices + 2,\n        nbIndices + 3,\n        nbIndices\n      );\n\n      for (let p = interiorIndex; p < positions.length / 3; p++) {\n        colors.push(\n          exteriorColor.r,\n          exteriorColor.g,\n          exteriorColor.b,\n          exteriorColor.a\n        );\n      }\n    }\n    let normals: number[] = [];\n\n    VertexData.ComputeNormals(positions, indices, normals);\n    VertexData._ComputeSides(Mesh.FRONTSIDE, positions, indices, normals, uvs);\n\n    //Create a vertexData object\n    const vertexData = new VertexData();\n    //Assign positions and indices to vertexData\n    vertexData.positions = positions;\n    vertexData.indices = indices;\n    vertexData.normals = normals;\n    vertexData.uvs = uvs;\n    vertexData.colors = colors;\n\n    return vertexData;\n  }\n\n  private wallBuilder(pg: PolygonMeshBuilder, w0: WallPlane, w1: WallPlane) {\n    let positions: number[] = [];\n    let direction = w1.corner.subtract(w0.corner).normalize();\n    let angle = Math.acos(direction.x);\n    if (direction.z !== 0) {\n      angle *= direction.z / Math.abs(direction.z);\n    }\n    //@ts-ignore\n    pg._points.elements.forEach(function (p) {\n      positions.push(\n        p.x * Math.cos(angle) + w0.corner.x,\n        p.y,\n        p.x * Math.sin(angle) + w0.corner.z\n      );\n    });\n    let indices: number[] = [];\n    //@ts-ignore\n    let res = earcut(pg._epoints, pg._eholes, 2);\n    for (let i = res.length; i > 0; i--) {\n      indices.push(res[i - 1]);\n    }\n    return { positions: positions, indices: indices };\n  }\n  private getInOutContours() {\n    const ply = this._thickness;\n    const height = this._height;\n    const walls = this.walls;\n    const option = this.options;\n    let innerBaseCorners: Vector3[] = [];\n    let outerBaseCorners: Vector3[] = [];\n    let angle = 0;\n    let direction = 0;\n\n    let line = Vector3.Zero();\n    let nextLine = Vector3.Zero();\n    let lineNormal: Vector3;\n    const interior = option.interior;\n\n    let nbWalls = walls.length;\n    if (nbWalls === 2) {\n      walls[1].corner.subtractToRef(walls[0].corner, line);\n      lineNormal = new Vector3(line.z, 0, -1 * line.x).normalize();\n      line.normalize();\n      innerBaseCorners[0] = walls[0].corner;\n      outerBaseCorners[0] = walls[0].corner.add(lineNormal.scale(ply));\n      innerBaseCorners[1] = walls[1].corner;\n      outerBaseCorners[1] = walls[1].corner.add(lineNormal.scale(ply));\n    } else if (nbWalls > 2) {\n      for (let w = 0; w < nbWalls - 1; w++) {\n        walls[w + 1].corner.subtractToRef(walls[w].corner, nextLine);\n        angle =\n          Math.PI -\n          Math.acos(\n            Vector3.Dot(line, nextLine) / (line.length() * nextLine.length())\n          );\n        direction = Vector3.Cross(nextLine, line).normalize().y;\n        lineNormal = new Vector3(line.z, 0, -1 * line.x).normalize();\n        line.normalize();\n        innerBaseCorners[w] = walls[w].corner;\n        outerBaseCorners[w] = walls[w].corner\n          .add(lineNormal.scale(ply))\n          .add(line.scale((direction * ply) / Math.tan(angle / 2)));\n        line = nextLine.clone();\n      }\n      if (interior) {\n        lineNormal = new Vector3(line.z, 0, -1 * line.x).normalize();\n        line.normalize();\n        innerBaseCorners[nbWalls - 1] = walls[nbWalls - 1].corner;\n        outerBaseCorners[nbWalls - 1] = walls[nbWalls - 1].corner.add(\n          lineNormal.scale(ply)\n        );\n        walls[1].corner.subtractToRef(walls[0].corner, line);\n        lineNormal = new Vector3(line.z, 0, -1 * line.x).normalize();\n        line.normalize();\n        innerBaseCorners[0] = walls[0].corner;\n        outerBaseCorners[0] = walls[0].corner.add(lineNormal.scale(ply));\n      } else {\n        walls[1].corner.subtractToRef(walls[0].corner, nextLine);\n        angle =\n          Math.PI -\n          Math.acos(\n            Vector3.Dot(line, nextLine) / (line.length() * nextLine.length())\n          );\n        direction = Vector3.Cross(nextLine, line).normalize().y;\n        lineNormal = new Vector3(line.z, 0, -1 * line.x).normalize();\n        line.normalize();\n        innerBaseCorners[0] = walls[0].corner;\n        outerBaseCorners[0] = walls[0].corner\n          .add(lineNormal.scale(ply))\n          .add(line.scale((direction * ply) / Math.tan(angle / 2)));\n        innerBaseCorners[nbWalls - 1] = innerBaseCorners[0];\n        outerBaseCorners[nbWalls - 1] = outerBaseCorners[0];\n      }\n    }\n\n    return { outerBaseCorners, innerBaseCorners };\n  }\n  private getTBContours(\n    outerBaseCorners: Vector3[],\n    innerBaseCorners: Vector3[]\n  ) {\n    const innerTopCorners: Vector3[] = [];\n    const outerTopCorners: Vector3[] = [];\n    const nbWalls = this.walls.length;\n    const height = this._height;\n\n    for (let w = 0; w < nbWalls; w++) {\n      innerTopCorners.push(\n        new Vector3(innerBaseCorners[w].x, height, innerBaseCorners[w].z)\n      );\n      outerTopCorners.push(\n        new Vector3(outerBaseCorners[w].x, height, outerBaseCorners[w].z)\n      );\n    }\n\n    return { innerTopCorners, outerTopCorners };\n  }\n}\n","import { HCFiler, BaseObject } from \"@hc/core\";\nimport { Mesh, Vector3 } from \"../babylon\";\nimport { Entity } from \"../entitys/Entity\";\nimport { Box3 } from \"../utils/Box3\";\n\nexport class Particle extends BaseObject {\n  protected _name: string = \"粒子特效\";\n  protected _isSelect = false;\n  protected _isStart = true;\n  constructor() {\n    super();\n  }\n  get IsSelect() {\n    return this._isSelect;\n  }\n  set IsSelect(v: boolean) {\n    this._isSelect = v;\n  }\n  get Name() {\n    return this._name;\n  }\n  set Name(v: string) {\n    this._name = v;\n  }\n  get UniupeName() {\n    return this.Name + this.Id;\n  }\n  get IsStart() {\n    return this._isStart;\n  }\n  set IsStart(v: boolean) {\n    this.writeSnapshoot();\n    if (v === this._isStart) return;\n    this._isStart = v;\n    this.updateStatus();\n  }\n  get SceneSize() {\n    const filterFun = (mesh: Mesh) =>\n      mesh.isVisible &&\n      mesh.isEnabled() &&\n      mesh.name !== \"WORLD_GROUND\" &&\n      !mesh\n        .getBoundingInfo()\n        .boundingBox.extendSize.equalsWithEpsilon(Vector3.Zero());\n\n    if (Entity.Scene.meshes.filter(filterFun).length) {\n      const worldExtends = Entity.Scene.getWorldExtends(filterFun);\n      const { max, min } = worldExtends;\n      if (max.equalsWithEpsilon(min, 1e-3)) {\n        return null;\n      }\n      return new Box3(min, max);\n    }\n    return null;\n  }\n  start() {}\n  stop() {}\n  destory() {}\n  /**填充粒子到场景 */\n  fillScene(box?: Box3) {}\n  updateStatus() {\n    this._isStart ? this.start() : this.stop();\n  }\n  update() {}\n  fromJSON(json: Record<string, any>) {\n    return this;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(2);\n    filer.write(this._name);\n    filer.write(this._isStart);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const v = filer.read();\n    this._name = filer.read();\n    if (v > 1) {\n      this._isStart = filer.read();\n    }\n  }\n}\n","import { removeOne } from \"../utils\";\nimport { Factory, HCFiler, BaseObject } from \"@hc/core\";\nimport { DataBind } from \"../dataBind/DataBind\";\n\n@Factory\nexport class DataBindTable extends BaseObject {\n  static type = \"DataBindTable\";\n  list: DataBind[] = [];\n  append(data: DataBind) {\n    this.list.push(data);\n  }\n  do() {\n    for (const db of this.list) {\n      db.do();\n    }\n  }\n  remove(db: DataBind) {\n    removeOne(this.list, db);\n  }\n  destory(): void {\n    super.destory();\n    for (const d of this.list) {\n      d.destory();\n    }\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this.list, filer.writeObject);\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    filer.readAnyArrayAndPush(this.list, filer.readObject);\n  }\n}\n","import { GroupRecord } from \"../records\";\nimport { ObjectCollection, Factory, HCFiler } from \"@hc/core\";\n\n@Factory\nexport class GroupRecordTable extends ObjectCollection<GroupRecord> {\n  static type = \"GroupRecordTable\";\n  append(object: GroupRecord) {\n    let id = super.append(object);\n\n    if (id) object.Owner = this.ObjectId;\n\n    return id;\n  }\n  readFile(file: HCFiler) {\n    let ver = file.read();\n    super.readFile(file);\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n    super.writeFile(file);\n  }\n}\n","import { HCFiler, BaseObject, IEvent } from \"@hc/core\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { Interaction } from \"../interaction/Interaction\";\nimport { arrayRemoveIf } from \"../utils/array\";\nimport { sleep } from \"../utils\";\nimport { AppStore } from \"../app/AppStore\";\n\nexport class InteractionTable extends BaseObject {\n  objects: Interaction[] = [];\n  private cleaners: (() => void)[] = [];\n  doing = false;\n  private _pause = false;\n  public queues = [];\n  private preventDbTimeId: NodeJS.Timeout;\n  private lastClickTimeStap: number;\n  private resolveFun: ((v: unknown) => void)[] = [];\n  constructor() {\n    super();\n  }\n  get Pause() {\n    return this._pause;\n  }\n  start() {\n    this._pause = false;\n    if (this.resolveFun.length > 0) {\n      this.resolveFun.forEach((r) => r(true));\n      this.resolveFun.length = 0;\n    }\n    AppStore.MainScene.animatables.forEach((a) => a.restart());\n    if (this.queues.length > 0) {\n      const func = this.queues.pop();\n      func();\n    }\n  }\n  stop() {\n    this._pause = true;\n    AppStore.MainScene.animatables.forEach((a) => a.pause());\n  }\n  wait() {\n    return new Promise((res) => this.resolveFun.push(res));\n  }\n  append(interaction: Interaction) {\n    interaction._SetOwnerDatabase(this._db);\n    this.objects.push(interaction);\n  }\n  removeAll() {\n    this.objects.forEach((o) => o.destory());\n    this.objects.length = 0;\n  }\n  remove(obj: Interaction | Interaction[]) {\n    let arr: Interaction[];\n    if (Array.isArray(obj)) arr = obj;\n    else arr = [obj];\n    for (const a of arr) a.destory();\n    arrayRemoveIf(this.objects, (o) => arr.includes(o));\n  }\n  destory(): void {\n    super.destory();\n    // this.cleaners.forEach((c) => c());\n    // this.cleaners.length = 0;\n    this.objects.forEach((o) => o.destory());\n    this.objects.length = 0;\n    this.doing = false;\n  }\n  private callback = async (\n    event: IEvent,\n    filter: (o: Interaction) => boolean\n  ) => {\n    if (this.doing) {\n      if (event.isChild) {\n        if (event.isEnd) {\n          this.queues.length = 0;\n        } else this.queues.push(() => this.callback(event, filter));\n      }\n      return;\n    }\n    this.doing = true;\n    for (const o of this.objects) {\n      if (o.Target) continue;\n      if (filter(o)) {\n        await o.do();\n      }\n    }\n    this.doing = false;\n    if (this.queues.length > 0 && !this.Pause) {\n      const func = this.queues.pop();\n      func();\n    }\n  };\n  private pointerCallback = (event: IEvent) => {\n    if (!this.lastClickTimeStap) {\n      this.lastClickTimeStap = event.event.timeStamp;\n    } else {\n      let diff = event.event.timeStamp - this.lastClickTimeStap;\n      this.lastClickTimeStap = null;\n      if (diff < 200) {\n        if (this.preventDbTimeId) {\n          clearTimeout(this.preventDbTimeId);\n          return;\n        }\n      }\n    }\n\n    const doIt = () => {\n      const IsRight = event.event.button === 2;\n      this.lastClickTimeStap = null;\n      this.callback(event, (o) => {\n        if (o.TriggerType === \"RightClick\" && IsRight) return true;\n        else if (o.TriggerType === \"Click\") {\n          if (event.event.button === 0) return true;\n        }\n      });\n    };\n\n    if (event.isChild) {\n      doIt();\n      return;\n    }\n\n    this.preventDbTimeId = setTimeout(() => {\n      doIt();\n    }, 200);\n  };\n  private pointerDbClick = async (event: IEvent) => {\n    console.log(\"db\");\n    await this.callback(event, (o) => o.TriggerType === \"DoubleClick\");\n  };\n  private onKeydown = async (event: IEvent) => {\n    await this.callback(event, (o) => o.TriggerType === \"KeyDown\");\n  };\n  private onKeyup = async (event: IEvent) => {\n    await this.callback(event, (o) => o.TriggerType === \"KeyUp\");\n  };\n  private onLoad = async (event: IEvent) => {\n    await sleep(100);\n    await this.callback(event, (o) => o.TriggerType === \"Load\");\n  };\n  private onUpdate = async (event: IEvent) => {\n    await this.callback(event, (o) => o.TriggerType === \"Update\");\n  };\n  public watch() {\n    this.cleaners.push(\n      AppEvent.on(\"pointerTap\", this.pointerCallback),\n      AppEvent.on(\"pointerDoubleTap\", this.pointerDbClick),\n      AppEvent.on(\"keydown\", this.onKeydown),\n      AppEvent.on(\"keyup\", this.onKeyup),\n      AppEvent.on(\"loadComplete\", this.onLoad),\n      AppEvent.on(\"update\", this.onUpdate)\n    );\n\n    document.addEventListener(\"visibilitychange\", () => {\n      if (document.visibilityState === \"visible\") {\n        this.start();\n      }\n      if (document.visibilityState === \"hidden\") {\n        this.stop();\n      }\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.writeAnyArray(this.objects, filer.writeObject);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n    filer.readAnyArrayAndPush(this.objects, filer.readObject);\n  }\n}\n","import { Vector3 } from \"@babylonjs/core/Maths/math\";\nimport {\n  BaseDatabase,\n  BaseObject,\n  BlockTableRecord,\n  DeepCloneFiler,\n  HCFiler,\n  HistoricManager,\n  ObjectId,\n  ObjectRecord,\n  RecordTable,\n} from \"@hc/core\";\nimport { Entity } from \"../entitys\";\nimport { Light } from \"../entitys/lights/Light\";\nimport { BaseGui } from \"../guis/Gui\";\nimport { Particle } from \"../particleSystem/Particle\";\nimport { IdMaping, OwnerContainer } from \"../types/db.types\";\nimport { BaseDom } from \"./../core/BaseDom\";\nimport { DataBindTable } from \"./DataBindTable\";\nimport { GroupRecordTable } from \"./GroupTableRecord\";\nimport { InteractionTable } from \"./InteractionTable\";\n\nfunction getArea(vector: Vector3): number {\n  return vector.x * vector.z;\n}\n\nBlockTableRecord.ObjectType = [Entity, BaseGui, BaseDom, Particle];\n\nexport class Database extends BaseDatabase {\n  ModelSpace: BlockTableRecord<Entity>;\n  LightSpace: BlockTableRecord<Light>;\n  TextureTable: RecordTable;\n  MaterialTable: RecordTable;\n  HistoryManager: HistoricManager;\n  InteractionTable: InteractionTable;\n  DataBindTable: DataBindTable;\n  GuiSpace: BlockTableRecord<BaseGui>;\n  DomSpace: BlockTableRecord<BaseDom>;\n  ParticleSystemSpace: BlockTableRecord<Particle>;\n  GroupTable: GroupRecordTable;\n  private Tables: BaseObject[] = [];\n  protected idIndex = 1;\n  protected idMap = new Map<number, ObjectId>();\n  constructor(protected preview = false) {\n    super(preview);\n    this.ModelSpace = new BlockTableRecord<Entity>()._SetOwnerDatabase(this);\n    this.LightSpace = new BlockTableRecord<Light>()\n      ._SetOwnerDatabase(this)\n      .setCheckout((en) => en.isLight);\n\n    this.TextureTable = new RecordTable()._SetOwnerDatabase(this);\n    this.MaterialTable = new RecordTable()._SetOwnerDatabase(this);\n\n    this.HistoryManager = new HistoricManager()._SetOwnerDatabase(this);\n\n    this.InteractionTable = new InteractionTable()._SetOwnerDatabase(this);\n    if (preview) this.InteractionTable.watch();\n\n    this.DataBindTable = new DataBindTable()._SetOwnerDatabase(this);\n\n    this.GuiSpace = new BlockTableRecord<BaseGui>()._SetOwnerDatabase(this);\n\n    this.DomSpace = new BlockTableRecord<BaseDom>()._SetOwnerDatabase(this);\n    this.ParticleSystemSpace =\n      new BlockTableRecord<Particle>()._SetOwnerDatabase(this);\n\n    this.GroupTable = new GroupRecordTable()._SetOwnerDatabase(this);\n\n    this.Tables.push(\n      this.ModelSpace,\n      this.LightSpace,\n      this.TextureTable,\n      this.MaterialTable,\n      this.InteractionTable,\n      this.DataBindTable,\n      this.GuiSpace,\n      this.DomSpace,\n      this.ParticleSystemSpace,\n      this.GroupTable\n    );\n\n    //保留100个id内部对象使用\n    this.idIndex = 100;\n  }\n  get AllObjects() {\n    const objects: BaseObject[] = [];\n    for (const [id, objectId] of this.idMap) {\n      if (id < 100) continue;\n      objects.push(objectId.Object);\n    }\n    return objects;\n  }\n  allocateId() {\n    return this.getObjectId(this.idIndex++);\n  }\n  getObjectId(index: number) {\n    //id 从1开始,0被保留作为空id\n    if (index === 0) return undefined;\n\n    let id = this.idMap.get(index);\n    if (id) return id;\n\n    id = new ObjectId(index);\n    this.idMap.set(index, id);\n\n    return id;\n  }\n  /**\n   * 根据id获取数据库对象\n   * @param id\n   * @returns 场景中的对象\n   */\n  findObjectById(id: number) {\n    return this.idMap.get(id)?.Object;\n  }\n  /**\n   * 根据名称获取数据库中的对象\n   * @param name\n   * @param isLike 是否模糊查询 可选参数\n   * @param filter 过滤查找，返回true时跳过，可选参数\n   * @returns BaseObject[] 目标对象数组\n   * @example app.Database.findObjectByName(\"box\",true,(o)=>!(o intanceof GUI)) 查找数据库中名字包含box的GUI\n   */\n  findObjectByName(\n    name: string,\n    isLike = true,\n    filter?: (o: BaseObject) => boolean\n  ): BaseObject[] {\n    const objects: BaseObject[] = [];\n    if (!filter) filter = (o) => false;\n    for (const [, oid] of this.idMap) {\n      if (oid.isErase) continue;\n      if (!oid.Object?.Name || filter(oid.Object)) continue;\n      if (isLike) {\n        if (oid.Object.Name.includes(name)) {\n          objects.push(oid.Object);\n        }\n      } else {\n        if (oid.Object.Name === name) {\n          objects.push(oid.Object);\n        }\n      }\n    }\n    return objects;\n  }\n  /**模型替换\n   * > 目标实体将继承源实体的ObjectId，空间信息，以及绑定事件\n   * > 目标实体和源实体 所属的数据表必须相同\n   * @param source 源目标实体\n   * @param target 目标实体\n   * @see https://hc3dol.gkiiot.com/#20\n   * @example\n   * ```ts\n   * const box=app.create({type:\"Box\",position:{z:20}});\n   * const en=new HC.ImportEntity({url})\n     app.Database.replace(box,en)\n   * ```\n   */\n  replace(source: Entity, target: Entity) {\n    if (target.ObjectId) {\n      console.error(\"已经添加到数据库的对象无法替换\");\n      return;\n    }\n    if (source instanceof Entity && target instanceof Entity) {\n      if (source.Owner.Object instanceof BlockTableRecord) {\n        (<BlockTableRecord<Entity>>source.Owner.Object).replace(source, target);\n      }\n    } else {\n      console.error(\"请传入实体\");\n    }\n  }\n  cloneMaterial2Database(db: Database) {\n    const materials = db.MaterialTable.Objects;\n    const map = new Map<number, ObjectRecord>();\n    for (const object of materials) {\n      const index = object.Id - 100;\n      map.set(index, object);\n      this.MaterialTable.add(object);\n    }\n    const textures = db.TextureTable.Objects;\n    for (const ture of textures) {\n      const index = ture.Id - 100;\n      map.set(index, ture);\n      this.TextureTable.add(ture);\n    }\n\n    for (let i = 0; i < map.size; i++) {\n      const objectid = this.allocateId();\n      const obj = map.get(i);\n      this.idMap.set(objectid.Index, obj.ObjectId);\n      obj.ObjectId.Index = objectid.Index;\n      obj._SetDatabase(this);\n    }\n    return materials;\n  }\n  cloneBlockObjects(\n    objects: BaseObject[],\n    owner: OwnerContainer,\n    idMap: IdMaping\n  ) {\n    let f = new DeepCloneFiler();\n    for (const object of objects) {\n      this.cloneBlockObject(object, owner, idMap, f);\n    }\n    return objects.map((o) => idMap.get(o.ObjectId).Object);\n  }\n  cloneBlockObject(\n    object: BaseObject,\n    owner: OwnerContainer,\n    idMap: IdMaping,\n    filer: DeepCloneFiler\n  ) {\n    //克隆的对象有可能被其他的对象依赖并且克隆完毕了.\n    let cloneId = filer.idMaping.get(object.Id);\n    if (cloneId && cloneId.Object) return;\n\n    filer.Data.length = 0;\n\n    //表示该对象已经被拷贝了\n    filer.cloned.add(object.Id);\n\n    filer.writeObject(object);\n    this.cloneBlockReferenceObject(object, filer, idMap);\n    filer.reset();\n    let newObject = filer.readObject();\n    this.allocationObjectId(newObject); //先给予Id,避免历史记录里面没有id\n    owner.append(newObject, false);\n    idMap.set(object.ObjectId, newObject.ObjectId);\n  }\n  cloneBlockReferenceObject(\n    object: BaseObject,\n    f: DeepCloneFiler,\n    idMap: IdMaping\n  ) {\n    let oldData = f.Data;\n    f.Data = [];\n\n    let oldDb = object.DB;\n    let hardObjectIds = f.hardObjectIds;\n    f.hardObjectIds = new Set();\n    for (let idIndex of hardObjectIds) {\n      let oldId = oldDb.getObjectId(idIndex);\n      if (!oldId?.Object) continue;\n      //使用旧的OwnerId得到新的OwnerId,假设所有者都是数据库默认存在的.\n      let newOwnerId = this.getObjectId(oldId.Object.Owner.Index); //owner.Db === this\n      let newOwner = newOwnerId.Object as any;\n      this.cloneBlockObject(oldId.Object, newOwner, idMap, f);\n    }\n\n    f.Data = oldData;\n  }\n  allocationObjectId(object: BaseObject) {\n    object.ObjectId.Index = this.idIndex++;\n    this.idMap.set(object.Id, object.ObjectId);\n  }\n  writeFile(filer?: HCFiler) {\n    if (!filer) filer = new HCFiler();\n    filer.write(2);\n    filer.write(this.idIndex);\n    this.ModelSpace.writeFile(filer, {\n      sort: (a, b) => {\n        // 实体按面积大小排序，面积大的优先加载\n        const aBounding = a.BoundingVectors;\n        const bBounding = b.BoundingVectors;\n\n        if (!aBounding && !bBounding) {\n          return 0;\n        }\n\n        if (!aBounding) {\n          return 1;\n        }\n\n        if (!bBounding) {\n          return -1;\n        }\n\n        const aVolume = getArea(aBounding.max.subtract(aBounding.min));\n        const bVolume = getArea(bBounding.max.subtract(bBounding.min));\n\n        return bVolume - aVolume;\n      },\n    });\n    this.LightSpace.writeFile(filer);\n    this.TextureTable.writeFile(filer);\n    this.MaterialTable.writeFile(filer);\n    this.InteractionTable.writeFile(filer);\n    this.DataBindTable.writeFile(filer);\n    this.GuiSpace.writeFile(filer);\n\n    this.DomSpace.writeFile(filer);\n    this.ParticleSystemSpace.writeFile(filer);\n    this.GroupTable.writeFile(filer);\n\n    //保存历史记录??\n    // this.HistoryManager.writeFile(filer);\n    return filer;\n  }\n  readFile(filer: HCFiler) {\n    this.destory();\n    this.reset();\n    filer.database = this;\n    let ver = filer.read();\n    this.idIndex = filer.read();\n    this.ModelSpace.readFile(filer);\n    this.LightSpace.readFile(filer);\n    this.TextureTable.readFile(filer);\n    this.MaterialTable.readFile(filer);\n    this.InteractionTable.readFile(filer);\n    this.DataBindTable.readFile(filer);\n    this.GuiSpace.readFile(filer);\n\n    this.DomSpace.readFile(filer);\n\n    this.ParticleSystemSpace.readFile(filer);\n\n    if (ver > 1) this.GroupTable.readFile(filer);\n\n    if (this.preview) this.DataBindTable.do();\n\n    // this.HistoryManager.readFile(filer);\n    return this;\n  }\n  destory() {\n    this.idMap.clear();\n\n    this.HistoryManager.destory();\n    this.Tables.forEach((table) => table.destory());\n    this.idIndex = 1;\n  }\n  reset() {\n    this.Tables.forEach((table) => table._SetOwnerDatabase(this));\n\n    this.idIndex = 100;\n  }\n}\n","import \"@babylonjs/core/Debug/debugLayer\";\nimport \"@babylonjs/loaders/glTF/2.0\";\nimport \"@babylonjs/loaders/OBJ\";\nimport \"@babylonjs/loaders/STL\";\nimport \"../loaders/hc3d\";\nimport { BaseDom } from \"./../core/BaseDom\";\nimport { GUISelectTool } from \"./../editor/GuiSelectTool\";\nimport { ImportEntity } from \"./../entitys/ImportEntity\";\nimport { BaseGui } from \"./../guis/Gui\";\nimport { ParticleSystem } from \"./../particleSystem/ParticleSystem\";\n\nimport { end } from \"@hc/aop\";\nimport { HCFactory, HCFiler } from \"@hc/core\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { Editor } from \"../editor/Editor\";\nimport { Entity } from \"../entitys/Entity\";\nimport { EventCallback } from \"../types/event\";\nimport { RenderType } from \"../types/renderTypes\";\nimport { Viewer } from \"../viewer/Viewer\";\nimport { Database } from \"./../database/Database\";\nimport { HemisphericLight } from \"./../entitys/lights/HemisphericLight\";\nimport { PBRMaterialRecord } from \"./../record/PBRMaterialRecord\";\nimport { TextureRecord } from \"./../record/TextureRecord\";\n\nimport { ParticleSystemGroup } from \"..\";\nimport { SceneLoader } from \"../babylon\";\nimport { Light } from \"../entitys/lights/Light\";\nimport { EventEnum } from \"../enums\";\nimport { CommonMaterials } from \"../materials/commonMaterials\";\nimport { Particle } from \"../particleSystem/Particle\";\nimport type { IAppOption, ICreateOption } from \"../types/application.types\";\nimport { appCache } from \"./AppCache\";\nimport { AppConfig } from \"./appConfig\";\nimport { AppStore } from \"./AppStore\";\nimport { FileToolsOptions } from \"@babylonjs/core/Misc/fileTools\";\n\nSceneLoader.ShowLoadingScreen = false;\n\nFileToolsOptions.PreprocessUrl = (url: string) => {\n  if (url.startsWith(\"http\") && AppConfig.clearCacheKeys.length) {\n    const cacheData = AppConfig.clearCacheKeys.find((d) => url.includes(d.key));\n    if (cacheData) {\n      const Url = new URL(url);\n      Url.searchParams.append(\"t\", cacheData.timestamp);\n      return Url.href;\n    }\n  }\n  return url;\n};\n\n/**\n * 引擎入口\n * @see https://hc3dol.gkiiot.com/#1\n */\nexport class Application {\n  static Intance: Application;\n  Editor: Editor;\n  Viewer: Viewer;\n  Database: Database;\n  /**应用是否准备好 */\n  isReady = true;\n  private _domContainer: HTMLElement;\n  private _IsShadow = false;\n  private cleaners: (() => void)[] = [];\n  private guiSelectTool: GUISelectTool;\n  /**\n   * 创建一个引擎实例\n   * @param option 创建实例配置项 {@link IAppOption}\n   */\n  constructor(option: IAppOption) {\n    if (option.lowPerformance !== undefined) {\n      AppConfig.lowPerformance = option.lowPerformance;\n    }\n\n    //是否需要单例？？\n    if (!Application.Intance) {\n      AppStore.Application = this;\n\n      this.Viewer = new Viewer(option.canvas, !option.editor);\n\n      //GUI工作在编辑器相关事件前注册\n      this.guiSelectTool = new GUISelectTool(this.Viewer);\n\n      this.Editor = new Editor(this.Viewer, option.editor);\n\n      if (option.domContainer) {\n        this._domContainer = option.domContainer;\n      } else {\n        this._domContainer =\n          document.getElementById(\"2d\") || option.canvas.parentElement;\n      }\n\n      AppStore.PreviewMode = !option.editor;\n\n      this.Database = new Database(!option.editor);\n      AppStore.MainViewer = this.Viewer;\n\n      this._register();\n\n      //初始化渲染灯光\n      this.initLight();\n\n      if (option.skybox) {\n        this.Viewer.sceneControl.Mode = option.skybox;\n      }\n\n      if (option.cameraRadius) {\n        this.Viewer.cameraManager.Radius = option.cameraRadius;\n      }\n\n      AppConfig.debugger = option.debug;\n\n      Application.Intance = this;\n    }\n    return Application.Intance;\n  }\n  /**\n   * 是否开启阴影\n   */\n  get IsShadow() {\n    return this.Viewer.sceneControl.IsShadow;\n  }\n  set IsShadow(v: boolean) {\n    this.Viewer.sceneControl.IsShadow = v;\n  }\n  /**\n   * 创建实体\n   * @param option {@link ICreateOption}\n   * @returns\n   */\n  create(option: ICreateOption) {\n    const entity = HCFactory.CreateObject<Entity>(option.type, option);\n    if (!entity) {\n      console.error(option.type + \"类型实体不存在\");\n      return;\n    }\n\n    if (option.name) {\n      entity.Name = option.name;\n    }\n\n    if (option.position) {\n      entity.Position = option.position;\n\n      if (entity instanceof ImportEntity) {\n        entity.isRead = true;\n      }\n    }\n    if (option.colorIndex !== undefined) {\n      entity.ColorIndex = option.colorIndex;\n    }\n\n    if (entity instanceof BaseGui) {\n      this.Database.GuiSpace.append(entity);\n    } else if (entity instanceof BaseDom) {\n      this.Database.DomSpace.append(entity);\n    } else if (entity instanceof Entity) {\n      if (entity.isLight) {\n        this.Database.LightSpace.append(entity as Light);\n      } else this.Database.ModelSpace.append(entity);\n    }\n\n    if (option.loading) {\n      entity.on(\"loading\", option.loading);\n    }\n\n    if (option.complete) {\n      if (entity.isAsync) {\n        entity.once(\"load\", option.complete);\n      } else {\n        option.complete({ type: \"load\", target: entity });\n      }\n    }\n\n    return entity;\n  }\n  createGui(type: string, option) {\n    const gui = HCFactory.CreateObject<BaseGui>(type, option);\n    if (!gui) {\n      console.error(option.type + \"类型实体不存在\");\n      return;\n    }\n    this.Database.GuiSpace.append(gui);\n    return gui;\n  }\n  createParticle(type: string, option) {\n    const part = HCFactory.CreateObject<Particle>(type, option);\n    if (!part) {\n      console.error(option.type + \"特效不存在\");\n      return;\n    }\n    this.Database.ParticleSystemSpace.append(part);\n\n    return part;\n  }\n  /**\n   * 创建一个PBR材质\n   * @returns 创建PBR材质\n   */\n  createPBR() {\n    const mtl = new PBRMaterialRecord();\n    this.Database.MaterialTable.append(mtl);\n    return mtl;\n  }\n  /**\n   * 创建贴图\n   * @param url 贴图地址\n   * @param onload //仅会触发一次\n   * @returns texture\n   */\n  createTexture(url: string, onload?: (e) => void) {\n    const tx = new TextureRecord(url);\n    if (onload) tx.once(\"load\", onload);\n    this.Database.TextureTable.append(tx);\n    return tx;\n  }\n\n  get SelectObjects(): (Entity | BaseGui | BaseDom | Particle)[] {\n    return [\n      ...this.SelectEntitys,\n      ...this.SelectGuis,\n      ...this.SelectDoms,\n      ...this.SelectParticles,\n    ];\n  }\n  get SelectEntitys() {\n    return this.Editor?.selectControl.selectSet.SelectEntitys;\n  }\n  get SelectParticles() {\n    const particle = this.Editor?.selectControl?.SelectParticle;\n    return particle ? [particle] : [];\n  }\n  get SelectGuis() {\n    const gui = this.Editor?.selectControl?.SelectGui;\n    return gui ? [gui] : [];\n  }\n  get SelectDoms() {\n    const dom = this.Editor?.selectControl?.SelectDOM;\n    return dom ? [dom] : [];\n  }\n  /**\n   * 场景实体最大化\n   */\n  zoomAll() {\n    this.Viewer.cameraManager.zoomAll();\n  }\n  changeRenderType(type: RenderType) {\n    if (type === undefined) return;\n    this.Database.ModelSpace.Entitys.forEach((e) => e.updateRenderType(type));\n  }\n  /**\n   * 新建一个场景\n   * @param trigger 是否触发事件\n   */\n  new(trigger = true) {\n    if (this.Editor?.transformControl)\n      this.Editor.transformControl.detachMeshs();\n    this.Viewer.reset();\n    this.Database.readFile(new Database().writeFile());\n    this.initLight();\n    if (trigger) AppEvent.trigger({ type: EventEnum.NewFile, target: null });\n  }\n  /**\n   * 保存场景数据\n   * @returns 场景数据\n   */\n  saveFile() {\n    const filer = this.Database.writeFile();\n    this.Viewer.writeFile(filer);\n    return filer.Data;\n  }\n  /**\n   * 读取场景数据\n   * @param data 场景数据\n   */\n  loadFile(data: any[]) {\n    this.isReady = false;\n    AppStore.StartWait();\n    this.Viewer.Scene.blockfreeActiveMeshesAndRenderingGroups = true;\n    this.Viewer.stopRender();\n    this.Viewer.reset();\n    if (this.Editor?.transformControl)\n      this.Editor.transformControl.detachMeshs();\n    appCache.clear();\n    AppEvent.trigger({ type: EventEnum.StartLoad, target: null });\n    if (AppConfig.loadPlugins.size > 0) {\n      AppConfig.loadPlugins.forEach((p: any) => p?.dispose?.());\n      AppConfig.loadPlugins.clear();\n    }\n    this.Viewer.clearScene();\n\n    if (data) {\n      AppStore.Reading = true;\n      const filer = new HCFiler(data);\n      this.Database.readFile(filer);\n      this.Viewer.readFile(filer);\n      this.Viewer.hemisphericLight = this.Database.LightSpace.Entitys.find(\n        (e) => e instanceof HemisphericLight\n      ) as HemisphericLight;\n      AppStore.Reading = false;\n    } else {\n      this.new(false);\n    }\n    this.Viewer.Scene.blockfreeActiveMeshesAndRenderingGroups = false;\n    this.Viewer.render();\n    AppEvent.trigger({ type: EventEnum.LoadFile, target: null });\n    AppStore.WaitComplete().then((res) => {\n      AppEvent.trigger({ type: EventEnum.LoadComplete, target: null });\n      this.isReady = true;\n      /**加载完成通知阴影切换 */\n      this.Viewer.sceneControl.ToggleShadowObserable.notifyObservers(\n        this.IsShadow\n      );\n    });\n  }\n  /**回收场景 */\n  destory() {\n    this.Viewer.Scene.blockfreeActiveMeshesAndRenderingGroups = true;\n    this.Database.destory();\n    this.Viewer.Scene.blockfreeActiveMeshesAndRenderingGroups = false;\n    this.Viewer.destory();\n    Application.Intance = null;\n    CommonMaterials.clear();\n    this.cleaners.forEach((c) => c());\n    this.cleaners.length = 0;\n  }\n  /**\n   * 清理资源的缓存\n   */\n  clearCache() {\n    appCache.clear();\n  }\n  /**创建一个视图 */\n  createView(canvas: HTMLCanvasElement, option?: any) {\n    return new Viewer(canvas, true, option);\n  }\n  /*@hidden */\n  openShadow() {\n    const lights = this.Database.LightSpace.Entitys as Light[];\n    const entitys = this.Database.ModelSpace.Entitys;\n\n    for (const l of lights) {\n      if (l.HasShadowGenerator) {\n        l.addShadowCaster(entitys);\n      }\n    }\n  }\n  /**\n   * @hidden\n   */\n  closeShadow() {\n    const lights = this.Database.LightSpace.Entitys as Light[];\n\n    for (const l of lights) {\n      if (l.HasShadowGenerator) {\n        l.removeShadowCaster();\n      }\n    }\n  }\n  /**\n   * 全局事件监听\n   * @param type 事件类型\n   * @param callback 事件回调\n   * @returns 回收回调\n   */\n  on(type: string, callback: EventCallback) {\n    return AppEvent.on(type, callback);\n  }\n  /**\n   * 全局事件监听注销\n   * @param type 事件类型\n   * @param callback 事件回调\n   * @returns\n   */\n  off(type: string, callback: EventCallback) {\n    AppEvent.off(type, callback);\n  }\n  private initLight() {\n    const light = new HemisphericLight();\n    this.Viewer.hemisphericLight = light;\n    this.Database.LightSpace.append(light);\n  }\n  private _register() {\n    const callback = () => {\n      this.Viewer.setSize();\n      this.Database.DomSpace.Entitys.forEach((e) => e.update());\n      this.Database.GuiSpace.Entitys.forEach((e) => e.update());\n    };\n    window.addEventListener(\"resize\", callback);\n\n    const observer = this.Viewer.sceneControl.ToggleShadowObserable.add((v) => {\n      if (!this.isReady) return;\n      if (v) {\n        this.openShadow();\n      } else {\n        this.closeShadow();\n      }\n    });\n\n    this.cleaners.push(\n      end(\n        this.Database.ModelSpace,\n        this.Database.ModelSpace.appendEvent,\n        (e: Entity) => {\n          this.Viewer.Scene.addTransformNode(e.DrawObject);\n        }\n      ),\n      end(\n        this.Database.LightSpace,\n        this.Database.LightSpace.appendEvent,\n        (e: Light) => {\n          this.Viewer.Scene.addTransformNode(e.DrawObject);\n          if (this._IsShadow && e.EnableShadow) {\n            e.addShadowCaster(this.Database.ModelSpace.Entitys);\n          }\n        }\n      ),\n      end(\n        this.Database.GuiSpace,\n        this.Database.GuiSpace.appendEvent,\n        (e: BaseGui) => {\n          this.Viewer.GuiContainer.addControl(e.DrawObject);\n        }\n      ),\n      end(\n        this.Database.DomSpace,\n        this.Database.DomSpace.appendEvent,\n        (e: BaseDom) => {\n          this._domContainer.appendChild(e.DrawObject);\n        }\n      ),\n      end(\n        this.Database.ParticleSystemSpace,\n        this.Database.ParticleSystemSpace.appendEvent,\n        (e: ParticleSystem | ParticleSystemGroup) => {\n          const oldScene = Entity.Scene;\n          Entity.Scene = AppStore.MainScene;\n          if (!e.IsErase) e.Intance;\n          Entity.Scene = oldScene;\n        }\n      ),\n      end(this.Database, this.Database.readFile, async () => {\n        for (const en of this.Database.ModelSpace.Entitys) {\n          if (!en.IsErase) {\n            this.Viewer.Scene.addTransformNode(en.DrawObject);\n          }\n        }\n        for (const en of this.Database.LightSpace.Entitys) {\n          if (!en.IsErase) {\n            this.Viewer.Scene.addTransformNode(en.DrawObject);\n          }\n        }\n        for (const en of this.Database.GuiSpace.Entitys) {\n          if (!en.IsErase) this.Viewer.GuiContainer.addControl(en.DrawObject);\n        }\n        for (const en of this.Database.DomSpace.Entitys) {\n          if (!en.IsErase) this._domContainer.appendChild(en.DrawObject);\n        }\n\n        const oldScene = Entity.Scene;\n        Entity.Scene = AppStore.MainScene;\n        for (const en of this.Database.ParticleSystemSpace.Entitys as (\n          | ParticleSystem\n          | ParticleSystemGroup\n        )[]) {\n          if (!en.IsErase) en.Intance;\n        }\n        Entity.Scene = oldScene;\n      }),\n      this.on(\"update-shadow\", (event) => {\n        const en = event.target as Entity;\n        const lights = this.Database.LightSpace.Entitys as Light[];\n\n        for (const l of lights) {\n          if (l.HasShadowGenerator) {\n            if (en.EnableShadow) {\n              l.addShadowCaster([en]);\n            } else l.removeShadowCaster([en]);\n          }\n        }\n      }),\n\n      this.on(\"remove\", (event) => {\n        if (\n          this.Editor.selectControl &&\n          this.Editor.selectControl.SelectObjects.includes(event.target as any)\n        )\n          this.Editor.selectControl.clearSelect(true);\n      }),\n      () => {\n        window.removeEventListener(\"resize\", callback);\n      },\n      () => {\n        this.Viewer.sceneControl.ToggleShadowObserable.remove(observer);\n      }\n    );\n  }\n}\n","import { ILoadingScreen } from \"../babylon\";\n\nclass CustomLoadingScreen implements ILoadingScreen {\n  //optional, but needed due to interface definitions\n  public loadingUIBackgroundColor: string;\n  public loadingUIText: string;\n  constructor() {}\n  public displayLoadingUI() {\n    console.log(\"开始加载\");\n    this.displayLoadingUIEvnet();\n  }\n  displayLoadingUIEvnet() {\n    //inject\n  }\n\n  public hideLoadingUI() {\n    this.hideLoadingUIEvent();\n    console.log(\"加载结束\");\n  }\n  hideLoadingUIEvent() {\n    //inject\n  }\n}\n\nexport const customLoadingScreen = new CustomLoadingScreen();\n","import { IScreenshotSize } from \"@babylonjs/core/Misc/interfaces/screenshotSize\";\nimport { customLoadingScreen } from \"./CustomLoadingScreen\";\nimport {\n  ArcRotateCamera,\n  Color3,\n  Color4,\n  Engine,\n  FilesInput,\n  FilesInputStore,\n  FramingBehavior,\n  ISceneLoaderProgressEvent,\n  Observable,\n  SceneLoader,\n  StandardMaterial,\n  Tools,\n  Scene,\n} from \"../babylon\";\nimport { b64toBlob } from \"../utils/utils\";\nimport { EnvironmentTools } from \"../utils/sceneEnv\";\n\nexport class FilePreviewer {\n  private filesInput: FilesInput;\n  private engine: Engine;\n  private scene: Scene;\n  private onFileLoadedObserver = new Observable<File>();\n  private onFileProgressObserver = new Observable<ISceneLoaderProgressEvent>();\n  private onFileErrorObserver = new Observable<{\n    file: File;\n    scene: any;\n    message: string;\n  }>();\n  private isRendered = false;\n  constructor(canvas: HTMLCanvasElement, private defaultEnv = false) {\n    this.engine = new Engine(canvas, false, {\n      premultipliedAlpha: false,\n      preserveDrawingBuffer: true,\n      antialias: false,\n    });\n\n    this.engine.loadingScreen = customLoadingScreen;\n\n    this.scene = new Scene(this.engine);\n\n    this.scene.clearColor = new Color4(1, 1, 1, 1);\n\n    this.scene.createDefaultCameraOrLight(true, true);\n    this.scene.useRightHandedSystem = true;\n    this.scene.activeCamera.maxZ = 1e8;\n\n    if (defaultEnv) {\n      this.createDefaultEnv();\n    }\n    this.scene.executeWhenReady(() => {\n      this.engine.hideLoadingUI();\n      this.engine.runRenderLoop(() => {\n        if (this.scene.activeCamera) this.scene.render();\n      });\n    });\n\n    FilesInputStore.FilesToLoad = new Proxy(FilesInputStore.FilesToLoad, {\n      get(obj, prop: string) {\n        return obj[prop];\n      },\n      set(obj, prop: string, value) {\n        obj[prop] = value;\n        return true;\n      },\n    });\n\n    let filesInput = new FilesInput(\n      this.engine,\n      null,\n      (sceneFile, scene) => {\n        this.scene = scene;\n        const isGLTF =\n          sceneFile.name.endsWith(\".glb\") || sceneFile.name.endsWith(\".gltf\");\n        this.prepareCamera(isGLTF);\n        (scene.materials as StandardMaterial[]).forEach((m) => {\n          m.diffuseColor = Color3.White();\n          m.backFaceCulling = false;\n          m.emissiveColor = Color3.Black();\n        });\n        this.onFileLoadedObserver.notifyObservers(sceneFile);\n      },\n      (e) => {\n        this.onFileProgressObserver.notifyObservers(e);\n      },\n      () => {\n        this.isRendered = true;\n      },\n      (r) => {},\n      (fs) => {},\n      null,\n      (file, scene, message) => {\n        this.onFileErrorObserver.notifyObservers({ file, scene, message });\n      }\n    );\n\n    this.filesInput = filesInput;\n  }\n  prepareCamera(isGLTF = false) {\n    this.scene.createDefaultCameraOrLight(true, true);\n    this.scene.activeCamera.maxZ = 1e8;\n\n    const camera = this.scene.activeCamera as ArcRotateCamera;\n\n    if (this.defaultEnv && !this.scene.metadata) {\n      this.createDefaultEnv();\n    }\n\n    camera.useFramingBehavior = true;\n\n    const framingBehavior = camera.getBehaviorByName(\n      \"Framing\"\n    ) as FramingBehavior;\n    framingBehavior.framingTime = 0;\n    framingBehavior.elevationReturnTime = -1;\n\n    if (this.scene.meshes.length) {\n      camera.lowerRadiusLimit = null;\n\n      const worldExtends = this.scene.getWorldExtends(function (mesh) {\n        return (\n          mesh.isVisible &&\n          mesh.isEnabled() &&\n          mesh[\"geometry\"] &&\n          mesh.name !== \"hdrSkyBox\"\n        );\n      });\n      framingBehavior.zoomOnBoundingInfo(worldExtends.min, worldExtends.max);\n      camera.useFramingBehavior = false;\n    }\n\n    camera.pinchPrecision = 200 / camera.radius;\n    camera.upperRadiusLimit = 5 * camera.radius;\n\n    camera.wheelDeltaPercentage = 0.01;\n    camera.pinchDeltaPercentage = 0.01;\n\n    camera.attachControl();\n\n    camera.alpha = Math.PI / 4;\n    camera.beta = Math.PI / 3;\n  }\n  loadLocalFile(evt: any) {\n    this.isRendered = false;\n    this.filesInput.loadFiles(evt);\n  }\n  async loadFile(url: string) {\n    this.disposeImportMeshes();\n    try {\n      this.isRendered = false;\n      const assets = await SceneLoader.LoadAssetContainerAsync(\n        url,\n        \"\",\n        this.scene\n      );\n      assets.addAllToScene();\n\n      this.prepareCamera();\n      (assets.materials as StandardMaterial[]).forEach((m) => {\n        m.diffuseColor = Color3.White();\n        m.backFaceCulling = false;\n        m.emissiveColor = Color3.Black();\n      });\n      return true;\n    } catch (err) {\n      return false;\n    } finally {\n      this.isRendered = true;\n    }\n  }\n  async getPreviewUrl(size: number | IScreenshotSize = 400): Promise<string> {\n    await this.waitRendered();\n    return Tools.CreateScreenshotAsync(\n      this.engine,\n      this.scene.activeCamera,\n      size\n    );\n  }\n  async getBlob() {\n    this.scene.clearColor = new Color4(1, 1, 1, 1);\n    await this.waitRendered();\n    const data = await this.getPreviewUrl();\n    return b64toBlob(data);\n  }\n  async waitRendered() {\n    return new Promise((res) => {\n      let timer = setInterval(() => {\n        if (this.isRendered) {\n          clearInterval(timer);\n          res(null);\n        }\n      }, 100);\n    });\n  }\n  onLoaded(callback: (file: File) => void) {\n    const observer = this.onFileLoadedObserver.add(callback);\n    return () => {\n      this.onFileLoadedObserver.remove(observer);\n    };\n  }\n  onError(callback: ({ file, message }) => void) {\n    const observer = this.onFileErrorObserver.add(callback);\n    return () => {\n      this.onFileErrorObserver.remove(observer);\n    };\n  }\n  onProgress(callback: (e) => void) {\n    const observer = this.onFileProgressObserver.add(callback);\n    return () => {\n      this.onFileProgressObserver.remove(observer);\n    };\n  }\n  destory() {\n    this.filesInput.dispose();\n    this.onFileLoadedObserver.clear();\n    this.engine.dispose();\n  }\n  disposeImportMeshes() {\n    for (const n of this.scene.rootNodes) {\n      if (n.name === \"__root__\") {\n        n.dispose(false, true);\n      }\n    }\n  }\n  createDefaultEnv() {\n    this.scene.environmentTexture = EnvironmentTools.LoadSkyboxPathTexture(\n      this.scene\n    );\n    if (this.scene.activeCamera)\n      this.scene.createDefaultSkybox(\n        this.scene.environmentTexture,\n        true,\n        1e8,\n        0.3,\n        false\n      );\n    this.scene.metadata = \"ok\";\n  }\n}\n","import { CreateSphere } from \"@babylonjs/core/Meshes/Builders/sphereBuilder\";\nimport { AppStore } from \"../app\";\nimport { CreateBox, CreatePlane, Mesh } from \"../babylon\";\nimport { Database } from \"../database\";\nimport { MaterialRecord } from \"../record/MaterialRecord\";\nimport { PBRMaterialRecord } from \"../record/PBRMaterialRecord\";\nimport { Viewer } from \"./Viewer\";\n\nexport class MaterialViewer {\n  viewer: Viewer;\n  TempDatabase = new Database(false);\n  private showObjects: Mesh[] = [];\n  private showIndex = 0;\n  private _material: MaterialRecord;\n  constructor(public canvas: HTMLCanvasElement) {\n    this.viewer = new Viewer(canvas, true, { defaultLight: true });\n    this.viewer.sceneControl.createDefaultEnv();\n    this.viewer.cameraManager.Radius = 2;\n    this.viewer.cameraManager.ArcRotateControl.LowerRadiusLimit = 1.5;\n    this.viewer.sceneControl.BlockMaterialUpdate = false;\n    this.showObjects.push(\n      CreateSphere(\"show-sphere\", { diameter: 1 }, this.scene),\n      CreateBox(\"show-box\", { size: 1 }, this.scene),\n      CreatePlane(\"show-plane\", { size: 1 }, this.scene)\n    );\n\n    this.toggleObject();\n  }\n  init(mtl?: PBRMaterialRecord) {\n    if (!mtl) {\n      mtl = new PBRMaterialRecord();\n      this.TempDatabase.MaterialTable.append(mtl);\n    }\n    this.Material = mtl;\n  }\n  get scene() {\n    return this.viewer.Scene;\n  }\n  get Material() {\n    return this._material;\n  }\n  set Material(mtl: MaterialRecord) {\n    AppStore.ToggleScene(this.scene, () => {\n      if (mtl.DB === this.TempDatabase) {\n        this._material = mtl;\n      } else {\n        if (!mtl.DB) {\n          this.TempDatabase.MaterialTable.append(mtl);\n          this._material = mtl;\n        } else {\n          const newMTL = this.TempDatabase.cloneBlockObjects(\n            [mtl],\n            this.TempDatabase.MaterialTable,\n            new Map()\n          )[0] as MaterialRecord;\n          this._material = newMTL;\n        }\n      }\n      this.update();\n    });\n  }\n  get ShowIndex() {\n    return this.showIndex;\n  }\n  set ShowIndex(i: number) {\n    this.showIndex = i;\n    this.toggleObject();\n  }\n  destory() {\n    this.viewer.destory();\n  }\n  debugger(config: any = {}) {\n    this.viewer.sceneControl.debugger(config);\n  }\n  update() {\n    for (const o of this.showObjects) o.material = this._material.Material;\n  }\n  async waitRender() {\n    if (this.Material instanceof PBRMaterialRecord)\n      await this.Material.waitRender();\n\n    return true;\n  }\n  toJSON() {\n    const db = new Database();\n    db.cloneBlockObjects([this.Material], db.MaterialTable, new Map());\n    return db.writeFile().Data;\n  }\n  private toggleObject() {\n    for (let i = 0; i < this.showObjects.length; i++) {\n      this.showObjects[i].setEnabled(i === this.showIndex);\n    }\n  }\n}\n","import { Command } from \"./CommandManager\";\nimport { Application } from \"./../app/Application\";\n\nexport class UndoCommand implements Command {\n  noHistory = true;\n  exec() {\n    Application.Intance.Database.HistoryManager.undo();\n  }\n}\nexport class RedoCommand implements Command {\n  noHistory = true;\n  exec() {\n    Application.Intance.Database.HistoryManager.redo();\n  }\n}\n","import { Application } from \"../app/Application\";\nimport { AppEvent } from \"../core/AppEvent\";\n\nexport interface Command {\n  noHistory?: boolean;\n  exec(): any; //函数可以返回true,实现放弃命令的任何操作.\n}\n\n/*命令管理*/\nexport class CommandManager {\n  //命令表\n  CommandMap: Map<string, Command> = new Map<string, Command>();\n  LastCmd: string;\n  private _CommandNameList = new Set<string>();\n  doing = false;\n  async ExecCommand(cmdName: string) {\n    if (this.CommandMap.has(cmdName)) {\n      let cmd = this.CommandMap.get(cmdName);\n\n      //在透明命令判断完成,避免无法运行透明命令\n      if (this.doing) {\n        return;\n      }\n\n      this.CommandStart(cmdName, cmd.noHistory);\n\n      let abort = true;\n      try {\n        abort = await cmd.exec();\n      } catch (error) {\n        AppEvent.trigger({ type: \"error\", target: null, error });\n        console.log(\"error: \", error);\n      }\n      await this.CommandEnd(cmd.noHistory);\n    } else {\n      console.error(\"未知命令\");\n    }\n  }\n\n  RegisterCommand(cmdName: string, cmd: Command) {\n    cmdName = cmdName.toUpperCase();\n    this.CommandMap.set(cmdName, cmd);\n    this._CommandNameList.add(cmdName);\n  }\n  RemoveCommand(cmdName: string) {\n    if (!cmdName) return;\n    cmdName = cmdName.toUpperCase();\n    this.CommandMap.delete(cmdName);\n    this._CommandNameList.delete(cmdName);\n  }\n  /**\n   * 意味着命令开始,系统将会帮你初始化一些事情.\n   * @param cmdName\n   * @returns 命令开始状态,如果成功返回true.\n   */\n  CommandStart(cmdName: string, noHistory = false): boolean {\n    if (this.doing) {\n      return false;\n    }\n    this.LastCmd = cmdName;\n\n    this.doing = true;\n    if (!noHistory)\n      Application.Intance.Database.HistoryManager.startCmd(cmdName);\n    return true;\n  }\n\n  /**\n   * 意味着命令结束了,调用这个,系统会帮你做一些事情\n   */\n  async CommandEnd(noHistory = false) {\n    //还原状态\n    this.doing = false;\n    if (!noHistory) Application.Intance.Database.HistoryManager.endCmd();\n  }\n\n  get CommandNameList(): Set<string> {\n    return this._CommandNameList;\n  }\n}\n\nexport const commandManager = new CommandManager();\n","import { UndoCommand, RedoCommand } from \"./undo\";\nimport { Command, commandManager } from \"./CommandManager\";\n\nexport function registerCommand(cmds: [string, Command][] = []) {\n  commandManager.RegisterCommand(\"undo\", new UndoCommand());\n  commandManager.RegisterCommand(\"redo\", new RedoCommand());\n\n  for (const cmd of cmds) {\n    commandManager.RegisterCommand(cmd[0], cmd[1]);\n  }\n}\n","import { commandManager } from \"./CommandManager\";\n\n/**\n * 命令包装器\n ** 注意，这个包装器是异步的\n * @param exec\n * @param cmdName\n * @returns\n */\nexport async function CommandWrap(\n  exec: () => boolean | void | undefined,\n  cmdName = \"\"\n) {\n  if (!commandManager.CommandStart(cmdName)) return;\n\n  let abort = true;\n  try {\n    const status = await exec();\n    if (typeof status === \"boolean\") {\n      abort = status;\n    } else abort = false;\n  } catch (error) {\n    console.log(\"error: \", error);\n  }\n  await commandManager.CommandEnd(abort);\n}\n","import { Factory, HCFiler, ObjectId } from \"@hc/core\";\nimport { AppStore } from \"../app/AppStore\";\nimport { StandardMaterial } from \"../babylon\";\nimport { Entity } from \"../entitys/Entity\";\nimport { autoRecordMaterialFilter } from \"./autoRecord\";\nimport { MaterialRecord } from \"./MaterialRecord\";\nimport { TextureRecord } from \"./TextureRecord\";\nimport { initTextureISNull, setTexture } from \"./utils\";\n\n@Factory\nexport class StandardMaterialRecord extends MaterialRecord<StandardMaterial> {\n  static type = \"StandardMaterialRecord\";\n  protected _name = \"标准材质\";\n  //漫反射纹理\n  @autoRecordMaterialFilter(initTextureISNull, setTexture)\n  DiffuseTexture: ObjectId<TextureRecord>;\n\n  constructor(mtl?: StandardMaterial, entity?: Entity) {\n    super(mtl, entity);\n    if (!mtl) {\n      this.material = new StandardMaterial(\"标准材质\", AppStore.Scene);\n      this.updateMaterial();\n    }\n    this.init = false;\n    if (!this.material.metadata) this.material.metadata = {};\n    this.material.metadata.record = this;\n  }\n  updateMaterial() {\n    if (!this.material) return;\n    super.updateMaterial();\n    // this.material.freeze();\n\n    // this.material.unfreeze();\n  }\n  updateTextures() {\n    if (this.DiffuseTexture?.Object) {\n      const txr = this.DiffuseTexture.Object as TextureRecord;\n      this.material.diffuseTexture = txr.Texture;\n    }\n  }\n  update() {\n    super.update();\n    this.updateTextures();\n  }\n  writeFile(file: HCFiler) {\n    super.writeFile(file);\n    file.write(1);\n    file.writeObjectId(this.DiffuseTexture);\n  }\n  readFile(file: HCFiler) {\n    super.readFile(file);\n    const ver = file.read();\n    this.DiffuseTexture = file.readObjectId() as ObjectId<TextureRecord>;\n\n    this.update();\n  }\n  _SetOwnerDatabase(db) {\n    super._SetOwnerDatabase(db);\n    this.material.name = `standardmtl-${this.Id}`;\n    this.material.id = `standardmtl-${this.Id}`;\n    return this;\n  }\n}\n","import { Action } from \"./Actions\";\nimport { ObjectId, IVector3 } from \"@hc/core\";\nimport { Entity } from \"./../entitys/Entity\";\n\nexport class MoveAction extends Action {\n  animateType = \"\";\n  isOffset = true;\n  time = 1;\n  constructor(\n    private entitys: ObjectId[] = [],\n    private target: IVector3 = { x: 0, y: 0, z: 0 }\n  ) {\n    super();\n  }\n  do(): Promise<unknown[]> {\n    const fs: Promise<unknown>[] = [];\n    for (const entity of this.entitys) {\n      const en = entity.Object as Entity;\n      fs.push(en.moveTo(this.target, this.isOffset, { time: 1 }));\n    }\n    return Promise.all(fs);\n  }\n}\n","export class Action {\n  do(): Promise<unknown> {\n    return;\n  }\n}\n","import { PBRMaterial } from \"@babylonjs/core/Materials/PBR/pbrMaterial\";\n\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\n\nimport { AppStore } from \"../app/AppStore\";\nimport { Animatable, Animation, Color3, IAnimationKey } from \"../babylon\";\nimport { Entity } from \"../entitys\";\nimport { MaterialRecord } from \"../record\";\nimport { IAnimation, IMaterialAnimationOption } from \"../types/animation.types\";\nimport { removeOne } from \"../utils\";\n\n@Factory\nexport class MaterialAnimation implements IAnimation {\n  static type = \"MaterialAnimation\";\n  #name = \"材质动画\";\n  private _animatable: Animatable;\n  private _animation: Animation;\n  constructor(\n    private mtl?: string | ObjectId<MaterialRecord>,\n    private options?: IMaterialAnimationOption\n  ) {\n    this.init();\n  }\n  get Material() {\n    if (!this.mtl) return;\n    if (typeof this.mtl === \"string\") {\n      return Entity.Scene.getMaterialById(this.mtl) as PBRMaterial;\n    } else {\n      return this.mtl.Object?.Material;\n    }\n  }\n  get name() {\n    return this.#name;\n  }\n  set name(v: string) {\n    this.#name = v;\n    if (this._animation) {\n      this._animation.name = v;\n    }\n  }\n  get Animatable() {\n    return this._animatable;\n  }\n  get Animation() {\n    return this._animation;\n  }\n  init() {\n    const mtl = this.Material;\n\n    if (!mtl) return;\n\n    this.clear();\n\n    const options = this.options;\n    if (!options) return;\n\n    const {\n      name,\n      frame = 30,\n      defaultStart = false,\n      range = [0, 1],\n      dataType,\n    } = options;\n\n    if (name) this.#name = name;\n\n    const animate = new Animation(\n      this.#name,\n      options.targetKey,\n      options.frame ?? 30,\n      dataType ?? Animation.ANIMATIONTYPE_FLOAT\n    );\n\n    const keyFrames: IAnimationKey[] = this.generateKeys();\n\n    animate.setKeys(keyFrames);\n    if (!mtl.animations) {\n      mtl.animations = [];\n    }\n    mtl.animations.push(animate);\n\n    this._animation = animate;\n\n    if (defaultStart && AppStore.PreviewMode) {\n      this.start();\n    }\n  }\n  start() {\n    const { time = 1, frame = 30, loop = true, speed = 1 } = this.options;\n    this._animatable = Entity.Scene.beginDirectAnimation(\n      this.Material,\n      [this.Animation],\n      0,\n      time * frame,\n      loop,\n      speed\n    );\n  }\n  pause() {\n    if (this._animatable) {\n      this._animatable.pause();\n    }\n  }\n  restart() {\n    if (this._animatable) {\n      this._animatable.restart();\n    }\n  }\n  stop() {\n    if (this._animatable) {\n      this._animatable.stop();\n    }\n  }\n  reset() {\n    if (this._animatable) {\n      this._animatable.reset();\n    }\n  }\n  clear() {\n    const renderObject = this.Material;\n    if (renderObject) {\n      if (this._animatable) {\n        this._animatable.disposeOnEnd = true;\n        this._animatable.stop();\n        this._animatable = null;\n      }\n      if (this._animation) removeOne(renderObject.animations, this._animation);\n    }\n  }\n  writeFile(file: HCFiler) {\n    file.write(1);\n\n    file.write(typeof this.mtl === \"string\");\n    if (typeof this.mtl === \"string\") {\n      file.write(this.mtl);\n    } else {\n      file.writeHardObjectId(this.mtl);\n    }\n    file.write(this.name);\n    file.write(this.options);\n  }\n  readFile(file: HCFiler) {\n    file.read(); // 版本\n    let isStr = file.read();\n    if (isStr) {\n      this.mtl = file.read();\n    } else {\n      this.mtl = file.readHardObjectId() as any;\n    }\n    this.name = file.read();\n    this.options = file.read();\n\n    requestIdleCallback(() => {\n      this.init();\n    });\n  }\n  private getValue() {\n    const strs = this.options.targetKey.split(\".\");\n    let object: any = this.Material;\n    for (const k of strs) {\n      object = object[k];\n    }\n    return object;\n  }\n  private generateKeys() {\n    const {\n      time = 1,\n      frame = 30,\n      range = [0, 1],\n      dataType = Animation.ANIMATIONTYPE_FLOAT,\n    } = this.options;\n    switch (dataType) {\n      case Animation.ANIMATIONTYPE_FLOAT:\n        return [\n          {\n            frame: 0,\n            value: range[0],\n          },\n          {\n            frame: time * frame,\n            value: range[1],\n          },\n        ];\n      case Animation.ANIMATIONTYPE_COLOR3:\n        return [\n          {\n            frame: 0,\n            value: Color3.FromHexString(range[0] as string),\n          },\n          {\n            frame: time * frame,\n            value: Color3.FromHexString(range[1] as string),\n          },\n        ];\n      default:\n        return [];\n    }\n  }\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { updateQueryStringParameter } from \"../../utils\";\n\n@Factory\nexport class Open extends BaseWidget {\n  static type = \"Open\";\n  static schema = {\n    label: \"打开链接\",\n  };\n  data = {\n    type: \"url\",\n    value: \"\",\n    target: \"_blank\",\n  };\n  do() {\n    switch (this.data.type) {\n      case \"url\":\n        this.openUrl(this.data.value);\n        break;\n      case \"file\":\n        this.openUrl(\n          updateQueryStringParameter(location.href, \"id\", this.data.value) +\n            \"&time=\" +\n            Date.now()\n        );\n        break;\n      case \"back\":\n        history.back();\n        break;\n      case \"reload\":\n        location.reload();\n        break;\n    }\n    return true;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this.data = JSON.parse(filer.read());\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.write(JSON.stringify(this.data));\n  }\n  toJSON() {\n    return { ...this.data };\n  }\n  fromJSON(data: any): void {\n    Object.assign(this.data, data);\n  }\n  private openUrl(url: string) {\n    const id = \"OpenWidgetHref\";\n\n    let a = document.getElementById(id);\n\n    if (!a) {\n      a = document.createElement(\"a\");\n      document.body.appendChild(a);\n      a.setAttribute(\"id\", id);\n    }\n    a.setAttribute(\"target\", this.data.target);\n    a.setAttribute(\"href\", url);\n    a.click();\n  }\n}\n","import type { Entity } from \"../../entitys/Entity\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Factory, HCFiler, ObjectId, IVector3 } from \"@hc/core\";\nimport { MoveType } from \"../../types/interaction.types\";\n\nexport interface IMoveItemProps {\n  objectId: ObjectId<Entity>;\n  type: MoveType;\n  animationType: string;\n  time: number;\n  target: IVector3;\n}\n\n@Factory\nexport class Move extends BaseWidget {\n  static type = \"Move\";\n  static schema = {\n    label: \"移动\",\n  };\n  private _list: IMoveItemProps[] = [];\n  get List() {\n    return [...this._list];\n  }\n  async do() {\n    console.log(\"执行:移动\");\n    const ps: Promise<unknown>[] = [];\n    for (const data of this._list) {\n      const en = data.objectId.Object;\n      if (!en) continue;\n      ps.push(\n        en.moveTo(data.target, data.type === MoveType.Offset, {\n          time: data.time,\n          startTime: this.startTime,\n        })\n      );\n    }\n    return Promise.all(ps).then((rs) => {\n      return true;\n    });\n  }\n  add(data: IMoveItemProps) {\n    this._list.push(data);\n  }\n  fromJSON(data: any[]) {\n    this._list.length = 0;\n    for (const d of data) {\n      this._list.push({\n        objectId: d.objectId,\n        time: d.time,\n        target: d.target,\n        type: d.type,\n        animationType: d.animationType,\n      });\n    }\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    const count = filer.read();\n    this._list.length = 0;\n    for (let i = 0; i < count; i++) {\n      const data: Partial<IMoveItemProps> = { target: { x: 0, y: 0, z: 0 } };\n      data.objectId = filer.readObjectId() as ObjectId<Entity>;\n      data.type = filer.read();\n      data.target.x = filer.read();\n      data.target.y = filer.read();\n      data.target.z = filer.read();\n      data.time = filer.read();\n      data.animationType = filer.read();\n      this._list.push(data as IMoveItemProps);\n    }\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.write(this._list.length);\n    for (const data of this._list) {\n      filer.writeObjectId(data.objectId);\n      filer.write(data.type);\n      filer.write(data.target.x);\n      filer.write(data.target.y);\n      filer.write(data.target.z);\n      filer.write(data.time);\n      filer.write(data.animationType);\n    }\n  }\n}\n","const tempEval = eval;\n\n//TODO:表达式合法性验证\n\nexport function evalExpr(\n  expr: string,\n  params?: Record<string, string | number>\n): number {\n  if (!expr) return 0;\n\n  let code = \"\";\n  if (params) for (let name in params) code += `let ${name} = ${params[name]};`;\n\n  code += expr;\n\n  let result = tempEval(code);\n\n  if (typeof result === \"function\") return result();\n\n  return Number(result);\n}\n","import { Factory, HCFiler, ObjectId } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Entity } from \"../../entitys/Entity\";\nimport { MoveType } from \"../../types/interaction.types\";\nimport { evalExpr } from \"../../utils/eval\";\n\nexport interface IRotateItemProps {\n  objectId: ObjectId<Entity>;\n  animationType: string;\n  time: number;\n  angle: number;\n  type: MoveType;\n  dir: 0 | 1;\n  pivot: { x: string; y: string; z: string };\n  axis: { x: string; y: string; z: string };\n}\n\n@Factory\nexport class Rotate extends BaseWidget {\n  static type = \"Rotate\";\n  static schema = {\n    label: \"旋转\",\n  };\n  private _List: IRotateItemProps[] = [];\n\n  get List() {\n    return [...this._List];\n  }\n  async do() {\n    const ps: Promise<unknown>[] = [];\n    console.log(\"rotate\");\n    for (const data of this._List) {\n      const en = data.objectId.Object;\n      if (!en) continue;\n\n      const size = en.BoundingBox.extendSize.scale(2);\n      const param2 = {\n        x: size.x,\n        X: size.x,\n        y: size.y,\n        Y: size.y,\n        z: size.z,\n        Z: size.z,\n      };\n      const pivot = {\n        x: evalExpr(data.pivot.x, param2),\n        y: evalExpr(data.pivot.y, param2),\n        z: evalExpr(data.pivot.z, param2),\n      };\n      const axis = {\n        x: parseFloat(data.axis.x) || 0,\n        y: parseFloat(data.axis.y) || 0,\n        z: parseFloat(data.axis.z) || 0,\n      };\n\n      ps.push(\n        en.rotateTo({\n          angle: data.dir === 0 ? data.angle * -1 : data.angle,\n          time: data.time,\n          isOffset: data.type === MoveType.Offset,\n          animation: true,\n          pivot: pivot,\n          startTime: this.startTime,\n          dir: axis,\n        })\n      );\n    }\n    return Promise.all(ps).then((rs) => {\n      return true;\n    });\n  }\n  add(data: IRotateItemProps) {\n    this._List.push(data);\n  }\n  fromJSON(data: any[]): void {\n    console.log(\"data: \", data);\n    this._List.length = 0;\n    for (const d of data) {\n      this._List.push({\n        objectId: d.objectId,\n        time: d.time,\n        angle: d.angle,\n        type: d.type,\n        animationType: d.animationType,\n        dir: d.dir,\n        pivot: d.pivot,\n        axis: d.axis,\n      });\n    }\n  }\n  readFile(filer: HCFiler): void {\n    const ver = filer.read();\n    const count = filer.read();\n    this._List.length = 0;\n    for (let i = 0; i < count; i++) {\n      const data: Partial<IRotateItemProps> = {\n        pivot: { x: \"\", y: \"\", z: \"\" },\n        axis: { x: \"0\", y: \"1\", z: \"0\" },\n      };\n      data.objectId = filer.readObjectId() as ObjectId<Entity>;\n      data.type = filer.read();\n      data.time = filer.read();\n      data.animationType = filer.read();\n      data.angle = filer.read();\n      data.dir = filer.read();\n      data.pivot.x = filer.read();\n      data.pivot.y = filer.read();\n      data.pivot.z = filer.read();\n      if (ver > 1) {\n        data.axis.x = filer.read();\n        data.axis.y = filer.read();\n        data.axis.z = filer.read();\n      }\n      this._List.push(data as IRotateItemProps);\n    }\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(2);\n    filer.write(this._List.length);\n    for (const data of this._List) {\n      filer.writeObjectId(data.objectId);\n      filer.write(data.type);\n      filer.write(data.time);\n      filer.write(data.animationType);\n      filer.write(data.angle);\n      filer.write(data.dir);\n      filer.write(data.pivot.x);\n      filer.write(data.pivot.y);\n      filer.write(data.pivot.z);\n\n      filer.write(data.axis.x);\n      filer.write(data.axis.y);\n      filer.write(data.axis.z);\n    }\n  }\n}\n","import { Entity } from \"../..\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\n\nexport type DisplayType = \"Show\" | \"Hidden\" | \"Toggle\";\n\n@Factory\nexport class Display extends BaseWidget {\n  static type = \"Display\";\n  static schema = {\n    label: \"显示/隐藏\",\n  };\n  List: { type: DisplayType; objectId: ObjectId<Entity> }[] = [];\n\n  async do() {\n    for (const data of this.List) {\n      const { type, objectId } = data;\n      switch (type) {\n        case \"Show\":\n          objectId.Object.Visiable = true;\n          break;\n        case \"Hidden\":\n          objectId.Object.Visiable = false;\n          break;\n        case \"Toggle\":\n          objectId.Object.Visiable = !objectId.Object.Visiable;\n          break;\n        default:\n          break;\n      }\n    }\n    return true;\n  }\n  fromJSON(data: any): void {\n    this.List = data;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this.List.length = 0;\n    filer.readAnyArray(() => {\n      const data = {} as any;\n      data.type = filer.read();\n      data.objectId = filer.readObjectId();\n      this.List.push(data);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this.List, (o) => {\n      filer.write(o.type);\n      filer.writeObjectId(o.objectId);\n    });\n  }\n}\n","import { Vector3 } from \"../../babylon\";\nimport { Entity } from \"../..\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { evalExpr } from \"../../utils/eval\";\n\nexport interface IScaleItemProps {\n  objectId: ObjectId<Entity>;\n  type: string;\n  bySize: boolean;\n  animationType: string;\n  time: number;\n  scale: { x: string; y: string; z: string };\n  pivot: { x: string; y: string; z: string };\n}\n\n@Factory\nexport class Scale extends BaseWidget {\n  static type = \"Scale\";\n  static schema = {\n    label: \"缩放\",\n  };\n  private _List: IScaleItemProps[] = [];\n\n  get List() {\n    return [...this._List];\n  }\n\n  async do() {\n    const ps: Promise<unknown>[] = [];\n    console.log(\"scale\");\n    for (const data of this._List) {\n      const en = data.objectId.Object;\n      if (!en) continue;\n      let x: number, y: number, z: number;\n\n      const size = en.BoundingBox.extendSize.scale(2);\n      const origin = data.bySize\n        ? en.BoundingBox.extendSizeWorld.scale(2)\n        : en.Scale;\n      const param = {\n        x: origin.x,\n        X: origin.x,\n        y: origin.y,\n        Y: origin.y,\n        z: origin.z,\n        Z: origin.z,\n      };\n      const param2 = {\n        x: size.x,\n        X: size.x,\n        y: size.y,\n        Y: size.y,\n        z: size.z,\n        Z: size.z,\n      };\n      x = evalExpr(data.scale.x, param);\n      y = evalExpr(data.scale.y, param);\n      z = evalExpr(data.scale.z, param);\n      if (data.bySize) {\n        x /= origin.x;\n        y /= origin.y;\n        z /= origin.z;\n      }\n\n      const povit = {\n        x: evalExpr(data.pivot.x, param2),\n        y: evalExpr(data.pivot.y, param2),\n        z: evalExpr(data.pivot.z, param2),\n      };\n\n      ps.push(\n        en.scaleTo({\n          scale: new Vector3(x, y, z),\n          time: data.time,\n          animation: true,\n          isOffset: data.bySize,\n          pivot: povit,\n          startTime: this.startTime,\n        })\n      );\n    }\n    return Promise.all(ps).then((rs) => {\n      return true;\n    });\n  }\n  add(data: IScaleItemProps) {\n    this._List.push(data);\n  }\n  toJSON() {\n    return {};\n  }\n  fromJSON(data: any[]): void {\n    this._List.length = 0;\n    for (const d of data) {\n      this._List.push({\n        ...d,\n      });\n    }\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._List.length = 0;\n    filer.readAnyArray(() => {\n      const data: Partial<IScaleItemProps> = {\n        scale: { x: \"1\", y: \"1\", z: \"1\" },\n        pivot: { x: \"x/2\", y: \"y/2\", z: \"z/2\" },\n      };\n      data.objectId = filer.readObjectId() as ObjectId<Entity>;\n      data.scale.x = filer.read();\n      data.scale.y = filer.read();\n      data.scale.z = filer.read();\n      data.pivot.x = filer.read();\n      data.pivot.y = filer.read();\n      data.pivot.z = filer.read();\n      data.type = filer.read();\n      data.time = filer.read();\n      data.animationType = filer.read();\n      data.bySize = filer.read();\n      this._List.push(data as IScaleItemProps);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this._List, (data) => {\n      filer.writeObjectId(data.objectId);\n      filer.write(data.scale.x);\n      filer.write(data.scale.y);\n      filer.write(data.scale.z);\n      filer.write(data.pivot.x);\n      filer.write(data.pivot.y);\n      filer.write(data.pivot.z);\n      filer.write(data.type);\n      filer.write(data.time);\n      filer.write(data.animationType);\n      filer.write(data.bySize);\n    });\n  }\n}\n","import { AppStore } from \"../../app/AppStore\";\nimport { Factory, HCFiler, IVector3 } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\n\n@Factory\nexport class MoveCamera extends BaseWidget {\n  static type = \"MoveCamera\";\n  static schema = {\n    label: \"移动相机到\",\n  };\n  private current = false;\n  private _alpha: number;\n  private _beta: number;\n  private _radius: number;\n  private _target: IVector3 = { x: undefined, y: undefined, z: undefined };\n  private _time = 1000;\n\n  constructor() {\n    super();\n  }\n  async do() {\n    const animation = AppStore.MainViewer.cameraManager.Control.moveTo({\n      alpha: this._alpha,\n      beta: this._beta,\n      target: this._target,\n      radius: this._radius,\n      time: this._time,\n    });\n    await animation.start();\n    return true;\n  }\n  fromJSON(data: Record<string, any>) {\n    this._alpha = data.alpha ?? this._alpha;\n    this._beta = data.beta ?? this._beta;\n    this._radius = data.radius ?? this._radius;\n    this._target = data.target ?? this._target;\n    this._time = data.time ?? this._time;\n  }\n\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._alpha = filer.read();\n    this._beta = filer.read();\n    this._radius = filer.read();\n    this._target.x = filer.read();\n    this._target.y = filer.read();\n    this._target.z = filer.read();\n    this._time = filer.read();\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.write(this._alpha);\n    filer.write(this._beta);\n    filer.write(this._radius);\n    filer.write(this._target.x);\n    filer.write(this._target.y);\n    filer.write(this._target.z);\n    filer.write(this._time);\n  }\n}\n","import { AppStore } from \"../../app\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { ISetParam } from \"../../types/interaction.types\";\n\n@Factory\nexport class SetVariable extends BaseWidget {\n  static type = \"SetVariable\";\n  static schema = {\n    label: \"设置变量值\",\n  };\n  private list: ISetParam[] = [];\n  get List() {\n    return [...this.list];\n  }\n  do() {\n    for (const setPar of this.list) {\n      const par = AppStore.GlobalVariables.find((p) => p.key === setPar.key);\n      if (!par) continue;\n      if (setPar.value.type === \"value\") {\n        par.value = setPar.value.value;\n      } else if (setPar.value.type === \"param\") {\n        const targetPar = AppStore.GlobalVariables.find(\n          (p) => p.key === setPar.value.value\n        );\n        par.value = targetPar.value;\n      } else if (setPar.value.type === \"entity\") {\n        par.value = setPar.value.value.Object[setPar.value.entityKey];\n      }\n    }\n    localStorage.setItem(\"variables\", JSON.stringify(AppStore.GlobalVariables));\n    return true;\n  }\n  add(par: ISetParam) {\n    this.list.push(par);\n  }\n  fromJSON(data: any[]): void {\n    this.list = data;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this.list.length = 0;\n    filer.readAnyArray(() => {\n      const data: ISetParam = {\n        key: \"\",\n        value: { type: null, value: null },\n      };\n      data.key = filer.read();\n      filer.readWidgetValue(data.value);\n      this.list.push(data);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this.list, (a) => {\n      filer.write(a.key);\n      filer.writeWidgetValue(a.value);\n    });\n  }\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\n\n@Factory\nexport class Wait extends BaseWidget {\n  static type = \"Wait\";\n  static schema = {\n    label: \"等待\",\n  };\n  _time = 1000;\n  do() {\n    return new Promise((res) => setTimeout(res, this._time));\n  }\n  fromJSON(data: any): void {\n    this._time = data.time;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._time = filer.read();\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.write(this._time);\n  }\n}\n","import { Entity } from \"../..\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\n\nexport type SelectEnType = \"select\" | \"unSelect\" | \"toggle\";\n\n@Factory\nexport class Select extends BaseWidget {\n  static type = \"Select\";\n  static schema = {\n    label: \"设置选中\",\n  };\n  private _list: { type: SelectEnType; objectId: ObjectId<Entity> }[] = [];\n\n  constructor() {\n    super();\n  }\n  get List() {\n    return [...this._list];\n  }\n\n  async do() {\n    for (const data of this._list) {\n      switch (data.type) {\n        case \"select\":\n          data.objectId.Object.IsSelect = true;\n          break;\n        case \"unSelect\":\n          data.objectId.Object.IsSelect = false;\n          break;\n        case \"toggle\":\n          data.objectId.Object.IsSelect = !data.objectId.Object.IsSelect;\n          break;\n        default:\n          break;\n      }\n    }\n    return true;\n  }\n  fromJSON(data: any[]) {\n    this._list.length = 0;\n    for (const d of data) {\n      if (d.type && d.objectId)\n        this._list.push({ type: d.type, objectId: d.objectId });\n    }\n    return this;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._list.length = 0;\n    filer.readAnyArray(() => {\n      const data = { type: \"\", objectId: null } as any;\n      data.type = filer.read();\n      data.objectId = filer.readObjectId();\n      this._list.push(data);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this._list, (a) => {\n      filer.write(a.type);\n      filer.writeObjectId(a.objectId);\n    });\n  }\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\n\n@Factory\nexport class DataFeedback extends BaseWidget {\n  static type = \"DataFeedback\";\n  static schema = {\n    label: \"数据反馈\",\n  };\n  do() {\n    return true;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n  }\n}\n","import { Entity } from \"../..\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\n\n@Factory\nexport class Highlight extends BaseWidget {\n  static type = \"Highlight\";\n  static schema = {\n    label: \"显示高亮边框\",\n  };\n  private _list: { color: string; objectId: ObjectId<Entity> }[] = [];\n\n  get List() {\n    return [...this._list];\n  }\n  async do() {\n    for (const data of this._list) {\n      const en = data.objectId.Object;\n      en.highlight(data.color);\n    }\n    return true;\n  }\n  fromJSON(data: any[]): void {\n    this._list = data;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._list.length = 0;\n    filer.readAnyArray(() => {\n      const d = { color: \"\", objectId: null };\n      d.color = filer.read();\n      d.objectId = filer.readObjectId();\n      this._list.push(d);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this._list, (d) => {\n      filer.write(d.color);\n      filer.writeObjectId(d.objectId);\n    });\n  }\n}\n","import { WidgetValue, IVariableOption } from \"./../types/interaction.types\";\n\nexport function getWidgetValue(\n  wgValue: WidgetValue,\n  variables: IVariableOption[] = []\n) {\n  if (!wgValue) return;\n  if (wgValue.type === \"value\") {\n    return wgValue.value;\n  } else if (wgValue.type === \"param\") {\n    const targetPar = variables.find((p) => p.key === wgValue.value);\n    return targetPar?.value;\n  } else if (wgValue.type === \"entity\") {\n    switch (wgValue.entityKey) {\n      default:\n        return wgValue.value?.Object?.[wgValue.entityKey];\n    }\n  }\n  return;\n}\n\nexport function getEventName(eventName: string) {\n  if (eventName === \"RightClick\" || eventName === \"Click\") {\n    return \"pointerTap\";\n  }\n\n  if (eventName === \"Load\") return \"load\";\n  return eventName;\n}\n","import { Entity } from \"./../../entitys/Entity\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { AppEvent } from \"../../core/AppEvent\";\nimport { getEventName } from \"../../utils/interactionUtils\";\n\n@Factory\nexport class Dispatch extends BaseWidget {\n  static type = \"Dispatch\";\n  static schema = {\n    label: \"触发事件\",\n  };\n  private _list: { triggerNames: string[]; objectId: ObjectId<Entity> }[] = [];\n  get List() {\n    return [...this._list];\n  }\n  do() {\n    console.log(\"%c 执行:触发事件\", \"color:#ff00ff\");\n    for (const data of this._list) {\n      const en = data.objectId?.Object;\n      if (en) {\n        data.triggerNames.forEach((n) => {\n          const eventData = {\n            ...this.getTriggerEvent(n),\n            type: getEventName(n),\n            target: en,\n          };\n          en.trigger(eventData);\n        });\n      } else {\n        data.triggerNames.forEach((n) => {\n          const eventData = this.getTriggerEvent(n);\n          AppEvent.trigger(eventData);\n        });\n      }\n    }\n    return true;\n  }\n  fromJSON(data: any): void {\n    this._list = data;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this._list.length = 0;\n    filer.readAnyArray(() => {\n      let data = { triggerNames: [], objectId: null };\n      filer.readAnyArrayAndPush(data.triggerNames, filer.read);\n      data.objectId = filer.readObjectId();\n      this._list.push(data);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this._list, (d) => {\n      filer.writeAnyArray(d.triggerNames, filer.write);\n      filer.writeObjectId(d.objectId);\n    });\n  }\n  private getTriggerEvent(\n    n: string,\n    target?: any\n  ): {\n    type: string;\n    target: any;\n    event?: any;\n    isEnd?: boolean;\n    isChild: boolean;\n  } {\n    switch (n) {\n      case \"Click\":\n        return {\n          type: \"pointerTap\",\n          event: { button: 0 },\n          isChild: true,\n          target,\n        };\n      case \"RightClick\":\n        return {\n          type: \"pointerTap\",\n          event: { button: 2 },\n          isChild: true,\n          isEnd: true,\n          target,\n        };\n      case \"DoubleClick\":\n        return {\n          type: \"pointerDoubleTap\",\n          event: { button: 0 },\n          isChild: true,\n          target,\n        };\n      case \"Load\":\n        return {\n          type: \"loadFile\",\n          isChild: true,\n          target,\n        };\n      default:\n        return {\n          type: n,\n          target,\n          isChild: true,\n        };\n    }\n  }\n}\n","import { Entity } from \"../..\";\nimport { Factory, HCFiler, ObjectId } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\n\n@Factory\nexport class Opacity extends BaseWidget {\n  static type = \"Opacity\";\n  static schema = {\n    label: \"设置不透明\",\n  };\n  List: {\n    opacity: number;\n    time: number;\n    animationType: string;\n    objectId: ObjectId<Entity>;\n  }[] = [];\n\n  async do() {\n    const pros: Promise<unknown>[] = [];\n    for (const data of this.List) {\n      const en = data.objectId?.Object;\n      if (!en) continue;\n      pros.push(en.opacityTo({ ...data, startTime: this.startTime }));\n    }\n    return Promise.all(pros);\n  }\n  fromJSON(data: any): void {\n    this.List = data;\n  }\n  readFile(filer: HCFiler): void {\n    filer.read();\n    this.List.length = 0;\n    filer.readAnyArray(() => {\n      const data = {} as any;\n      data.opacity = filer.read();\n      data.time = filer.read();\n      data.animationType = filer.read();\n      data.objectId = filer.readObjectId();\n      this.List.push(data);\n    });\n  }\n  writeFile(filer: HCFiler): void {\n    filer.write(1);\n    filer.writeAnyArray(this.List, (o) => {\n      filer.write(o.opacity);\n      filer.write(o.time);\n      filer.write(o.animationType);\n      filer.writeObjectId(o.objectId);\n    });\n  }\n}\n","import { ActionManagerType } from \"./../types/event\";\nimport { AppStore } from \"../app/AppStore\";\nimport { Factory, HCFiler, ObjectId, BaseObject, IEvent } from \"@hc/core\";\nimport { BaseWidget } from \"../core/BaseWidget\";\nimport { Entity } from \"../entitys/Entity\";\nimport { Wait } from \".\";\nimport { getEventName } from \"../utils/interactionUtils\";\nimport { Database } from \"../database\";\n\nexport type TriggerType =\n  | \"Click\"\n  | \"DoubleClick\"\n  | \"RightClick\"\n  | \"KeyDown\"\n  | \"KeyUp\"\n  | \"Load\"\n  | \"SelfEvent\"\n  | string;\n\n/**\n * 交互流程\n *\n * @export\n * @class Interaction\n * @extends {BaseObject}\n */\n@Factory\nexport class Interaction extends BaseObject {\n  static type = \"Interaction\";\n  private list: BaseWidget[] = [];\n  private _cleaners: (() => void)[] = [];\n  constructor(\n    private _triggerType: TriggerType,\n    private target: ObjectId<Entity> = null\n  ) {\n    super();\n    this.watch();\n  }\n  get DB(): Database {\n    return this._db as Database;\n  }\n  /**触发事件类型 */\n  get TriggerType() {\n    return this._triggerType;\n  }\n  /**\n   * 动作列表\n   * @memberof Interaction\n   */\n  get List() {\n    return [...this.list];\n  }\n  set List(v: BaseWidget[]) {\n    this.list = v;\n  }\n  /**\n   * 触发事件的实体\n   *\n   * @readonly\n   * @memberof Interaction\n   */\n  get Target() {\n    return this.target;\n  }\n  /**\n   * 执行动作列表\n   * @returns\n   */\n  async do() {\n    const promises: Promise<unknown>[] = [];\n    let startTime = 0;\n\n    for (const rpa of this.list) {\n      if (this.DB.InteractionTable.Pause) {\n        await this.DB.InteractionTable.wait();\n        await Promise.all(promises).then((res) => {\n          promises.length = 0;\n        });\n      }\n\n      //如果等待元件，先执行完毕\n      if (rpa.Type === \"Wait\") {\n        await rpa.do();\n        startTime += (rpa as Wait)._time / 1000;\n      } else {\n        if (rpa.IsContainer) {\n          const status = await rpa.do();\n          if (status) {\n            return;\n          }\n        } else {\n          rpa.startTime = startTime;\n          promises.push(rpa.do() as Promise<unknown>);\n        }\n      }\n    }\n\n    return Promise.all(promises).then((res) => {\n      console.log(\"res: \", res);\n    });\n  }\n  /**添加元件 */\n  add(act: BaseWidget) {\n    this.list.push(act);\n  }\n  destory(): void {\n    super.destory();\n    this.clearWatch();\n    for (const o of this.list) {\n      o.destory();\n    }\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n    this._triggerType = filer.read();\n    filer.readAnyArrayAndPush(this.list, filer.readObject);\n    this.target = filer.readObjectId() as ObjectId<Entity>;\n\n    //延迟监听，因为实体需要等文件加载好 才添加到场景\n    setTimeout(() => {\n      this.watch();\n    }, 0);\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.write(this._triggerType);\n    filer.writeAnyArray(this.list, filer.writeObject);\n    filer.writeObjectId(this.target);\n  }\n  private clearWatch() {\n    this._cleaners.forEach((f) => f());\n    this._cleaners.length = 0;\n  }\n  private watch() {\n    this.clearWatch();\n    if (this.target?.Object && AppStore.PreviewMode) {\n      let eventName = getEventName(this._triggerType);\n\n      if (ActionManagerType[eventName]) {\n        this._cleaners.push(\n          this.target.Object.registerAction(eventName, async (event) => {\n            if (!this.check(event.sourceEvent)) return;\n            if (this.DB.InteractionTable.doing) return;\n            await this.doList();\n          })\n        );\n        return;\n      }\n\n      this._cleaners.push(\n        this.target.Object.on(eventName, async (event) => {\n          if (this.DB.InteractionTable.doing && event.type !== \"load\") {\n            if (!event.isChild) return;\n          }\n          if (!this.check(event)) return;\n          await this.doList();\n        })\n      );\n    }\n  }\n  private check(event: IEvent) {\n    if (!event) return true;\n\n    if (this._triggerType === \"RightClick\") {\n      return event.event.button === 2;\n    }\n\n    return event.event?.button !== undefined ? event.event.button <= 0 : true;\n  }\n  private async doList() {\n    if (this.DB.InteractionTable.Pause) {\n      this.DB.InteractionTable.queues.push(async () => {\n        this.DB.InteractionTable.doing = true;\n        await this.do();\n        this.DB.InteractionTable.doing = false;\n      });\n    } else {\n      this.DB.InteractionTable.doing = true;\n      await this.do();\n      this.DB.InteractionTable.doing = false;\n    }\n  }\n}\n","import {\n  CompareType,\n  IVariableOption,\n  WidgetValue,\n} from \"./../../types/interaction.types\";\nimport { Factory, HCFiler, ISerialize } from \"@hc/core\";\nimport { getWidgetValue } from \"../../utils/interactionUtils\";\n\n@Factory\nexport class Compare implements ISerialize {\n  static type = \"Compare\";\n  _Params: IVariableOption[];\n  type: CompareType = CompareType.Equal;\n  value1: WidgetValue;\n  value2: WidgetValue;\n  public check() {\n    return this.compare();\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.writeWidgetValue(this.value1);\n    file.writeWidgetValue(this.value2);\n    file.write(this.type);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    if (!this.value1) this.value1 = {} as any;\n    file.readWidgetValue(this.value1);\n\n    if (!this.value2) this.value2 = {} as any;\n\n    file.readWidgetValue(this.value2);\n\n    this.type = file.read();\n  }\n  private compare() {\n    const v1 = getWidgetValue(this.value1, this._Params);\n    const v2 = getWidgetValue(this.value2, this._Params);\n    switch (this.type) {\n      case CompareType.Equal:\n        return v1 === v2;\n      case CompareType.UnEqual:\n        return v1 !== v2;\n      case CompareType.Great:\n        return v1 > v2;\n      case CompareType.Less:\n        return v1 < v2;\n      case CompareType.GtEqual:\n        return v1 >= v2;\n      case CompareType.LessEqual:\n        return v1 <= v2;\n      case CompareType.Include:\n      case CompareType.UnInclude:\n      case CompareType.Is:\n      case CompareType.IsNot:\n      default:\n        return false;\n    }\n  }\n}\n","import { AppStore } from \"./../../app/AppStore\";\nimport { Wait } from \"..\";\nimport { HCFiler, Factory } from \"@hc/core\";\nimport { BaseWidget } from \"../../core/BaseWidget\";\nimport { Compare } from \"./Compare\";\n\nlet NameIndex = 0;\n\n@Factory\nexport class Condition extends BaseWidget {\n  static type = \"Condition\";\n  readonly IsContainer = true;\n  isAll = true;\n  compares: Compare[] = [];\n  list: BaseWidget[] = [];\n  Name = \"情形\" + NameIndex++;\n  check() {\n    this.compares.forEach((c) => (c._Params = AppStore.GlobalVariables));\n    if (this.isAll) return this.compares.every((c) => c.check());\n    else return this.compares.some((c) => c.check());\n  }\n  async do() {\n    if (!this.check()) return false;\n    let startTime = 0;\n    const promises: Promise<unknown>[] = [];\n    for (const w of this.list) {\n      //如果等待元件，先执行完毕\n      if (w.Type === \"Wait\") {\n        await w.do();\n        startTime += (w as Wait)._time / 1000;\n      } else {\n        w.startTime = startTime;\n        promises.push(w.do() as Promise<unknown>);\n      }\n    }\n    return Promise.all(promises).then(() => true);\n  }\n  add(wg: BaseWidget) {\n    this.list.push(wg);\n  }\n  addCompare(cp: Compare) {\n    this.compares.push(cp);\n  }\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.write(this.isAll);\n    file.write(this.Name);\n    file.writeAnyArray(this.list, file.writeObject);\n    file.writeAnyArray(this.compares, file.writeObject);\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    this.isAll = file.read();\n    this.Name = file.read();\n    file.readAnyArrayAndPush(this.list, file.readObject);\n    file.readAnyArrayAndPush(this.compares, file.readObject);\n  }\n}\n","import { Factory, HCFiler, ISerialize, ObjectId } from \"@hc/core\";\nimport { hcFetch } from \"../utils/fetch\";\n\nexport interface IApiDataOption {\n  type: \"GET\" | \"POST\";\n  interfaceSource: string;\n  serviceType: string;\n  service: string;\n  specificInterface: string;\n  interfaceParams: Record<string, unknown>;\n  params: { type: string; value: string; key: string; id: number }[];\n  url: string;\n  time: number;\n  filter: string;\n  response?: string;\n  useTime: boolean;\n  select: string;\n  queryDataStr: string;\n}\nexport interface IWsDataOption {\n  ws: string;\n  key: string;\n  [key: string]: string;\n}\n\nexport enum DataBindType {\n  Ws = \"1\",\n  Api = \"2\",\n}\n\n@Factory\nexport class DataBind implements ISerialize {\n  static type = \"DataBind\";\n  static WSList: Map<string, WebSocket> = new Map();\n  private _time: NodeJS.Timeout;\n  data: IApiDataOption | IWsDataOption;\n  type = DataBindType.Ws;\n  /*key1/key2*/\n  constructor(public target?: ObjectId, public targetKey?: string) {}\n  do() {\n    if (this.type === DataBindType.Api) {\n      this.startApiRequest();\n    } else {\n      this.startWs();\n    }\n  }\n  setEntityValue(value: any) {\n    const entity = this.target.Object;\n\n    if (entity) {\n      const keys = this.targetKey.split(\"/\");\n      let data: any = entity;\n      const lastKey = keys.pop();\n      for (const key of keys) {\n        data = data[key];\n      }\n      if (\"setProp\" in data) {\n        data.setProp(lastKey, value);\n      } else data[lastKey] = value;\n    }\n  }\n  destory() {\n    this._time && clearTimeout(this._time);\n    if (\"ws\" in this.data) {\n      const ws = DataBind.WSList.get(this.data.ws);\n      if (ws) {\n        ws.close();\n        DataBind.WSList.delete(this.data.ws);\n      }\n    }\n  }\n\n  writeFile(file: HCFiler): void {\n    file.write(1);\n    file.writeObjectId(this.target);\n    file.write(this.targetKey);\n    file.write(this.type);\n    file.write(JSON.stringify(this.data));\n  }\n  readFile(file: HCFiler): void {\n    file.read();\n    this.target = file.readObjectId();\n    this.targetKey = file.read();\n    this.type = file.read();\n\n    const json = file.read();\n    if (json) {\n      this.data = JSON.parse(json);\n    }\n  }\n  private async startApiRequest() {\n    const { type, params, time, url, filter, interfaceSource, select } = this\n      .data as IApiDataOption;\n\n    let filerFun = (data) => data;\n\n    try {\n      const f = new Function(\"return \" + filter);\n      if (f) {\n        filerFun = f();\n      }\n    } catch (err) {\n      console.log(\"表达式错误\");\n    }\n    const data: Record<string, any> = {};\n\n    if (params) {\n      for (const par of params) {\n        data[par.key] = par.value;\n      }\n    }\n    let res;\n    if (interfaceSource === \"custom\") {\n      res = await hcFetch(url, {\n        method: type,\n        ...(type === \"POST\" ? { data } : { params: data }),\n      });\n      res = filerFun(res);\n    } else {\n      res = await this.queryService(filerFun);\n    }\n    this.setEntityValue(res[select]);\n    if (time && time > 0) {\n      this._time = setTimeout(() => {\n        this.startApiRequest();\n      }, time * 1000);\n    }\n  }\n  private async queryService(filerFun) {\n    try {\n      let q = new Function(\"return \" + this.data.queryDataStr),\n        queryData;\n      queryData = q();\n      let res = await queryData(this.data);\n      return filerFun(res);\n    } catch (e) {\n      console.log(e);\n    }\n  }\n  /**开始websocket请求 */\n  private startWs() {\n    const data = this.data as IWsDataOption;\n    if (!data.ws) return;\n\n    let ws = DataBind.WSList.get(data.ws);\n\n    if (!ws) {\n      let url = data.ws;\n      if (data.ws.startsWith(\"//\")) {\n        let wsfix = location.protocol === \"https:\" ? \"wss:\" : \"ws:\";\n        url = wsfix + data.ws;\n      }\n      ws = new WebSocket(url);\n      DataBind.WSList.set(data.ws, ws);\n    }\n\n    ws.addEventListener(\"message\", (evt) => {\n      if (!evt.data) return;\n      const returnData = JSON.parse(evt.data),\n        source = String(data.source);\n\n      if (source === \"0\") {\n        //海创云ws数据\n        if (returnData?.params && data.key in returnData.params) {\n          this.setEntityValue(returnData.params[data.key]);\n        }\n      } else if (source === \"1\") {\n        //阿里云ws数据\n        if (returnData && data.key in returnData) {\n          this.setEntityValue(returnData[data.key].value);\n        }\n      }\n    });\n  }\n}\n","export function hcFetch(\n  url: string,\n  params: {\n    method?: string;\n    data?: Record<string, any>;\n    params?: Record<string, any>;\n  }\n) {\n  const option = {\n    method: params.method ?? \"GET\",\n    body: params?.data ? JSON.stringify(params.data) : undefined,\n  };\n\n  if (params.params) {\n    let q = \"?\";\n    for (const key in params.params) {\n      q += `${key}=${params.params[key]}`;\n    }\n    url += q;\n  }\n\n  return fetch(url, option).then((response) => response.json());\n}\n","import { BaseGui } from \"./Gui\";\nimport { StackPanel, TextBlock } from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\n\n@Factory\nexport class StackPanelGui extends BaseGui {\n  static type = \"StackPanelGui\";\n  protected _background = \"#4a4b4b\";\n  get Visiable() {\n    return super.Visiable;\n  }\n  set Visiable(v: boolean) {\n    super.Visiable = v;\n    this.lines.forEach((l) => (l.isVisible = !this._erase && v));\n  }\n  setProp(k: string, v: string) {\n    super.setProp(k, v);\n\n    const obj = this._drawObject as StackPanel;\n    const texts = obj.children as TextBlock[];\n    const oldLen = texts.length;\n    let i = 0;\n    for (; i < this.dataList.length; i++) {\n      const data = this.dataList[i];\n      if (texts[i]) {\n        texts[i].text = data.label + \"：\" + data.value + \" \" + data.unit;\n      } else {\n        const textBlock = new TextBlock(\n          data.key,\n          data.label + \"：\" + data.value + \" \" + data.unit\n        );\n        textBlock.height = this._height;\n        textBlock.color = \"#fff\";\n        obj.addControl(textBlock);\n      }\n    }\n\n    for (; i < oldLen; i++) {\n      obj.removeControl(texts[i]);\n    }\n  }\n  initDrawObject() {\n    const panel = new StackPanel(this.UniqueName);\n    // panel.ignoreLayoutWarnings = true;\n    panel.shadowOffsetX = 1;\n    panel.shadowOffsetY = 1;\n    panel.shadowBlur = 8;\n    panel.shadowColor = \"#168df8\";\n    panel.background = this._background;\n\n    this.updateDrawObject(panel);\n\n    this.generateLinkLine(panel);\n\n    return panel;\n  }\n  updateDrawObject(obj: StackPanel): void {\n    super.updateDrawObject(obj);\n    obj.background = this._background;\n    const texts = obj.children as TextBlock[];\n    const oldLen = texts.length;\n    let i = 0;\n    for (; i < this.dataList.length; i++) {\n      const data = this.dataList[i];\n      if (texts[i]) {\n        texts[i].text = data.label + \"：\" + data.value + \" \" + data.unit;\n      } else {\n        const textBlock = new TextBlock(\n          data.key,\n          data.label + \"：\" + data.value + \" \" + data.unit\n        );\n        textBlock.height = this._height;\n        textBlock.color = \"#fff\";\n        obj.addControl(textBlock);\n      }\n    }\n\n    for (; i < oldLen; i++) {\n      obj.removeControl(texts[i]);\n    }\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n    this._background = filer.read();\n    this.update();\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.write(this._background);\n  }\n}\n","import {\n  EngineStore,\n  ICanvas,\n  ICanvasRenderingContext,\n  Nullable,\n  Observable,\n  Observer,\n  Scene,\n  serialize,\n  Tools,\n} from \"../babylon\";\nimport { Control, Measure, Image as Image2 } from \"../babylon\";\n\nfunction removeSource(video: HTMLVideoElement): void {\n  // Remove any <source> elements, etc.\n  while (video.firstChild) {\n    video.removeChild(video.firstChild);\n  }\n\n  // detach srcObject\n  video.srcObject = null;\n\n  // Set a blank src (https://html.spec.whatwg.org/multipage/media.html#best-practices-for-authors-using-media-elements)\n  video.src = \"\";\n\n  // Prevent non-important errors maybe (https://twitter.com/beraliv/status/1205214277956775936)\n  video.removeAttribute(\"src\");\n}\n\nexport class Video extends Control {\n  private _workingCanvas: Nullable<ICanvas> = null;\n\n  private _video: HTMLVideoElement;\n  private _videoWidth: number;\n  private _videoHeight: number;\n  private _loaded = false;\n  private _source: Nullable<string> | HTMLVideoElement;\n  private _autoScale = false;\n\n  private _sourceLeft = 0;\n  private _sourceTop = 0;\n  private _sourceWidth = 0;\n  private _sourceHeight = 0;\n  private _svgAttributesComputationCompleted = false;\n\n  private _cellWidth = 0;\n  private _cellHeight = 0;\n  private _cellId = -1;\n\n  private _keepSize = true;\n\n  private _detectPointerOnOpaqueOnly: boolean;\n\n  private _imageDataCache: {\n    data: Uint8ClampedArray | null;\n    key: string;\n  } = { data: null, key: \"\" };\n  private listener: Observer<Scene>;\n\n  /**\n   * Observable notified when the content is loaded\n   */\n  public onImageLoadedObservable = new Observable<Video>();\n\n  /**\n   * Observable notified when _sourceLeft, _sourceTop, _sourceWidth and _sourceHeight are computed\n   */\n  public onSVGAttributesComputedObservable = new Observable<Video>();\n\n  /**\n   * Gets a boolean indicating that the content is loaded\n   */\n  public get isLoaded(): boolean {\n    return this._loaded;\n  }\n\n  /**\n   * Gets or sets a boolean indicating if pointers should only be validated on pixels with alpha > 0.\n   * Beware using this as this will consume more memory as the image has to be stored twice\n   */\n  @serialize()\n  public get detectPointerOnOpaqueOnly(): boolean {\n    return this._detectPointerOnOpaqueOnly;\n  }\n\n  public set detectPointerOnOpaqueOnly(value: boolean) {\n    if (this._detectPointerOnOpaqueOnly === value) {\n      return;\n    }\n\n    this._detectPointerOnOpaqueOnly = value;\n  }\n\n  /**\n   * Gets or sets the left coordinate in the source image\n   */\n  @serialize()\n  public get sourceLeft(): number {\n    return this._sourceLeft;\n  }\n\n  public set sourceLeft(value: number) {\n    if (this._sourceLeft === value) {\n      return;\n    }\n\n    this._sourceLeft = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the top coordinate in the source image\n   */\n  @serialize()\n  public get sourceTop(): number {\n    return this._sourceTop;\n  }\n\n  public set sourceTop(value: number) {\n    if (this._sourceTop === value) {\n      return;\n    }\n\n    this._sourceTop = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the width to capture in the source image\n   */\n  @serialize()\n  public get sourceWidth(): number {\n    return this._sourceWidth;\n  }\n\n  public set sourceWidth(value: number) {\n    if (this._sourceWidth === value) {\n      return;\n    }\n\n    this._sourceWidth = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the height to capture in the source image\n   */\n  @serialize()\n  public get sourceHeight(): number {\n    return this._sourceHeight;\n  }\n\n  public set sourceHeight(value: number) {\n    if (this._sourceHeight === value) {\n      return;\n    }\n\n    this._sourceHeight = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets the image width\n   */\n  public get imageWidth(): number {\n    return this._videoWidth;\n  }\n\n  /**\n   * Gets the image height\n   */\n  public get imageHeight(): number {\n    return this._videoHeight;\n  }\n\n  /** Gets the status of the SVG attributes computation (sourceLeft, sourceTop, sourceWidth, sourceHeight) */\n  public get svgAttributesComputationCompleted(): boolean {\n    return this._svgAttributesComputationCompleted;\n  }\n\n  /**\n   * Gets or sets a boolean indicating if the image can force its container to adapt its size\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  public get autoScale(): boolean {\n    return this._autoScale;\n  }\n\n  public set autoScale(value: boolean) {\n    if (this._autoScale === value) {\n      return;\n    }\n\n    this._autoScale = value;\n\n    if (value && this._loaded) {\n      this.synchronizeSizeWithContent();\n    }\n  }\n  @serialize()\n  public get keepSize(): boolean {\n    return this._autoScale;\n  }\n\n  public set keepSize(value: boolean) {\n    if (this._keepSize === value) {\n      return;\n    }\n\n    this._keepSize = value;\n\n    if (value && this._loaded) {\n      this.synchronizeSizeWithContent();\n    }\n  }\n\n  /**\n   * Gets or sets the internal DOM image used to render the control\n   */\n  public set VideoDom(value: HTMLVideoElement) {\n    this._video = value;\n    this._loaded = false;\n    this._imageDataCache.data = null;\n\n    if (this._video.width) {\n      this._onImageLoaded();\n    } else {\n      this._video.onload = () => {\n        this._onImageLoaded();\n      };\n    }\n  }\n\n  public get VideoDom(): HTMLVideoElement {\n    return this._video;\n  }\n\n  private _onImageLoaded(): void {\n    this._imageDataCache.data = null;\n    this._videoWidth = this._video.videoWidth;\n    this._videoHeight = this._video.videoHeight;\n    this._loaded = true;\n\n    if (this._autoScale) {\n      this.synchronizeSizeWithContent();\n    }\n\n    this.onImageLoadedObservable.notifyObservers(this);\n\n    this._markAsDirty();\n  }\n\n  private _getVideo(\n    src: string | string[] | HTMLVideoElement\n  ): HTMLVideoElement {\n    if ((<any>src).isNative) {\n      return <HTMLVideoElement>src;\n    }\n    if (src instanceof HTMLVideoElement) {\n      Tools.SetCorsBehavior(src.currentSrc, src);\n      return src;\n    }\n    const video: HTMLVideoElement = document.createElement(\"video\");\n    if (typeof src === \"string\") {\n      Tools.SetCorsBehavior(src, video);\n      video.src = src;\n    } else {\n      Tools.SetCorsBehavior(src[0], video);\n      src.forEach((url) => {\n        const source = document.createElement(\"source\");\n        source.src = url;\n        video.appendChild(source);\n      });\n    }\n\n    this.onDisposeObservable.addOnce(() => {\n      removeSource(video);\n    });\n\n    return video;\n  }\n\n  /**\n   * Gets the image source url\n   */\n  @serialize()\n  public get source() {\n    return this._source;\n  }\n\n  /**\n   * Gets or sets image source url\n   */\n  public set source(value: Nullable<string> | HTMLVideoElement) {\n    if (this._source === value) {\n      return;\n    }\n\n    this._loaded = false;\n    this._source = value;\n    this._imageDataCache.data = null;\n\n    this._video = this._getVideo(value);\n    this._video.crossOrigin = \"anonymous\";\n\n    this._video.width = 400;\n    this._video.height = 400;\n    this._video.muted = true;\n    this._video.autoplay = true;\n    this._video.loop = true;\n    if (value) {\n      this._video.play();\n      this._video.addEventListener(\"play\", () => {\n        this._onImageLoaded();\n      });\n      this._video.addEventListener(\"seeked\", () => {\n        this._onImageLoaded();\n      });\n      this._video.addEventListener(\"canPlay\", () => {\n        this._onImageLoaded();\n      });\n      this._video.addEventListener(\"loadedData\", () => {\n        this._onImageLoaded();\n      });\n    }\n  }\n\n  /**\n   * Gets or sets the cell width to use when animation sheet is enabled\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellWidth(): number {\n    return this._cellWidth;\n  }\n  set cellWidth(value: number) {\n    if (this._cellWidth === value) {\n      return;\n    }\n\n    this._cellWidth = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the cell height to use when animation sheet is enabled\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellHeight(): number {\n    return this._cellHeight;\n  }\n  set cellHeight(value: number) {\n    if (this._cellHeight === value) {\n      return;\n    }\n\n    this._cellHeight = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the cell id to use (this will turn on the animation sheet mode)\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellId(): number {\n    return this._cellId;\n  }\n  set cellId(value: number) {\n    if (this._cellId === value) {\n      return;\n    }\n\n    this._cellId = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Creates a new Image\n   * @param name defines the control name\n   * @param url defines the image url\n   */\n  constructor(\n    public name?: string,\n    // url: Nullable<string> = null,\n    url: HTMLVideoElement | Nullable<string> = null,\n    width?: string | number,\n    height?: string | number,\n    private scene?: Scene\n  ) {\n    super(name);\n    this.width = width;\n    this.height = height;\n    this.source = url;\n    this.listener = scene.onAfterRenderObservable.add(() => {\n      if (this.isVisible && this.source) this._onImageLoaded();\n    });\n  }\n\n  /**\n   * Tests if a given coordinates belong to the current control\n   * @param x defines x coordinate to test\n   * @param y defines y coordinate to test\n   * @returns true if the coordinates are inside the control\n   */\n  public contains(x: number, y: number): boolean {\n    if (!super.contains(x, y)) {\n      return false;\n    }\n\n    if (!this._detectPointerOnOpaqueOnly || !this._workingCanvas) {\n      return true;\n    }\n\n    const width = this._currentMeasure.width | 0;\n    const height = this._currentMeasure.height | 0;\n    const key = width + \"_\" + height;\n\n    let imageData = this._imageDataCache.data;\n\n    if (!imageData || this._imageDataCache.key !== key) {\n      const canvas = this._workingCanvas;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const context = canvas.getContext(\"2d\")!;\n\n      this._imageDataCache.data = imageData = context.getImageData(\n        0,\n        0,\n        width,\n        height\n      ).data;\n      this._imageDataCache.key = key;\n    }\n\n    x = (x - this._currentMeasure.left) | 0;\n    y = (y - this._currentMeasure.top) | 0;\n\n    const pickedPixel = imageData[(x + y * width) * 4 + 3];\n\n    return pickedPixel > 0;\n  }\n\n  protected _getTypeName(): string {\n    return \"Image\";\n  }\n\n  /** Force the control to synchronize with its content */\n  public synchronizeSizeWithContent() {\n    if (!this._loaded) {\n      return;\n    }\n\n    this.width = this._video.width + \"px\";\n    this.height = this._video.height + \"px\";\n  }\n\n  protected _processMeasures(\n    parentMeasure: Measure,\n    context: ICanvasRenderingContext\n  ): void {\n    if (this._loaded) {\n      if (this._autoScale) {\n        this.synchronizeSizeWithContent();\n      }\n      if (this.parent && this.parent.parent) {\n        // Will update root size if root is not the top root\n        this.parent.adaptWidthToChildren = true;\n        this.parent.adaptHeightToChildren = true;\n      }\n    }\n\n    super._processMeasures(parentMeasure, context);\n  }\n\n  private _prepareWorkingCanvasForOpaqueDetection() {\n    if (!this._detectPointerOnOpaqueOnly) {\n      return;\n    }\n\n    const width = this._currentMeasure.width;\n    const height = this._currentMeasure.height;\n\n    if (!this._workingCanvas) {\n      const engine =\n        this._host?.getScene()?.getEngine() || EngineStore.LastCreatedEngine;\n      if (!engine) {\n        throw new Error(\"Invalid engine. Unable to create a canvas.\");\n      }\n      this._workingCanvas = engine.createCanvas(width, height);\n    }\n    const canvas = this._workingCanvas;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const context = canvas.getContext(\"2d\")!;\n\n    context.clearRect(0, 0, width, height);\n  }\n\n  private _drawImage(\n    context: ICanvasRenderingContext,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    tx: number,\n    ty: number,\n    tw: number,\n    th: number\n  ) {\n    context.drawImage(this._video, sx, sy, sw, sh, tx, ty, tw, th);\n\n    if (!this._detectPointerOnOpaqueOnly) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const canvas = this._workingCanvas!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context = canvas.getContext(\"2d\")!;\n\n    context.drawImage(\n      this._video,\n      sx,\n      sy,\n      sw,\n      sh,\n      tx - this._currentMeasure.left,\n      ty - this._currentMeasure.top,\n      tw,\n      th\n    );\n  }\n\n  public _draw(context: ICanvasRenderingContext): void {\n    context.save();\n\n    if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n      context.shadowColor = this.shadowColor;\n      context.shadowBlur = this.shadowBlur;\n      context.shadowOffsetX = this.shadowOffsetX;\n      context.shadowOffsetY = this.shadowOffsetY;\n    }\n\n    let x, y, width, height;\n    if (this.cellId === -1) {\n      x = this._sourceLeft;\n      y = this._sourceTop;\n\n      width = this._sourceWidth ? this._sourceWidth : this._videoWidth;\n      height = this._sourceHeight ? this._sourceHeight : this._videoHeight;\n    } else {\n      const rowCount = this._video.videoWidth / this.cellWidth;\n      const column = (this.cellId / rowCount) >> 0;\n      const row = this.cellId % rowCount;\n\n      x = this.cellWidth * row;\n      y = this.cellHeight * column;\n      width = this.cellWidth;\n      height = this.cellHeight;\n    }\n\n    this._prepareWorkingCanvasForOpaqueDetection();\n\n    this._applyStates(context);\n    if (this._loaded) {\n      this._drawImage(\n        context,\n        x,\n        y,\n        width,\n        height,\n        this._currentMeasure.left,\n        this._currentMeasure.top,\n        this._currentMeasure.width,\n        this._keepSize\n          ? (this._currentMeasure.width * height) / width\n          : this._currentMeasure.height\n      );\n    }\n\n    context.restore();\n  }\n\n  public dispose() {\n    super.dispose();\n    this.onImageLoadedObservable.clear();\n    this.onSVGAttributesComputedObservable.clear();\n    if (this.listener) this.scene.onAfterRenderObservable.remove(this.listener);\n    removeSource(this._video);\n  }\n}\n","import { Video } from \"./Video\";\nimport { BaseGui } from \"./Gui\";\nimport { Container, StackPanel } from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { StrNum } from \"../types/types\";\nimport { Entity } from \"../entitys/Entity\";\n\n@Factory\nexport class VideoGui extends BaseGui {\n  static type = \"VideoGui\";\n  private _url = \"\";\n  protected _width: StrNum = \"200px\";\n  protected _height: StrNum = \"100px\";\n  private _videoDom: HTMLVideoElement;\n  constructor(option: { url: string; width: string; height: string }) {\n    super();\n    if (option?.url) {\n      this._url = option.url;\n    }\n    if (option?.width) {\n      this._width = option.width;\n    }\n    if (option?.height) {\n      this._height = option.height;\n    }\n  }\n  get VideoDom() {\n    return this._videoDom;\n  }\n  get Url() {\n    return this._url;\n  }\n  set Url(v: string) {\n    this._url = v;\n    this.update();\n  }\n  initDrawObject() {\n    const root = new Container(this.UniqueName);\n    root.width = this._width;\n    root.height = this._height;\n    const p = new Video(\n      this.UniqueName,\n      this._url,\n      this._width,\n      this._height,\n      Entity.Scene\n    );\n    root.background = \"#000\";\n    this._videoDom = p.VideoDom;\n    p.keepSize = true;\n    root.addControl(p);\n    return root;\n  }\n  updateDrawObject(obj: Container): void {\n    super.updateDrawObject(obj);\n    const v = obj.children[0] as Video;\n    v.source = this._url;\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n    this.update();\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n  }\n  erase(e = true): void {\n    super.erase(e);\n  }\n  destory(): void {\n    super.destory();\n  }\n}\n","import {\n  EngineStore,\n  ICanvas,\n  ICanvasRenderingContext,\n  Nullable,\n  Observable,\n  Observer,\n  Scene,\n  serialize,\n  Tools,\n} from \"../babylon\";\nimport { Control, Measure, Image as Image2 } from \"../babylon\";\n\nexport class CanvasControl extends Control {\n  private _needAnimation = false;\n  private _workingCanvas: Nullable<ICanvas> = null;\n\n  private _canvas_: HTMLCanvasElement;\n  private _canvasWidth: number;\n  private _canvasHeight: number;\n  private _loaded = false;\n  private _source: Nullable<string>;\n  private _autoScale = false;\n\n  private _sourceLeft = 0;\n  private _sourceTop = 0;\n  private _sourceWidth = 0;\n  private _sourceHeight = 0;\n  private _svgAttributesComputationCompleted = false;\n\n  private _cellWidth = 0;\n  private _cellHeight = 0;\n  private _cellId = -1;\n\n  private _keepSize = true;\n\n  private _detectPointerOnOpaqueOnly: boolean;\n\n  private _imageDataCache: {\n    data: Uint8ClampedArray | null;\n    key: string;\n  } = { data: null, key: \"\" };\n  private listener: Observer<Scene>;\n\n  /**\n   * Observable notified when the content is loaded\n   */\n  public onImageLoadedObservable = new Observable<CanvasControl>();\n\n  /**\n   * Observable notified when _sourceLeft, _sourceTop, _sourceWidth and _sourceHeight are computed\n   */\n  public onSVGAttributesComputedObservable = new Observable<CanvasControl>();\n\n  /**\n   * Gets a boolean indicating that the content is loaded\n   */\n  public get isLoaded(): boolean {\n    return this._loaded;\n  }\n\n  /**\n   * Gets or sets a boolean indicating if pointers should only be validated on pixels with alpha > 0.\n   * Beware using this as this will consume more memory as the image has to be stored twice\n   */\n  @serialize()\n  public get detectPointerOnOpaqueOnly(): boolean {\n    return this._detectPointerOnOpaqueOnly;\n  }\n\n  public set detectPointerOnOpaqueOnly(value: boolean) {\n    if (this._detectPointerOnOpaqueOnly === value) {\n      return;\n    }\n\n    this._detectPointerOnOpaqueOnly = value;\n  }\n\n  /**\n   * Gets or sets the left coordinate in the source image\n   */\n  @serialize()\n  public get sourceLeft(): number {\n    return this._sourceLeft;\n  }\n\n  public set sourceLeft(value: number) {\n    if (this._sourceLeft === value) {\n      return;\n    }\n\n    this._sourceLeft = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the top coordinate in the source image\n   */\n  @serialize()\n  public get sourceTop(): number {\n    return this._sourceTop;\n  }\n\n  public set sourceTop(value: number) {\n    if (this._sourceTop === value) {\n      return;\n    }\n\n    this._sourceTop = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the width to capture in the source image\n   */\n  @serialize()\n  public get sourceWidth(): number {\n    return this._sourceWidth;\n  }\n\n  public set sourceWidth(value: number) {\n    if (this._sourceWidth === value) {\n      return;\n    }\n\n    this._sourceWidth = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the height to capture in the source image\n   */\n  @serialize()\n  public get sourceHeight(): number {\n    return this._sourceHeight;\n  }\n\n  public set sourceHeight(value: number) {\n    if (this._sourceHeight === value) {\n      return;\n    }\n\n    this._sourceHeight = value;\n\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets the image width\n   */\n  public get imageWidth(): number {\n    return this._canvasWidth;\n  }\n\n  /**\n   * Gets the image height\n   */\n  public get imageHeight(): number {\n    return this._canvasHeight;\n  }\n\n  /** Gets the status of the SVG attributes computation (sourceLeft, sourceTop, sourceWidth, sourceHeight) */\n  public get svgAttributesComputationCompleted(): boolean {\n    return this._svgAttributesComputationCompleted;\n  }\n\n  /**\n   * Gets or sets a boolean indicating if the image can force its container to adapt its size\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  public get autoScale(): boolean {\n    return this._autoScale;\n  }\n\n  public set autoScale(value: boolean) {\n    if (this._autoScale === value) {\n      return;\n    }\n\n    this._autoScale = value;\n\n    if (value && this._loaded) {\n      this.synchronizeSizeWithContent();\n    }\n  }\n  @serialize()\n  public get keepSize(): boolean {\n    return this._autoScale;\n  }\n\n  public set keepSize(value: boolean) {\n    if (this._keepSize === value) {\n      return;\n    }\n\n    this._keepSize = value;\n\n    if (value && this._loaded) {\n      this.synchronizeSizeWithContent();\n    }\n  }\n\n  /**\n   * Gets or sets the internal DOM image used to render the control\n   */\n  public set CanvasDom(value: HTMLCanvasElement) {\n    this._canvas_ = value;\n    this._imageDataCache.data = null;\n    this._onImageLoaded();\n  }\n\n  public get CanvasDom(): HTMLCanvasElement {\n    return this._canvas_;\n  }\n\n  private _onImageLoaded(): void {\n    this._imageDataCache.data = null;\n    this._canvasWidth = this._canvas_.width;\n    this._canvasHeight = this._canvas_.height;\n    this._loaded = true;\n\n    if (this._autoScale) {\n      this.synchronizeSizeWithContent();\n    }\n\n    this.onImageLoadedObservable.notifyObservers(this);\n\n    this._markAsDirty();\n  }\n  /**\n   * Gets or sets the cell width to use when animation sheet is enabled\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellWidth(): number {\n    return this._cellWidth;\n  }\n  set cellWidth(value: number) {\n    if (this._cellWidth === value) {\n      return;\n    }\n\n    this._cellWidth = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the cell height to use when animation sheet is enabled\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellHeight(): number {\n    return this._cellHeight;\n  }\n  set cellHeight(value: number) {\n    if (this._cellHeight === value) {\n      return;\n    }\n\n    this._cellHeight = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Gets or sets the cell id to use (this will turn on the animation sheet mode)\n   * @see https://doc.babylonjs.com/how_to/gui#image\n   */\n  @serialize()\n  get cellId(): number {\n    return this._cellId;\n  }\n  set cellId(value: number) {\n    if (this._cellId === value) {\n      return;\n    }\n\n    this._cellId = value;\n    this._markAsDirty();\n  }\n\n  /**\n   * Creates a new Image\n   * @param name defines the control name\n   * @param url defines the image url\n   */\n  constructor(\n    public name: string,\n    canvas: HTMLCanvasElement,\n    private scene?: Scene\n  ) {\n    super(name);\n    this.CanvasDom = canvas;\n    this.listener = scene.onAfterRenderObservable.add(() => {\n      if (this.isVisible && this._needAnimation) this._onImageLoaded();\n    });\n  }\n\n  /**\n   * Tests if a given coordinates belong to the current control\n   * @param x defines x coordinate to test\n   * @param y defines y coordinate to test\n   * @returns true if the coordinates are inside the control\n   */\n  public contains(x: number, y: number): boolean {\n    if (!super.contains(x, y)) {\n      return false;\n    }\n\n    if (!this._detectPointerOnOpaqueOnly || !this._workingCanvas) {\n      return true;\n    }\n\n    const width = this._currentMeasure.width | 0;\n    const height = this._currentMeasure.height | 0;\n    const key = width + \"_\" + height;\n\n    let imageData = this._imageDataCache.data;\n\n    if (!imageData || this._imageDataCache.key !== key) {\n      const canvas = this._workingCanvas;\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      const context = canvas.getContext(\"2d\")!;\n\n      this._imageDataCache.data = imageData = context.getImageData(\n        0,\n        0,\n        width,\n        height\n      ).data;\n      this._imageDataCache.key = key;\n    }\n\n    x = (x - this._currentMeasure.left) | 0;\n    y = (y - this._currentMeasure.top) | 0;\n\n    const pickedPixel = imageData[(x + y * width) * 4 + 3];\n\n    return pickedPixel > 0;\n  }\n\n  protected _getTypeName(): string {\n    return \"Image\";\n  }\n\n  /** Force the control to synchronize with its content */\n  public synchronizeSizeWithContent() {\n    if (!this._loaded) {\n      return;\n    }\n\n    this.width = this._canvas_.width + \"px\";\n    this.height = this._canvas_.height + \"px\";\n  }\n\n  protected _processMeasures(\n    parentMeasure: Measure,\n    context: ICanvasRenderingContext\n  ): void {\n    if (this._loaded) {\n      if (this._autoScale) {\n        this.synchronizeSizeWithContent();\n      }\n      if (this.parent && this.parent.parent) {\n        // Will update root size if root is not the top root\n        this.parent.adaptWidthToChildren = true;\n        this.parent.adaptHeightToChildren = true;\n      }\n    }\n\n    super._processMeasures(parentMeasure, context);\n  }\n\n  private _prepareWorkingCanvasForOpaqueDetection() {\n    if (!this._detectPointerOnOpaqueOnly) {\n      return;\n    }\n\n    const width = this._currentMeasure.width;\n    const height = this._currentMeasure.height;\n\n    if (!this._workingCanvas) {\n      const engine =\n        this._host?.getScene()?.getEngine() || EngineStore.LastCreatedEngine;\n      if (!engine) {\n        throw new Error(\"Invalid engine. Unable to create a canvas.\");\n      }\n      this._workingCanvas = engine.createCanvas(width, height);\n    }\n    const canvas = this._workingCanvas;\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const context = canvas.getContext(\"2d\")!;\n\n    context.clearRect(0, 0, width, height);\n  }\n\n  private _drawImage(\n    context: ICanvasRenderingContext,\n    sx: number,\n    sy: number,\n    sw: number,\n    sh: number,\n    tx: number,\n    ty: number,\n    tw: number,\n    th: number\n  ) {\n    context.drawImage(this._canvas_, sx, sy, sw, sh, tx, ty, tw, th);\n\n    if (!this._detectPointerOnOpaqueOnly) {\n      return;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const canvas = this._workingCanvas!;\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    context = canvas.getContext(\"2d\")!;\n\n    context.drawImage(\n      this._canvas_,\n      sx,\n      sy,\n      sw,\n      sh,\n      tx - this._currentMeasure.left,\n      ty - this._currentMeasure.top,\n      tw,\n      th\n    );\n  }\n\n  public _draw(context: ICanvasRenderingContext): void {\n    context.save();\n\n    if (this.shadowBlur || this.shadowOffsetX || this.shadowOffsetY) {\n      context.shadowColor = this.shadowColor;\n      context.shadowBlur = this.shadowBlur;\n      context.shadowOffsetX = this.shadowOffsetX;\n      context.shadowOffsetY = this.shadowOffsetY;\n    }\n\n    let x, y, width, height;\n    if (this.cellId === -1) {\n      x = this._sourceLeft;\n      y = this._sourceTop;\n\n      width = this._sourceWidth ? this._sourceWidth : this._canvasWidth;\n      height = this._sourceHeight ? this._sourceHeight : this._canvasHeight;\n    } else {\n      const rowCount = this._canvas_.width / this.cellWidth;\n      const column = (this.cellId / rowCount) >> 0;\n      const row = this.cellId % rowCount;\n\n      x = this.cellWidth * row;\n      y = this.cellHeight * column;\n      width = this.cellWidth;\n      height = this.cellHeight;\n    }\n\n    this._prepareWorkingCanvasForOpaqueDetection();\n\n    this._applyStates(context);\n    if (this._loaded) {\n      this._drawImage(\n        context,\n        x,\n        y,\n        width,\n        height,\n        this._currentMeasure.left,\n        this._currentMeasure.top,\n        this._currentMeasure.width,\n        this._keepSize\n          ? (this._currentMeasure.width * height) / width\n          : this._currentMeasure.height\n      );\n    }\n\n    context.restore();\n  }\n\n  public dispose() {\n    super.dispose();\n    this.onImageLoadedObservable.clear();\n    this.onSVGAttributesComputedObservable.clear();\n    if (this.listener) this.scene.onAfterRenderObservable.remove(this.listener);\n  }\n}\n","import type { ParticleSystem } from \"./ParticleSystem\";\nimport { Particle } from \"./Particle\";\nimport { SubEmitter as BSubEmitter, SubEmitterType } from \"../babylon\";\nimport { Factory, HCFiler } from \"@hc/core\";\n\n@Factory\nexport class SubEmitter extends Particle {\n  static type = \"SubEmitter\";\n  protected _name: string = \"子粒子特效触发器\";\n  private type = SubEmitterType.END;\n  private _intance: BSubEmitter;\n  constructor(public particleSystem: ParticleSystem) {\n    super();\n  }\n  get Intance() {\n    if (!this._intance) {\n      this._intance = this.initParticle();\n    }\n    return this._intance;\n  }\n  initParticle() {\n    const child = this.particleSystem.Intance;\n    child.disposeOnStop = true;\n    const sub = new BSubEmitter(child);\n    sub.type = this.type;\n    return sub;\n  }\n  updateParticle(sub: BSubEmitter) {\n    sub.type = this.type;\n    // sub.inheritDirection = true;\n    // sub.inheritedVelocityAmount = 2;\n    this.particleSystem.updateParticle(sub.particleSystem);\n  }\n  destory(): void {\n    super.destory();\n    if (this._intance) {\n      this._intance.dispose();\n      this._intance = null;\n    }\n  }\n  fromJSON(json: Record<string, any>) {\n    if (!json) return;\n    if (json.type) this.type = json.type;\n    this.particleSystem.fromJSON(json as any, true);\n    return this;\n  }\n\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    this.particleSystem = filer.readObject();\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.writeObject(this.particleSystem);\n  }\n}\n","import { ParticleSystem } from \"./../ParticleSystem\";\nimport { HCFiler, ISerialize } from \"@hc/core\";\nimport { IParticleEmitterType } from \"../../babylon\";\n\nexport class Emiter implements ISerialize {\n  protected _emiter: IParticleEmitterType;\n  constructor(protected attachSystem: ParticleSystem) {}\n  get AttachSystem() {\n    return this.attachSystem;\n  }\n  set AttachSystem(v: ParticleSystem) {\n    this.attachSystem = v;\n  }\n  update() {}\n  fromJSON(json) {\n    return this;\n  }\n  toJSON() {\n    return null;\n  }\n  readFile(file: HCFiler): void {}\n  writeFile(file: HCFiler): void {}\n}\n","import { ConeParticleEmitter } from \"../../babylon\";\n\nimport { Factory, HCFiler } from \"@hc/core\";\nimport { ParticleSystem } from \"../ParticleSystem\";\nimport { Emiter } from \"./Emiter\";\n\n@Factory\nexport class ConeEmitter extends Emiter {\n  static type = \"ConeEmitter\";\n  protected _emiter: ConeParticleEmitter;\n  protected _radius = 1;\n  protected angle = Math.PI / 4;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; angle?: number }\n  ) {\n    super(attachSystem);\n    if (option?.radius) {\n      this._radius = option.radius;\n    }\n    if (option?.angle) {\n      this.angle = option.angle;\n    }\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {\n    this._emiter = this.attachSystem.Intance.createConeEmitter(\n      this._radius,\n      this.angle\n    );\n  }\n  get AttachSystem() {\n    return this.attachSystem;\n  }\n  set AttachSystem(v: ParticleSystem) {\n    this.attachSystem = v;\n    this.setEmiter();\n  }\n  get Radius() {\n    return this._radius;\n  }\n  set Radius(v: number) {\n    if (v === this._radius) return;\n    this._radius = v;\n    this.update();\n  }\n\n  get Angle() {\n    return this.angle;\n  }\n  set Angle(v: number) {\n    if (v === this.angle) return;\n    this.angle = v;\n    this.update();\n  }\n\n  update(): void {\n    if (!this._emiter) {\n      // if (this.attachSystem) {\n      //   this._emiter = this.attachSystem.Intance.createSphereEmitter(\n      //     this._radius,\n      //     this._radiusRange\n      //   );\n      // }\n      return;\n    }\n    this._emiter.radius = this._radius;\n    this._emiter.angle = this.angle;\n  }\n  toJSON() {\n    return {\n      Radius: this.Radius,\n      Angle: this.Angle,\n    };\n  }\n  fromJSON(json): this {\n    if (json.Radius) this._radius = json.Radius;\n    if (json.Angle) this.angle = json.Angle;\n    return this;\n  }\n  writeFile(file: HCFiler): void {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this._radius);\n    file.write(this.angle);\n  }\n  readFile(file: HCFiler): void {\n    super.readFile(file);\n    file.read();\n    this._radius = file.read();\n    this.angle = file.read();\n  }\n}\n","import { HCFiler } from \"@hc/core\";\nimport { ParticleSystem } from \"../ParticleSystem\";\nimport { Emiter } from \"./Emiter\";\n\nexport class RadiusEmiter extends Emiter {\n  protected _radius = 1;\n  protected _radiusRange = 1;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; radiusRange?: number }\n  ) {\n    super(attachSystem);\n    if (option?.radius) {\n      this._radius = option.radius;\n    }\n    if (option?.radiusRange) {\n      this._radiusRange = option.radiusRange;\n    }\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {}\n  get AttachSystem() {\n    return this.attachSystem;\n  }\n  set AttachSystem(v: ParticleSystem) {\n    this.attachSystem = v;\n    this.setEmiter();\n  }\n  get Radius() {\n    return this._radius;\n  }\n  set Radius(v: number) {\n    if (v === this._radius) return;\n    this._radius = v;\n    this.update();\n  }\n\n  get RadiusRange() {\n    return this._radiusRange;\n  }\n  set RadiusRange(v: number) {\n    if (v === this._radiusRange) return;\n    this._radiusRange = v;\n    this.update();\n  }\n\n  update(): void {\n    if (!this._emiter) {\n      // if (this.attachSystem) {\n      //   this._emiter = this.attachSystem.Intance.createSphereEmitter(\n      //     this._radius,\n      //     this._radiusRange\n      //   );\n      // }\n      return;\n    }\n    this._emiter[\"radius\"] = this._radius;\n    this._emiter[\"radiusRange\"] = this._radiusRange;\n  }\n  toJSON() {\n    return {\n      Radius: this.Radius,\n      RadiusRange: this.RadiusRange,\n    };\n  }\n  fromJSON(json): this {\n    this._radius = json.Radius;\n    this._radiusRange = json.RadiusRange;\n    return this;\n  }\n  writeFile(file: HCFiler): void {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this._radius);\n    file.write(this._radiusRange);\n  }\n  readFile(file: HCFiler): void {\n    super.readFile(file);\n    file.read();\n    this._radius = file.read();\n    this._radiusRange = file.read();\n  }\n}\n","import { CylinderParticleEmitter, IParticleEmitterType } from \"../../babylon\";\nimport { RadiusEmiter } from \"./RadiusEmiter\";\nimport type { ParticleSystem } from \"../ParticleSystem\";\nimport { HCFiler, Factory } from \"@hc/core\";\n\n@Factory\nexport class CylinderEmitter extends RadiusEmiter {\n  static type = \"CylinderEmitter\";\n  protected height = 1;\n  protected _emiter: CylinderParticleEmitter;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; radiusRange?: number; height?: number }\n  ) {\n    super(attachSystem, option);\n\n    if (option?.height) {\n      this.height = option.height;\n    }\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {\n    this._emiter = this.attachSystem.Intance.createCylinderEmitter(\n      this._radius,\n      this.height,\n      this._radiusRange\n    );\n  }\n  writeFile(file: HCFiler): void {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this.height);\n  }\n  readFile(file: HCFiler): void {\n    super.readFile(file);\n    file.read();\n    this.height = file.read();\n  }\n}\n","import { CylinderDirectedParticleEmitter } from \"../../babylon\";\nimport { ParticleSystem } from \"../..\";\nimport { Factory } from \"@hc/core\";\nimport { iVector2Vector } from \"../../utils/vector\";\nimport { CylinderEmitter } from \"./CylinderEmitter\";\n\n@Factory\nexport class DirectedCylinder extends CylinderEmitter {\n  static type = \"DirectedCylinder\";\n  protected _emiter: CylinderDirectedParticleEmitter;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; radiusRange?: number; height?: number }\n  ) {\n    super(attachSystem, option);\n\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {\n    this._emiter = this.attachSystem.Intance.createDirectedCylinderEmitter(\n      this._radius,\n      this.height,\n      this._radiusRange,\n      iVector2Vector(this.attachSystem.Direction1),\n      iVector2Vector(this.attachSystem.Direction2)\n    );\n  }\n}\n","import { HemisphericParticleEmitter } from \"../../babylon\";\nimport { RadiusEmiter } from \"./RadiusEmiter\";\nimport { Factory } from \"@hc/core\";\nimport type { ParticleSystem } from \"../ParticleSystem\";\n\n@Factory\nexport class HemisphericEmiter extends RadiusEmiter {\n  static type = \"HemisphericEmiter\";\n  protected _emiter: HemisphericParticleEmitter;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; radiusRange?: number }\n  ) {\n    super(attachSystem, option);\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {\n    this._emiter = this.attachSystem.Intance.createHemisphericEmitter(\n      this._radius,\n      this._radiusRange\n    );\n  }\n}\n","import { SphereParticleEmitter } from \"../../babylon\";\nimport { Factory } from \"@hc/core\";\nimport type { ParticleSystem } from \"../ParticleSystem\";\nimport { RadiusEmiter } from \"./RadiusEmiter\";\n\n@Factory\nexport class SphereEmiter extends RadiusEmiter {\n  static type = \"SphereEmiter\";\n  protected _emiter: SphereParticleEmitter;\n  constructor(\n    protected attachSystem: ParticleSystem,\n    option?: { radius?: number; radiusRange?: number }\n  ) {\n    super(attachSystem, option);\n    if (attachSystem?.HasIntance) this.setEmiter();\n  }\n  setEmiter() {\n    this._emiter = this.attachSystem.Intance.createSphereEmitter(\n      this._radius,\n      this._radiusRange\n    );\n  }\n}\n","export enum EmiterShape {\n  Point = 0,\n  Box = 1,\n  Sphere = 2,\n  Hemisphere = 3,\n  Cylinder = 4,\n  DirctedCylinder = 5,\n  Cone = 6,\n  Mesh = 7,\n  Custom = 8,\n}\nexport enum EmiterType {\n  Point = 0,\n  Entity = 1,\n  Camera = 2,\n}\n","import {\n  Factory,\n  HCFiler,\n  IRange,\n  IVector2,\n  IVector3,\n  ObjectId,\n} from \"@hc/core\";\n\nimport { AppConfig } from \"../app/appConfig\";\nimport {\n  ParticleSystem as BParticleSystem,\n  Color4,\n  Texture,\n  Vector2,\n  Vector3,\n} from \"../babylon\";\nimport { AppEvent } from \"../core/AppEvent\";\nimport { Box3 } from \"../utils\";\nimport { setVecLike2Vector, vec2Vec2Like, vec2Vec3Like } from \"../utils/vector\";\nimport { Entity } from \"./../entitys/Entity\";\nimport { Particle } from \"./Particle\";\nimport { SubEmitter } from \"./SubEmitter\";\nimport { ConeEmitter } from \"./emiters/ConeEmiter\";\nimport { CylinderEmitter } from \"./emiters/CylinderEmitter\";\nimport { DirectedCylinder } from \"./emiters/DirectedCylinderEmitter\";\nimport { Emiter } from \"./emiters/Emiter\";\nimport { HemisphericEmiter } from \"./emiters/HemisphericEmiter\";\nimport { SphereEmiter } from \"./emiters/SphereEmiter\";\nimport { EmiterShape, EmiterType } from \"./emiters/types\";\n\nexport type IGradient = {\n  key: \"Size\" | \"Color\";\n  period: number;\n  value: any;\n  otherValue?: any;\n};\n\n@Factory\nexport class ParticleSystem extends Particle {\n  static type = \"ParticleSystem\";\n  static Reading = false;\n  private _intance: BParticleSystem;\n  protected capacity = 1e3;\n  protected _updateSpeed = 0.01;\n  protected _size = { min: 0.1, max: 0.5 };\n  protected _image: string;\n  protected _scale = {\n    min: { x: 0.1, y: 0.1 },\n    max: { x: 0.5, y: 0.5 },\n  };\n  protected color1: string = \"#CD581BFF\";\n  protected color2: string = \"#000000FF\";\n  protected colorDead: string = \"#00000000\";\n  protected _manualEmitCount = -1;\n  protected emitPower = {\n    min: 1,\n    max: 3,\n  };\n  protected _angularSpeed = {\n    min: 0,\n    max: Math.PI,\n  };\n  protected _pivot = new Vector2();\n  protected direction1 = new Vector3(0, 1);\n  protected direction2 = new Vector3(0, 1);\n  protected minEmitBox = new Vector3(-0.5, -0.5, -0.5);\n  protected maxEmitBox = new Vector3(0.5, 0.5, 0.5);\n  protected _gravity = new Vector3(0, 0);\n  protected _rate = 100;\n  protected lifeTime = {\n    min: 0.3,\n    max: 1.5,\n  };\n  protected spriteOption = {\n    isAnimationSheetEnabled: false,\n    spriteCellHeight: 32,\n    spriteCellWidth: 32,\n    spriteRandomStartCell: true,\n    startSpriteCellID: 0,\n    endSpriteCellID: 3,\n    spriteCellChangeSpeed: 0,\n  };\n  protected emiterShape: EmiterShape = EmiterShape.Box;\n  protected emiterType: EmiterType = EmiterType.Point;\n  protected emiter: Emiter;\n  protected emiterEntity: ObjectId<Entity>;\n  protected emiterPosition = new Vector3();\n  protected blendMode = BParticleSystem.BLENDMODE_ONEONE;\n  private subParticleSystems: SubEmitter[] = [];\n  private needUpdateSubEmiters = false;\n  private gradients: IGradient[] = [];\n  private _targetStopDuration = 0;\n  private _position = Vector3.Zero();\n\n  constructor(option?: {\n    image: string;\n    capacity?: number;\n    manualEmitCount?: number;\n  }) {\n    super();\n    if (option?.image) {\n      this._image = option.image;\n    }\n    if (option?.capacity) {\n      this.capacity = option.capacity;\n    }\n    if (option?.manualEmitCount) {\n      this._manualEmitCount = option.manualEmitCount;\n    }\n  }\n  get HasIntance() {\n    return !!this._intance;\n  }\n  get Intance() {\n    if (this._intance) return this._intance;\n    this._intance = this.initParticle();\n    if (this.Id) this.updateStatus();\n    return this._intance;\n  }\n  get ManualEmitCount() {\n    return this._manualEmitCount;\n  }\n  set ManualEmitCount(v: number) {\n    if (v === this._manualEmitCount) return;\n    this._manualEmitCount = v;\n    this.update();\n  }\n  get Capacity() {\n    return this.capacity;\n  }\n  set Capacity(v: number) {\n    if (this.capacity === v) return;\n    this.capacity = v;\n    if (ParticleSystem.Reading) return;\n    if (this._intance) {\n      this._intance.dispose();\n      this._intance = null;\n    }\n    this.Intance;\n    this.updateStatus();\n  }\n  get UpdateSpeed() {\n    return this._updateSpeed;\n  }\n  set UpdateSpeed(v: number) {\n    if (v === this._updateSpeed) return;\n    this._updateSpeed = v;\n    this.update();\n  }\n  get Size() {\n    return this._size;\n  }\n  set Size(v: IRange) {\n    this._size = v;\n    this.update();\n  }\n  get TextureUrl() {\n    if (!this._image) return \"\";\n\n    if (this._image.startsWith(\"http\")) return this._image;\n    else {\n      return AppConfig.Texture_URL + this._image;\n    }\n  }\n  get Image() {\n    return this._image;\n  }\n  set Image(v: string) {\n    if (v === this._image) return;\n    this._image = v;\n    this.update();\n  }\n  get Scale() {\n    return this._scale;\n  }\n  set Scale(v: IRange<IVector2>) {\n    this.writeSnapshoot();\n    this._scale = v;\n    this.update();\n  }\n  get Color1() {\n    return this.color1;\n  }\n  set Color1(v: string) {\n    this.color1 = v;\n    this.update();\n  }\n  get Color2() {\n    return this.color2;\n  }\n  set Color2(v: string) {\n    if (v === this.color2) return;\n    this.color2 = v;\n    this.update();\n  }\n  get ColorDead() {\n    return this.colorDead;\n  }\n  set ColorDead(v: string) {\n    if (v === this.colorDead) return;\n    this.colorDead = v;\n    this.update();\n  }\n  get EmitPower() {\n    return this.emitPower;\n  }\n  set EmitPower(v: IRange) {\n    if (v === this.emitPower) return;\n    this.emitPower = v;\n    this.update();\n  }\n  get AngularSpeed() {\n    return this._angularSpeed;\n  }\n  set AngularSpeed(v: IRange) {\n    this._angularSpeed = v;\n    this.update();\n  }\n  get Pivot() {\n    return vec2Vec2Like(this._pivot);\n  }\n  set Pivot(v: IVector2) {\n    setVecLike2Vector(this._pivot, v);\n    this.update();\n  }\n  get Direction1() {\n    return vec2Vec3Like(this.direction1);\n  }\n  set Direction1(v: IVector3) {\n    setVecLike2Vector(this.direction1, v);\n    this.update();\n  }\n  get Direction2() {\n    return vec2Vec3Like(this.direction2);\n  }\n  set Direction2(v: IVector3) {\n    setVecLike2Vector(this.direction2, v);\n    this.update();\n  }\n  get MinEmitBox() {\n    return vec2Vec3Like(this.minEmitBox);\n  }\n  set MinEmitBox(v: IVector3) {\n    setVecLike2Vector(this.minEmitBox, v);\n    this.update();\n  }\n  get MaxEmitBox() {\n    return vec2Vec3Like(this.maxEmitBox);\n  }\n  set MaxEmitBox(v: IVector3) {\n    setVecLike2Vector(this.maxEmitBox, v);\n    this.update();\n  }\n  get Gravity() {\n    return vec2Vec3Like(this._gravity);\n  }\n  set Gravity(v: IVector3) {\n    setVecLike2Vector(this._gravity, v);\n    this.update();\n  }\n  get EmiterPosition() {\n    return vec2Vec3Like(this.emiterPosition);\n  }\n  set EmiterPosition(v: IVector3) {\n    setVecLike2Vector(this.emiterPosition, v);\n    this.update();\n  }\n  get Rate() {\n    return this._rate;\n  }\n  set Rate(v: number) {\n    if (v === this._rate) return;\n    this._rate = v;\n    this.update();\n  }\n  get LifeTime() {\n    return this.lifeTime;\n  }\n  set LifeTime(v: IRange) {\n    this.lifeTime = v;\n    this.update();\n  }\n  get SpriteOption() {\n    return this.spriteOption;\n  }\n  set SpriteOption(v: any) {\n    this.spriteOption = v;\n    this.update();\n  }\n  get EmiterType() {\n    return this.emiterType;\n  }\n  set EmiterType(v: EmiterType) {\n    if (v === this.emiterType) return;\n    this.emiterType = v;\n    this.updateEmitType();\n  }\n  get EmiterShape() {\n    return this.emiterShape;\n  }\n  set EmiterShape(v: EmiterShape) {\n    if (v === this.emiterShape) return;\n    this.emiterShape = v;\n    this.updateEmitShape();\n  }\n  get EmiterEntity() {\n    return this.emiterEntity;\n  }\n  set EmiterEntity(v: ObjectId<Entity>) {\n    this.emiterEntity = v;\n    this.update();\n  }\n  get BlendMode() {\n    return this.blendMode;\n  }\n  set BlendMode(v: number) {\n    if (v === this.blendMode) return;\n    this.blendMode = v;\n    this.update();\n  }\n  get SubParticleSystems() {\n    return [...this.subParticleSystems];\n  }\n  set SubParticleSystems(v: SubEmitter[]) {\n    this.subParticleSystems = v;\n    this.needUpdateSubEmiters = true;\n    this.update();\n  }\n  get Emiter() {\n    return this.emiter;\n  }\n  get Gradients() {\n    return [...this.gradients];\n  }\n  set Gradients(v: IGradient[]) {\n    this.removeGradients();\n    this.gradients = v;\n    this.updateGradient();\n  }\n  get TargetStopDuration() {\n    return this._targetStopDuration;\n  }\n  set TargetStopDuration(v: number) {\n    if (v === this._targetStopDuration) return;\n    this._targetStopDuration = v;\n    this.update();\n  }\n  get Position() {\n    return vec2Vec3Like(this._position);\n  }\n  set Position(p: IVector3) {\n    this.writeSnapshoot();\n    setVecLike2Vector(this._position, p);\n    this.update();\n  }\n  fillScene(box?: Box3) {\n    const box3 = box ?? this.SceneSize;\n    if (box3) {\n      let { minimum, maximum } = box3;\n      minimum = minimum.clone();\n      maximum = maximum.clone();\n\n      if (this.emiterType === EmiterType.Point) {\n        const center = new Vector3(0, maximum.y + 10);\n        minimum.y = 0;\n        minimum.y = 0;\n        this.emiterPosition = center;\n        if (this.emiterShape === EmiterShape.Box) {\n          this.minEmitBox = minimum;\n          this.maxEmitBox = maximum;\n          this.update();\n        }\n      } else {\n        return;\n      }\n    }\n  }\n  appendGradient(v: IGradient) {\n    this.gradients.push(v);\n    this.updateGradient();\n  }\n  removeGradient(index: number) {\n    if (this.gradients[index]) {\n      const removeV = this.gradients.splice(index, 1);\n      this.removeGradients(removeV);\n    }\n  }\n  initParticle(): BParticleSystem {\n    const pcs = new BParticleSystem(\n      this.UniupeName,\n      this.capacity,\n      Entity.Scene\n    );\n    pcs.particleTexture = new Texture(this.TextureUrl, Entity.Scene);\n    this.updateParticle(pcs);\n    return pcs;\n  }\n\n  updateParticle(pcs: BParticleSystem) {\n    pcs.translationPivot = this._pivot;\n\n    const tur = pcs.particleTexture as Texture;\n    if (tur.url !== this.TextureUrl) {\n      tur.updateURL(this.TextureUrl);\n    }\n\n    this.updateEmitType(pcs);\n\n    this.updateEmitShape(pcs);\n\n    pcs.blendMode = this.blendMode;\n\n    //box range\n    pcs.minEmitBox = this.minEmitBox;\n    pcs.maxEmitBox = this.maxEmitBox;\n\n    //color\n    if (this.color1) pcs.color1 = Color4.FromHexString(this.color1);\n    if (this.color2) pcs.color2 = Color4.FromHexString(this.color2);\n    if (this.colorDead) pcs.colorDead = Color4.FromHexString(this.colorDead);\n\n    //size range\n    pcs.minSize = this._size.min;\n    pcs.maxSize = this._size.max;\n\n    // Life time of each particle (random between...\n    pcs.minLifeTime = this.lifeTime.min;\n    pcs.maxLifeTime = this.lifeTime.max;\n    pcs.targetStopDuration = this._targetStopDuration;\n\n    // Emission rate\n    pcs.emitRate = this._rate;\n    // ps1.manualEmitCount = 100;\n\n    // Set the gravity of all particles\n    pcs.gravity = this._gravity;\n\n    // Direction of each particle after it has been emitted\n    pcs.direction1 = this.direction1;\n    pcs.direction2 = this.direction2;\n\n    //sprite\n    if (this.spriteOption.isAnimationSheetEnabled) {\n      pcs.isAnimationSheetEnabled = this.spriteOption.isAnimationSheetEnabled;\n      pcs.spriteCellHeight = this.spriteOption.spriteCellHeight;\n      pcs.spriteCellWidth = this.spriteOption.spriteCellWidth;\n      pcs.spriteRandomStartCell = this.spriteOption.spriteRandomStartCell;\n      pcs.startSpriteCellID = this.spriteOption.startSpriteCellID;\n      pcs.endSpriteCellID = this.spriteOption.endSpriteCellID;\n      pcs.spriteCellChangeSpeed = this.spriteOption.spriteCellChangeSpeed;\n    } else {\n      pcs.isAnimationSheetEnabled = this.spriteOption.isAnimationSheetEnabled;\n    }\n\n    // Angular speed, in radians\n    pcs.minAngularSpeed = this._angularSpeed.min;\n    pcs.maxAngularSpeed = this._angularSpeed.max;\n\n    // Speed\n    pcs.minEmitPower = this.emitPower.min;\n    pcs.maxEmitPower = this.emitPower.max;\n\n    pcs.updateSpeed = this._updateSpeed;\n    pcs.manualEmitCount = this._manualEmitCount;\n\n    if (this.needUpdateSubEmiters) {\n      this.updateSubEmiters(pcs);\n    }\n\n    this.updateGradient(pcs);\n\n    pcs.worldOffset.copyFrom(this._position);\n  }\n\n  update() {\n    if (ParticleSystem.Reading) return;\n    if (this._intance) {\n      this.updateParticle(this._intance);\n    }\n  }\n  start() {\n    if (this._intance) {\n      this._intance.start();\n    }\n  }\n  stop() {\n    if (this._intance) {\n      this._intance.stop();\n    }\n  }\n  destory(): void {\n    super.destory();\n    if (this._intance) {\n      this._intance.dispose();\n      this._intance = null;\n      for (const sub of this.subParticleSystems) {\n        sub.destory();\n      }\n    }\n  }\n  fromJSON(\n    json: {\n      [P in keyof ParticleSystem]: P extends \"SubParticleSystems\"\n        ? Record<string, any>[]\n        : ParticleSystem[P];\n    },\n    isPart = false\n  ) {\n    if (!isPart) ParticleSystem.Reading = true;\n    let emiterJson: Record<string, any>;\n    for (const key in json) {\n      if (key in this) {\n        if (key === \"SubParticleSystems\") {\n          const subs = json.SubParticleSystems.map((s) =>\n            new SubEmitter(new ParticleSystem()).fromJSON(s)\n          );\n          this.subParticleSystems = subs;\n          this.needUpdateSubEmiters = true;\n        } else if (key === \"Emiter\") {\n          emiterJson = json[key];\n        } else {\n          this[key] = json[key];\n        }\n      }\n    }\n    if (!isPart) ParticleSystem.Reading = false;\n\n    if (emiterJson && this.emiter) {\n      this.emiter.fromJSON(emiterJson);\n      setTimeout(() => {\n        this.emiter.AttachSystem = this;\n      }, 0);\n    }\n\n    // this.update();\n    return this;\n  }\n  erase(e?: boolean): void {\n    super.erase(e);\n    if (this._intance) this._intance.stop();\n    AppEvent.trigger({ type: \"remove\", target: this });\n    this.trigger({ type: \"remove\", target: this });\n  }\n  toJSON() {\n    return {\n      capacity: this.capacity,\n      updateSpeed: this._updateSpeed,\n      size: { ...this._size },\n      image: this._image,\n      scale: this._scale,\n      color1: this.color1,\n      color2: this.color2,\n      colorDead: this.colorDead,\n    };\n  }\n  clone() {\n    const pcs = new ParticleSystem({\n      image: this._image,\n      capacity: this.capacity,\n    });\n    let filer = new HCFiler();\n    this.writeFile(filer);\n    pcs.readFile(filer);\n    this._id = null;\n\n    return pcs;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(2);\n    filer.write(this.capacity);\n    filer.write(this._manualEmitCount);\n    filer.write(this._updateSpeed);\n    filer.write(this._size.min);\n    filer.write(this._size.max);\n    filer.write(this._image);\n\n    filer.write(this._scale.min.x);\n    filer.write(this._scale.min.y);\n    filer.write(this._scale.max.x);\n    filer.write(this._scale.max.y);\n\n    filer.write(this.color1);\n    filer.write(this.color2);\n    filer.write(this.colorDead);\n\n    filer.write(this.emitPower.min);\n    filer.write(this.emitPower.max);\n\n    filer.write(this._angularSpeed.min);\n    filer.write(this._angularSpeed.max);\n\n    filer.write(this._pivot.x);\n    filer.write(this._pivot.y);\n\n    filer.writeArray(this.direction1.asArray());\n    filer.writeArray(this.direction2.asArray());\n    filer.writeArray(this.minEmitBox.asArray());\n    filer.writeArray(this.maxEmitBox.asArray());\n    filer.writeArray(this._gravity.asArray());\n\n    filer.write(this._rate);\n\n    filer.write(this.lifeTime.min);\n    filer.write(this.lifeTime.max);\n    filer.write(this._targetStopDuration);\n\n    filer.write(this.spriteOption.isAnimationSheetEnabled);\n    filer.write(this.spriteOption.spriteCellHeight);\n    filer.write(this.spriteOption.spriteCellWidth);\n    filer.write(this.spriteOption.spriteRandomStartCell);\n    filer.write(this.spriteOption.startSpriteCellID);\n    filer.write(this.spriteOption.endSpriteCellID);\n    filer.write(this.spriteOption.spriteCellChangeSpeed);\n\n    filer.write(this.emiterShape);\n    filer.write(this.emiterType);\n    filer.writeArray(this.emiterPosition.asArray());\n    filer.writeObjectId(this.emiterEntity);\n\n    filer.write(this.blendMode);\n\n    filer.writeAnyArray(this.subParticleSystems, filer.writeObject);\n\n    filer.writeObject(this.emiter);\n\n    filer.writeAnyArray(this.gradients, (g) => {\n      filer.write(g.key);\n      filer.write(g.period);\n      filer.write(g.value);\n      filer.write(g.otherValue);\n    });\n\n    filer.writeVector3(this._position);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const ver = filer.read();\n\n    this.capacity = filer.read();\n    this._manualEmitCount = filer.read();\n    this._updateSpeed = filer.read();\n    this._size.min = filer.read();\n    this._size.max = filer.read();\n    this._image = filer.read();\n\n    this._scale.min.x = filer.read();\n    this._scale.min.y = filer.read();\n    this._scale.max.x = filer.read();\n    this._scale.max.y = filer.read();\n\n    this.color1 = filer.read();\n    this.color2 = filer.read();\n    this.colorDead = filer.read();\n\n    this.emitPower.min = filer.read();\n    this.emitPower.max = filer.read();\n\n    this._angularSpeed.min = filer.read();\n    this._angularSpeed.max = filer.read();\n\n    this._pivot.x = filer.read();\n    this._pivot.y = filer.read();\n\n    let count = filer.read();\n    let arr = filer.readArray(count);\n    this.direction1.fromArray(arr);\n\n    count = filer.read();\n    arr = filer.readArray(count);\n    this.direction2.fromArray(arr);\n\n    count = filer.read();\n    arr = filer.readArray(count);\n    this.minEmitBox.fromArray(arr);\n\n    count = filer.read();\n    arr = filer.readArray(count);\n    this.maxEmitBox.fromArray(arr);\n\n    count = filer.read();\n    arr = filer.readArray(count);\n    this._gravity.fromArray(arr);\n\n    this._rate = filer.read();\n\n    this.lifeTime.min = filer.read();\n    this.lifeTime.max = filer.read();\n    this._targetStopDuration = filer.read();\n\n    this.spriteOption.isAnimationSheetEnabled = filer.read();\n    this.spriteOption.spriteCellHeight = filer.read();\n    this.spriteOption.spriteCellWidth = filer.read();\n    this.spriteOption.spriteRandomStartCell = filer.read();\n    this.spriteOption.startSpriteCellID = filer.read();\n    this.spriteOption.endSpriteCellID = filer.read();\n    this.spriteOption.spriteCellChangeSpeed = filer.read();\n\n    this.emiterShape = filer.read();\n    this.emiterType = filer.read();\n\n    count = filer.read();\n    arr = filer.readArray(count);\n    this.emiterPosition.fromArray(arr);\n    this.emiterEntity = filer.readObjectId() as any;\n\n    this.blendMode = filer.read();\n\n    filer.readAnyArrayAndPush(this.subParticleSystems, filer.readObject);\n    this.needUpdateSubEmiters = this.subParticleSystems.length > 0;\n\n    this.emiter = filer.readObject(this.emiter);\n\n    if (this.emiter && !this.emiter.AttachSystem) {\n      setTimeout(() => {\n        this.emiter.AttachSystem = this;\n      }, 0);\n    }\n    this.gradients.length = 0;\n    filer.readAnyArray(() => {\n      const g: IGradient = { key: \"Size\", period: 0, value: 0, otherValue: 0 };\n      g.key = filer.read();\n      g.period = filer.read();\n      g.value = filer.read();\n      g.otherValue = filer.read();\n      this.gradients.push(g);\n    });\n\n    if (ver > 1) {\n      filer.readVector3(this._position);\n    }\n\n    this.update();\n    this.updateStatus();\n  }\n  private updateSubEmiters(pcs = this._intance) {\n    if (pcs) {\n      pcs.subEmitters = [this.subParticleSystems.map((s) => s.Intance)];\n      this.updateStatus();\n      this.needUpdateSubEmiters = false;\n    }\n  }\n  private updateEmitShape(pcs = this._intance) {\n    this.emiter = null;\n    switch (this.emiterShape) {\n      case EmiterShape.Point:\n        if (pcs) pcs.createPointEmitter(this.direction1, this.direction2);\n        break;\n      case EmiterShape.Box:\n        if (pcs)\n          pcs.createBoxEmitter(\n            this.direction1,\n            this.direction2,\n            this.minEmitBox,\n            this.maxEmitBox\n          );\n        break;\n      case EmiterShape.Sphere:\n        this.emiter = new SphereEmiter(this);\n        break;\n      case EmiterShape.Hemisphere:\n        this.emiter = new HemisphericEmiter(this);\n        break;\n      case EmiterShape.Cylinder:\n        this.emiter = new CylinderEmitter(this);\n        break;\n      case EmiterShape.DirctedCylinder:\n        this.emiter = new DirectedCylinder(this);\n        break;\n      case EmiterShape.Cone:\n        this.emiter = new ConeEmitter(this);\n        break;\n      case EmiterShape.Mesh:\n        break;\n      case EmiterShape.Custom:\n        break;\n    }\n  }\n  private updateEmitType(pcs = this._intance) {\n    if (!pcs) return;\n    switch (this.emiterType) {\n      case EmiterType.Point:\n        pcs.emitter = this.emiterPosition;\n        break;\n      case EmiterType.Entity:\n        if (this.emiterEntity?.Object)\n          pcs.emitter = this.emiterEntity.Object.RenderObject;\n        break;\n      case EmiterType.Camera:\n        //@ts-ignore\n        pcs.emitter = Entity.Scene.activeCamera;\n    }\n  }\n  private updateGradient(pcs = this._intance) {\n    if (!pcs) return;\n    for (const gradient of this.gradients) {\n      switch (gradient.key) {\n        case \"Size\":\n          pcs.removeSizeGradient(gradient.period);\n          pcs.addSizeGradient(\n            gradient.period,\n            gradient.value,\n            gradient.otherValue\n          );\n          break;\n        case \"Color\":\n          pcs.removeColorGradient(gradient.period);\n          pcs.addColorGradient(\n            gradient.period,\n            Color4.FromHexString(gradient.value),\n            Color4.FromHexString(gradient.otherValue)\n          );\n          break;\n      }\n    }\n  }\n  private removeGradients(\n    gs: IGradient[] = this.gradients,\n    pcs = this._intance\n  ) {\n    if (!pcs) return;\n    for (const gradient of gs) {\n      switch (gradient.key) {\n        case \"Size\":\n          pcs.removeSizeGradient(gradient.period);\n          break;\n        case \"Color\":\n          pcs.removeColorGradient(gradient.period);\n          break;\n      }\n    }\n  }\n}\n","import { ParticleSystem } from \"./ParticleSystem\";\nimport { Particle } from \"./Particle\";\nimport {\n  ParticleSystemSet,\n  ParticleSystem as BParticleSystem,\n} from \"../babylon\";\nimport { HCFiler, Factory } from \"@hc/core\";\nimport { AppEvent } from \"../core/AppEvent\";\n\n@Factory\nexport class ParticleSystemGroup extends Particle {\n  static type = \"ParticleSystemGroup\";\n  protected _name: string = \"粒子组合\";\n  private _intance: ParticleSystemSet;\n  systems: ParticleSystem[] = [];\n  get Intance() {\n    if (this._intance) return this._intance;\n    this._intance = this.initParticle();\n    this.updateStatus();\n    return this._intance;\n  }\n  initParticle(): ParticleSystemSet {\n    const set = new ParticleSystemSet();\n    for (const s of this.systems) {\n      set.systems.push(s.Intance);\n    }\n    return set;\n  }\n  updateParticle(pcset: ParticleSystemSet): void {\n    for (let i = 0; i < this.systems.length; i++) {\n      this.systems[i].updateParticle(pcset.systems[i] as BParticleSystem);\n    }\n  }\n  start(): void {\n    if (this._intance) this._intance.start();\n  }\n  stop(): void {\n    this.systems.forEach((s) => s.stop());\n  }\n  fillScene() {\n    const box3 = this.SceneSize;\n    if (!box3) return;\n    for (let i = 0; i < this.systems.length; i++) {\n      this.systems[i].fillScene(box3);\n    }\n  }\n  destory(): void {\n    this._intance?.dispose?.();\n    this.systems.length = 0;\n  }\n  erase(e = true) {\n    super.erase(e);\n    if (this._intance) this._intance.systems.forEach((s) => s.stop());\n    AppEvent.trigger({ type: \"remove\", target: this });\n    this.trigger({ type: \"remove\", target: this });\n  }\n  fromJSON(jsons: Record<string, any>[]): this {\n    ParticleSystem.Reading = true;\n    for (const json of jsons) {\n      const pcs = new ParticleSystem();\n      pcs.fromJSON(json as any, true);\n      this.systems.push(pcs);\n    }\n    ParticleSystem.Reading = false;\n    return this;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.writeAnyArray(this.systems, filer.writeObject);\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.readAnyArrayAndPush(this.systems, filer.readObject);\n    this.updateStatus();\n  }\n}\n","import { Factory, HCFiler, ObjectId, ObjectRecord } from \"@hc/core\";\n\nimport { Nullable } from \"../babylon\";\n\n@Factory\nexport class CollectionRecord extends ObjectRecord {\n  private static VERSION = 3;\n\n  static type = \"CollectionRecord\";\n  entitys: ObjectId[];\n  private _isPickable = true;\n  private _visiable = true;\n  private _isSelect = false;\n\n  private _groupId: Nullable<ObjectId<CollectionRecord>>;\n\n  constructor() {\n    super();\n    const self = this;\n    this.entitys = new Proxy([], {\n      get(target, key, receiver) {\n        return Reflect.get(target, key, receiver);\n      },\n      set(target, key, value, receiver) {\n        if (Reflect.get(target, key, receiver) !== value) {\n          if (self.UndoRecord) {\n            if (value instanceof ObjectId) {\n              if (!self.Id) console.warn(\"请先添加到Database后在进行操作!\");\n              else\n                value.Object.GroupId =\n                  self.ObjectId as ObjectId<CollectionRecord>;\n            }\n          }\n        }\n        return Reflect.set(target, key, value, receiver);\n      },\n    });\n  }\n\n  get GroupId() {\n    return this._groupId;\n  }\n  set GroupId(v) {\n    this._groupId = v;\n  }\n\n  get IsSelect() {\n    return this._isSelect;\n  }\n  set IsSelect(v: boolean) {\n    this._isSelect = v;\n  }\n  get IsPickable() {\n    return this._isPickable;\n  }\n  set IsPickable(v: boolean) {\n    if (v === this._isPickable) return;\n    this.writeSnapshoot();\n    this._isPickable = v;\n\n    for (const en of this.entitys) {\n      if (\"IsPickable\" in en.Object) {\n        en.Object[\"IsPickable\"] = v;\n      }\n    }\n  }\n  get Visiable() {\n    return this._visiable;\n  }\n  set Visiable(v) {\n    if (v === this._visiable) return;\n    this.writeSnapshoot();\n    this._visiable = v;\n    for (const en of this.entitys) {\n      if (\"Visiable\" in en.Object) {\n        en.Object[\"Visiable\"] = v;\n      }\n    }\n  }\n\n  erase(e?: boolean): void {\n    super.erase(e);\n    for (const en of this.entitys) {\n      en.Object?.erase?.(e);\n    }\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const version = filer.read();\n    filer.readAnyArrayAndPush(this.entitys, filer.readObjectId);\n\n    if (version >= 2) {\n      this.GroupId = filer.readObjectId();\n    }\n\n    if (version >= 3) {\n      this._visiable = filer.read();\n      this._isPickable = filer.read();\n    }\n\n    if (version <= 3) {\n      this.entitys.forEach((e) => {\n        if (e.Object) {\n          if (!e.Object[\"GroupId\"]) e.Object[\"GroupId\"] = this.ObjectId;\n        }\n      });\n    }\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(CollectionRecord.VERSION);\n    filer.writeAnyArray(this.entitys, filer.writeObjectId);\n    filer.writeObjectId(this._groupId);\n\n    filer.write(this._visiable);\n    filer.write(this._isPickable);\n  }\n}\n","import { HCFiler, ObjectId, Factory } from \"@hc/core\";\nimport { Entity } from \"../entitys\";\nimport { CollectionRecord } from \"./CollectionRecord\";\n\n@Factory\nexport class GroupRecord extends CollectionRecord {\n  static type = \"GroupRecord\";\n  constructor() {\n    super();\n    const self = this;\n    this.entitys = new Proxy([], {\n      get(target, key, receiver) {\n        return Reflect.get(target, key, receiver);\n      },\n      set(target, key, value, receiver) {\n        if (Reflect.get(target, key, receiver) !== value) {\n          if (self.UndoRecord) {\n            if (value instanceof ObjectId && value.Object instanceof Entity) {\n              if (!self.Id) console.warn(\"请先添加到Database后在进行操作!\");\n              else\n                value.Object.GroupId = self.ObjectId as ObjectId<GroupRecord>;\n            }\n          }\n        }\n        return Reflect.set(target, key, value, receiver);\n      },\n    });\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n  }\n}\n","import { Vector2, Vector3 } from \"../../babylon\";\n\n/**\n * Create the arcs point for a LWPOLYLINE. The start and end are excluded\n *\n * See diagram.png in this directory for description of points and angles used.\n */\nexport default (\n  from: Vector3,\n  to: Vector3,\n  bulge: number,\n  resolution = 5\n): Vector2[] => {\n  // If the bulge is < 0, the arc goes clockwise. So we simply\n  // reverse a and b and invert sign\n  // Bulge = tan(theta/4)\n  let theta: number;\n  let a: Vector2;\n  let b: Vector2;\n\n  if (bulge < 0) {\n    theta = Math.atan(-bulge) * 4;\n    a = new Vector2(from.x, from.y);\n    b = new Vector2(to.x, to.y);\n  } else {\n    // Default is counter-clockwise\n    theta = Math.atan(bulge) * 4;\n    a = new Vector2(to.x, to.y);\n    b = new Vector2(from.x, from.y);\n  }\n\n  const ab = b.subtract(a);\n  const lengthAB = ab.length();\n  const c = a.add(ab.scale(0.5));\n\n  // Distance from center of arc to line between form and to points\n  const lengthCD = Math.abs(lengthAB / 2 / Math.tan(theta / 2));\n  const normAB = ab.normalize();\n\n  let d: Vector2;\n  if (theta < Math.PI) {\n    const normDC = new Vector2(\n      normAB.x * Math.cos(Math.PI / 2) - normAB.y * Math.sin(Math.PI / 2),\n      normAB.y * Math.cos(Math.PI / 2) + normAB.x * Math.sin(Math.PI / 2)\n    );\n    // D is the center of the arc\n    d = c.add(normDC.scale(-lengthCD));\n  } else {\n    const normCD = new Vector2(\n      normAB.x * Math.cos(Math.PI / 2) - normAB.y * Math.sin(Math.PI / 2),\n      normAB.y * Math.cos(Math.PI / 2) + normAB.x * Math.sin(Math.PI / 2)\n    );\n    // D is the center of the arc\n    d = c.add(normCD.scale(lengthCD));\n  }\n\n  // Add points between start start and eng angle relative\n  // to the center point\n  const startAngle = (Math.atan2(b.y - d.y, b.x - d.x) / Math.PI) * 180;\n  let endAngle = (Math.atan2(a.y - d.y, a.x - d.x) / Math.PI) * 180;\n  if (endAngle < startAngle) {\n    endAngle += 360;\n  }\n  const r = b.subtract(d).length();\n\n  const startInter =\n    Math.floor(startAngle / resolution) * resolution + resolution;\n  const endInter = Math.ceil(endAngle / resolution) * resolution - resolution;\n\n  const points: Vector2[] = [];\n  for (let i = startInter; i <= endInter; i += resolution) {\n    points.push(\n      d.add(\n        new Vector2(\n          Math.cos((i / 180) * Math.PI) * r,\n          Math.sin((i / 180) * Math.PI) * r\n        )\n      )\n    );\n  }\n  // Maintain the right ordering to join the from and to points\n  if (bulge < 0) {\n    points.reverse();\n  }\n  return points;\n};\n","import {\n  AssetsManager,\n  Color4,\n  CreateLines,\n  CreateLineSystem,\n} from \"../../babylon\";\nimport {\n  IBlock,\n  IDxf,\n  IEntity,\n  IInsertEntity,\n  IPoint,\n  IPolylineEntity,\n  ILineEntity,\n  ILayer,\n} from \"dxf-parser\";\nimport DxfParser from \"dxf-parser\";\nimport {\n  Color3,\n  LinesMesh,\n  Matrix,\n  Scene,\n  Tools,\n  TransformNode,\n  Vector3,\n} from \"../../babylon\";\nimport { asVector3, toRgba } from \"./utils\";\nimport createArcForLWPolyline from \"./createArcForLWPolyline\";\nimport { sleep } from \"../../utils/utils\";\nimport { EventDispatcher } from \"@hc/core\";\nimport { ImportEntity } from \"../../entitys\";\nimport {\n  arrayLast,\n  Box3,\n  deg2rad,\n  getAreaByPoints,\n  getPointToLineDistance,\n} from \"../../utils\";\nimport { IBlockRecord } from \"dxf-parser/esm/DxfParser\";\n\nexport type ModelConfig = {\n  name?: string;\n  length?: number;\n  width?: number;\n  depth?: number;\n  rotationOffset?: number;\n  isOuterWall?: boolean;\n};\n\nexport type IDXFLoaderConfig = {\n  destoryBlock: boolean;\n  ignoreLayers: Set<string>;\n  ignoreBlocks: Set<string>;\n  scale: number;\n  destoryDXF: boolean;\n  modelMap: Record<string, ModelConfig>;\n  clearLines?: boolean;\n};\nexport type { IBlock, IDxf } from \"dxf-parser\";\n\ndeclare module \"dxf-parser\" {\n  export interface IBlock {\n    used?: boolean;\n  }\n}\n\nexport class DXFLoader extends EventDispatcher {\n  static Parser = new DxfParser();\n  private BlockMap = new Map<string, LinesMesh>();\n  private material = new Map();\n  private matrix4 = new Matrix();\n  public name: string;\n  public result: IDxf;\n  public entitys: LinesMesh[] = [];\n  public ModelList: ImportEntity[] = [];\n  public root: TransformNode;\n  public center: Vector3;\n  public config: IDXFLoaderConfig = {\n    destoryBlock: true,\n    ignoreLayers: new Set<string>(),\n    ignoreBlocks: new Set<string>(),\n    scale: 1e3,\n    destoryDXF: false,\n    modelMap: {},\n  };\n  public size = new Vector3();\n  public outerWalls: { thickness: number; outline: Vector3[] }[] = [];\n  constructor(content: string, private scene: Scene) {\n    super();\n    console.time(\"分析dxf\");\n    this.result = DXFLoader.Parser.parse(content);\n    console.timeEnd(\"分析dxf\");\n\n    Matrix.FromXYZAxesToRef(\n      new Vector3(1),\n      new Vector3(0, 0, 1),\n      new Vector3(0, 1),\n      this.matrix4\n    );\n    window[\"dxf\"] = this;\n\n    const max = this.asVector3(this.result.header[\"$EXTMAX\"] as IPoint);\n    const min = this.asVector3(this.result.header[\"$EXTMIN\"] as IPoint);\n    const center = Vector3.Center(max, min);\n    const box = new Box3(min, max);\n    center.z = 0;\n    this.center = center;\n    this.size = box.extendSizeWorld.scale(2 * this.config.scale);\n\n    for (const i in this.result.blocks) {\n      if (this.result.blocks.hasOwnProperty(i)) {\n        const block = this.result.blocks[i];\n        if (block.type === 1) {\n          const records = this.result.tables.blockRecord.blockRecord;\n          const record = records[block.name] as IBlockRecord;\n          const dbHandle = record.dbHandle;\n          if (dbHandle) {\n            for (const k in records) {\n              if (records.hasOwnProperty(k)) {\n                if (records[k].handle === dbHandle) {\n                  block.name = records[k].name;\n                  block[\"used\"] = true;\n                  break;\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  get UsedBlocksLayers(): [IBlock[], ILayer[]] {\n    const blocks = new Set<IBlock>();\n    const layers = new Set<ILayer>();\n\n    for (const en of this.result.entities) {\n      if (en.type === \"INSERT\") {\n        const name = (en as IInsertEntity).name;\n        const block = this.result.blocks[name];\n        blocks.add(block);\n      }\n      const ls = this.result.tables.layer.layers;\n      layers.add(ls[en.layer]);\n    }\n\n    return [Array.from(blocks), Array.from(layers)];\n  }\n  async parse() {\n    console.time(\"加载DXF\");\n    const lines = await this.parseEntitys(this.result.entities, null, true);\n    const root = new TransformNode(\"root-position\", this.scene);\n    for (const l of lines) {\n      l.parent = root;\n    }\n\n    root.position = this.center.negate();\n    const r = new TransformNode(\"dxf-root\", this.scene);\n    root.parent = r;\n    r.rotation.x = -Math.PI / 2;\n\n    this.root = r;\n\n    this.root.metadata = {\n      needDispose: true,\n    };\n\n    this.entitys = lines;\n    console.timeEnd(\"加载DXF\");\n\n    this.trigger({\n      type: \"load\",\n      target: null,\n    });\n  }\n  async parseEntitys(ens: IEntity[], block?: IBlock, root?: boolean) {\n    let i = 0;\n    let lines: LinesMesh[] = [];\n    if (block) {\n      const points: Vector3[][] = [];\n      const ls: LinesMesh[] = [];\n      for (const en of ens) {\n        const ps = await this.parseEntity(en);\n        if (ps.length > 0) {\n          if (ps[0] instanceof LinesMesh) {\n            ls.push(...(ps as LinesMesh[]));\n          } else {\n            points.push(ps as Vector3[]);\n          }\n        }\n        i++;\n        if (i > 500) {\n          await sleep(0);\n          i = 0;\n        }\n      }\n      let wall: { thickness: number; outline: Vector3[] };\n      if (this.config.modelMap[block.name]?.isOuterWall) {\n        wall = this.parseWall(points);\n      }\n\n      const line = CreateLineSystem(\n        this.config.modelMap[block.name]?.name || block.name,\n        { lines: points },\n        this.scene\n      );\n      line.metadata = {\n        block: true,\n        layer: block.layer,\n        originName: block.name,\n        wall,\n      };\n      for (const l of ls) {\n        l.parent = line;\n      }\n      lines.push(line);\n    } else {\n      for (let current = 0; current < ens.length; current++) {\n        const en = ens[current];\n        if (root) {\n          if (this.config.ignoreLayers.has(en.layer)) {\n            continue;\n          }\n          if (en.type === \"INSERT\") {\n            const name = (en as IInsertEntity).name;\n            if (this.config.ignoreBlocks.has(name)) continue;\n          }\n        }\n        const ps = await this.parseEntity(en);\n        if (ps.length > 0) {\n          if (ps[0] instanceof Vector3) {\n            const line = CreateLines(\n              en.layer,\n              { points: ps as Vector3[] },\n              this.scene\n            );\n            line.metadata = {\n              block: false,\n              layer: en.layer,\n              id: en.handle,\n            };\n            this.setColor(en, line);\n            lines.push(line);\n          } else {\n            lines.push(...(ps as LinesMesh[]));\n          }\n        }\n        i++;\n        if (i > 500) {\n          await sleep(0);\n          i = 0;\n        }\n        if (root) {\n          this.trigger({\n            type: \"loading\",\n            target: null,\n            total: this.result.entities.length,\n            current: current,\n          });\n        }\n      }\n    }\n    return lines;\n  }\n  async parseEntity(en: IEntity) {\n    switch (en.type) {\n      case \"LINE\":\n        return this.parseLine(en as ILineEntity);\n      case \"POLYLINE\":\n      case \"LWPOLYLINE\":\n        return this.parsePolyline(en as IPolylineEntity);\n      case \"INSERT\": {\n        const { xScale, yScale, zScale, position, rotation, name } =\n          en as IInsertEntity;\n\n        const block = this.result.blocks[name];\n        let lines: LinesMesh[];\n\n        if (block.entities) {\n          if (this.BlockMap.has(name)) {\n            const origin = this.BlockMap.get(name);\n            const mesh = origin.clone(origin.name);\n            mesh.metadata = { ...origin.metadata };\n            lines = [mesh];\n          } else {\n            lines = await this.parseEntitys(block.entities, block);\n            this.BlockMap.set(name, lines[0]);\n          }\n\n          let roOffset = this.config.modelMap[block.name]?.rotationOffset ?? 0;\n          roOffset = deg2rad(roOffset);\n\n          for (const l of lines) {\n            l.scaling = new Vector3(xScale ?? 1, yScale ?? 1, zScale ?? 1);\n            l.position = this.asVector3(position);\n            if (!l.metadata.size) {\n              l.rotation.z = roOffset;\n              l.computeWorldMatrix(true);\n              const size = l\n                .getBoundingInfo()\n                .boundingBox.extendSizeWorld.scale(2);\n              l.metadata.size = size;\n            }\n            const ro = Tools.ToRadians(rotation ?? 0);\n            l.rotation.z = ro;\n            l.metadata.rotation = ro;\n            l.metadata.rotationOffset = roOffset;\n\n            l.computeWorldMatrix(true);\n            const center = l.getBoundingInfo().boundingBox.centerWorld.clone();\n            center.addToRef(this.center.negate(), center);\n            l.metadata.center = center;\n            l.metadata.id = en.handle;\n            l.metadata.scale = l.scaling;\n\n            if (l.metadata.wall) {\n              l.metadata.wall.outline = l.metadata.wall.outline.map((p) =>\n                p.add(l.position).add(this.center.negate())\n              );\n            }\n          }\n        }\n        return lines;\n      }\n      default:\n        return [];\n    }\n  }\n  parseLine(en: ILineEntity) {\n    const vertices = en.vertices;\n    if (vertices?.length) {\n      const ps = vertices.map((p) => this.asVector3(p));\n      return ps;\n    }\n    return [];\n  }\n  parsePolyline(entity: IPolylineEntity) {\n    const vertices = entity.vertices;\n    if (!vertices?.length) return [];\n\n    const ps: Vector3[] = [];\n    for (let i = 0; i < vertices.length - 1; i++) {\n      const from = this.asVector3(vertices[i], false);\n      const to = this.asVector3(vertices[i + 1], false);\n      ps.push(from);\n      if (vertices[i].bulge) {\n        const points = createArcForLWPolyline(from, to, vertices[i].bulge, 10);\n        ps.push(...points.map((p) => this.asVector3(new Vector3(p.x, p.y))));\n      }\n      if (i === vertices.length - 2) {\n        ps.push(to);\n      }\n    }\n\n    if (entity.shape) {\n      ps.push(ps[0].clone());\n    }\n\n    return ps;\n  }\n  asVector3(p: IPoint, isRot = true) {\n    //   if (isRot)\n    //   return Vector3.TransformCoordinates(\n    //     asVector3(p, this.scale),\n    //     this.matrix4\n    //   );\n    // else\n    return asVector3(p, this.config.scale);\n  }\n  setColor(entity: IEntity, line: LinesMesh) {\n    const layerTable = this.result.tables.layer.layers;\n    let rbg = [];\n    if (layerTable) {\n      rbg = toRgba(layerTable[entity.layer].color);\n    } else {\n      rbg = [255, 255, 255];\n    }\n    const key = rbg.join(\"-\");\n    // if (this.material.has(key)) {\n    //   console.log(\"key: \", key);\n    //   line.material = this.material.get(key);\n    // } else {\n    line.color = Color3.FromArray(rbg);\n    this.material.set(key, line.material);\n    // }\n  }\n  parseWall(points: Vector3[][]) {\n    //TODO:当前算法仅识别 特定的轮廓作为外墙轮廓，无法识别其他场景，需要扩展\n    const closestPoints: Vector3[][] = [];\n    const areaMap = new WeakMap<Vector3[], number>();\n    for (const ps of points) {\n      if (ps.length > 2 && ps[0].equalsWithEpsilon(arrayLast(ps))) {\n        closestPoints.push(ps);\n      }\n      areaMap;\n    }\n\n    if (closestPoints.length === 1) {\n      return {\n        thickness: 10,\n        outline: closestPoints[0],\n      };\n    } else {\n      closestPoints.sort((p, p2) => getAreaByPoints(p) - getAreaByPoints(p2));\n      const basePt = closestPoints[0][0];\n      let thickness = Infinity;\n      for (let i = 0; i < closestPoints[1].length - 1; i++) {\n        const p1 = closestPoints[1][i];\n        const p2 = closestPoints[1][i + 1];\n        const dist = getPointToLineDistance([p1, p2], basePt);\n        thickness = Math.min(thickness, dist);\n      }\n      return {\n        thickness: thickness,\n        outline: closestPoints[1],\n      };\n    }\n  }\n}\n","import { Vector3 } from \"../../babylon\";\nimport { IPoint } from \"dxf-parser\";\n\nexport function toRgba(color: number) {\n  let rgb = [];\n\n  let b = color & 0xff;\n\n  let g = (color >> 8) & 0xff;\n\n  let r = (color >> 16) & 0xff;\n\n  rgb[0] = r;\n\n  rgb[1] = g;\n\n  rgb[2] = b;\n\n  return rgb;\n}\n\nexport function asVector3(p: IPoint, scale = 1) {\n  return new Vector3(p.x / scale, p.y / scale, (p.z ?? 0) / scale);\n}\n","import { Utils } from \"@hc/engine\";\n\nexport function sleep(t: number) {\n  return new Promise((res) => setTimeout(res, t));\n}\n\nexport function equaln(v1: number, v2: number, fuzz = 1e-5) {\n  return Math.abs(v1 - v2) <= fuzz;\n}\n\n//使用定点表示法来格式化一个数,小数点后面不尾随0. 如 FixedNotZero(1.1 , 3) => 1.1\nexport function fixedNotZero(v: number | string, fractionDigits = 0) {\n  if (typeof v === \"string\") v = parseFloat(v);\n  if (isNaN(v)) return \"\";\n  if (equaln(v, 0)) return \"0\";\n  let str = v.toFixed(fractionDigits);\n  let commonIndex = str.indexOf(\".\");\n  if (commonIndex !== -1) {\n    let zeroCount = 0;\n    let strCount = str.length;\n    for (let l = strCount; l--; ) {\n      if (str[l] === \"0\") zeroCount++;\n      else break;\n    }\n    if (zeroCount > 0) {\n      if (zeroCount === strCount - commonIndex - 1) zeroCount++;\n      return str.slice(0, strCount - zeroCount);\n    }\n  }\n  return str;\n}\n\nexport function formatDate(value: string, fmt: string) {\n  let regPos = /^\\d+(\\.\\d+)?$/;\n  if (regPos.test(value)) {\n    //如果是数字\n    let getDate = new Date(value);\n    let o = {\n      \"M+\": getDate.getMonth() + 1,\n      \"d+\": getDate.getDate(),\n      \"h+\": getDate.getHours(),\n      \"m+\": getDate.getMinutes(),\n      \"s+\": getDate.getSeconds(),\n      \"q+\": Math.floor((getDate.getMonth() + 3) / 3),\n      S: getDate.getMilliseconds(),\n    };\n    if (/(y+)/.test(fmt)) {\n      fmt = fmt.replace(\n        RegExp.$1,\n        (getDate.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n      );\n    }\n    for (let k in o) {\n      if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n        fmt = fmt.replace(\n          RegExp.$1,\n          RegExp.$1.length === 1\n            ? o[k]\n            : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n        );\n      }\n    }\n    return fmt;\n  } else {\n    //TODO\n    value = value.trim();\n    return value.substr(0, fmt.length);\n  }\n}\n\nlet copyValue: string | undefined;\n\nexport async function copyText(content: string) {\n  if (navigator.clipboard) {\n    return navigator.clipboard.writeText(content);\n  } else {\n    const aux = document.createElement(\"input\");\n    aux.style.position = \"fixed\";\n    // aux.style.display = \"none\";\n    document.body.appendChild(aux);\n    aux.setAttribute(\"value\", content);\n    aux.value = content;\n    setTimeout(() => {\n      aux.select();\n      document.execCommand(\"copy\");\n      document.body.removeChild(aux);\n    }, 0);\n    copyValue = content;\n    return true;\n  }\n}\n\nlet resolveFun: (txt: string) => void;\n\ndocument.addEventListener(\"paste\", function (e) {\n  if (resolveFun) {\n    resolveFun(e.clipboardData?.getData(\"text/plain\") || \"\");\n  }\n});\n\nexport async function getCopyText() {\n  if (navigator.clipboard) {\n    return navigator.clipboard.readText();\n  } else if (copyValue) {\n    const aux = document.getElementById(\"domClipboard\");\n    return new Promise<string>((res) => {\n      res(copyValue || \"\");\n    });\n  } else {\n    return new Promise<string>((res) => {\n      resolveFun = res;\n    });\n  }\n}\n\nexport const getRgba = (c: string) => {\n  const color = Utils.Color4.FromHexString(c);\n  return { r: color.r * 255, g: color.g * 255, b: color.b * 255, a: color.a };\n};\n\nexport const validateImage = (url: string) => {\n  // var xmlHttp;\n  // if (window.ActiveXObject) {\n  //   xmlHttp = new ActiveXObject(\"Microsoft.XMLHTTP\");\n  // } else if (window.XMLHttpRequest) {\n  let xmlHttp = new XMLHttpRequest();\n  // }\n  xmlHttp.open(\"Get\", url, false);\n  xmlHttp.send();\n  return xmlHttp.status !== 404;\n};\n\nexport function rad2Deg(v: number) {\n  if (!v) return \"\";\n  const deg = Utils.rad2Deg(v);\n  return fixedNotZero(deg);\n}\n\nexport function deg2rad(v: string) {\n  if (!v) return;\n  const value = parseFloat(v);\n  return Utils.deg2rad(value);\n}\n\nexport function isDebugBBL() {\n  return (\n    !!BBL_DEGUG && (DEBUG === \"true\" || !!localStorage.getItem(\"DEBUGBBL\"))\n  );\n}\n\nexport function handleObjectFunction(object: any) {\n  if (object) {\n    if (Array.isArray(object)) {\n      for (const o of object) {\n        handleObjectFunction(o);\n      }\n    } else if (typeof object === \"object\") {\n      for (const k in object) {\n        if (typeof object[k] === \"string\" && object[k].startsWith(\"function\")) {\n          object[k] = new Function(\"return \" + object[k])();\n        } else if (typeof object[k] === \"object\") {\n          handleObjectFunction(object[k]);\n        }\n      }\n    }\n  }\n  return object;\n}\nexport function imgUrlToFile(img: string, callback: (file: File) => void) {\n  let fileName = img.split(\"/\").pop();\n  let type = fileName?.split(\".\").pop();\n  dataURLtoBlob(img, function (blobData: Blob) {\n    var file = new File([blobData], fileName!, { type: \"image/\" + type });\n    callback(file);\n  });\n}\n\n// 图片url格式转为blob格式\nfunction dataURLtoBlob(dataurl: string, callback: (blob: Blob) => void) {\n  let xhr = new XMLHttpRequest();\n  xhr.open(\"get\", dataurl, true);\n  xhr.responseType = \"blob\";\n  xhr.onload = function (res) {\n    if (this.status == 200) {\n      var blob = this.response;\n      callback(blob);\n    }\n  };\n  xhr.send();\n}\nexport function _watermark(select: unknown, imgSrc: string) {\n  //默认设置\n  const defaultSettings = {\n    watermarl_element: select,\n    watermark_txt: \"\",\n    watermark_img: imgSrc,\n    watermark_x: 20, //水印起始位置x轴坐标\n    watermark_y: 50, //水印起始位置Y轴坐标\n    watermark_rows: 5, //水印行数\n    watermark_cols: 5, //水印列数\n    watermark_x_space: 100, //水印x轴间隔\n    watermark_y_space: 180, //水印y轴间隔\n    watermark_color: \"#000\", //水印字体颜色\n    watermark_alpha: 0.08, //水印透明度\n    watermark_fontsize: \"35px\", //水印字体大小\n    watermark_font: \"微软雅黑\", //水印字体\n    watermark_width: 416, //水印宽度\n    watermark_height: 96, //水印长度\n    watermark_angle: 15, //水印倾斜度数\n  };\n  //采用配置项替换默认值，作用类似jquery.extend\n  if (arguments.length === 1 && typeof arguments[0] === \"object\") {\n    var src = arguments[0] || {};\n    for (let key in src) {\n      if (src[key] && defaultSettings[key] && src[key] === defaultSettings[key])\n        continue;\n      else if (src[key]) defaultSettings[key] = src[key];\n    }\n  }\n\n  const oTemp = document.createDocumentFragment();\n\n  const maskElement =\n    document.getElementById(defaultSettings.watermarl_element) || document.body;\n\n  //获取页面最大宽度\n  const page_width = Math.max(maskElement.scrollWidth, maskElement.clientWidth);\n\n  //获取页面最大高度\n  const page_height = Math.max(\n    maskElement.scrollHeight,\n    maskElement.clientHeight\n  );\n\n  //水印数量自适应元素区域尺寸\n  defaultSettings.watermark_cols = Math.ceil(\n    page_width /\n      (defaultSettings.watermark_x_space + defaultSettings.watermark_width)\n  );\n  defaultSettings.watermark_rows = Math.ceil(\n    page_height /\n      (defaultSettings.watermark_y_space + defaultSettings.watermark_height)\n  );\n  let x, y;\n  for (let i = 0; i < defaultSettings.watermark_rows; i++) {\n    y =\n      defaultSettings.watermark_y +\n      (defaultSettings.watermark_y_space + defaultSettings.watermark_height) *\n        i;\n    for (let j = 0; j < defaultSettings.watermark_cols; j++) {\n      x =\n        defaultSettings.watermark_x +\n        (defaultSettings.watermark_width + defaultSettings.watermark_x_space) *\n          j;\n      let mask_div = document.createElement(\"div\");\n      let mask_img = document.createElement(\"img\");\n      mask_div.id = \"mask_div\" + i + j;\n      mask_div.className = \"mask_div\";\n      mask_img.className = \"mask_img\";\n      //mask_div.appendChild(document.createTextNode(defaultSettings.watermark_txt));\n      mask_div.innerHTML = defaultSettings.watermark_txt;\n      mask_img.src = defaultSettings.watermark_img;\n      mask_img.style.width = \"416px\";\n      mask_img.style.height = \"96px\";\n\n      // 空白图片会有占位,判断src为空时移除img标签  不为空时添加img\n      if (defaultSettings.watermark_img == \"\") {\n        mask_div.remove();\n      } else {\n        mask_div.append(mask_img);\n      }\n      //设置水印div倾斜显示\n      mask_div.style.webkitTransform =\n        \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n      mask_div.style[\"MozTransform\"] =\n        \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n      mask_div.style[\"msTransform\"] =\n        \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n      mask_div.style[\"OTransform\"] =\n        \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n      mask_div.style.transform =\n        \"rotate(-\" + defaultSettings.watermark_angle + \"deg)\";\n      mask_div.style.visibility = \"\";\n      mask_div.style.position = \"absolute\";\n      mask_div.style.left = x + \"px\";\n      mask_div.style.top = y + \"px\";\n      mask_div.style.overflow = \"hidden\";\n      mask_div.style.zIndex = \"9999\";\n      mask_div.style.pointerEvents = \"none\"; //pointer-events:none  让水印不遮挡页面的点击事件\n      //mask_div.style.border=\"solid #eee 1px\";　　　　　　　　　　//兼容IE9以下的透明度设置                mask_div.style.filter=\"alpha(opacity=50)\";\n      mask_div.style.opacity = defaultSettings.watermark_alpha + \"\";\n      mask_div.style.fontSize = defaultSettings.watermark_fontsize;\n      mask_div.style.fontFamily = defaultSettings.watermark_font;\n      mask_div.style.color = defaultSettings.watermark_color;\n      mask_div.style.textAlign = \"center\";\n      mask_div.style.width = defaultSettings.watermark_width + \"px\";\n      mask_div.style.height = defaultSettings.watermark_height + \"px\";\n      mask_div.style.display = \"block\";\n      oTemp.appendChild(mask_div);\n    }\n  }\n  maskElement.appendChild(oTemp);\n}\n","export enum CommandEnum {\n  Delete = \"DELETE\",\n  Model2Zero = \"MODEL2ZERO\",\n  SelectAll = \"SELECTALL\",\n  Copy = \"COPY\",\n  Paste = \"PASTE\",\n  Group = \"GROUP\",\n}\n","export enum DirSourceType {\n  Model = \"models\",\n  Component = \"components\",\n  Files = \"files\",\n  GlobalVariables = \"globalVariables\",\n  Particles = \"particles\",\n  Materials = \"materials\",\n  Textures = \"textures\",\n}\nexport const HistronHost = \"iot.gkiiot.com:8080\";\nexport const FileUploadApi = {\n  upload: \"/editor/file/upload\",\n  uploadMulti: \"/editor/fileUploadAndDownload/uploadMulti\",\n};\n\nexport const FileApi = {\n  create: \"/editor/file/upload\",\n  list: \"/editor/file/private/list\",\n  update: \"/editor/file/edit\",\n  delete: \"/editor/file/delete\",\n  pic: \"/editor/file/upload/pic\",\n  detail: \"/editor/file/detail\",\n  detail2: \"/editor/file/detail/id/\",\n  publicList: \"/editor/file/public/list\",\n  modelPackList: \"/editor/file/pack/list/\",\n  editorModelPack: \"/editor/file/pack/edit/\",\n};\n\nexport const AppApi = {\n  upload: \"/editor/app/upload\",\n  list: \"/editor/app/list\",\n  prefix: \"/editor/file/prefix\",\n  update: \"/editor/app/edit\",\n  pic: \"/editor/app/upload/pic\",\n  detail: \"/editor/app/detail\",\n  detail2: \"/editor/app/detail/uuid/\",\n  delete: \"/editor/app/delete\",\n  preview: \"/editor/app/set/preview\",\n  cancelPreview: \"/editor/app/cancel/preview\",\n  copy: \"/editor/app/copy\",\n  share: \"/editor/app/share\",\n  removeShare: \"/editor/app/remove/share\",\n  checkShare: \"/editor/app/share/check\",\n};\n\nexport const ProjectApi = {\n  list: \"/editor/project/list\",\n  detail: \"/editor/project/detail/\",\n  edit: \"/editor/project/edit\",\n};\n\nexport const MarketApi = {\n  category: \"/portal/market/category\",\n  list: \"/portal/market/listEx\",\n  detail: \"/portal/market/detail\",\n  detailEx: \"/portal/market/detailEx\",\n  buy: \"/trade/buy\",\n  buyList: \"/trade/boughten/list\",\n  trade: \"/portal/market/trade\",\n  pull: \"/editor/opus/pull\",\n  preview: \"/editor/opus/preview/\",\n  collections: \"/editor/appcollection/list\",\n  collect: \"/editor/appcollection/edit\",\n  cancelCollect: \"/editor/appcollection/delete/\",\n  isBuy: \"/trade/bought\",\n};\n//素材\nexport const OpusApi = {\n  publish: \"/editor/opus/publish\",\n};\n//云平台授权\nexport const CloudauthApi = {\n  delete: \"/editor/cloudauth/delete\",\n  detail: \"/editor/cloudauth/detail\",\n  edit: \"/editor/cloudauth/edit\",\n  list: \"/editor/cloudauth/list\",\n  sign: \"/editor/cloudauth/sign\",\n};\n//海创云相关接口\nexport const HistronApi = {\n  prodList: \"/openapi/sign/prod/list\", //产品下拉列表\n  funList: \"/openapi/sign/prod/fun/list\", //查询产品功能定义\n  cmdList: \"/openapi/sign/prod/cmd/list\", //查询功能定义分组\n  devList: \"/openapi/sign/dev/prod/dev\", //产品下设备列表\n};\n//阿里云相关接口\nexport const AliApi = {\n  prodList: \"api/b/ali/product/list\", //产品下拉列表\n  funList: \"/api/b/ali/thing/model\", //查询产品功能定义\n  devList: \"/api/b/ali/device/list\", //产品下设备列表\n};\n//OAuth2相关接口\nexport const OAuth2Api = {\n  cnfList: \"/project2/cnf/list\",\n  cnfItemList: \"/project2/cnf/item/list\",\n  cnfItemDetail: \"/project2/cnf/detail\",\n  cnfApiList: \"/project2/cnfApi/list\",\n  cnfApiDetail: \"/project2/cnfApi/detail\",\n  cnfConnect: \"/project2/cnf/connect\",\n  parseRule: \"/project2/cnfApi/parseRule\",\n};\n","import { OptionsObject, SnackbarKey } from \"notistack\";\n\nexport const ToasterKeys = new Set<SnackbarKey>();\n\nexport class message {\n  static info = (msg: string, option: OptionsObject = {}) => {\n    //inject\n  };\n  static warn = (msg: string, option: OptionsObject = {}) => {\n    //inject\n  };\n  static success = (msg: string, option: OptionsObject = {}) => {\n    //inject\n  };\n  static error = (msg: string, option: OptionsObject = {}) => {\n    //inject\n  };\n  static close = (key: string) => {\n    //inject\n  };\n}\n","import { PaletteMode } from \"@mui/material\";\nimport Cookies from \"js-cookie\";\n\nexport const TokenKey = \"Admin-Token\";\n\nexport function getToken() {\n  return Cookies.get(TokenKey);\n}\n\nexport function setToken(token: string) {\n  return Cookies.set(TokenKey, token);\n}\n\nexport function removeToken() {\n  return Cookies.remove(TokenKey);\n}\n\nexport function getCookies(cookieKey: string): PaletteMode {\n  return Cookies.get(cookieKey) as PaletteMode;\n}\n\nexport function removeCookies(cookieKey: string) {\n  return Cookies.remove(cookieKey);\n}\n\nexport function setCookies(cookieKey: string, token: string) {\n  return Cookies.set(cookieKey, token);\n}\n// url 处理t\nexport const jsonSearchFu = (strSearch) => {\n  if (strSearch.indexOf(\"?\") > -1) {\n    strSearch = strSearch.substring(strSearch.indexOf(\"?\") + 1);\n  }\n  let jsonSearch = {};\n  let arrSearch = strSearch.split(\"&\");\n  if (arrSearch === null) {\n    return;\n  }\n  arrSearch.forEach((element) => {\n    if (element !== \"\") {\n      let arrParam = element.split(\"=\");\n      if (arrParam.length > 1) {\n        jsonSearch[arrParam[0]] = arrParam[1];\n      }\n    }\n  });\n  return jsonSearch;\n};\n","import { message } from \"~/utils/message\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport { getToken, removeToken, removeCookies } from \"./auth\";\n\nexport enum ResponseStatus {\n  Ok = 0,\n  InvalidToken = 61,\n  Error = 50,\n  Disabled = 62,\n}\n\nexport interface IResponseResult<T = any> {\n  code: ResponseStatus;\n  msg: string;\n  error?: null | string[];\n  data: T;\n}\n\n/**\n * 列表数据返回格式\n */\nexport interface IResultList<T = any> {\n  current: number;\n  total: number;\n  size: number;\n  data: T[];\n}\n\nexport const myAxios = axios.create({\n  baseURL: API_URL,\n});\n\n// 发送请求时的拦截操作\nmyAxios.interceptors.request.use(\n  (config) => {\n    // 如果token存在,则在请求头添加token参数\n    // if (SSH.getItem('token')) {\n    //     config.headers.token = `${SSH.getItem('token')}`\n    // }\n    // 登录类型使用histron；判断 登录凭证 是否存在\n    let token = getToken();\n    if (token) {\n      config.headers.Authorization = \"Bearer \" + token;\n    }\n\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nconst ErrorResult = { code: -1, data: null };\n\nmyAxios.interceptors.response.use(\n  function (response) {\n    if (response.data.code === ResponseStatus.InvalidToken) {\n      // message.error(\"登录已过期\", { preventDuplicate: true });\n      if (!window[\"IGNORE_INVAILID_TOKEN\"])\n        setTimeout(() => {\n          removeToken();\n          removeCookies(\"userInfo\");\n          removeCookies(\"refresh_token\");\n          removeCookies(\"expires_time\");\n          window.location.reload();\n        }, 1000);\n    }\n    if (response.data.code === ResponseStatus.Error) {\n      if (response.data.error) {\n        message.error(response.data.error?.[0]);\n      }\n    }\n    if (response.data.code === ResponseStatus.Disabled) {\n      if (location.pathname !== \"/none\") {\n        let url = document.location.origin + \"/none\";\n        document.location.href = url;\n      }\n    }\n\n    return Promise.resolve(response.data);\n  },\n  function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(ErrorResult);\n  }\n);\n\nconst handleError = async (err): Promise<IResponseResult<null>> => {\n  message.error(\"请求发生错误\");\n  return { ...ErrorResult, msg: err?.message ?? \"请求发生错误\" };\n};\n\nexport async function getReq<T = any>(\n  url: string,\n  config?: AxiosRequestConfig<any>\n) {\n  return myAxios.get<T>(url, config).catch(handleError);\n}\n\nexport async function postReq<T = any>(\n  url: string,\n  data?: any,\n  config?: AxiosRequestConfig<any>\n) {\n  return myAxios.post<T>(url, data, config).catch(handleError);\n}\n\nexport async function putReq<T = any>(\n  url: string,\n  data?: any,\n  config?: AxiosRequestConfig<any>\n) {\n  return myAxios.put<T>(url, data, config).catch(handleError);\n}\n\nexport async function deleteReq<T = any>(\n  url: string,\n  config?: AxiosRequestConfig<any>\n) {\n  return myAxios.delete<T>(url, config).catch(handleError);\n}\n","import type { Application } from \"@hc/engine\";\nimport { AppConfig } from \"@hc/engine\";\nimport { action, observable } from \"mobx\";\nimport { AppApi } from \"./apis\";\nimport { getReq, ResponseStatus } from \"./utils/axios\";\n\nexport const App: {\n  intance: Application | null;\n  prefix: string;\n} = observable({\n  intance: null,\n  prefix: \"\",\n});\n\nexport const setAppIntance = action((intance: Application) => {\n  App.intance = intance;\n});\n\nexport const setPrefix = action(async () => {\n  if (App.prefix) return;\n  const res = await getReq(AppApi.prefix);\n  if (res.code === ResponseStatus.Ok) {\n    App.prefix = res.data.prefix;\n    AppConfig.assetURL = res.data.prefix;\n  }\n});\n","export function ImportScript(urls: string[]): Promise<boolean[]> {\n  let ps = [];\n  urls.forEach((url) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n    document.body.append(script);\n    let p = new Promise((res, rej) => {\n      script.onload = function () {\n        res(true);\n      };\n      script.onerror = () => {\n        rej(false);\n      };\n    });\n    ps.push(p);\n  });\n  return Promise.all(ps);\n}\n","import { AppConfig, AppEvent, AppStore, CMD } from \"@hc/engine\";\nimport { CommandEnum } from \"~/commands/commandEnum\";\nimport { App } from \"~/intance\";\nimport { getUUID } from \"~/utils/common\";\nimport { ImportScript } from \"~/utils/importScript\";\nimport { message } from \"~/utils/message\";\nimport { HC2DDom } from \"./HC2DDom\";\n\nexport interface IDataBindings {\n  attr: string;\n  bindable: boolean;\n  defaultValue: any;\n  description: string;\n  name: string;\n  valueType: string;\n}\n\nexport interface IHC2D {\n  DataBindings: IDataBindings[];\n  updateAttr: (obj) => void;\n}\n\nexport let ht: any;\nlet loadPromise: Promise<any>;\n\nconst waitList: ((n: any) => void)[] = [];\n\nfunction wait() {\n  return new Promise((res) => {\n    waitList.push(res);\n  });\n}\n\nexport function initHT() {\n  if (!ht) {\n    if (!loadPromise) {\n      loadPromise = ImportScript([\n        \"https://am-img.gkiiot.com/editor/libs/echarts.min.js\",\n        \"https://am-img.gkiiot.com/editor/libs/hc.min.js\",\n        \"https://am-img.gkiiot.com/img/editor/libs/echarts-tooltip-carousel.js\",\n        \"https://cdn.bootcdn.net/ajax/libs/hls.js/1.2.4/hls.js\",\n      ])\n        .then(() => {\n          return ImportScript([\n            \"https://am-img.gkiiot.com/editor/libs/plug.min.js\",\n          ]);\n        })\n        .then(() => {\n          return ImportScript([\n            \"https://am-img.gkiiot.com/editor/libs/hc-ui-carousel.js\",\n          ]);\n        });\n      return loadPromise.then((res) => {\n        ht = window.ht;\n\n        window[\"storagePrefix\"] = AppConfig.assetURL;\n\n        ht.Default.convertURL = function (url: string) {\n          let storagePrefix = AppConfig.assetURL;\n          if (\n            storagePrefix &&\n            url &&\n            !/^data:image/.test(url) &&\n            !/^http/.test(url) &&\n            !/^https/.test(url)\n          ) {\n            url = storagePrefix + \"/\" + url;\n          }\n          return url;\n        };\n        waitList.forEach((w) => w(true));\n        waitList.length = 0;\n        return ht;\n      });\n    } else {\n      return wait();\n    }\n  } else return ht;\n}\n\nexport const HCCache = new Set<string>();\n\nconst TimeStap = Date.now();\n\n/**加入时间戳避免ht缓存 */\nexport const getUrl = (url: string) => {\n  const separator = url.indexOf(\"?\") !== -1 ? \"&\" : \"?\";\n  return url + separator + \"timestap=\" + TimeStap;\n};\n\nexport async function getGraphView() {\n  await initHT();\n  const dm = new ht.DataModel();\n  dm.a(\"unshow\", true);\n  const graphView = new ht.graph.GraphView(dm);\n  graphView.getSelectWidth = () => 0;\n  graphView.setMovableFunc((data) => false);\n  graphView.setPannable(false);\n  graphView.setRectSelectable(false);\n  // graphView.setEditable(true);\n  graphView.setScrollBarVisible(false);\n  graphView.handleScroll = () => false;\n  graphView.onDataClicked = (\n    data: { target3d: HC2DDom },\n    event: MouseEvent\n  ) => {\n    if (!data) return;\n    AppEvent.trigger({\n      type: \"click\",\n      target: data.target3d,\n      event: event,\n    });\n    const hc = data.target3d as HC2DDom;\n    hc.trigger({\n      type: \"click\",\n      target: data.target3d,\n      event: event,\n    });\n    if (AppStore.PreviewMode) return;\n    hc.start(event.clientX, event.clientY);\n    if (App.intance.Editor.selectControl)\n      App.intance.Editor.selectControl.SelectDOM = hc;\n  };\n  graphView.getView().addEventListener(\"keydown\", (event: KeyboardEvent) => {\n    if (event.key === \"Delete\") {\n      CMD.commandManager.ExecCommand(CommandEnum.Delete);\n      event.stopPropagation();\n    } else if (event.code === \"KeyC\" && event.ctrlKey) {\n      CMD.commandManager.ExecCommand(CommandEnum.Copy);\n      event.stopPropagation();\n    } else if (event.code === \"KeyV\" && event.ctrlKey) {\n      CMD.commandManager.ExecCommand(CommandEnum.Paste);\n      event.stopPropagation();\n    }\n  });\n  return graphView;\n}\n\nexport async function getHTNode(dm, url: string) {\n  url = getUrl(url);\n  const node = new ht.Node();\n  dm.add(node);\n\n  const u = getUUID();\n  return new Promise((res) => {\n    ht.Default.xhrLoad(url, function (n) {\n      if (n) {\n        ht.Default.setImage(u, ht.Default.parse(n));\n        node.setImage(u);\n        res(node);\n      } else {\n        message.error(\"2d资源未找到\");\n        res(null);\n      }\n    });\n  });\n}\n\nexport function getHTData(url: string) {\n  return ht.Default.getImage(url);\n}\n","const getUUID = function () {\n  let d = new Date().getTime();\n  if (window.performance && typeof window.performance.now === \"function\") {\n    d += performance.now(); //use high-precision timer if available\n  }\n  let uuid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n    /[xy-]/g,\n    function (c) {\n      let r = (d + Math.random() * 16) % 16 | 0;\n      d = Math.floor(d / 16);\n      return (c == \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n    }\n  );\n  return uuid;\n};\n\nexport { getUUID };\n","import { Factory, HCFiler } from \"@hc/core\";\nimport { AppStore, BaseDom, GenerateTexture } from \"@hc/engine\";\nimport { handleObjectFunction, sleep } from \"~/utils/utils\";\nimport { getGraphView, getHTData, getHTNode, IDataBindings, IHC2D } from \"./ht\";\n\n@Factory\nexport class HC2DDom extends BaseDom implements GenerateTexture, IHC2D {\n  static type = \"HC2DDom\";\n  private _source: string;\n  private graphView;\n  private hcNode;\n  private _dataBindings: IDataBindings[];\n  private _setAttr: Record<string, any> = {};\n  constructor(option?: { url: string }) {\n    super();\n    if (option?.url) {\n      this._source = option.url;\n    }\n    window[\"gui\"] = this;\n  }\n  get Source() {\n    return this._source;\n  }\n  set Source(url: string) {\n    this._source = url;\n  }\n  get DataBindings() {\n    return this._dataBindings ?? [];\n  }\n  get Attr() {\n    return this._setAttr;\n  }\n  getProp(k: string) {\n    if (this._setAttr[k]) {\n      return this._setAttr[k];\n    } else {\n      const d = this.DataBindings.find((d) => d.attr === k);\n      return d?.defaultValue;\n    }\n  }\n  /**\n   * 设置绑定数据值\n   * @param k\n   * @param value\n   */\n  setProp(k: string, value: any) {\n    this.updateAttr({ [k]: value });\n  }\n  updateAttr(obj: Record<string, any>) {\n    if (Object.keys(obj).length === 0 || !this.graphView || !this.hcNode)\n      return;\n    Object.assign(this._setAttr, obj);\n    obj = JSON.parse(JSON.stringify(obj));\n    obj = handleObjectFunction(obj);\n    this.hcNode.a(obj);\n  }\n  initDrawObject() {\n    const temp = document.createElement(\"div\");\n    getGraphView().then((graphView) => {\n      this.graphView = graphView;\n      const resolve = AppStore.Wait();\n      getHTNode(graphView.dm(), this._source).then((node: any) => {\n        if (!node) return;\n        this.hcNode = node;\n        node.target3d = this;\n        const data = getHTData(node.getImage());\n        this.load(data);\n        resolve(true);\n      });\n      temp.replaceWith(graphView.getView());\n      this._drawObject = graphView.getView();\n      //@ts-ignore\n      this._drawObject[\"metadata\"] = { entity: this };\n      this._drawObject.style.display =\n        this.Visiable && !this._erase ? \"block\" : \"none\";\n    });\n    return temp;\n  }\n  updateDrawObject(obj: HTMLElement): void {\n    super.updateDrawObject(obj);\n    const width = this.convertValue(this._width, AppStore.MainViewer.Width);\n    const height = this.convertValue(this._height, AppStore.MainViewer.Height);\n\n    this.graphView.setWidth(width);\n    this.hcNode.setWidth(width);\n    this.graphView.setHeight(height);\n    this.hcNode.setHeight(height);\n    this.graphView.fitContent(false, 0);\n\n    this.updateAttr(this._setAttr);\n  }\n  getTexture() {\n    return null;\n  }\n  async toDataURL(blob = true): Promise<Blob | string | undefined> {\n    let canvas: HTMLCanvasElement;\n    const dom = this.graphView.__htmlOrderList?.[0] as HTMLElement;\n    if (dom && dom instanceof HTMLElement) {\n      canvas =\n        this.graphView.__htmlOrderList[0].getElementsByTagName(\"canvas\")[0];\n\n      if (dom.nodeName === \"VIDEO\") {\n        return;\n      }\n    } else {\n      canvas = this.graphView.getCanvas();\n    }\n\n    if (!canvas) canvas = this.graphView.getCanvas();\n\n    await sleep(1000);\n    if (blob)\n      return new Promise((res) => {\n        canvas.toBlob(res, \"image/jpeg\");\n      });\n    else {\n      return canvas.toDataURL(\"image/jpeg\");\n    }\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(2);\n    filer.write(this._source);\n    filer.write(JSON.stringify(this._setAttr));\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    const ver = filer.read();\n    this._source = filer.read();\n\n    if (ver > 1) {\n      this._setAttr = JSON.parse(filer.read());\n    }\n\n    this.update();\n  }\n  private load = (data) => {\n    if (!data) return;\n    const width =\n      typeof data.width === \"object\" ? data.width.value : data.width;\n    const height =\n      typeof data.height === \"object\" ? data.height.value : data.height;\n\n    if (!this._width) this._width = width;\n    if (!this._height) this._height = height;\n\n    this._dataBindings = data.dataBindings;\n\n    const dom = this.graphView.getView() as HTMLElement;\n    dom.style.cssText = `\n    position:absolute;\n    left:${this._position.x}px;\n    top:${this._position.y}px;\n    width:${this._width}px;\n    height:${this._height}px;\n    outline:none;\n    `;\n    if (!this.Visiable) {\n      dom.style.visibility = \"hidden\";\n    }\n    setTimeout(() => {\n      dom.style.visibility = \"visible\";\n      dom.style.display = this.Visiable && !this.IsErase ? \"block\" : \"none\";\n    }, 0);\n    this.graphView.fitContent(false, 0);\n    this.update();\n  };\n}\n","import { Factory, HCFiler } from \"@hc/core\";\nimport {\n  AppStore,\n  BaseGui,\n  CanvasControl,\n  GenerateTexture,\n  Utils,\n  Video,\n} from \"@hc/engine\";\nimport { handleObjectFunction, sleep } from \"~/utils/utils\";\nimport { getGraphView, getHTData, getHTNode, IDataBindings, IHC2D } from \"./ht\";\n\n@Factory\nexport class HC2DGui extends BaseGui implements GenerateTexture, IHC2D {\n  static override type = \"HC2DGui\";\n  private static _container: HTMLElement;\n  static get Container() {\n    if (this._container) return this._container;\n    const div = (this._container = document.createElement(\"div\"));\n    div.style.pointerEvents = \"none\";\n    div.style.visibility = \"hidden\";\n    div.style.position = \"fixed\";\n    document.body.append(div);\n\n    return div;\n  }\n  private _source: string;\n  private graphView;\n  private hcNode;\n  private _dataBindings: IDataBindings[];\n  private _setAttr: Record<string, any> = {};\n  private timer: NodeJS.Timeout;\n  constructor(option?: { url: string }) {\n    super();\n    if (option?.url) {\n      this._source = option.url;\n    }\n  }\n  get Source() {\n    return this._source;\n  }\n  set Source(url: string) {\n    this._source = url;\n  }\n  get DataBindings() {\n    return this._dataBindings ?? [];\n  }\n  get Attr() {\n    return this._setAttr;\n  }\n  getProp(k: string) {\n    if (this._setAttr[k]) {\n      return this._setAttr[k];\n    } else {\n      const d = this.DataBindings.find((d) => d.attr === k);\n      return d?.defaultValue;\n    }\n  }\n  /**\n   * 设置绑定数据值\n   * @param k\n   * @param value\n   */\n  setProp(k: string, value: any) {\n    this.updateAttr({ [k]: value });\n  }\n  updateAttr(obj: Record<string, any>) {\n    if (Object.keys(obj).length === 0 || !this.graphView || !this.hcNode)\n      return;\n\n    const dom = this.graphView.getView() as HTMLElement;\n    if (!dom.isConnected) HC2DGui.Container.append(dom);\n    this.clearDom(dom);\n    Object.assign(this._setAttr, obj);\n    obj = JSON.parse(JSON.stringify(obj));\n    obj = handleObjectFunction(obj);\n    this.hcNode.a(obj);\n  }\n\n  initDrawObject() {\n    const root = Utils.getGuiContainer(this.UniqueName);\n    root.width = \"1px\";\n    root.height = \"1px\";\n    root.horizontalAlignment = 0;\n    root.verticalAlignment = 0;\n    const resolve = AppStore.Wait();\n    getGraphView().then((graphView) => {\n      // graphView.addViewListener((event) => {\n      //   console.log(\"event: \", event);\n      //   if (event?.kind === \"validate\") this.updateDrawObject(root);\n      // });\n      this.graphView = graphView;\n      getHTNode(graphView.dm(), this._source).then((node: any) => {\n        if (!node) return;\n        this.hcNode = node;\n        const data = getHTData(node.getImage());\n        this.load(data);\n        this.generateLinkLine(root, 100);\n        this.updateDrawObject(root);\n        resolve(true);\n      });\n    });\n\n    return root;\n  }\n  updateDrawObject(obj: Utils.Container): void {\n    super.updateDrawObject(obj);\n    if (this.linkEntity) {\n      obj.linkWithMesh(this.linkEntity.Object.DrawObject);\n    } else {\n      obj.linkWithMesh(null);\n    }\n\n    this.graphView.fitContent(false, 0);\n    let canvas: HTMLCanvasElement;\n    let video: HTMLVideoElement | null = null;\n    const dom = this.graphView.__htmlOrderList?.[0] as HTMLElement;\n    if (dom && dom instanceof HTMLElement) {\n      canvas =\n        this.graphView.__htmlOrderList[0].getElementsByTagName(\"canvas\")[0];\n\n      if (dom.nodeName === \"VIDEO\") {\n        video = dom as HTMLVideoElement;\n      }\n    } else {\n      canvas = this.graphView.getCanvas();\n    }\n\n    if (!canvas) {\n      canvas = this.graphView.getCanvas();\n    }\n\n    if (obj.children.length === 0) {\n      if (video) {\n        this.DataBindings.find;\n        const gui = new Video(\n          this.UniqueName + \"_video\",\n          video,\n          this._width,\n          this._height,\n          AppStore.MainScene\n        );\n        obj.addControl(gui);\n        gui.width = this._width;\n        gui.height = this._height;\n      } else {\n        const gui = new CanvasControl(\n          this.UniqueName,\n          canvas,\n          AppStore.MainScene\n        );\n        obj.addControl(gui);\n        if (\n          this.graphView.getView() &&\n          dom?.childNodes?.[0]?.nodeName === \"VIDEO\"\n        ) {\n          video = dom.childNodes[0] as HTMLVideoElement;\n          const gui = new Video(\n            this.UniqueName + \"_video\",\n            video,\n            this._width,\n            this._height,\n            AppStore.MainScene\n          );\n          obj.addControl(gui);\n          let { width: videoWidth, height: videoHeight } = video.style;\n          gui.width = this.calculateWidthOrHeight(videoWidth, \"_width\");\n          gui.height = this.calculateWidthOrHeight(videoHeight, \"_height\");\n        }\n        gui.width = this._width;\n        gui.height = this._height;\n      }\n    } else {\n      const control = obj.children[0];\n      if (video) {\n        (control as Video).source = video;\n      } else {\n        (control as CanvasControl).CanvasDom = canvas;\n      }\n    }\n\n    obj.width = this._width;\n    obj.height = this._height;\n    this.updateAttr(this._setAttr);\n  }\n  // 跟据百分比转换Video标签的宽度或高度\n  calculateWidthOrHeight(value, type) {\n    if (value.endsWith(\"%\")) {\n      let oldValue = this[type];\n      let percentage = parseInt(value.split(\"%\")[0]) / 100;\n      if (typeof oldValue === \"string\") {\n        oldValue = parseInt(oldValue.split(\"px\")[0]);\n      }\n      value = oldValue * percentage + \"px\";\n    }\n    return value;\n  }\n  getTexture() {\n    return null;\n  }\n  get IsSelect() {\n    return this._isSelect;\n  }\n  set IsSelect(v: boolean) {\n    this._isSelect = v;\n    if (!this._drawObject) return;\n    const root = this._drawObject as Utils.Container;\n    if (v) {\n      root.background = \"#9595d8\";\n    } else {\n      root.background = \"\";\n    }\n  }\n  async toDataURL(blob = true): Promise<Blob | string | undefined> {\n    const canvasControl = (this._drawObject as Utils.Container).children[0];\n\n    if (canvasControl instanceof CanvasControl) {\n      const canvas = canvasControl.CanvasDom;\n      await sleep(1000);\n      if (blob)\n        return new Promise((res) => {\n          canvas.toBlob(res, \"image/jpeg\");\n        });\n      else {\n        return canvas.toDataURL(\"image/jpeg\");\n      }\n    }\n\n    return null;\n  }\n  writeFile(filer: HCFiler): void {\n    super.writeFile(filer);\n    filer.write(1);\n    filer.write(this._source);\n    filer.write(JSON.stringify(this._setAttr));\n  }\n  readFile(filer: HCFiler): void {\n    super.readFile(filer);\n    filer.read();\n    this._source = filer.read();\n    this._setAttr = JSON.parse(filer.read());\n    this.update();\n  }\n  private load = (data) => {\n    if (!data) return;\n    const width =\n      typeof data.width === \"object\" ? data.width.value : data.width;\n    const height =\n      typeof data.height === \"object\" ? data.height.value : data.height;\n\n    this._dataBindings = data.dataBindings;\n\n    const dom = this.graphView.getView() as HTMLElement;\n    this._width = width + \"px\";\n    this._height = height + \"px\";\n\n    dom.style.cssText = `position:fixed;left:0;top:0;width:${width}px;height:${height}px;`;\n    // this.graphView.getCanvas().width = width;\n    // this.graphView.getCanvas().height = height;\n    HC2DGui.Container.append(dom);\n\n    this.clearDom(dom);\n  };\n  private clearDom(dom: HTMLElement) {\n    this.timer && clearTimeout(this.timer);\n    this.timer = setTimeout(() => {\n      dom.remove();\n    }, 30 * 1000);\n  }\n}\n","import { AppStore, BaseTextureRecord, Utils } from \"@hc/engine\";\n\nimport { Factory, HCFiler } from \"@hc/core\";\n\nimport { getGraphView, getHTData, getHTNode, IDataBindings } from \"./ht\";\n\n@Factory\nexport class HC2DTexture extends BaseTextureRecord {\n  static type = \"HC2DTexture\";\n  private graphView;\n  private hcNode;\n  private _dataBindings: IDataBindings[];\n  protected texture: any;\n  private timer: NodeJS.Timeout;\n  constructor(private _source: string) {\n    super();\n  }\n  get Texture() {\n    if (!this.texture) {\n      this.update();\n    }\n\n    return this.texture;\n  }\n  get Source() {\n    return this._source;\n  }\n  set Source(url: string) {\n    if (url === this._source) return;\n    this._source = url;\n    this.update();\n  }\n  initTexture() {\n    const graphView = getGraphView();\n\n    let resFun: (target: unknown) => void;\n\n    graphView.addViewListener((event) => {\n      this.timer && clearTimeout(this.timer);\n      if (event?.kind === \"validate\") {\n        this.timer = setTimeout(() => {\n          let isUpdate = false;\n          const dom = this.graphView.__htmlOrderList?.[0];\n          if (dom?.nodeName === \"VIDEO\") {\n            if (!this.texture) {\n              this.texture = Utils.getVideoTexture(\n                \"video\" + Date.now(),\n                dom.src,\n                AppStore.MainScene\n              );\n              resFun(this);\n            } else {\n              if (dom.src !== this.texture.video.src) {\n                console.log(123);\n                isUpdate = true;\n                this.texture.updateURL(dom.src);\n              }\n            }\n          } else {\n            let canvas: HTMLCanvasElement;\n            if (dom && dom instanceof HTMLElement)\n              canvas = dom.getElementsByTagName(\"canvas\")[0];\n            if (!canvas) canvas = this.graphView.getCanvas();\n            if (canvas) {\n              if (!this.texture) {\n                this.texture = Utils.getCanvasTexture(\n                  \"canvas\" + Date.now(),\n                  canvas,\n                  AppStore.MainScene\n                );\n                resFun(this);\n              } else {\n                isUpdate = true;\n                this.texture._canvas = canvas;\n                this.texture._context = canvas.getContext(\"2d\");\n              }\n            }\n          }\n\n          if (isUpdate) {\n            this.graphView.fitContent(false, 0);\n            this.texture.update();\n          }\n        }, 100);\n      }\n    });\n\n    this.graphView = graphView;\n    return new Promise((res) => {\n      getHTNode(this.graphView.dm(), this._source).then((node: any) => {\n        this.hcNode = node;\n        const data = getHTData(node.getImage());\n        this.load(data);\n        resFun = res;\n      });\n    });\n  }\n\n  update() {\n    super.update();\n    if (!this.graphView) return;\n  }\n  writeFile(file: HCFiler): void {\n    super.writeFile(file);\n    file.write(1);\n    file.write(this._source);\n  }\n  readFile(file: HCFiler): void {\n    super.readFile(file);\n    file.read();\n    this._source = file.read();\n    this.initTexture();\n  }\n  private load = (data) => {\n    if (!data) return;\n    const width =\n      typeof data.width === \"object\" ? data.width.value : data.width;\n    const height =\n      typeof data.height === \"object\" ? data.height.value : data.height;\n\n    this._dataBindings = data.dataBindings;\n    const dom = this.graphView.getView() as HTMLElement;\n    dom.style.cssText = `position:fixed;left:0;top:0;width:${width}px;height:${height}px;visibility:hidden`;\n    this.graphView.getCanvas().width = width;\n    this.graphView.getCanvas().height = height;\n    document.body.append(dom);\n\n    if (this.texture) this.texture.update();\n    setTimeout(() => {\n      dom.remove();\n    }, 2000);\n  };\n}\n","import * as HC from \"@hc/engine\";\nimport * as HCCore from \"@hc/core\";\nimport { IComponentData } from \"../components/editorModal/types\";\n\nObject.assign(HC, HCCore);\n\nexport function getUniupComponentType(id: number) {\n  return `CustomComponent_${id}`;\n}\n\nexport function getComponent(code: string): typeof HC.Component {\n  if (!code) return;\n  try {\n    const genC = new Function(\"HC\", \"return \" + code.trim());\n    return genC(HC);\n  } catch (err) {\n    console.log(\"err: \", err);\n    return null;\n  }\n}\n\nexport function isRegisterComponent(id: number) {\n  const type = getUniupComponentType(id);\n  return HCCore.HCFactory.isRegister(type);\n}\n\nexport function registerComponent(data: IComponentData) {\n  const { code, id, propertys, title } = data;\n  if (!code) return;\n  const Com = getComponent(code);\n  Com.type = getUniupComponentType(id);\n  Com.Schema = {\n    title: title,\n    propertys,\n  };\n  HC.RegisterComponent(Com);\n}\n\nexport function unRegisterComponent(data: IComponentData) {\n  HC.UnRegisterComponent(getUniupComponentType(data.id));\n}\n\nexport function getFunction(code: string) {\n  return new Function(\"return \" + code.trim());\n}\n","import \"~/extension/HC2DDom\";\nimport \"~/extension/Hc2DGui\";\nimport \"~/extension/HC2DTexture\";\n\nimport * as Aop from \"@hc/aop\";\nimport * as HCCore from \"@hc/core\";\nimport * as HC from \"@hc/engine\";\nimport { AppConfig, Application, AppStore } from \"@hc/engine\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { registerComponent } from \"./utils/component\";\nimport { execScript } from \"./utils/loadFile\";\nObject.assign(HC, HCCore, Aop);\n\ninterface PreviewProps {}\n\nconsole.log(Build_VERSION);\n\nAppConfig.assetURL = \"/data/\";\n\nAppConfig.Texture_URL = \"https://am-img.gkiiot.com/editor/\";\nAppConfig.SkyBox_URL = \"https://am-img.gkiiot.com/editor/\";\n\ndocument.title = \"海创可视化平台\";\n\nlet timeStap = Date.now();\n\nconst Preview: React.FC<PreviewProps> = () => {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const [loading, setLoading] = useState(false);\n\n  let app: Application;\n\n  const getAppJson = (id?: number) => {\n    const jsonUrl = `app${id || \"\"}.json?t=${timeStap}`;\n    return fetch(\"/data/\" + jsonUrl).then((res) => res.json());\n  };\n\n  const getComponentJson = (id?: number) => {\n    const jsonUrl = `components/${id}.json?t=${timeStap}`;\n    return fetch(\"/data/\" + jsonUrl).then((res) => res.json());\n  };\n  const loadVariables = (id?: number) => {\n    const jsonUrl = `variable.json?t=${timeStap}`;\n    try {\n      return fetch(\"/data/\" + jsonUrl)\n        .then((res) => res.json())\n        .catch((err) => {\n          return err;\n        });\n    } catch (err) {\n      return null;\n    }\n  };\n\n  const loadApp = async (id?: number) => {\n    setLoading(true);\n    const data = await getAppJson(id);\n    if (!data) return;\n    const components = data.components ?? [];\n    for (const id of components) {\n      const data = await getComponentJson(id);\n      if (data) registerComponent({ ...data.data, id });\n    }\n    app.loadFile(data.data);\n\n    const scripts = data.scripts ?? [];\n    execScript(scripts, app, HC);\n    app.on(\"loadComplete\", () => {\n      setLoading(false);\n    });\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (canvasRef.current) {\n        const canvas = canvasRef.current;\n        canvas.width = canvas.parentElement!.clientWidth;\n        canvas.height = canvas.parentElement!.clientHeight;\n\n        AppConfig.isEncrypt = false;\n\n        window[\"app\"] = app = new Application({\n          canvas,\n          editor: false,\n          cameraRadius: 100,\n        });\n\n        const url = new URLSearchParams(location.search);\n        const id = url.get(\"id\");\n        try {\n          const v = await loadVariables();\n          if (v) {\n            AppStore.GlobalVariables = v;\n          }\n        } catch (err) {\n          console.log(err);\n        }\n\n        loadApp(id ? Number(id) : undefined);\n      }\n    })();\n  }, []);\n\n  return (\n    <>\n      <canvas style={{ width: \"100%\", height: \"100%\" }} ref={canvasRef}>\n        预览页面\n      </canvas>\n      {loading && (\n        <div\n          style={{\n            position: \"fixed\",\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0,\n            margin: \"auto\",\n            width: \"100%\",\n            height: \"100%\",\n            background: \"#00000073\",\n            textAlign: \"center\",\n          }}\n        >\n          <img src=\"/static/images/loading/loading-mask.gif\" alt=\"\" />\n          <div style={{ color: \"#fff\", fontSize: 24 }}>\n            资源载入中,请稍后。。。\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nconst root = createRoot(document.getElementById(\"app\") as HTMLElement);\n\nroot.render(<Preview />);\n","import type { Application } from \"@hc/engine\";\nimport { Axios } from \"axios\";\nimport { FileApi } from \"~/apis\";\nimport { IScriptProps } from \"~/types\";\nimport { getReq, ResponseStatus } from \"./axios\";\nimport {\n  getFunction,\n  getUniupComponentType,\n  registerComponent,\n} from \"./component\";\nimport { ImportScript } from \"./importScript\";\nimport { updateQueryStringParameter } from \"./url\";\n\nexport async function loadOnlineFile(\n  data: { components: number[]; data },\n  intance: Axios,\n  app\n) {\n  const components = data.components ?? [];\n  for (const id of components) {\n    const res = await intance.get(FileApi.detail2 + id);\n\n    if (res[\"status\"] === 200 && res.data.code === 0) {\n      const json = res.data.data.json_data;\n      const data = JSON.parse(json);\n      registerComponent({ ...data.data, id });\n    }\n  }\n  app.loadFile(data.data);\n}\n\nexport async function loadOnlineComponent(\n  id: number,\n  app: Application,\n  option: any = {}\n) {\n  const result = await getReq(FileApi.detail + \"/\" + id);\n  if (result.code === ResponseStatus.Ok) {\n    const info = result.data.info;\n    const json = info.json_data;\n    const jsonData = JSON.parse(json);\n    const d = jsonData.data;\n    registerComponent({ ...d, id });\n    const en = app.create({ type: getUniupComponentType(id), ...option });\n    app.Editor.selectControl.SelectEntitys = [en];\n    return true;\n  }\n  return false;\n}\n\nexport async function loadOnlineModel(\n  id: number,\n  app: Application,\n  option: any = {}\n) {\n  const result = await getReq(FileApi.detail + \"/\" + id);\n  if (result.code === ResponseStatus.Ok) {\n    const info = result.data.info;\n    const url = info?.uuid + \"/\" + info.file_key;\n    const en = app.create({ type: \"ImportEntity\", url, ...option });\n    app.Editor.selectControl.SelectEntitys = [en];\n    return true;\n  }\n  return false;\n}\n\nexport function updateUrl(id: number) {\n  const newUrl = updateQueryStringParameter(location.href, \"id\", id.toString());\n  history.replaceState(\n    {\n      path: newUrl,\n    },\n    \"\",\n    newUrl\n  );\n}\n\nexport async function execScript(\n  scripts: IScriptProps[],\n  app: Application,\n  HC\n) {\n  HC.ImportScript = ImportScript;\n  for (const script of scripts) {\n    try {\n      if (script.enabled !== undefined && !script.enabled) continue;\n      if (!script.version) {\n        const f = getFunction(script.code)();\n        await f(app, HC);\n      } else {\n        const f = Object.getPrototypeOf(async function () {}).constructor(\n          \"app\",\n          \"HC\",\n          script.code\n        );\n        await f(app, HC);\n      }\n    } catch (err) {\n      console.error(script.name + \": \\t\\n\" + err);\n    }\n  }\n}\n\nexport function downloadBlob(fname: string, blob: Blob) {\n  let download = document.createElement(\"a\");\n  download.download = fname;\n  download.href = window.URL.createObjectURL(blob);\n  download.style.display = \"none\";\n  download.onclick = function () {\n    document.body.removeChild(download);\n  };\n  document.body.appendChild(download);\n\n  download.click();\n}\n\nexport async function readFile(\n  file: File,\n  encoding?: string\n): Promise<string | null> {\n  const reader = new FileReader();\n  reader.readAsText(file, encoding);\n\n  return new Promise((res, rej) => {\n    reader.onload = (e) => {\n      res(e.target.result as string);\n    };\n    reader.onerror = (e) => {\n      console.log(\"e: \", e);\n      rej(null);\n    };\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t826: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunk\"] = self[\"webpackChunk\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [739,274,471,336,480,461,499,729,338,906,669,919,877,658,133,289,637,57], () => (__webpack_require__(55495)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","HCFactory","constructor","objectNameMap","C","key","type","Error","name","this","factory","has","console","warn","set","option","get","delete","Factory","target","RegisterObject","ObjectId","index","obj","object","isErase","IsErase","Object","v","Index","toJSON","HCFiler","_datas","database","readIndex","Data","data","reset","clear","length","write","push","read","writeObjectId","id","readObjectId","getObjectId","writeSoftObjectId","readSoftObjectId","writeHardObjectId","readHardObjectId","writeObject","writeString","writeFile","readObject","className","readString","undefined","CreateObject","error","_SetDefaultDb","readFile","str","writeArray","arr","a","readArray","count","writeAnyArray","callback","call","readAnyArray","i","readAnyArrayAndPush","en","writeVector3","x","y","z","readVector3","source","DeepCloneFiler","idMaping","super","hardObjectIds","cloned","add","arrayLast","removeOne","j","l","arrayRemoveIf","checkFuntion","EventDispatcher","_listeners","on","listener","listents","off","once","hasEventListener","ls","trigger","event","array","customOption","userData","condition","EraseEntityData","file","BaseObject","_ver","_Owner","_db","_id","_erase","_name","Owner","owner","Id","DB","Name","Type","erase","e","r","UndoRecord","createEraseHistory","clone","cloneC","backId","filer","copyFrom","idBak","ownerBak","writeSnapshoot","f","replace","arg","destory","all","_SetOwnerDatabase","db","allocateId","_SetDatabase","_applyHistoryRecord","record","HistoryManager","LastCmdRecord","writeObjectSnapshoot","CreateObjectData","save","getObject","HistoryRecord","undoData","redoData","filter","RemoveObjectData","removeObject","ObjectCollection","objects","append","undoRec","hisRec","writeObjectHistoryPath","appendEvent","remove","removeIndex","cout","options","sort","AllObjectData","Filer","ObjectAllDataHistoryRecord","writeUndo","writeRedo","CommandHistoryRecord","commandName","_HistoryList","_CreateObjects","HistoryList","getObjectAllDataRecord","historyList","hs","h","hrs","getObjectHistoryList","hr","history","HistoricManager","historyRecordList","doing","cursor","isEnable","startCmd","cmdName","endCmd","lastRec","endCmdEvent","HasUndo","HasRedo","res","undo","historyRec","recList","undoEvent","redo","redoEvent","BaseDatabase","preview","idIndex","idMap","AllObjects","objectId","findObjectById","findObjectByName","isLike","o","oid","InjectType","callInjectFunctionList","funcName","args","funcList","getInjectFunctionArrayName","inject","injectType","func","injectFunction","getFunctionName","beginName","hasOwnProperty","oldFunction","begin","end","initInjectReplace","functionArr","initInjectFunctionArray","unshift","BlockTableRecord","entityCol","checkout","Entitys","IsVaildObject","ObjectType","O","setCheckout","ObjectRecord","n","RecordTable","records","Objects","isCheck","size","window","requestIdleCallback","cb","start","didTimeout","timeRemaining","Math","max","cancelIdleCallback","clearTimeout","AppConfig","debugger","loadPlugins","assetURL","Texture_URL","SkyBox_URL","lowPerformance","isEncrypt","clearCacheKeys","BufferDecoder","TextDecoder","HC3DLoader","parent","_completePromises","Array","_assetContainer","_parent","_disposed","_rootUrl","_babylonScene","scene","rootUrl","onProgress","_loadAsync","SceneLoader","url","entry","meshesNames","fileName","getEngine","then","loadModFile","catch","onErrorObservable","notifyObservers","dispose","mod","Decode","json","_loadFileAsync","Uint8Array","decodeData","decode","File","HC3DFileLoader","DecodeConfig","exec_url","wasm_url","LoadPromise","Tools","path","go","Go","importObject","env","resolve","reject","WebAssembly","instantiateStreaming","fetch","result","run","instance","loadWasm","_gltfLoader","_objLoader","_requests","_loader","extensions","Observable","GLTFLoader","GLTFFileLoader","OBJLoader","OBJFileLoader","createPlugin","getFileLoader","loadAssetContainerAsync","JSON","parse","importMeshAsync","loadAsync","request","abort","UpdateFlag","EventEnum","getEntity","mesh","metadata","Entity","getRoot","isTextureAsset","queryStringIndex","substring","StringTools","equaln","v1","v2","fuzz","abs","sleep","t","b64toBlob","dataURI","mimeString","split","byteString","atob","arrayBuffer","ArrayBuffer","intArray","charCodeAt","Blob","simpleObjectEqual","o1","o2","k1","updateQueryStringParameter","uri","value","re","RegExp","separator","match","isNone","firstLower","toLowerCase","firstUpper","toUpperCase","autoRecordMaterialFilter","old2new","new2old","property","autoRecordMaterial","fun","fun2","privateKey","recordKey","init","isOwn","material","diff","entity","diffMaterials","update","enumerable","configurable","SelectType","MaterialRecord","mat","linkEntitys","Material","AllTextures","updateFromDiff","k","textureID","Texture","readFromTexture","updateMaterial","backFaceCulling","BackFaceCulling","initByOwnMaterial","mtl","propery","showMeshBox","status","meshes","getBindedMeshes","m","showBoundingBox","importOwnTextures","PointTypeEnum","PointerEventTypes","ActionManagerType","pointerOver","ActionManager","pointerOut","pointerLongPress","CameraEnable","CameraViewMode","EDataType","TransformMode","CenterType","EConditionType","RenderType","MoveType","CompareType","SkyboxMode","MouseKey","KeyBoard","KeyCode","deg2rad","rad2Deg","Animation","chooserInput","fname","blob","download","document","createElement","href","style","display","onclick","body","removeChild","appendChild","click","multiple","accept","onchange","files","FileSystem","Box3","BoundingBox","points","min","getMin","getMax","box3","setFromPoints","center","Vector3","mtx","Size","extendSize","scale","SizeWorld","extendSizeWorld","union","box","oldV","minimumWorld","newV","oldM","maximumWorld","newM","reConstruct","expandByPoint","point","minimum","maximum","getWorldMatrix","il","sp","tp","unionBoundbox","b1","b2","getCanvasTexture","canvas","DynamicTexture","getVideoTexture","VideoTexture","mirrorMaterial","blockMaterialDirtyMechanism","glass_worldMatrix","glass_vertexData","getVerticesData","glassNormal0","glassNormal","reflector","Plane","absolutePosition","texture","MirrorTexture","reflectionTexture","mirrorPlane","renderList","level","getImageTexture","getGuiContainer","Container","ColorPalette","getColor3","Color3","toString","getColor4","Color4","toHex","toHexString","colorObj","g","b","floor","toRgbString","toRgbaString","parseHexColor","color","hex","bigint","parseRgbaColor","s","parseColorString","getColorInfo","rgba","rgb","rgbaObj","hexToRgba","rgbaToHex","async","generateOcean","ground","MeshBuilder","width","height","subdivisions","scaling","position","NodeMaterial","pipeline","DefaultRenderingPipeline","activeCamera","bloomEnabled","bloomThreshold","bloomKernel","bloomScale","grainEnabled","grain","intensity","animated","chromaticAberrationEnabled","chromaticAberration","aberrationAmount","radialIntensity","sharpenEnabled","sharpen","edgeAmount","getOcean","boxMaterial","ShaderMaterial","vertex","fragment","needAlphaBlending","attributes","uniforms","samplers","onBind","effect","getEffect","setFloat","setVector2","Vector2","getWaterPlane","radius","nodes","baseColor","waterMesh","CreateDisc","rotation","PI","water","WaterMaterial","bumpTexture","windForce","waveHeight","bumpHeight","windDirection","waterColor","colorBlendFactor","addToRenderList","waterColor2","Log","msg","Warn","Effect","getPolylineCenter","p1","p2","bulge","Arc2d","MidPoint","bul","StartAngle","EndAngle","StartPoint","EndPoint","Center","Radius","vec","subtract","len","an","angle","sin","atan","delDis","toDis","polar","AllAngle","dis","cos","atan2","isParallelTo","cross","lengthSquared","asVector3","asVector2","getOrthPoint","basePt","targetPt","getPointToLineDistance","list","sqrt","getClosestPoint","ep","equalsWithEpsilon","closestPt","dist","dir","scaleInPlace","param","clampRad","getDeterminantFor2V","getAreaByPoints","area","setDracoConfig","DracoCompression","decoder","wasmUrl","wasmBinaryUrl","fallbackUrl","setNodeMetaData","node","getNodeMetaData","renderPoints","pcs","PointsCloudSystem","addPoints","particle","random","pivot","buildMeshAsync","disposePoint","Infinity","TempVector","iVector2Vector","setVecLike2Vector","sourc","equlnVector3","vec2Vec3Like","pt","_animation","_animatable","_entity","_speedRadio","_time","_loop","_frame","_loopCount","_speed","completeCallback","_meshId","time","loop","frame","loopCount","complete","meshId","getNodeByMeshId","meshs","DrawObject","getChildMeshes","Target","isPart","RenderObject","getScene","beginAnimation","onAnimationEndObservable","setLoopCount","pause","restart","stop","renderObject","animations","loopObserable","onAnimationLoopObservable","MoveAnimation","_points","speed","Points","removeAnimation","renderMesh","animate","BAnimation","keyFrames","pos","totalDistance","setKeys","total","distance","d1","d2","p","AnimationGroup","_group","Camera","group","BAnimationGroup","addTargetedAnimation","startAync","onAnimationGroupEndObservable","isCamera","PathAnimation","curve","Shape","forward","right","up","ro","normalize","getRotationMatrix","acos","move","roKeyFrames","getDistance","currentFrame","normal","Matrix","multiplyToRef","Quaternion","RotateAnimation","_from","_angle","_angles","_dir","_origin","from","angles","origin","rotationQuaternion","toQuaternion","setAll","axes","range","unit","round","timeUnit","addQ","negate","pivotTranslate","Position","setPivotMatrix","AppEvent","isAsync","isLight","IsSelect","_enableShadow","_matrix","_scale","_rotation","_rotationQuaternion","_position","_drawObject","_isVisiable","_colorIndex","_color","_renderType","_materialMap","_cacheDrawObject","_animations","_isPickable","modelAnimations","_highlight","_opacity","_animationing","_ownMaterials","GroupId","updateFlag","None","AutoUpdate","registerAfterRenderFun","TempData","_material","UniqueName","trigger2","UpdateName","CanUpdate","renderType","IsPickable","isPickable","Highlight","IsComponent","GetDrawObjectFromRenderType","TransformNode","Scene","ColorIndex","decompose","toEulerAnglesToRef","MatrixInv","invert","TransfromFromMtx","rq","toEulerAngles","BoundingVectors","getHierarchyBoundingVectors","getBoundingInfo","boundingBox","Opacity","Geometry","Color","updateEntityMatrix","Rotation","Scale","copyFromFloats","Visiable","setEnabled","UpdateVisiable","AnimationNames","names","Animations","EnableShadow","UpdateShadow","MaterialMap","UpdateMaterial","OwnMaterials","AllMaterils","mtls","geometry","Visibility","EnableEdge","EdgeWidth","EdgeColor","setMaterial","getAllMesh","highlight","hg","getHighlightLayerByName","c","addMesh","removeMesh","translate","Conceptual","drawObj","initDrawObject","lookAt","setAlphaIndex","alphaIndex","setRenderGroupId","renderingGroupId","startAnimates","speedRatio","onComplete","addOnce","stopAnimates","clearAnimatable","appendAnimation","AddAnimation","moveAnimate","followAnimate","element","normals","Path3D","getNormals","theta","Axis","rotate","Space","registerAfterRender","updateRotateAndPosition","currentTime","offsetTime","offsetDistance","startTime","Date","unregisterAfterRender","thetaZero","rotateAnimate","scaleAnimate","opt","endScale","animatable","clearObserable","moveByPath","moveTo","to","isOffset","animateOption","frames","animation","beginDirectAnimation","applyMatrix","rotateTo","multiply","setPivotPoint","scaleTo","object3D","multiplyByFloats","opacityTo","opacity","updateRenderType","getChildren","UpdateMatrix","updateMatrix","updatePart","flag","All","updateDrawObject","visibility","enableEdgesRendering","edgesWidth","edgesColor","disableEdgesRendering","Update","qu","Remove","destoryAll","registerAction","typeName","Mesh","bb","divideToRef","depth","actionManager","actWatcher","ExecuteCodeAction","parameter","unregisterAction","move2Zero","moveVec","root","renderEdge","lw","cloneMaterial","emissive","PBRMaterial","StandardMaterial","emissiveColor","resetEmissive","disabledRenderEdge","getDragPoints","moveDragPoint","getReady","asArray","ver","fromArray","mid","colorstr","enablePointerMoveEvents","AppStore","MainViewer","_MainViewer","_MainScene","MainScene","_Scene","waiting","waitList","oldScene","Application","PreviewMode","Reading","GlobalVariables","BaseDom","_width","_height","_start","isSelect","_horAlign","_verAlign","_hasTransition","outline","Draging","Width","Height","HorAlign","VerAlign","HasTransition","diffx","diffy","left","convertValue","top","setPosition","zIndex","overflow","transform","transition","pointerEvents","refValue","bottom","GUISelectTool","viewer","onPointerObservable","pointerInfo","offsetX","offsetY","button","gui","getGui","GuiContainer","children","isVisible","isEnabled","contains","appCache","assestPromiseCache","getAssetPromise","setAssetPromise","asset","BaseTextureRecord","_isLoading","wrapU","wrapV","offset","Offset","enableUpdateMaterialDirtyMechanismOnce","UUID_REG","TransparentMode","AlphaMode","TextureRecord","triggerLoading","title","onLoad","tx","Url2","isBlocking","onLoadObservable","Url","test","updateURL","uScale","vScale","uOffset","vOffset","uAng","vAng","wAng","Engine","setTexture","initTextureISNull","PBRMaterialRecord","textures","AllTextureKeys","keys","texturesBaks","IdRecord","txt","newId","albedoColor","AlbedoColor","reflectivityColor","ReflectivityColor","EmissiveColor","ambientColor","AmbientColor","alpha","Alpha","metallic","Metallic","roughness","Roughness","microSurface","MicroSurface","transparencyMode","TransparencyMode","alphaMode","useAlphaFromAlbedoTexture","UseAlphaFromAlbedoTexture","updateTextures","txr","AlbedoTexture","albedoTexture","BumpTexture","MetallicTexture","metallicTexture","EmissiveTexture","emissiveTexture","LightmapTexture","lightmapTexture","ReflectionTexture","promises","waitUpdate","evt","onError","IngoreKeys","isInit","proxyTexture","Proxy","receiver","uniqueId","ALPHA_COMBINE","LockSizeType","ZINDEX","ServiceStatus","EditorStatus","ImportEntity","__ver","isRead","_preSize","originBoundbox","lockSizeType","X","isVaildUrl","Source","model","oldScale","PreSize","Y","Z","load","CreateBoxVertexData","applyToMesh","WorldPreSize","LocalBoundingBox","doNotSyncBoundingInfo","bakeTransformIntoVertices","toColor4","addChild","mtlId","oldMtl","Load","encrypt","model2Zero","handleAssetContainer","entries","instantiateModelsToScene","animationGroups","rootNodes","materials","mtlRecord","needWait","uid","AssetPromise","Wait","getLastPromise","pulgin","diffuseColor","drawObject","receiveShadows","Wireframe","wireframe","percentage","lengthComputable","loaded","Loading","innerError","MultiLine2","MultiLine","_draw","context","shadowBlur","shadowOffsetX","shadowOffsetY","shadowColor","_applyStates","strokeStyle","lineWidth","setLineDash","dash","beginPath","previousPoint","first","control","_point","_isDirty","_currentMeasure","lineTo","stroke","restore","BaseGui","Is3D","_fontSize","_zIndex","_alpha","linkEntity","_end","_isSelect","dataList","lines","timeID","drag","coordinates","DataList","scaleX","scaleY","supportDrag","attachEntity","setProp","d","fontSize","startDrag","linkOffsetX","linkOffsetY","getPositionValue","endDrag","ptInContainer","label","isPointerBlocker","generateLinkLine","panel","line","getAt","addControl","linkWithMesh","SelectMarquee","container","selectType","rightColor","leftColor","rightBorder","leftBorder","dom","st","background","margin","border","show","hide","W","setStart","setEnd","SelectBox","_viewer","selectList","_tempPlane","select","destoryTempPlane","world2screen","getTransformMatrix","viewport","toGlobal","getRenderWidth","getRenderHeight","screen2World","isDestoryPlane","ray","createPickingRay","getViewMatrix","cameraManager","pickinfo","intersectsMesh","hit","pickedPoint","SelectEntitys","enitys","SelectMeshs","_Viewer","_SelectType","activeMeshes","activeMeshesData","getActiveMeshes","targetIsSelect","startPosition","endPosition","minX","minY","maxX","maxY","boundBox","vectorsWorld","box2","pts","getPositionData","wp","intersectsPoint","SelectSet","_selectSetList","ens","entitys","addEns","SelectControl","editor","selectMarquee","selectSet","selectObserable","_selectGui","_selectDOM","_selectParticle","_selectGroupRecord","parentElement","_registerEvent","isReady","Status","Select","setSelectEntitys","do","onPointerDown","cancel","clearSelect","isUserInput","SelectObjects","SelectGui","oldMeshs","pickInfo","pickedMesh","ctrlKey","metaKey","pointerX","pointerY","onPointerMove","onPointerUp","selectByMarquee","isUpdate","highlightManager","onSelect","ob","addMeshs","SelectGroupRecord","SelectParticle","SelectDOM","selectBox","addEventListener","clientX","clientY","Gizmos","Gizmo","_attachedNodes","_tempVector_","gizmoPosition","_attachedNodesChanged","attachedNode","attachedMesh","AttachedNodes","attachedNodes","_attachedNode","_attachedMesh","_rootMesh","setGizmosPosition","effectiveNodes","rows","getRow","positions","row","toVector3","GetCenterFromPoints","_nodeMatrixChanged","oldNode","_matrixChanged","_handlePivots","attachedNodeTransforms","attachedNodeTransform","isUsingPivotMatrix","setTranslation","_update","updateGizmoPositionToMatchAttachedMesh","updateGizmoRotationToMatchAttachedMesh","updateScale","gizmoLayer","utilityLayerScene","cameraPosition","globalPosition","devicePosition","subtractToRef","scaleRatio","_getWorldMatrixDeterminant","mode","setNodesPovits","ap","computeWorldMatrix","delta","setAbsolutePosition","resetNodesPovits","AxisDragGizmo","thickness","isCollider","arrow","cylinder","CreateCylinder","diameterTop","diameterBottom","tessellation","createInstance","dragAxis","UtilityLayerRenderer","dragBehavior","_pointerObserver","snapDistance","onSnapObservable","_isEnabled","_gizmoMesh","_coloredMaterial","_hoverMaterial","_disableMaterial","_dragging","specularColor","_CreateArrow","collider","currentSnapDragDistance","tmpVector","tmpVector2","tmpSnapEvent","PointerDragBehavior","attach","CreatePlaneVertexData","sideOrientation","moveAttached","updateDragPlane","addBehavior","onDragObservable","_handlePivot","matrixChanged","getTranslationToRef","addInPlace","validateDrag","addInPlaceFromFloats","addTranslationFromFloats","updateCache","dragDistance","dragSteps","normalizeToRef","onDragStartObservable","onDragEndObservable","light","_getSharedGizmoLight","includedOnlyMeshes","cache","gizmoMeshes","colliderMeshes","hoverMaterial","disableMaterial","active","addToAxisCache","_customMeshSet","_isHovered","enabled","_setGizmoMeshMaterial","onEnabledObservable","newState","_attachedNodeChanged","detach","matl","PlaneDragGizmo","plane","dragPlane","CreatePlane","dragPlaneNormal","_CreatePlane","PositionGizmo","_meshAttached","_nodeAttacheds","_nodeAttached","xGizmo","yGizmo","zGizmo","xPlaneGizmo","yPlaneGizmo","zPlaneGizmo","gizmo","isHovered","hovered","gizmoManager","_snapDistance","_observables","_gizmoAxisCache","_planarGizmoEnabled","planarGizmoEnabled","_updateGizmoRotationToMatchAttachedMesh","_scaleRatio","obs","setCustomMesh","PlaneRotationGizmo","planeNormal","useEulerRotation","_rotationDisplayPlane","_rotationShaderMaterial","rotationMesh","_createGizmoMesh","updatable","_RotationGizmoVertexShader","_RotationGizmoFragmentShader","maxDragAngle","MaxDragAngle","_useAlternatePickedPointAboveMaxDragAngle","lastDragPosition","rotationMatrix","planeNormalTowardsCamera","localPlaneNormalTowardsCamera","dragPlanePoint","invertToRef","setVector3","tmpMatrix","amountToRotate","nodeScale","changeQuaternion","nodeTranslation","newVector","originalVector","dot","snapped","cameraFlipped","toRotationMatrix","camVec","quaternionCoefficient","determinant","parentMesh","CreateTorus","diameter","RotationGizmo","_checkBillboardTransform","billboardMode","xColor","xOptions","yColor","yOptions","zColor","zOptions","AxisScaleGizmo","uniformScaling","sensitivity","dragScale","_tmpVector","_tmpMatrix","_tmpMatrix2","arrowMesh","arrowTail","nodePosition","linePosition","lineScale","increaseGizmoMesh","dragStrength","resetGizmoMesh","scaleToRef","transformNode","_isMesh","maxScale","uniformScaleGizmo","CreateBox","useGizmoMaterial","ScaleGizmo","_uniformScalingMesh","_octahedron","_sensitivity","_createUniformScaleMesh","CreatePolyhedron","msh","GizmoManager","keepDepthUtilityLayer","_defaultKeepDepthUtilityLayer","utilityLayer","_defaultUtilityLayer","gizmos","positionGizmo","rotationGizmo","scaleGizmo","_scene","clearGizmoOnEmptyPointerEvent","enableAutoPicking","onAttachedToMeshObservable","onAttachedToNodeObservable","_gizmosEnabled","boundingBoxGizmo","_pointerObservers","_boundingBoxColor","_thickness","boundingBoxDragBehavior","SixDofDragBehavior","attachableMeshes","attachableNodes","usePointerToAttachGizmos","autoClearDepthAndStencil","attachToMeshPointerObserver","_attachToMeshPointerObserver","gizmoAxisPointerObserver","pointerObserver","found","isDescendantOf","AbstractMesh","attachToMesh","removeBehavior","boundingBoxGizmoEnabled","attachToNode","attachToNodes","positionGizmoEnabled","rotationGizmoEnabled","scaleGizmoEnabled","BoundingBoxGizmo","gizmoAxisCache","observer","TransformControl","_mode","Translate","attachNodes","utilLayer","Mode","_register","Rotate","attachMeshs","detachMeshs","_worldMatrix","KeyboardControl","keyeunm","keydown","KeyboardEventTypes","keyup","keydownEvents","keyupEvents","_ctrlKey","_shiftKey","_altKey","IsCtrl","IsShift","IsAlt","TypeError","removeAll","onKeyboardObservable","info","shiftKey","altKey","MouseControl","_pointerdownEvs","_pointermoveEvs","_pointerupEvs","_pointerwheelEvs","_pointerPickEvs","_pointerTapEvs","_pointerDbTapEvs","ScreenPoint","WorldPoint","pick","getCurrentEntity","pickMesh","getEvent","screenX","screenY","worldPoint","ISPROXYKEY","defineProperty","autoUpdate","descriptor","autoRecord","Component","initData","initComponents","getData","Schema","as","self","prop","newval","needUpdate","play","watchLoad","mounted","err","componentCatch","finally","dataJSON","component","RegisterComponent","UnRegisterComponent","RemoveComponent","prototype","writeWidgetValue","entityKey","readWidgetValue","BaseWidget","IsContainer","fromJSON","schema","GetPointService","cleaners","auxiliaryLine","_UpdatePoint","GetPoint","focus","getPointCallback","initAuxiliaryLine","initMouseEvent","initKeyDownEvent","keywords","keywordList","Left","returnPoint","screenPoint","Ok","returnKeyWord","KeyWord","Cancel","hasAuxiliaryLine","basePoint","dashSize","gapSize","dashNb","updateAuxiliaryLine","currentPt","mouseCtrl","keyboardCtrl","kw","DragPointsManager","_pcsList","intersect","direction","particles","setParticles","DragControlService","_editor","manager","startPoint","cleaner","_dragList","current","moveEnd","unRegister","Drag","register","Editor","editorMode","selectControl","transformControl","dragCtrlService","getPointService","services","onTransfromDragStart","onTransfromDragEnd","onKeyDownCtrl","code","Escape","sv","initEditor","setCursor","getPoint","SKYBOX_SIZE","ORTH_SIZE","DEFAULT_ALPHA","DEFAULT_BETA","GoundSize","HighlightManager","_highlightLayer","HighlightLayer","innerGlow","exclude","addExcludedMesh","hightMeshs","addEnitys","removeAllMeshes","CustomFramingBehavior","_attachedCamera","_radiusScale","_positionScale","zoomOnBoundingInfo","focusOnOriginXZ","onAnimationEnd","zoomTarget","zoomTargetY","radiusWorld","centerWorld","_calculateLowerRadiusFromModelBoundingSphere","boxVectorGlobalDiagonal","frustumSlope","_getFrustumSlope","distanceForHorizontalFrustum","distanceForVerticalFrustum","camera","aspectRatio","getAspectRatio","frustumSlopeY","tan","fov","frustumSlopeX","BaseCamera","_canvas","_enable","_camera","_target","wheelSpeed","wheelDeltaPercentage","_flying","customWheel","_pointerInput","_animateGroup","customFramingBehavior","onRadiusChangeObserver","onZommScaleChangeObserver","zoomScale","CurrentCamera","Beta","Aspect","Enable","EnableZoom","Zoom","inputs","attached","mousewheel","attachControl","detachControl","orthoTop","orthoBottom","orthoLeft","orthoRight","zoomByBoundBox","autoLimit","framingBehavior","getBehaviorByName","framingTime","elevationReturnTime","autoCorrectCameraLimitsAndSensibility","minZ","zoomAll","filterFun","worldExtends","getWorldExtends","zoomToEntity","initOrthCamera","updateOrthCamera","wheelDelta","deltaY","detail","flyTo","targetVector","currentGroup","targetAninmate","positionAninmate","posKeyFrames","onAnimationGroupPlayObservable","CustomArcRotateCameraPointersInput","ArcRotateCameraPointersInput","panningSensibility","_button","twoFingerActivityCount","isPinching","enablePan","enableRotate","panPercentage","useTouchForRotating","useNaturalPan","pinchToPanMaxDistance","getPanSpeedPercent","onButtonDown","onTouch","pan","onMultiTouch","pointA","pointB","previousPinchSquaredDistance","pinchSquaredDistance","previousMultiTouchPanPosition","multiTouchPanPosition","multiTouchPanAndZoom","computePinchZoom","computeMultiTouchPanning","multiTouchPanning","pinchZoom","getDistanceBetweenFingers","onButtonUp","onLostFocus","inertialPanningX","inertialPanningY","inertialAlphaOffset","angularSensibilityX","inertialBetaOffset","angularSensibilityY","moveDeltaX","moveDeltaY","useNaturalPinchZoom","pinchDeltaPercentage","inertialRadiusOffset","pinchPrecision","pinchInwards","isWheelByTrackpad","wheelDeltaX","wheelDeltaY","predicate","deltaX","ArcRotateCameraTrackpadInput","ArcRotateCameraMouseWheelInput","angularSpeed","_isRotationEnabled","_angularSpeed","_isPanningEnabled","_panningSensibility","useMousewheelName","wheel","hitPlane","verticalAngularSpeedRatio","panningX","alphaDelta","panningY","betaDelta","inertialPanning","enablePanning","disablePanning","enableRotation","disableRotation","noPreventDefault","arguments","preventDefault","xSign","ySign","platformScale","deltaMode","EventConstants","customComputeDeltaFromMouseWheel","_computeDeltaFromMouseWheelLegacyEvent","estimatedTargetRadius","targetInertia","inertia","Scalar","Number","MAX_VALUE","wheelPrecision","zoomToMouseLocation","zoomToMouse","checkInputs","updateHitPlane","zeroIfClose","getClassName","getSimpleName","getPosition","intersectsPlane","inertiaComp","lowerRadiusLimit","lowerLimit","upperRadiusLimit","upperLimit","ratio","directionToZoomLocation","TmpVectors","Epsilon","_CameraProperty","FreeCameraTrackpadInput","BaseCameraMouseWheelInput","wheelXMoveRelative","axis","_wheelXAction","MoveRelative","_wheelXActionCoordinate","wheelYMoveRelative","_wheelYAction","_wheelYActionCoordinate","wheelZMoveRelative","_wheelZAction","_wheelZActionCoordinate","wheelXRotateRelative","RotateRelative","wheelYRotateRelative","wheelZRotateRelative","wheelXMoveScene","MoveScene","wheelYMoveScene","wheelZMoveScene","_moveRelative","_rotateRelative","_moveScene","Coordinate","ffMultiplier","pointer","_wheelDeltaX","wheelPrecisionX","_wheelDeltaY","wheelPrecisionY","_wheelDeltaZ","wheelPrecisionZ","deltaZ","onChangedObservable","_updateCamera","useRightHandedSystem","cameraTransformMatrix","transformedDirection","cameraRotation","cameraDirection","_updateCameraProperty","cameraProperty","coordinate","action","CameraInputTypes","ArcRotateCameraControl","_radius","_beta","_lowerRadiusLimit","_upperRadiusLimit","_lowerAlphaLimit","_upperAlphaLimit","_lowerBetaLimit","_upperBetaLimit","_panningAxis","_originPanTarget","_panDistance","_minZ","_maxZ","onViewMatrixChangedObservable","beta","EnablePan","Pan","EnableRotate","Roate","IsFlying","setTarget","LowerRadiusLimit","UpperRadiusLimit","LowerAlphaLimit","UpperAlphaLimit","LowerBetaLimit","UpperBetaLimit","PanningAxis","OriginPanTarget","PanDistance","MinZ","MaxZ","UseNaturalPinchZoom","UseTouchForRotating","zoomTo","useFramingBehavior","ArcRotateCamera","maxZ","panningInertia","navigator","userAgent","removeByType","wheelInput","input","initPerCamera","WheelSpeed","ViewMode","Up","Down","Right","Front","Back","SW","rotateAround","angleX","angleY","alAnimation","btAnimation","lowerAlphaLimit","upperAlphaLimit","lowerBetaLimit","upperBetaLimit","panningOriginTarget","panningAxis","panningDistanceLimit","mouseWheelDelta","FreeCameraControl","FreeCamera","_mouseInput","buttons","keysDown","KeyS","keysDownward","ArrowDown","keysUp","KeyW","keysUpward","ArrowUp","keysLeft","KeyA","keysRight","KeyD","addMouseWheel","CameraType","CameraManager","_type","ArcRotate","_control","ArcRotateControl","FreeControl","switch","Control","ZoomScale","Follow","switchEvent","EnvironmentTools","defaultSkyboxIndex","defaultValue","Storage","localStorage","getItem","ReadLocalStorageValue","SkyboxPath","Skyboxes","HDRCubeTexture","CubeTexture","getAnimation","SkyboxesNames","ExcludesReflect","DefaultClearColor","UpdateSceneFlag","SceneControl","engine","_skybox","_image","_skyboxMesh","_standMaterial","_pbrMaterial","_skyMaterial","_glowLayer","_reflectionProbe","_turbidity","_luminance","_rayleigh","_sunPosition","_inclination","_azimuth","_mieDirectionalG","_mieCoefficient","_isReflect","_layer","reslove","_env","_iblIntensity","_cacheEnv","_envTextureOption","rotationY","_skyTextureOption","_isShadow","LoadObserable","ToggleShadowObserable","watchMaterial","reflectMaterial","useMaterialMeshMap","useClonedMeshMap","useGeometryUniqueIdsMap","BlockMaterialUpdate","clearColor","initReflection","gl","GlowLayer","rp","ReflectionProbe","IsExistEnv","Skybox","showSkyBox","BackgroundUrl","isImageType","Image","showImage","EmissiveIntensity","Background","string","Turbidity","Rayleigh","Luminance","SunPosition","Inclination","Azimuth","IsReflect","onNewMaterialAddedObservable","reflect","removeCallback","cancelReflect","Env","IBLIntensity","Param","EnvRotation","IsShadow","config","debugLayer","embedMode","toggleShowEnv","loadEnv","render","Sun","getSkyBox","inclination","azimuth","rayleigh","turbidity","luminance","mieDirectionalG","mieCoefficient","hiddenSkyBox","environmentIntensity","environmentTexture","UpdateScene","cancelReflectMaterial","createDefaultEnv","LoadSkyboxPathTexture","createDefaultSkybox","testLights","x1","z1","x2","z2","x3","z3","maxSimultaneousLights","spot","SpotLight","day2Evening","isRevert","TV","RV","LV","IV","AV","LIV","turAn","RayleighAn","lumAn","intAn","AzAn","lights","SceneAn","stopAnimation","showFog","fogMode","fogColor","fogDensity","fogStart","fogEnd","hiddenLayer","setSkyboxByHdr","setEnvTexture","hiddenBox","Layer","cubeTexture","createSkybox","getSkyMaterial","getPBRMaterial","getStandMaterial","skybox","infiniteDistance","ignoreCameraMaxZ","skyboxMaterial","disableLighting","hdrSkyboxMaterial","coordinatesMode","twoSidedLighting","SkyMaterial","oldRefl","realTimeFiltering","SceneEffectManager","DepthOfFieldEffectBlurLevel","ImageProcessingConfiguration","Pipeline","EnableBloom","BloomThreshold","BloomWeight","BloomKernel","BloomScale","DepthOfFieldEnabled","DepthOfFieldBlurLevel","FocusDistance","FocalLength","FStop","LensSize","VignetteEnabled","VignetteBlendMode","VignetteColor","VignetteWeight","ImageProcessEnable","Contrast","Exposure","SharpenEnabled","EdgeAmount","ColorAmount","bloomWeight","depthOfFieldEnabled","depthOfFieldBlurLevel","imageProcessingEnabled","colorAmount","depthOfField","focusDistance","focalLength","fStop","lensSize","updateImageProcessing","imageProcessing","contrast","exposure","vignetteEnabled","vignetteBlendMode","vignetteColor","vignetteWeight","onBuildObservable","getViewHelperAxes","cameraHeight","cm","reverse","advancedTexture","mark","labelRoot","axesLabel","Ellipse","TextBlock","fontWeight","onPointerClickObservable","restoreState","vec2","onPointerEnterObservable","onPointerOutObservable","SceneHelper","originScene","cameraManger","_cameraHeight","ellipses","FreeObserver","stopRender","onArcRotateChange","onFreeChange","initViewHelper","frustumPlanes","Frustum","registerBeforeRender","item","linkedMesh","isInFrustum","changeZIndex","onActiveCameraChanged","autoClear","createDefaultCamera","Viewport","Red","Green","Blue","xl","xMlt","yl","yMlt","zl","zMlt","AdvancedDynamicTexture","dotCoordinate","Viewer","_option","defaultLight","sceneControl","hemisphericLight","_showWorldAxes","_worldAxes","_engineOption","preserveDrawingBuffer","stencil","useHighPrecisionMatrix","premultipliedAlpha","antialias","forceSRGBBufferSupportState","doNotHandleContextLost","_sceneHelper","_advancedDynamicTexture","pauseRender","sceneObjects","renderFunction","renderEvent","_regiser","ShowAxesViewer","xAxis","yAxis","zAxis","AmibentColor","PauseRender","forceWireframe","forcePointsCloud","IsPreview","isReset","isCover","setSize","png","toDataURL","getPreviewUrl","ShowGround","EffectManager","_initEngine","_initScene","_initCamera","_initLight","_initSceneHelper","AxesViewer","updateAxes","GridMaterial","lineColor","mainColor","gridRatio","freeze","isShow","FPS","getFps","w","clientWidth","clientHeight","runRenderLoop","stopRenderLoop","onAfterRenderObservable","loadGroundImage","image","diffuseTexture","getSize","freezeWorldMatrix","destoryGroundImage","BHLight","FUZZ","clearScene","needDispose","clearCache","cleanCachedTextureBuffer","clearInternalTexturesCache","_BasicMaterialMap","_BasicWireframeMaterialMap","DefaultStandardMaterial","colorIndex","CommonMaterials","Solid3D","VertextData","setAllVerticesData","getWireframeStandMaterial","Physical","VertexDataCache","Box","_center","Depth","CenterPosition","TranslateMtx","Bottom","Top","LFB","RFB","LBB","RBB","vd","Curve","AllPoints","Length","Lines","map","preV","currentIndex","addPoint","updatePointByIndex","newP","pop","isNearPickable","intersectionThreshold","CreateLineSystemVertexData","addToRef","Line","Polyline","toPolylineData","Vertices","VertexCount","fp","Curve3","getPoints","data2","arcLine","appendVertex","updateVertexAt","removeVertexAt","at","Sphere","arc","Diameter","CreateSphereVertexData","Cylinder","DiameterTop","DiameterBottom","Tessellation","CreateCylinderVertexData","Capsule","radiusTop","radiusBottom","capSubdivisions","topCapSubdivisions","bottomCapSubdivisions","RadiusTop","RadiusBottom","CapSubdivisions","TopCapSubdivisions","BottomCapSubdivisions","Subdivisions","CreateCapsuleVertexData","Torus","Tthickness","CreateTorusVertexData","Ground","onlyGround","CreateGroundVertexData","Light","_bias","_normalBias","_filteringQuality","ShadowGenerator","_darkness","helper","_shadowGenerator","HasShadowGenerator","Bias","updateShadowCaster","NormalBias","Darkness","FilteringQuality","addShadowCaster","ms","filteringQuality","bias","normalBias","darkness","getShadowMap","resetRefreshCounter","removeShadowCaster","Intensity","Diffuse","Specular","initShadowGenerator","useExponentialShadowMap","usePercentageCloserFiltering","refreshRate","RenderTargetTexture","createHelper","getHelper","updateHelper","PointLight","BPointLight","diffuse","getColor3fromHex","specular","Range","VisiableHelper","HemisphericLight","HemisphericLight2","HELPER_STEP","BDirection","Direction","Angle","SpotLight2","currentPoint","mainLine","dragDeltaRatio","circle","STEP","arrowLine1","arrowLine2","rangelines","lines3","lines4","DirectionalLight","DirectionalLight2","autoCalcShadowZBounds","endPoint","dirctSphere","LENGTH","Tube","_curve","CreateTube","morph","updateFunction","originPoints","unregisterBeforeRender","Door","compareLeft","Win","WallPlane","corner","doors","windows","earcut","Wall","walls","interiorUV","Vector4","exteriorUV","interiorColor","outeriorColor","exteriorColor","interior","_outerOutline","_innerOutline","build","Thickness","addWindowOrDoorByPosition","isDoor","p21","addDoor","addWindow","updateWinsAndDoors","updateGround","win","decomposeToTransformNode","door","PolygonMeshBuilder","outerBaseCorners","innerBaseCorners","getInOutContours","innerTopCorners","outerTopCorners","getTBContours","generateWallVetexData","removeWinOrDoor","indices","uvs","colors","interiorIndex","nbWalls","polygonCorners","polygonTriangulation","wallData","maxH","innerDoorCorners","outerDoorCorners","innerWindowCorners","outerWindowCorners","maxL","wallLength","exteriorWallLength","doorData","windowData","uvx","uvy","wallDiff","wallDirection","wallNormal","wallIndex","NextWall","doorLen","winLen","holes","winIndex","holeData","addHole","wallBuilder","nbIndices","elements","idx","doorCornersIn","doorCornersOut","dIndex","doorsIn","doorsOut","i1","i2","windowCornersIn","windowCornersOut","wIndex","windowsIn","windowsOut","doorCount","doorNb","ww","VertexData","vertexData","pg","w0","w1","_epoints","_eholes","ply","lineNormal","nextLine","Particle","_isStart","UniupeName","IsStart","updateStatus","SceneSize","fillScene","DataBindTable","GroupRecordTable","InteractionTable","_pause","queues","preventDbTimeId","lastClickTimeStap","resolveFun","isChild","isEnd","Pause","pointerCallback","timeStamp","doIt","IsRight","TriggerType","pointerDbClick","onKeydown","onKeyup","onUpdate","animatables","wait","interaction","watch","visibilityState","getArea","vector","Database","ModelSpace","LightSpace","TextureTable","MaterialTable","GuiSpace","DomSpace","ParticleSystemSpace","GroupTable","Tables","cloneMaterial2Database","ture","objectid","cloneBlockObjects","cloneBlockObject","cloneId","cloneBlockReferenceObject","newObject","allocationObjectId","oldData","oldDb","oldId","newOwner","aBounding","bBounding","aVolume","table","FileToolsOptions","cacheData","searchParams","timestamp","_domContainer","_IsShadow","guiSelectTool","Intance","domContainer","getElementById","initLight","cameraRadius","debug","create","loading","createGui","createParticle","part","createPBR","createTexture","onload","SelectGuis","SelectDoms","SelectParticles","changeRenderType","new","NewFile","saveFile","loadFile","StartWait","blockfreeActiveMeshesAndRenderingGroups","StartLoad","LoadFile","WaitComplete","LoadComplete","createView","openShadow","closeShadow","addTransformNode","removeEventListener","customLoadingScreen","loadingUIBackgroundColor","loadingUIText","displayLoadingUI","displayLoadingUIEvnet","hideLoadingUI","hideLoadingUIEvent","FilePreviewer","defaultEnv","filesInput","onFileLoadedObserver","onFileProgressObserver","onFileErrorObserver","isRendered","loadingScreen","createDefaultCameraOrLight","executeWhenReady","FilesInputStore","FilesInput","sceneFile","isGLTF","prepareCamera","fs","message","loadLocalFile","loadFiles","disposeImportMeshes","assets","addAllToScene","waitRendered","timer","clearInterval","onLoaded","MaterialViewer","TempDatabase","showObjects","showIndex","CreateSphere","toggleObject","ToggleScene","newMTL","ShowIndex","waitRender","UndoCommand","noHistory","exec","RedoCommand","CommandManager","CommandMap","LastCmd","_CommandNameList","cmd","CommandStart","CommandEnd","RegisterCommand","RemoveCommand","CommandNameList","commandManager","registerCommand","cmds","CommandWrap","StandardMaterialRecord","DiffuseTexture","MoveAction","animateType","MaterialAnimation","getMaterialById","Animatable","defaultStart","dataType","targetKey","generateKeys","disposeOnEnd","isStr","getValue","strs","Open","openUrl","location","back","reload","setAttribute","Move","_list","List","ps","rs","animationType","tempEval","eval","evalExpr","expr","params","_List","param2","Display","bySize","povit","MoveCamera","SetVariable","setPar","par","targetPar","setItem","DataFeedback","getWidgetValue","wgValue","variables","getEventName","eventName","Dispatch","triggerNames","eventData","getTriggerEvent","pros","Interaction","_triggerType","_cleaners","rpa","act","clearWatch","check","sourceEvent","doList","Compare","_Params","Equal","value1","value2","compare","UnEqual","Great","Less","GtEqual","LessEqual","Include","UnInclude","Is","IsNot","NameIndex","Condition","isAll","compares","wg","addCompare","cp","DataBindType","DataBind","Ws","Api","startApiRequest","startWs","setEntityValue","lastKey","ws","WSList","close","interfaceSource","filerFun","Function","method","q","response","hcFetch","queryService","queryData","queryDataStr","protocol","WebSocket","returnData","String","StackPanelGui","_background","texts","oldLen","text","textBlock","removeControl","StackPanel","removeSource","video","firstChild","srcObject","src","removeAttribute","Video","serialize","isLoaded","_loaded","detectPointerOnOpaqueOnly","_detectPointerOnOpaqueOnly","sourceLeft","_sourceLeft","_markAsDirty","sourceTop","_sourceTop","sourceWidth","_sourceWidth","sourceHeight","_sourceHeight","imageWidth","_videoWidth","imageHeight","_videoHeight","svgAttributesComputationCompleted","_svgAttributesComputationCompleted","autoScale","_autoScale","synchronizeSizeWithContent","keepSize","_keepSize","VideoDom","_video","_imageDataCache","_onImageLoaded","videoWidth","videoHeight","onImageLoadedObservable","_getVideo","isNative","HTMLVideoElement","currentSrc","onDisposeObservable","_source","crossOrigin","muted","autoplay","cellWidth","_cellWidth","cellHeight","_cellHeight","cellId","_cellId","_workingCanvas","onSVGAttributesComputedObservable","imageData","getContext","getImageData","_getTypeName","_processMeasures","parentMeasure","adaptWidthToChildren","adaptHeightToChildren","_prepareWorkingCanvasForOpaqueDetection","_host","EngineStore","createCanvas","clearRect","_drawImage","sx","sy","sw","sh","ty","tw","th","drawImage","rowCount","column","VideoGui","_url","_videoDom","CanvasControl","_canvasWidth","_canvasHeight","CanvasDom","_canvas_","_needAnimation","SubEmitter","particleSystem","SubEmitterType","_intance","initParticle","child","disposeOnStop","sub","BSubEmitter","updateParticle","Emiter","attachSystem","_emiter","AttachSystem","ConeEmitter","HasIntance","setEmiter","createConeEmitter","RadiusEmiter","_radiusRange","radiusRange","RadiusRange","CylinderEmitter","createCylinderEmitter","DirectedCylinder","createDirectedCylinderEmitter","Direction1","Direction2","HemisphericEmiter","createHemisphericEmitter","EmiterShape","EmiterType","SphereEmiter","createSphereEmitter","ParticleSystem","capacity","_updateSpeed","_size","color1","color2","colorDead","_manualEmitCount","emitPower","_pivot","direction1","direction2","minEmitBox","maxEmitBox","_gravity","_rate","lifeTime","spriteOption","isAnimationSheetEnabled","spriteCellHeight","spriteCellWidth","spriteRandomStartCell","startSpriteCellID","endSpriteCellID","spriteCellChangeSpeed","emiterShape","emiterType","Point","emiter","emiterEntity","emiterPosition","blendMode","BParticleSystem","subParticleSystems","needUpdateSubEmiters","gradients","_targetStopDuration","manualEmitCount","ManualEmitCount","Capacity","UpdateSpeed","TextureUrl","Color1","Color2","ColorDead","EmitPower","AngularSpeed","Pivot","MinEmitBox","MaxEmitBox","Gravity","EmiterPosition","Rate","LifeTime","SpriteOption","updateEmitType","updateEmitShape","EmiterEntity","BlendMode","SubParticleSystems","Gradients","removeGradients","updateGradient","TargetStopDuration","appendGradient","removeGradient","removeV","particleTexture","translationPivot","tur","minSize","maxSize","minLifeTime","maxLifeTime","targetStopDuration","emitRate","gravity","minAngularSpeed","maxAngularSpeed","minEmitPower","maxEmitPower","updateSpeed","updateSubEmiters","worldOffset","emiterJson","subs","period","otherValue","subEmitters","createPointEmitter","createBoxEmitter","Hemisphere","DirctedCylinder","Cone","Custom","emitter","gradient","removeSizeGradient","addSizeGradient","removeColorGradient","addColorGradient","gs","ParticleSystemGroup","systems","ParticleSystemSet","pcset","jsons","CollectionRecord","_visiable","_groupId","version","VERSION","GroupRecord","resolution","ab","lengthAB","lengthCD","normAB","normDC","normCD","startAngle","endAngle","startInter","endInter","ceil","DXFLoader","content","BlockMap","matrix4","ModelList","destoryBlock","ignoreLayers","ignoreBlocks","destoryDXF","modelMap","outerWalls","Parser","timeEnd","header","blocks","block","tables","blockRecord","dbHandle","handle","UsedBlocksLayers","layers","entities","layer","parseEntitys","parseEntity","LinesMesh","wall","isOuterWall","parseWall","CreateLineSystem","originName","CreateLines","setColor","parseLine","parsePolyline","xScale","yScale","zScale","roOffset","rotationOffset","vertices","createArcForLWPolyline","shape","isRot","layerTable","rbg","toRgba","join","closestPoints","DxfParser","clipboardData","handleObjectFunction","CommandEnum","DirSourceType","AppApi","success","TokenKey","removeCookies","cookieKey","Cookies","ResponseStatus","myAxios","axios","baseURL","API_URL","interceptors","use","token","headers","Authorization","ErrorResult","InvalidToken","Disabled","pathname","handleError","App","observable","intance","prefix","getReq","ImportScript","urls","script","rej","onerror","ht","loadPromise","initHT","Default","convertURL","storagePrefix","TimeStap","getGraphView","dm","DataModel","graphView","graph","GraphView","getSelectWidth","setMovableFunc","setPannable","setRectSelectable","setScrollBarVisible","handleScroll","onDataClicked","target3d","hc","getView","CMD","Delete","stopPropagation","Copy","Paste","getHTNode","getUrl","Node","u","getTime","performance","now","getUUID","xhrLoad","setImage","getHTData","getImage","hcNode","_dataBindings","_setAttr","dataBindings","cssText","fitContent","DataBindings","Attr","getProp","attr","updateAttr","temp","replaceWith","setWidth","setHeight","getTexture","__htmlOrderList","HTMLElement","getElementsByTagName","nodeName","getCanvas","toBlob","HC2DGui","_container","div","clearDom","isConnected","Utils","horizontalAlignment","verticalAlignment","childNodes","calculateWidthOrHeight","oldValue","canvasControl","initTexture","resFun","addViewListener","kind","_context","getUniupComponentType","registerComponent","propertys","Com","genC","HC","getComponent","HCCore","Aop","timeStap","Preview","canvasRef","useRef","setLoading","useState","app","getComponentJson","loadApp","getAppJson","components","scripts","execScript","useEffect","search","jsonUrl","loadVariables","ref","textAlign","alt","createRoot","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","chunkIds","fn","priority","notFulfilled","fulfilled","every","splice","getter","__esModule","definition","globalThis","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","forEach","bind","__webpack_exports__"],"sourceRoot":""}