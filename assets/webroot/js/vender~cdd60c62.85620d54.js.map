{"version":3,"file":"js/vender~cdd60c62.85620d54.js","mappings":"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","sources":["webpack:///../../../node_modules/axios/index.js","webpack:///../../../node_modules/axios/lib/adapters/xhr.js","webpack:///../../../node_modules/axios/lib/axios.js","webpack:///../../../node_modules/axios/lib/cancel/CancelToken.js","webpack:///../../../node_modules/axios/lib/cancel/CanceledError.js","webpack:///../../../node_modules/axios/lib/cancel/isCancel.js","webpack:///../../../node_modules/axios/lib/core/Axios.js","webpack:///../../../node_modules/axios/lib/core/AxiosError.js","webpack:///../../../node_modules/axios/lib/core/InterceptorManager.js","webpack:///../../../node_modules/axios/lib/core/buildFullPath.js","webpack:///../../../node_modules/axios/lib/core/dispatchRequest.js","webpack:///../../../node_modules/axios/lib/core/mergeConfig.js","webpack:///../../../node_modules/axios/lib/core/settle.js","webpack:///../../../node_modules/axios/lib/core/transformData.js","webpack:///../../../node_modules/axios/lib/defaults/index.js","webpack:///../../../node_modules/axios/lib/defaults/transitional.js","webpack:///../../../node_modules/axios/lib/env/data.js","webpack:///../../../node_modules/axios/lib/helpers/bind.js","webpack:///../../../node_modules/axios/lib/helpers/buildURL.js","webpack:///../../../node_modules/axios/lib/helpers/combineURLs.js","webpack:///../../../node_modules/axios/lib/helpers/cookies.js","webpack:///../../../node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///../../../node_modules/axios/lib/helpers/isAxiosError.js","webpack:///../../../node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///../../../node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///../../../node_modules/axios/lib/helpers/null.js","webpack:///../../../node_modules/axios/lib/helpers/parseHeaders.js","webpack:///../../../node_modules/axios/lib/helpers/parseProtocol.js","webpack:///../../../node_modules/axios/lib/helpers/spread.js","webpack:///../../../node_modules/axios/lib/helpers/toFormData.js","webpack:///../../../node_modules/axios/lib/helpers/validator.js","webpack:///../../../node_modules/axios/lib/utils.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/array/from.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/array/is-array.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/date/now.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/concat.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/ends-with.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/every.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/filter.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/find.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/for-each.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/includes.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/index-of.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/map.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/reduce.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/reverse.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/slice.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/some.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/sort.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/splice.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/starts-with.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/instance/trim.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/json/stringify.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/map.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/math/sign.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/number/max-safe-integer.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/assign.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/define-properties.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/define-property.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptor.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-descriptors.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/get-own-property-symbols.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/get-prototype-of.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/keys.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/object/values.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/parse-float.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/parse-int.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/promise.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/reflect/get.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/reflect/set.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/set-interval.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/set-timeout.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/set.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/symbol/for.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/url-search-params.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/url.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js-stable/weak-map.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/instance/for-each.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/instance/reduce.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/instance/reverse.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/instance/slice.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/object/define-property.js","webpack:///../../../node_modules/@babel/runtime-corejs3/core-js/object/keys.js","webpack:///../../../node_modules/@babel/runtime-corejs3/helpers/esm/applyDecoratedDescriptor.js","webpack:///../../../node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldLooseBase.js","webpack:///../../../node_modules/@babel/runtime-corejs3/helpers/esm/classPrivateFieldLooseKey.js","webpack:///../../../node_modules/@babel/runtime-corejs3/helpers/esm/defineProperty.js","webpack:///../../../node_modules/@babel/runtime-corejs3/helpers/esm/initializerDefineProperty.js","webpack:///../../../node_modules/@babylonjs/core/Actions/abstractActionManager.js","webpack:///../../../node_modules/@babylonjs/core/Actions/action.js","webpack:///../../../node_modules/@babylonjs/core/Actions/actionEvent.js","webpack:///../../../node_modules/@babylonjs/core/Actions/actionManager.js","webpack:///../../../node_modules/@babylonjs/core/Actions/condition.js","webpack:///../../../node_modules/@babylonjs/core/Actions/directActions.js","webpack:///../../../node_modules/@babylonjs/core/Actions/directAudioActions.js","webpack:///../../../node_modules/@babylonjs/core/Actions/interpolateValueAction.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animatable.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animation.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animationEvent.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animationGroup.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animationKey.js","webpack:///../../../node_modules/@babylonjs/core/Animations/animationRange.js","webpack:///../../../node_modules/@babylonjs/core/Animations/easing.js","webpack:///../../../node_modules/@babylonjs/core/Animations/runtimeAnimation.js","webpack:///../../../node_modules/@babylonjs/core/Audio/audioEngine.js","webpack:///../../../node_modules/@babylonjs/core/Audio/soundTrack.js","webpack:///../../../node_modules/@babylonjs/core/Audio/audioSceneComponent.js","webpack:///../../../node_modules/@babylonjs/core/Audio/sound.js","webpack:///../../../node_modules/@babylonjs/core/Audio/weightedsound.js","webpack:///../../../node_modules/@babylonjs/core/BakedVertexAnimation/bakedVertexAnimationManager.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Cameras/autoRotationBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Cameras/bouncingBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Cameras/framingBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Meshes/baseSixDofDragBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Meshes/pointerDragBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Meshes/sixDofDragBehavior.js","webpack:///../../../node_modules/@babylonjs/core/Behaviors/Meshes/handConstraintBehavior.js"],"sourcesContent":["module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar transitionalDefaults = require('../defaults/transitional');\nvar AxiosError = require('../core/AxiosError');\nvar CanceledError = require('../cancel/CanceledError');\nvar parseProtocol = require('../helpers/parseProtocol');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n    var responseType = config.responseType;\n    var onCanceled;\n    function done() {\n      if (config.cancelToken) {\n        config.cancelToken.unsubscribe(onCanceled);\n      }\n\n      if (config.signal) {\n        config.signal.removeEventListener('abort', onCanceled);\n      }\n    }\n\n    if (utils.isFormData(requestData) && utils.isStandardBrowserEnv()) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !responseType || responseType === 'text' ||  responseType === 'json' ?\n        request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = config.timeout ? 'timeout of ' + config.timeout + 'ms exceeded' : 'timeout exceeded';\n      var transitional = config.transitional || transitionalDefaults;\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = config.responseType;\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken || config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = function(cancel) {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || (cancel && cancel.type) ? new CanceledError() : cancel);\n        request.abort();\n        request = null;\n      };\n\n      config.cancelToken && config.cancelToken.subscribe(onCanceled);\n      if (config.signal) {\n        config.signal.aborted ? onCanceled() : config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    var protocol = parseProtocol(fullPath);\n\n    if (protocol && [ 'http', 'https', 'file' ].indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = require('./cancel/CanceledError');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\naxios.VERSION = require('./env/data').version;\naxios.toFormData = require('./helpers/toFormData');\n\n// Expose AxiosError class\naxios.AxiosError = require('../lib/core/AxiosError');\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\nvar CanceledError = require('./CanceledError');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n\n  // eslint-disable-next-line func-names\n  this.promise.then(function(cancel) {\n    if (!token._listeners) return;\n\n    var i;\n    var l = token._listeners.length;\n\n    for (i = 0; i < l; i++) {\n      token._listeners[i](cancel);\n    }\n    token._listeners = null;\n  });\n\n  // eslint-disable-next-line func-names\n  this.promise.then = function(onfulfilled) {\n    var _resolve;\n    // eslint-disable-next-line func-names\n    var promise = new Promise(function(resolve) {\n      token.subscribe(resolve);\n      _resolve = resolve;\n    }).then(onfulfilled);\n\n    promise.cancel = function reject() {\n      token.unsubscribe(_resolve);\n    };\n\n    return promise;\n  };\n\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new CanceledError(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Subscribe to the cancel signal\n */\n\nCancelToken.prototype.subscribe = function subscribe(listener) {\n  if (this.reason) {\n    listener(this.reason);\n    return;\n  }\n\n  if (this._listeners) {\n    this._listeners.push(listener);\n  } else {\n    this._listeners = [listener];\n  }\n};\n\n/**\n * Unsubscribe from the cancel signal\n */\n\nCancelToken.prototype.unsubscribe = function unsubscribe(listener) {\n  if (!this._listeners) {\n    return;\n  }\n  var index = this._listeners.indexOf(listener);\n  if (index !== -1) {\n    this._listeners.splice(index, 1);\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","'use strict';\n\nvar AxiosError = require('../core/AxiosError');\nvar utils = require('../utils');\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction CanceledError(message) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nmodule.exports = CanceledError;\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\nvar buildFullPath = require('./buildFullPath');\nvar validator = require('../helpers/validator');\n\nvar validators = validator.validators;\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(configOrUrl, config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof configOrUrl === 'string') {\n    config = config || {};\n    config.url = configOrUrl;\n  } else {\n    config = configOrUrl || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  var transitional = config.transitional;\n\n  if (transitional !== undefined) {\n    validator.assertOptions(transitional, {\n      silentJSONParsing: validators.transitional(validators.boolean),\n      forcedJSONParsing: validators.transitional(validators.boolean),\n      clarifyTimeoutError: validators.transitional(validators.boolean)\n    }, false);\n  }\n\n  // filter out skipped interceptors\n  var requestInterceptorChain = [];\n  var synchronousRequestInterceptors = true;\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n      return;\n    }\n\n    synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n    requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var responseInterceptorChain = [];\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  var promise;\n\n  if (!synchronousRequestInterceptors) {\n    var chain = [dispatchRequest, undefined];\n\n    Array.prototype.unshift.apply(chain, requestInterceptorChain);\n    chain = chain.concat(responseInterceptorChain);\n\n    promise = Promise.resolve(config);\n    while (chain.length) {\n      promise = promise.then(chain.shift(), chain.shift());\n    }\n\n    return promise;\n  }\n\n\n  var newConfig = config;\n  while (requestInterceptorChain.length) {\n    var onFulfilled = requestInterceptorChain.shift();\n    var onRejected = requestInterceptorChain.shift();\n    try {\n      newConfig = onFulfilled(newConfig);\n    } catch (error) {\n      onRejected(error);\n      break;\n    }\n  }\n\n  try {\n    promise = dispatchRequest(newConfig);\n  } catch (error) {\n    return Promise.reject(error);\n  }\n\n  while (responseInterceptorChain.length) {\n    promise = promise.then(responseInterceptorChain.shift(), responseInterceptorChain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  var fullPath = buildFullPath(config.baseURL, config.url);\n  return buildURL(fullPath, config.params, config.paramsSerializer);\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method: method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url: url,\n        data: data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nmodule.exports = Axios;\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  response && (this.response = response);\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code,\n      status: this.response && this.response.status ? this.response.status : null\n    };\n  }\n});\n\nvar prototype = AxiosError.prototype;\nvar descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED'\n// eslint-disable-next-line func-names\n].forEach(function(code) {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = function(error, code, config, request, response, customProps) {\n  var axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nmodule.exports = AxiosError;\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected, options) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected,\n    synchronous: options ? options.synchronous : false,\n    runWhen: options ? options.runWhen : null\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\nvar CanceledError = require('../cancel/CanceledError');\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      return getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(prop) {\n    if (prop in config2) {\n      return getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  var mergeMap = {\n    'url': valueFromConfig2,\n    'method': valueFromConfig2,\n    'data': valueFromConfig2,\n    'baseURL': defaultToConfig2,\n    'transformRequest': defaultToConfig2,\n    'transformResponse': defaultToConfig2,\n    'paramsSerializer': defaultToConfig2,\n    'timeout': defaultToConfig2,\n    'timeoutMessage': defaultToConfig2,\n    'withCredentials': defaultToConfig2,\n    'adapter': defaultToConfig2,\n    'responseType': defaultToConfig2,\n    'xsrfCookieName': defaultToConfig2,\n    'xsrfHeaderName': defaultToConfig2,\n    'onUploadProgress': defaultToConfig2,\n    'onDownloadProgress': defaultToConfig2,\n    'decompress': defaultToConfig2,\n    'maxContentLength': defaultToConfig2,\n    'maxBodyLength': defaultToConfig2,\n    'beforeRedirect': defaultToConfig2,\n    'transport': defaultToConfig2,\n    'httpAgent': defaultToConfig2,\n    'httpsAgent': defaultToConfig2,\n    'cancelToken': defaultToConfig2,\n    'socketPath': defaultToConfig2,\n    'responseEncoding': defaultToConfig2,\n    'validateStatus': mergeDirectKeys\n  };\n\n  utils.forEach(Object.keys(config1).concat(Object.keys(config2)), function computeConfigValue(prop) {\n    var merge = mergeMap[prop] || mergeDeepProperties;\n    var configValue = merge(prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n};\n","'use strict';\n\nvar AxiosError = require('./AxiosError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar defaults = require('../defaults');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  var context = this || defaults;\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(context, data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar normalizeHeaderName = require('../helpers/normalizeHeaderName');\nvar AxiosError = require('../core/AxiosError');\nvar transitionalDefaults = require('./transitional');\nvar toFormData = require('../helpers/toFormData');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('../adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('../adapters/http');\n  }\n  return adapter;\n}\n\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nvar defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n\n    var isObjectPayload = utils.isObject(data);\n    var contentType = headers && headers['Content-Type'];\n\n    var isFileList;\n\n    if ((isFileList = utils.isFileList(data)) || (isObjectPayload && contentType === 'multipart/form-data')) {\n      var _FormData = this.env && this.env.FormData;\n      return toFormData(isFileList ? {'files[]': data} : data, _FormData && new _FormData());\n    } else if (isObjectPayload || contentType === 'application/json') {\n      setContentTypeIfUnset(headers, 'application/json');\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    var transitional = this.transitional || defaults.transitional;\n    var silentJSONParsing = transitional && transitional.silentJSONParsing;\n    var forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    var strictJSONParsing = !silentJSONParsing && this.responseType === 'json';\n\n    if (strictJSONParsing || (forcedJSONParsing && utils.isString(data) && data.length)) {\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: require('./env/FormData')\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*'\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nmodule.exports = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","module.exports = {\n  \"version\": \"0.27.2\"\n};","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","// eslint-disable-next-line strict\nmodule.exports = null;\n","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nmodule.exports = function parseProtocol(url) {\n  var match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n};\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Convert a data object to FormData\n * @param {Object} obj\n * @param {?Object} [formData]\n * @returns {Object}\n **/\n\nfunction toFormData(obj, formData) {\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new FormData();\n\n  var stack = [];\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  function build(data, parentKey) {\n    if (utils.isPlainObject(data) || utils.isArray(data)) {\n      if (stack.indexOf(data) !== -1) {\n        throw Error('Circular reference detected in ' + parentKey);\n      }\n\n      stack.push(data);\n\n      utils.forEach(data, function each(value, key) {\n        if (utils.isUndefined(value)) return;\n        var fullKey = parentKey ? parentKey + '.' + key : key;\n        var arr;\n\n        if (value && !parentKey && typeof value === 'object') {\n          if (utils.endsWith(key, '{}')) {\n            // eslint-disable-next-line no-param-reassign\n            value = JSON.stringify(value);\n          } else if (utils.endsWith(key, '[]') && (arr = utils.toArray(value))) {\n            // eslint-disable-next-line func-names\n            arr.forEach(function(el) {\n              !utils.isUndefined(el) && formData.append(fullKey, convertValue(el));\n            });\n            return;\n          }\n        }\n\n        build(value, fullKey);\n      });\n\n      stack.pop();\n    } else {\n      formData.append(parentKey, convertValue(data));\n    }\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nmodule.exports = toFormData;\n","'use strict';\n\nvar VERSION = require('../env/data').version;\nvar AxiosError = require('../core/AxiosError');\n\nvar validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach(function(type, i) {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nvar deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return function(value, opt, opts) {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  var keys = Object.keys(options);\n  var i = keys.length;\n  while (i-- > 0) {\n    var opt = keys[i];\n    var validator = schema[opt];\n    if (validator) {\n      var value = options[opt];\n      var result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nmodule.exports = {\n  assertOptions: assertOptions,\n  validators: validators\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n// eslint-disable-next-line func-names\nvar kindOf = (function(cache) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    var str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n  };\n})(Object.create(null));\n\nfunction kindOfTest(type) {\n  type = type.toLowerCase();\n  return function isKindOf(thing) {\n    return kindOf(thing) === type;\n  };\n}\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return Array.isArray(val);\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nvar isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nvar isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nvar isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nvar isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} thing The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(thing) {\n  var pattern = '[object FormData]';\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) ||\n    toString.call(thing) === pattern ||\n    (isFunction(thing.toString) && thing.toString() === pattern)\n  );\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n * @function\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nvar isURLSearchParams = kindOfTest('URLSearchParams');\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.trim ? str.trim() : str.replace(/^\\s+|\\s+$/g, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n */\n\nfunction inherits(constructor, superConstructor, props, descriptors) {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function} [filter]\n * @returns {Object}\n */\n\nfunction toFlatObject(sourceObj, destObj, filter) {\n  var props;\n  var i;\n  var prop;\n  var merged = {};\n\n  destObj = destObj || {};\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if (!merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = Object.getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/*\n * determines whether a string ends with the characters of a specified string\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n * @returns {boolean}\n */\nfunction endsWith(str, searchString, position) {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  var lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object\n * @param {*} [thing]\n * @returns {Array}\n */\nfunction toArray(thing) {\n  if (!thing) return null;\n  var i = thing.length;\n  if (isUndefined(i)) return null;\n  var arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n// eslint-disable-next-line func-names\nvar isTypedArray = (function(TypedArray) {\n  // eslint-disable-next-line func-names\n  return function(thing) {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && Object.getPrototypeOf(Uint8Array));\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM,\n  inherits: inherits,\n  toFlatObject: toFlatObject,\n  kindOf: kindOf,\n  kindOfTest: kindOfTest,\n  endsWith: endsWith,\n  toArray: toArray,\n  isTypedArray: isTypedArray,\n  isFileList: isFileList\n};\n","module.exports = require(\"core-js-pure/stable/array/from\");","module.exports = require(\"core-js-pure/stable/array/is-array\");","module.exports = require(\"core-js-pure/stable/date/now\");","module.exports = require(\"core-js-pure/stable/instance/concat\");","module.exports = require(\"core-js-pure/stable/instance/ends-with\");","module.exports = require(\"core-js-pure/stable/instance/every\");","module.exports = require(\"core-js-pure/stable/instance/filter\");","module.exports = require(\"core-js-pure/stable/instance/find\");","module.exports = require(\"core-js-pure/stable/instance/for-each\");","module.exports = require(\"core-js-pure/stable/instance/includes\");","module.exports = require(\"core-js-pure/stable/instance/index-of\");","module.exports = require(\"core-js-pure/stable/instance/map\");","module.exports = require(\"core-js-pure/stable/instance/reduce\");","module.exports = require(\"core-js-pure/stable/instance/reverse\");","module.exports = require(\"core-js-pure/stable/instance/slice\");","module.exports = require(\"core-js-pure/stable/instance/some\");","module.exports = require(\"core-js-pure/stable/instance/sort\");","module.exports = require(\"core-js-pure/stable/instance/splice\");","module.exports = require(\"core-js-pure/stable/instance/starts-with\");","module.exports = require(\"core-js-pure/stable/instance/trim\");","module.exports = require(\"core-js-pure/stable/json/stringify\");","module.exports = require(\"core-js-pure/stable/map\");","module.exports = require(\"core-js-pure/stable/math/sign\");","module.exports = require(\"core-js-pure/stable/number/max-safe-integer\");","module.exports = require(\"core-js-pure/stable/object/assign\");","module.exports = require(\"core-js-pure/stable/object/define-properties\");","module.exports = require(\"core-js-pure/stable/object/define-property\");","module.exports = require(\"core-js-pure/stable/object/get-own-property-descriptor\");","module.exports = require(\"core-js-pure/stable/object/get-own-property-descriptors\");","module.exports = require(\"core-js-pure/stable/object/get-own-property-symbols\");","module.exports = require(\"core-js-pure/stable/object/get-prototype-of\");","module.exports = require(\"core-js-pure/stable/object/keys\");","module.exports = require(\"core-js-pure/stable/object/values\");","module.exports = require(\"core-js-pure/stable/parse-float\");","module.exports = require(\"core-js-pure/stable/parse-int\");","module.exports = require(\"core-js-pure/stable/promise\");","module.exports = require(\"core-js-pure/stable/reflect/get\");","module.exports = require(\"core-js-pure/stable/reflect/set\");","module.exports = require(\"core-js-pure/stable/set-interval\");","module.exports = require(\"core-js-pure/stable/set-timeout\");","module.exports = require(\"core-js-pure/stable/set\");","module.exports = require(\"core-js-pure/stable/symbol/for\");","module.exports = require(\"core-js-pure/stable/url-search-params\");","module.exports = require(\"core-js-pure/stable/url\");","module.exports = require(\"core-js-pure/stable/weak-map\");","module.exports = require(\"core-js-pure/features/instance/for-each\");","module.exports = require(\"core-js-pure/features/instance/reduce\");","module.exports = require(\"core-js-pure/features/instance/reverse\");","module.exports = require(\"core-js-pure/features/instance/slice\");","module.exports = require(\"core-js-pure/features/object/define-property\");","module.exports = require(\"core-js-pure/features/object/keys\");","import _forEachInstanceProperty from \"@babel/runtime-corejs3/core-js/instance/for-each\";\nimport _Object$keys from \"@babel/runtime-corejs3/core-js/object/keys\";\nimport _reduceInstanceProperty from \"@babel/runtime-corejs3/core-js/instance/reduce\";\nimport _reverseInstanceProperty from \"@babel/runtime-corejs3/core-js/instance/reverse\";\nimport _sliceInstanceProperty from \"@babel/runtime-corejs3/core-js/instance/slice\";\nimport _Object$defineProperty from \"@babel/runtime-corejs3/core-js/object/define-property\";\nexport default function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var _context, _context2, _context3;\n\n  var desc = {};\n\n  _forEachInstanceProperty(_context = _Object$keys(descriptor)).call(_context, function (key) {\n    desc[key] = descriptor[key];\n  });\n\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = _reduceInstanceProperty(_context2 = _reverseInstanceProperty(_context3 = _sliceInstanceProperty(decorators).call(decorators)).call(_context3)).call(_context2, function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    _Object$defineProperty(target, property, desc);\n\n    desc = null;\n  }\n\n  return desc;\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","import _Object$defineProperty from \"@babel/runtime-corejs3/core-js/object/define-property\";\nexport default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    _Object$defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _Object$defineProperty from \"@babel/runtime-corejs3/core-js/object/define-property\";\nexport default function _initializerDefineProperty(target, property, descriptor, context) {\n  if (!descriptor) return;\n\n  _Object$defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}","\n/**\n * Abstract class used to decouple action Manager from scene and meshes.\n * Do not instantiate.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class AbstractActionManager {\n    constructor() {\n        /** Gets the cursor to use when hovering items */\n        this.hoverCursor = \"\";\n        /** Gets the list of actions */\n        this.actions = new Array();\n        /**\n         * Gets or sets a boolean indicating that the manager is recursive meaning that it can trigger action from children\n         */\n        this.isRecursive = false;\n    }\n    /**\n     * Does exist one action manager with at least one trigger\n     **/\n    static get HasTriggers() {\n        for (const t in AbstractActionManager.Triggers) {\n            if (Object.prototype.hasOwnProperty.call(AbstractActionManager.Triggers, t)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Does exist one action manager with at least one pick trigger\n     **/\n    static get HasPickTriggers() {\n        for (const t in AbstractActionManager.Triggers) {\n            if (Object.prototype.hasOwnProperty.call(AbstractActionManager.Triggers, t)) {\n                const tAsInt = parseInt(t);\n                if (tAsInt >= 1 && tAsInt <= 7) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Does exist one action manager that handles actions of a given trigger\n     * @param trigger defines the trigger to be tested\n     * @returns a boolean indicating whether the trigger is handled by at least one action manager\n     **/\n    static HasSpecificTrigger(trigger) {\n        for (const t in AbstractActionManager.Triggers) {\n            if (Object.prototype.hasOwnProperty.call(AbstractActionManager.Triggers, t)) {\n                const tAsInt = parseInt(t);\n                if (tAsInt === trigger) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}\n/** Gets the list of active triggers */\nAbstractActionManager.Triggers = {};\n//# sourceMappingURL=abstractActionManager.js.map","import { Observable } from \"../Misc/observable.js\";\nimport { Vector2, Vector3 } from \"../Maths/math.vector.js\";\nimport { Color3, Color4 } from \"../Maths/math.color.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * The action to be carried out following a trigger\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#available-actions\n */\nexport class Action {\n    /**\n     * Creates a new Action\n     * @param triggerOptions the trigger, with or without parameters, for the action\n     * @param condition an optional determinant of action\n     */\n    constructor(\n    /** the trigger, with or without parameters, for the action */\n    triggerOptions, condition) {\n        this.triggerOptions = triggerOptions;\n        /**\n         * An event triggered prior to action being executed.\n         */\n        this.onBeforeExecuteObservable = new Observable();\n        if (triggerOptions.parameter) {\n            this.trigger = triggerOptions.trigger;\n            this._triggerParameter = triggerOptions.parameter;\n        }\n        else if (triggerOptions.trigger) {\n            this.trigger = triggerOptions.trigger;\n        }\n        else {\n            this.trigger = triggerOptions;\n        }\n        this._nextActiveAction = this;\n        this._condition = condition;\n    }\n    /**\n     * Internal only\n     * @internal\n     */\n    _prepare() { }\n    /**\n     * Gets the trigger parameter\n     * @returns the trigger parameter\n     */\n    getTriggerParameter() {\n        return this._triggerParameter;\n    }\n    /**\n     * Sets the trigger parameter\n     * @param value defines the new trigger parameter\n     */\n    setTriggerParameter(value) {\n        this._triggerParameter = value;\n    }\n    /**\n     * Internal only - Returns if the current condition allows to run the action\n     * @internal\n     */\n    _evaluateConditionForCurrentFrame() {\n        const condition = this._condition;\n        if (!condition) {\n            return true;\n        }\n        const currentRenderId = this._actionManager.getScene().getRenderId();\n        // We cache the current evaluation for the current frame\n        if (condition._evaluationId !== currentRenderId) {\n            condition._evaluationId = currentRenderId;\n            condition._currentResult = condition.isValid();\n        }\n        return condition._currentResult;\n    }\n    /**\n     * Internal only - executes current action event\n     * @internal\n     */\n    _executeCurrent(evt) {\n        const isConditionValid = this._evaluateConditionForCurrentFrame();\n        if (!isConditionValid) {\n            return;\n        }\n        this.onBeforeExecuteObservable.notifyObservers(this);\n        this._nextActiveAction.execute(evt);\n        this.skipToNextActiveAction();\n    }\n    /**\n     * Execute placeholder for child classes\n     * @param evt optional action event\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    execute(evt) { }\n    /**\n     * Skips to next active action\n     */\n    skipToNextActiveAction() {\n        if (this._nextActiveAction._child) {\n            if (!this._nextActiveAction._child._actionManager) {\n                this._nextActiveAction._child._actionManager = this._actionManager;\n            }\n            this._nextActiveAction = this._nextActiveAction._child;\n        }\n        else {\n            this._nextActiveAction = this;\n        }\n    }\n    /**\n     * Adds action to chain of actions, may be a DoNothingAction\n     * @param action defines the next action to execute\n     * @returns The action passed in\n     * @see https://www.babylonjs-playground.com/#1T30HR#0\n     */\n    then(action) {\n        this._child = action;\n        action._actionManager = this._actionManager;\n        action._prepare();\n        return action;\n    }\n    /**\n     * Internal only\n     * @internal\n     */\n    _getProperty(propertyPath) {\n        return this._actionManager._getProperty(propertyPath);\n    }\n    /**\n     * @internal\n     */\n    _getEffectiveTarget(target, propertyPath) {\n        return this._actionManager._getEffectiveTarget(target, propertyPath);\n    }\n    /**\n     * Serialize placeholder for child classes\n     * @param parent of child\n     * @returns the serialized object\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    serialize(parent) { }\n    /**\n     * Internal only called by serialize\n     * @internal\n     */\n    _serialize(serializedAction, parent) {\n        const serializationObject = {\n            type: 1,\n            children: [],\n            name: serializedAction.name,\n            properties: serializedAction.properties || [],\n        };\n        // Serialize child\n        if (this._child) {\n            this._child.serialize(serializationObject);\n        }\n        // Check if \"this\" has a condition\n        if (this._condition) {\n            const serializedCondition = this._condition.serialize();\n            serializedCondition.children.push(serializationObject);\n            if (parent) {\n                parent.children.push(serializedCondition);\n            }\n            return serializedCondition;\n        }\n        if (parent) {\n            parent.children.push(serializationObject);\n        }\n        return serializationObject;\n    }\n}\n/**\n * Internal only\n * @internal\n */\nAction._SerializeValueAsString = (value) => {\n    if (typeof value === \"number\") {\n        return value.toString();\n    }\n    if (typeof value === \"boolean\") {\n        return value ? \"true\" : \"false\";\n    }\n    if (value instanceof Vector2) {\n        return value.x + \", \" + value.y;\n    }\n    if (value instanceof Vector3) {\n        return value.x + \", \" + value.y + \", \" + value.z;\n    }\n    if (value instanceof Color3) {\n        return value.r + \", \" + value.g + \", \" + value.b;\n    }\n    if (value instanceof Color4) {\n        return value.r + \", \" + value.g + \", \" + value.b + \", \" + value.a;\n    }\n    return value; // string\n};\n/**\n * Internal only\n * @internal\n */\nAction._GetTargetProperty = (target) => {\n    return {\n        name: \"target\",\n        targetType: target._isMesh\n            ? \"MeshProperties\"\n            : target._isLight\n                ? \"LightProperties\"\n                : target._isCamera\n                    ? \"CameraProperties\"\n                    : target._isMaterial\n                        ? \"MaterialProperties\"\n                        : \"SceneProperties\",\n        value: target._isScene ? \"Scene\" : target.name,\n    };\n};\nRegisterClass(\"BABYLON.Action\", Action);\n//# sourceMappingURL=action.js.map","/**\n * ActionEvent is the event being sent when an action is triggered.\n */\nexport class ActionEvent {\n    /**\n     * Creates a new ActionEvent\n     * @param source The mesh or sprite that triggered the action\n     * @param pointerX The X mouse cursor position at the time of the event\n     * @param pointerY The Y mouse cursor position at the time of the event\n     * @param meshUnderPointer The mesh that is currently pointed at (can be null)\n     * @param sourceEvent the original (browser) event that triggered the ActionEvent\n     * @param additionalData additional data for the event\n     */\n    constructor(\n    /** The mesh or sprite that triggered the action */\n    source, \n    /** The X mouse cursor position at the time of the event */\n    pointerX, \n    /** The Y mouse cursor position at the time of the event */\n    pointerY, \n    /** The mesh that is currently pointed at (can be null) */\n    meshUnderPointer, \n    /** the original (browser) event that triggered the ActionEvent */\n    sourceEvent, \n    /** additional data for the event */\n    additionalData) {\n        this.source = source;\n        this.pointerX = pointerX;\n        this.pointerY = pointerY;\n        this.meshUnderPointer = meshUnderPointer;\n        this.sourceEvent = sourceEvent;\n        this.additionalData = additionalData;\n    }\n    /**\n     * Helper function to auto-create an ActionEvent from a source mesh.\n     * @param source The source mesh that triggered the event\n     * @param evt The original (browser) event\n     * @param additionalData additional data for the event\n     * @returns the new ActionEvent\n     */\n    static CreateNew(source, evt, additionalData) {\n        const scene = source.getScene();\n        return new ActionEvent(source, scene.pointerX, scene.pointerY, scene.meshUnderPointer || source, evt, additionalData);\n    }\n    /**\n     * Helper function to auto-create an ActionEvent from a source sprite\n     * @param source The source sprite that triggered the event\n     * @param scene Scene associated with the sprite\n     * @param evt The original (browser) event\n     * @param additionalData additional data for the event\n     * @returns the new ActionEvent\n     */\n    static CreateNewFromSprite(source, scene, evt, additionalData) {\n        return new ActionEvent(source, scene.pointerX, scene.pointerY, scene.meshUnderPointer, evt, additionalData);\n    }\n    /**\n     * Helper function to auto-create an ActionEvent from a scene. If triggered by a mesh use ActionEvent.CreateNew\n     * @param scene the scene where the event occurred\n     * @param evt The original (browser) event\n     * @returns the new ActionEvent\n     */\n    static CreateNewFromScene(scene, evt) {\n        return new ActionEvent(null, scene.pointerX, scene.pointerY, scene.meshUnderPointer, evt);\n    }\n    /**\n     * Helper function to auto-create an ActionEvent from a primitive\n     * @param prim defines the target primitive\n     * @param pointerPos defines the pointer position\n     * @param evt The original (browser) event\n     * @param additionalData additional data for the event\n     * @returns the new ActionEvent\n     */\n    static CreateNewFromPrimitive(prim, pointerPos, evt, additionalData) {\n        return new ActionEvent(prim, pointerPos.x, pointerPos.y, null, evt, additionalData);\n    }\n}\n//# sourceMappingURL=actionEvent.js.map","import { Vector3, Vector4 } from \"../Maths/math.vector.js\";\nimport { Color3, Color4 } from \"../Maths/math.color.js\";\nimport { Condition, ValueCondition } from \"./condition.js\";\nimport { Action } from \"./action.js\";\nimport { DoNothingAction } from \"./directActions.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { DeepCopier } from \"../Misc/deepCopier.js\";\nimport { GetClass } from \"../Misc/typeStore.js\";\nimport { AbstractActionManager } from \"./abstractActionManager.js\";\n\n/**\n * Action Manager manages all events to be triggered on a given mesh or the global scene.\n * A single scene can have many Action Managers to handle predefined actions on specific meshes.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class ActionManager extends AbstractActionManager {\n    /**\n     * Creates a new action manager\n     * @param scene defines the hosting scene\n     */\n    constructor(scene) {\n        super();\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this._scene = scene;\n        scene.actionManagers.push(this);\n    }\n    // Methods\n    /**\n     * Releases all associated resources\n     */\n    dispose() {\n        const index = this._scene.actionManagers.indexOf(this);\n        for (let i = 0; i < this.actions.length; i++) {\n            const action = this.actions[i];\n            ActionManager.Triggers[action.trigger]--;\n            if (ActionManager.Triggers[action.trigger] === 0) {\n                delete ActionManager.Triggers[action.trigger];\n            }\n        }\n        if (index > -1) {\n            this._scene.actionManagers.splice(index, 1);\n        }\n    }\n    /**\n     * Gets hosting scene\n     * @returns the hosting scene\n     */\n    getScene() {\n        return this._scene;\n    }\n    /**\n     * Does this action manager handles actions of any of the given triggers\n     * @param triggers defines the triggers to be tested\n     * @returns a boolean indicating whether one (or more) of the triggers is handled\n     */\n    hasSpecificTriggers(triggers) {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (triggers.indexOf(action.trigger) > -1) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Does this action manager handles actions of any of the given triggers. This function takes two arguments for\n     * speed.\n     * @param triggerA defines the trigger to be tested\n     * @param triggerB defines the trigger to be tested\n     * @returns a boolean indicating whether one (or more) of the triggers is handled\n     */\n    hasSpecificTriggers2(triggerA, triggerB) {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (triggerA == action.trigger || triggerB == action.trigger) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Does this action manager handles actions of a given trigger\n     * @param trigger defines the trigger to be tested\n     * @param parameterPredicate defines an optional predicate to filter triggers by parameter\n     * @returns whether the trigger is handled\n     */\n    hasSpecificTrigger(trigger, parameterPredicate) {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (action.trigger === trigger) {\n                if (parameterPredicate) {\n                    if (parameterPredicate(action.getTriggerParameter())) {\n                        return true;\n                    }\n                }\n                else {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n    /**\n     * Does this action manager has pointer triggers\n     */\n    get hasPointerTriggers() {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (action.trigger >= ActionManager.OnPickTrigger && action.trigger <= ActionManager.OnPointerOutTrigger) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Does this action manager has pick triggers\n     */\n    get hasPickTriggers() {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (action.trigger >= ActionManager.OnPickTrigger && action.trigger <= ActionManager.OnPickUpTrigger) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Registers an action to this action manager\n     * @param action defines the action to be registered\n     * @returns the action amended (prepared) after registration\n     */\n    registerAction(action) {\n        if (action.trigger === ActionManager.OnEveryFrameTrigger) {\n            if (this.getScene().actionManager !== this) {\n                Logger.Warn(\"OnEveryFrameTrigger can only be used with scene.actionManager\");\n                return null;\n            }\n        }\n        this.actions.push(action);\n        this.getScene()._registeredActions++;\n        if (ActionManager.Triggers[action.trigger]) {\n            ActionManager.Triggers[action.trigger]++;\n        }\n        else {\n            ActionManager.Triggers[action.trigger] = 1;\n        }\n        action._actionManager = this;\n        action._prepare();\n        return action;\n    }\n    /**\n     * Unregisters an action to this action manager\n     * @param action defines the action to be unregistered\n     * @returns a boolean indicating whether the action has been unregistered\n     */\n    unregisterAction(action) {\n        const index = this.actions.indexOf(action);\n        if (index !== -1) {\n            this.actions.splice(index, 1);\n            ActionManager.Triggers[action.trigger] -= 1;\n            if (ActionManager.Triggers[action.trigger] === 0) {\n                delete ActionManager.Triggers[action.trigger];\n            }\n            action._actionManager = null;\n            this.getScene()._registeredActions--;\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Process a specific trigger\n     * @param trigger defines the trigger to process\n     * @param evt defines the event details to be processed\n     */\n    processTrigger(trigger, evt) {\n        for (let index = 0; index < this.actions.length; index++) {\n            const action = this.actions[index];\n            if (action.trigger === trigger) {\n                if (evt) {\n                    if (trigger === ActionManager.OnKeyUpTrigger || trigger === ActionManager.OnKeyDownTrigger) {\n                        const parameter = action.getTriggerParameter();\n                        if (typeof parameter === \"function\") {\n                            if (!parameter(evt)) {\n                                continue;\n                            }\n                        }\n                        else if (parameter && parameter !== evt.sourceEvent.keyCode) {\n                            if (!parameter.toLowerCase) {\n                                continue;\n                            }\n                            const lowerCase = parameter.toLowerCase();\n                            if (lowerCase !== evt.sourceEvent.key) {\n                                const unicode = evt.sourceEvent.charCode ? evt.sourceEvent.charCode : evt.sourceEvent.keyCode;\n                                const actualkey = String.fromCharCode(unicode).toLowerCase();\n                                if (actualkey !== lowerCase) {\n                                    continue;\n                                }\n                            }\n                        }\n                    }\n                }\n                action._executeCurrent(evt);\n            }\n        }\n    }\n    /**\n     * @internal\n     */\n    _getEffectiveTarget(target, propertyPath) {\n        const properties = propertyPath.split(\".\");\n        for (let index = 0; index < properties.length - 1; index++) {\n            target = target[properties[index]];\n        }\n        return target;\n    }\n    /**\n     * @internal\n     */\n    _getProperty(propertyPath) {\n        const properties = propertyPath.split(\".\");\n        return properties[properties.length - 1];\n    }\n    /**\n     * Serialize this manager to a JSON object\n     * @param name defines the property name to store this manager\n     * @returns a JSON representation of this manager\n     */\n    serialize(name) {\n        const root = {\n            children: new Array(),\n            name: name,\n            type: 3,\n            properties: new Array(), // Empty for root but required\n        };\n        for (let i = 0; i < this.actions.length; i++) {\n            const triggerObject = {\n                type: 0,\n                children: new Array(),\n                name: ActionManager.GetTriggerName(this.actions[i].trigger),\n                properties: new Array(),\n            };\n            const triggerOptions = this.actions[i].triggerOptions;\n            if (triggerOptions && typeof triggerOptions !== \"number\") {\n                if (triggerOptions.parameter instanceof Node) {\n                    triggerObject.properties.push(Action._GetTargetProperty(triggerOptions.parameter));\n                }\n                else if (typeof triggerOptions.parameter === \"object\") {\n                    const parameter = {};\n                    DeepCopier.DeepCopy(triggerOptions.parameter, parameter, [\"mesh\"]);\n                    if (triggerOptions.parameter && triggerOptions.parameter.mesh) {\n                        parameter._meshId = triggerOptions.parameter.mesh.id;\n                    }\n                    triggerObject.properties.push({ name: \"parameter\", targetType: null, value: parameter });\n                }\n                else {\n                    triggerObject.properties.push({ name: \"parameter\", targetType: null, value: triggerOptions.parameter });\n                }\n            }\n            // Serialize child action, recursively\n            this.actions[i].serialize(triggerObject);\n            // Add serialized trigger\n            root.children.push(triggerObject);\n        }\n        return root;\n    }\n    /**\n     * Creates a new ActionManager from a JSON data\n     * @param parsedActions defines the JSON data to read from\n     * @param object defines the hosting mesh\n     * @param scene defines the hosting scene\n     */\n    static Parse(parsedActions, object, scene) {\n        const actionManager = new ActionManager(scene);\n        if (object === null) {\n            scene.actionManager = actionManager;\n        }\n        else {\n            object.actionManager = actionManager;\n        }\n        // instantiate a new object\n        const instantiate = (name, params) => {\n            const internalClassType = GetClass(\"BABYLON.\" + name);\n            return internalClassType && new internalClassType(...params);\n        };\n        const parseParameter = (name, value, target, propertyPath) => {\n            if (propertyPath === null) {\n                // String, boolean or float\n                const floatValue = parseFloat(value);\n                if (value === \"true\" || value === \"false\") {\n                    return value === \"true\";\n                }\n                else {\n                    return isNaN(floatValue) ? value : floatValue;\n                }\n            }\n            const effectiveTarget = propertyPath.split(\".\");\n            const values = value.split(\",\");\n            // Get effective Target\n            for (let i = 0; i < effectiveTarget.length; i++) {\n                target = target[effectiveTarget[i]];\n            }\n            // Return appropriate value with its type\n            if (typeof target === \"boolean\") {\n                return values[0] === \"true\";\n            }\n            if (typeof target === \"string\") {\n                return values[0];\n            }\n            // Parameters with multiple values such as Vector3 etc.\n            const split = new Array();\n            for (let i = 0; i < values.length; i++) {\n                split.push(parseFloat(values[i]));\n            }\n            if (target instanceof Vector3) {\n                return Vector3.FromArray(split);\n            }\n            if (target instanceof Vector4) {\n                return Vector4.FromArray(split);\n            }\n            if (target instanceof Color3) {\n                return Color3.FromArray(split);\n            }\n            if (target instanceof Color4) {\n                return Color4.FromArray(split);\n            }\n            return parseFloat(values[0]);\n        };\n        // traverse graph per trigger\n        const traverse = (parsedAction, trigger, condition, action, combineArray = null) => {\n            if (parsedAction.detached) {\n                return;\n            }\n            const parameters = new Array();\n            let target = null;\n            let propertyPath = null;\n            const combine = parsedAction.combine && parsedAction.combine.length > 0;\n            // Parameters\n            if (parsedAction.type === 2) {\n                parameters.push(actionManager);\n            }\n            else {\n                parameters.push(trigger);\n            }\n            if (combine) {\n                const actions = new Array();\n                for (let j = 0; j < parsedAction.combine.length; j++) {\n                    traverse(parsedAction.combine[j], ActionManager.NothingTrigger, condition, action, actions);\n                }\n                parameters.push(actions);\n            }\n            else {\n                for (let i = 0; i < parsedAction.properties.length; i++) {\n                    let value = parsedAction.properties[i].value;\n                    const name = parsedAction.properties[i].name;\n                    const targetType = parsedAction.properties[i].targetType;\n                    if (name === \"target\") {\n                        if (targetType === \"SceneProperties\") {\n                            value = target = scene;\n                        }\n                        else if (targetType === \"MaterialProperties\") {\n                            value = target = scene.getMaterialByName(value);\n                        }\n                        else {\n                            value = target = scene.getNodeByName(value);\n                        }\n                    }\n                    else if (name === \"parent\") {\n                        value = scene.getNodeByName(value);\n                    }\n                    else if (name === \"sound\") {\n                        // Can not externalize to component, so only checks for the presence off the API.\n                        if (scene.getSoundByName) {\n                            value = scene.getSoundByName(value);\n                        }\n                    }\n                    else if (name !== \"propertyPath\") {\n                        if (parsedAction.type === 2 && name === \"operator\") {\n                            value = ValueCondition[value];\n                        }\n                        else {\n                            value = parseParameter(name, value, target, name === \"value\" ? propertyPath : null);\n                        }\n                    }\n                    else {\n                        propertyPath = value;\n                    }\n                    parameters.push(value);\n                }\n            }\n            if (combineArray === null) {\n                parameters.push(condition);\n            }\n            else {\n                parameters.push(null);\n            }\n            // If interpolate value action\n            if (parsedAction.name === \"InterpolateValueAction\") {\n                const param = parameters[parameters.length - 2];\n                parameters[parameters.length - 1] = param;\n                parameters[parameters.length - 2] = condition;\n            }\n            // Action or condition(s) and not CombineAction\n            let newAction = instantiate(parsedAction.name, parameters);\n            if (newAction instanceof Condition && condition !== null) {\n                const nothing = new DoNothingAction(trigger, condition);\n                if (action) {\n                    action.then(nothing);\n                }\n                else {\n                    actionManager.registerAction(nothing);\n                }\n                action = nothing;\n            }\n            if (combineArray === null) {\n                if (newAction instanceof Condition) {\n                    condition = newAction;\n                    newAction = action;\n                }\n                else {\n                    condition = null;\n                    if (action) {\n                        action.then(newAction);\n                    }\n                    else {\n                        actionManager.registerAction(newAction);\n                    }\n                }\n            }\n            else {\n                combineArray.push(newAction);\n            }\n            for (let i = 0; i < parsedAction.children.length; i++) {\n                traverse(parsedAction.children[i], trigger, condition, newAction, null);\n            }\n        };\n        // triggers\n        for (let i = 0; i < parsedActions.children.length; i++) {\n            let triggerParams;\n            const trigger = parsedActions.children[i];\n            if (trigger.properties.length > 0) {\n                const param = trigger.properties[0].value;\n                const value = trigger.properties[0].targetType === null ? param : scene.getMeshByName(param);\n                if (value._meshId) {\n                    value.mesh = scene.getMeshById(value._meshId);\n                }\n                triggerParams = { trigger: ActionManager[trigger.name], parameter: value };\n            }\n            else {\n                triggerParams = ActionManager[trigger.name];\n            }\n            for (let j = 0; j < trigger.children.length; j++) {\n                if (!trigger.detached) {\n                    traverse(trigger.children[j], triggerParams, null, null);\n                }\n            }\n        }\n    }\n    /**\n     * Get a trigger name by index\n     * @param trigger defines the trigger index\n     * @returns a trigger name\n     */\n    static GetTriggerName(trigger) {\n        switch (trigger) {\n            case 0:\n                return \"NothingTrigger\";\n            case 1:\n                return \"OnPickTrigger\";\n            case 2:\n                return \"OnLeftPickTrigger\";\n            case 3:\n                return \"OnRightPickTrigger\";\n            case 4:\n                return \"OnCenterPickTrigger\";\n            case 5:\n                return \"OnPickDownTrigger\";\n            case 6:\n                return \"OnDoublePickTrigger\"; // start;\n            case 7:\n                return \"OnPickUpTrigger\";\n            case 8:\n                return \"OnLongPressTrigger\";\n            case 9:\n                return \"OnPointerOverTrigger\";\n            case 10:\n                return \"OnPointerOutTrigger\";\n            case 11:\n                return \"OnEveryFrameTrigger\";\n            case 12:\n                return \"OnIntersectionEnterTrigger\";\n            case 13:\n                return \"OnIntersectionExitTrigger\";\n            case 14:\n                return \"OnKeyDownTrigger\";\n            case 15:\n                return \"OnKeyUpTrigger\";\n            case 16:\n                return \"OnPickOutTrigger\";\n            default:\n                return \"\";\n        }\n    }\n}\n/**\n * Nothing\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.NothingTrigger = 0;\n/**\n * On pick\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPickTrigger = 1;\n/**\n * On left pick\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnLeftPickTrigger = 2;\n/**\n * On right pick\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnRightPickTrigger = 3;\n/**\n * On center pick\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnCenterPickTrigger = 4;\n/**\n * On pick down\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPickDownTrigger = 5;\n/**\n * On double pick\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnDoublePickTrigger = 6;\n/**\n * On pick up\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPickUpTrigger = 7;\n/**\n * On pick out.\n * This trigger will only be raised if you also declared a OnPickDown\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPickOutTrigger = 16;\n/**\n * On long press\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnLongPressTrigger = 8;\n/**\n * On pointer over\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPointerOverTrigger = 9;\n/**\n * On pointer out\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnPointerOutTrigger = 10;\n/**\n * On every frame\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnEveryFrameTrigger = 11;\n/**\n * On intersection enter\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnIntersectionEnterTrigger = 12;\n/**\n * On intersection exit\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnIntersectionExitTrigger = 13;\n/**\n * On key down\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnKeyDownTrigger = 14;\n/**\n * On key up\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions#triggers\n */\nActionManager.OnKeyUpTrigger = 15;\n//# sourceMappingURL=actionManager.js.map","import { Action } from \"./action.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * A Condition applied to an Action\n */\nexport class Condition {\n    /**\n     * Creates a new Condition\n     * @param actionManager the manager of the action the condition is applied to\n     */\n    constructor(actionManager) {\n        this._actionManager = actionManager;\n    }\n    /**\n     * Check if the current condition is valid\n     * @returns a boolean\n     */\n    isValid() {\n        return true;\n    }\n    /**\n     * @internal\n     */\n    _getProperty(propertyPath) {\n        return this._actionManager._getProperty(propertyPath);\n    }\n    /**\n     * @internal\n     */\n    _getEffectiveTarget(target, propertyPath) {\n        return this._actionManager._getEffectiveTarget(target, propertyPath);\n    }\n    /**\n     * Serialize placeholder for child classes\n     * @returns the serialized object\n     */\n    serialize() { }\n    /**\n     * @internal\n     */\n    _serialize(serializedCondition) {\n        return {\n            type: 2,\n            children: [],\n            name: serializedCondition.name,\n            properties: serializedCondition.properties,\n        };\n    }\n}\n/**\n * Defines specific conditional operators as extensions of Condition\n */\nexport class ValueCondition extends Condition {\n    /**\n     * returns the number for IsEqual\n     */\n    static get IsEqual() {\n        return ValueCondition._IsEqual;\n    }\n    /**\n     * Returns the number for IsDifferent\n     */\n    static get IsDifferent() {\n        return ValueCondition._IsDifferent;\n    }\n    /**\n     * Returns the number for IsGreater\n     */\n    static get IsGreater() {\n        return ValueCondition._IsGreater;\n    }\n    /**\n     * Returns the number for IsLesser\n     */\n    static get IsLesser() {\n        return ValueCondition._IsLesser;\n    }\n    /**\n     * Creates a new ValueCondition\n     * @param actionManager manager for the action the condition applies to\n     * @param target for the action\n     * @param propertyPath path to specify the property of the target the conditional operator uses\n     * @param value the value compared by the conditional operator against the current value of the property\n     * @param operator the conditional operator, default ValueCondition.IsEqual\n     */\n    constructor(actionManager, target, \n    /** path to specify the property of the target the conditional operator uses  */\n    propertyPath, \n    /** the value compared by the conditional operator against the current value of the property */\n    value, \n    /** the conditional operator, default ValueCondition.IsEqual */\n    operator = ValueCondition.IsEqual) {\n        super(actionManager);\n        this.propertyPath = propertyPath;\n        this.value = value;\n        this.operator = operator;\n        this._target = target;\n        this._effectiveTarget = this._getEffectiveTarget(target, this.propertyPath);\n        this._property = this._getProperty(this.propertyPath);\n    }\n    /**\n     * Compares the given value with the property value for the specified conditional operator\n     * @returns the result of the comparison\n     */\n    isValid() {\n        switch (this.operator) {\n            case ValueCondition.IsGreater:\n                return this._effectiveTarget[this._property] > this.value;\n            case ValueCondition.IsLesser:\n                return this._effectiveTarget[this._property] < this.value;\n            case ValueCondition.IsEqual:\n            case ValueCondition.IsDifferent: {\n                let check;\n                if (this.value.equals) {\n                    check = this.value.equals(this._effectiveTarget[this._property]);\n                }\n                else {\n                    check = this.value === this._effectiveTarget[this._property];\n                }\n                return this.operator === ValueCondition.IsEqual ? check : !check;\n            }\n        }\n        return false;\n    }\n    /**\n     * Serialize the ValueCondition into a JSON compatible object\n     * @returns serialization object\n     */\n    serialize() {\n        return this._serialize({\n            name: \"ValueCondition\",\n            properties: [\n                Action._GetTargetProperty(this._target),\n                { name: \"propertyPath\", value: this.propertyPath },\n                { name: \"value\", value: Action._SerializeValueAsString(this.value) },\n                { name: \"operator\", value: ValueCondition.GetOperatorName(this.operator) },\n            ],\n        });\n    }\n    /**\n     * Gets the name of the conditional operator for the ValueCondition\n     * @param operator the conditional operator\n     * @returns the name\n     */\n    static GetOperatorName(operator) {\n        switch (operator) {\n            case ValueCondition._IsEqual:\n                return \"IsEqual\";\n            case ValueCondition._IsDifferent:\n                return \"IsDifferent\";\n            case ValueCondition._IsGreater:\n                return \"IsGreater\";\n            case ValueCondition._IsLesser:\n                return \"IsLesser\";\n            default:\n                return \"\";\n        }\n    }\n}\nValueCondition._IsEqual = 0;\nValueCondition._IsDifferent = 1;\nValueCondition._IsGreater = 2;\nValueCondition._IsLesser = 3;\n/**\n * Defines a predicate condition as an extension of Condition\n */\nexport class PredicateCondition extends Condition {\n    /**\n     * Creates a new PredicateCondition\n     * @param actionManager manager for the action the condition applies to\n     * @param predicate defines the predicate function used to validate the condition\n     */\n    constructor(actionManager, \n    /** defines the predicate function used to validate the condition */\n    predicate) {\n        super(actionManager);\n        this.predicate = predicate;\n    }\n    /**\n     * @returns the validity of the predicate condition\n     */\n    isValid() {\n        return this.predicate();\n    }\n}\n/**\n * Defines a state condition as an extension of Condition\n */\nexport class StateCondition extends Condition {\n    /**\n     * Creates a new StateCondition\n     * @param actionManager manager for the action the condition applies to\n     * @param target of the condition\n     * @param value to compare with target state\n     */\n    constructor(actionManager, target, \n    /** Value to compare with target state  */\n    value) {\n        super(actionManager);\n        this.value = value;\n        this._target = target;\n    }\n    /**\n     * Gets a boolean indicating if the current condition is met\n     * @returns the validity of the state\n     */\n    isValid() {\n        return this._target.state === this.value;\n    }\n    /**\n     * Serialize the StateCondition into a JSON compatible object\n     * @returns serialization object\n     */\n    serialize() {\n        return this._serialize({\n            name: \"StateCondition\",\n            properties: [Action._GetTargetProperty(this._target), { name: \"value\", value: this.value }],\n        });\n    }\n}\nRegisterClass(\"BABYLON.ValueCondition\", ValueCondition);\nRegisterClass(\"BABYLON.PredicateCondition\", PredicateCondition);\nRegisterClass(\"BABYLON.StateCondition\", StateCondition);\n//# sourceMappingURL=condition.js.map","import { Logger } from \"../Misc/logger.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Action } from \"./action.js\";\n\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * This defines an action responsible to toggle a boolean once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class SwitchBooleanAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the object containing the boolean\n     * @param propertyPath defines the path to the boolean property in the target object\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, propertyPath, condition) {\n        super(triggerOptions, condition);\n        this.propertyPath = propertyPath;\n        this._target = this._effectiveTarget = target;\n    }\n    /** @internal */\n    _prepare() {\n        this._effectiveTarget = this._getEffectiveTarget(this._effectiveTarget, this.propertyPath);\n        this._property = this._getProperty(this.propertyPath);\n    }\n    /**\n     * Execute the action toggle the boolean value.\n     */\n    execute() {\n        this._effectiveTarget[this._property] = !this._effectiveTarget[this._property];\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"SwitchBooleanAction\",\n            properties: [Action._GetTargetProperty(this._target), { name: \"propertyPath\", value: this.propertyPath }],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to set a the state field of the target\n *  to a desired value once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class SetStateAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the object containing the state property\n     * @param value defines the value to store in the state field\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, value, condition) {\n        super(triggerOptions, condition);\n        this.value = value;\n        this._target = target;\n    }\n    /**\n     * Execute the action and store the value on the target state property.\n     */\n    execute() {\n        this._target.state = this.value;\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"SetStateAction\",\n            properties: [Action._GetTargetProperty(this._target), { name: \"value\", value: this.value }],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to set a property of the target\n *  to a desired value once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class SetValueAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the object containing the property\n     * @param propertyPath defines the path of the property to set in the target\n     * @param value defines the value to set in the property\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, propertyPath, value, condition) {\n        super(triggerOptions, condition);\n        this.propertyPath = propertyPath;\n        this.value = value;\n        this._target = this._effectiveTarget = target;\n    }\n    /** @internal */\n    _prepare() {\n        this._effectiveTarget = this._getEffectiveTarget(this._effectiveTarget, this.propertyPath);\n        this._property = this._getProperty(this.propertyPath);\n    }\n    /**\n     * Execute the action and set the targeted property to the desired value.\n     */\n    execute() {\n        this._effectiveTarget[this._property] = this.value;\n        if (this._target.markAsDirty) {\n            this._target.markAsDirty(this._property);\n        }\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"SetValueAction\",\n            properties: [\n                Action._GetTargetProperty(this._target),\n                { name: \"propertyPath\", value: this.propertyPath },\n                { name: \"value\", value: Action._SerializeValueAsString(this.value) },\n            ],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to increment the target value\n *  to a desired value once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class IncrementValueAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the object containing the property\n     * @param propertyPath defines the path of the property to increment in the target\n     * @param value defines the value value we should increment the property by\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, propertyPath, value, condition) {\n        super(triggerOptions, condition);\n        this.propertyPath = propertyPath;\n        this.value = value;\n        this._target = this._effectiveTarget = target;\n    }\n    /** @internal */\n    _prepare() {\n        this._effectiveTarget = this._getEffectiveTarget(this._effectiveTarget, this.propertyPath);\n        this._property = this._getProperty(this.propertyPath);\n        if (typeof this._effectiveTarget[this._property] !== \"number\") {\n            Logger.Warn(\"Warning: IncrementValueAction can only be used with number values\");\n        }\n    }\n    /**\n     * Execute the action and increment the target of the value amount.\n     */\n    execute() {\n        this._effectiveTarget[this._property] += this.value;\n        if (this._target.markAsDirty) {\n            this._target.markAsDirty(this._property);\n        }\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"IncrementValueAction\",\n            properties: [\n                Action._GetTargetProperty(this._target),\n                { name: \"propertyPath\", value: this.propertyPath },\n                { name: \"value\", value: Action._SerializeValueAsString(this.value) },\n            ],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to start an animation once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class PlayAnimationAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the target animation or animation name\n     * @param from defines from where the animation should start (animation frame)\n     * @param to defines where the animation should stop (animation frame)\n     * @param loop defines if the animation should loop or stop after the first play\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, from, to, loop, condition) {\n        super(triggerOptions, condition);\n        this.from = from;\n        this.to = to;\n        this.loop = loop;\n        this._target = target;\n    }\n    /** @internal */\n    _prepare() { }\n    /**\n     * Execute the action and play the animation.\n     */\n    execute() {\n        const scene = this._actionManager.getScene();\n        scene.beginAnimation(this._target, this.from, this.to, this.loop);\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"PlayAnimationAction\",\n            properties: [\n                Action._GetTargetProperty(this._target),\n                { name: \"from\", value: String(this.from) },\n                { name: \"to\", value: String(this.to) },\n                { name: \"loop\", value: Action._SerializeValueAsString(this.loop) || false },\n            ],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to stop an animation once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class StopAnimationAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the target animation or animation name\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, condition) {\n        super(triggerOptions, condition);\n        this._target = target;\n    }\n    /** @internal */\n    _prepare() { }\n    /**\n     * Execute the action and stop the animation.\n     */\n    execute() {\n        const scene = this._actionManager.getScene();\n        scene.stopAnimation(this._target);\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"StopAnimationAction\",\n            properties: [Action._GetTargetProperty(this._target)],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible that does nothing once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class DoNothingAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions = 0, condition) {\n        super(triggerOptions, condition);\n    }\n    /**\n     * Execute the action and do nothing.\n     */\n    execute() { }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"DoNothingAction\",\n            properties: [],\n        }, parent);\n    }\n}\n/**\n * This defines an action responsible to trigger several actions once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class CombineAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param children defines the list of aggregated animations to run\n     * @param condition defines the trigger related conditions\n     * @param enableChildrenConditions defines if the children actions conditions should be check before execution\n     */\n    constructor(triggerOptions, children, condition, enableChildrenConditions = true) {\n        super(triggerOptions, condition);\n        this.children = children;\n        this.enableChildrenConditions = enableChildrenConditions;\n    }\n    /** @internal */\n    _prepare() {\n        for (let index = 0; index < this.children.length; index++) {\n            this.children[index]._actionManager = this._actionManager;\n            this.children[index]._prepare();\n        }\n    }\n    /**\n     * Execute the action and executes all the aggregated actions.\n     * @param evt\n     */\n    execute(evt) {\n        for (const action of this.children) {\n            if (!this.enableChildrenConditions || action._evaluateConditionForCurrentFrame()) {\n                action.execute(evt);\n            }\n        }\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        const serializationObject = super._serialize({\n            name: \"CombineAction\",\n            properties: [],\n            combine: [],\n        }, parent);\n        for (let i = 0; i < this.children.length; i++) {\n            serializationObject.combine.push(this.children[i].serialize(null));\n        }\n        return serializationObject;\n    }\n}\n/**\n * This defines an action responsible to run code (external event) once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class ExecuteCodeAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param func defines the callback function to run\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, func, condition) {\n        super(triggerOptions, condition);\n        this.func = func;\n    }\n    /**\n     * Execute the action and run the attached code.\n     * @param evt\n     */\n    execute(evt) {\n        this.func(evt);\n    }\n}\n/**\n * This defines an action responsible to set the parent property of the target once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class SetParentAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the target containing the parent property\n     * @param parent defines from where the animation should start (animation frame)\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, target, parent, condition) {\n        super(triggerOptions, condition);\n        this._target = target;\n        this._parent = parent;\n    }\n    /** @internal */\n    _prepare() { }\n    /**\n     * Execute the action and set the parent property.\n     */\n    execute() {\n        if (this._target.parent === this._parent) {\n            return;\n        }\n        const invertParentWorldMatrix = this._parent.getWorldMatrix().clone();\n        invertParentWorldMatrix.invert();\n        this._target.position = Vector3.TransformCoordinates(this._target.position, invertParentWorldMatrix);\n        this._target.parent = this._parent;\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"SetParentAction\",\n            properties: [Action._GetTargetProperty(this._target), Action._GetTargetProperty(this._parent)],\n        }, parent);\n    }\n}\nRegisterClass(\"BABYLON.SetParentAction\", SetParentAction);\nRegisterClass(\"BABYLON.ExecuteCodeAction\", ExecuteCodeAction);\nRegisterClass(\"BABYLON.DoNothingAction\", DoNothingAction);\nRegisterClass(\"BABYLON.StopAnimationAction\", StopAnimationAction);\nRegisterClass(\"BABYLON.PlayAnimationAction\", PlayAnimationAction);\nRegisterClass(\"BABYLON.IncrementValueAction\", IncrementValueAction);\nRegisterClass(\"BABYLON.SetValueAction\", SetValueAction);\nRegisterClass(\"BABYLON.SetStateAction\", SetStateAction);\nRegisterClass(\"BABYLON.SetParentAction\", SetParentAction);\nRegisterClass(\"BABYLON.SwitchBooleanAction\", SwitchBooleanAction);\nRegisterClass(\"BABYLON.CombineAction\", CombineAction);\n//# sourceMappingURL=directActions.js.map","import { Action } from \"./action.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * This defines an action helpful to play a defined sound on a triggered action.\n */\nexport class PlaySoundAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param sound defines the sound to play\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, sound, condition) {\n        super(triggerOptions, condition);\n        this._sound = sound;\n    }\n    /** @internal */\n    _prepare() { }\n    /**\n     * Execute the action and play the sound.\n     */\n    execute() {\n        if (this._sound !== undefined) {\n            this._sound.play();\n        }\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"PlaySoundAction\",\n            properties: [{ name: \"sound\", value: this._sound.name }],\n        }, parent);\n    }\n}\n/**\n * This defines an action helpful to stop a defined sound on a triggered action.\n */\nexport class StopSoundAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param sound defines the sound to stop\n     * @param condition defines the trigger related conditions\n     */\n    constructor(triggerOptions, sound, condition) {\n        super(triggerOptions, condition);\n        this._sound = sound;\n    }\n    /** @internal */\n    _prepare() { }\n    /**\n     * Execute the action and stop the sound.\n     */\n    execute() {\n        if (this._sound !== undefined) {\n            this._sound.stop();\n        }\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"StopSoundAction\",\n            properties: [{ name: \"sound\", value: this._sound.name }],\n        }, parent);\n    }\n}\nRegisterClass(\"BABYLON.PlaySoundAction\", PlaySoundAction);\nRegisterClass(\"BABYLON.StopSoundAction\", StopSoundAction);\n//# sourceMappingURL=directAudioActions.js.map","import { Action } from \"./action.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { Color3 } from \"../Maths/math.color.js\";\nimport { Vector3, Matrix, Quaternion } from \"../Maths/math.vector.js\";\nimport { Animation } from \"../Animations/animation.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\n/**\n * This defines an action responsible to change the value of a property\n * by interpolating between its current value and the newly set one once triggered.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/events/actions\n */\nexport class InterpolateValueAction extends Action {\n    /**\n     * Instantiate the action\n     * @param triggerOptions defines the trigger options\n     * @param target defines the object containing the value to interpolate\n     * @param propertyPath defines the path to the property in the target object\n     * @param value defines the target value at the end of the interpolation\n     * @param duration defines the time it will take for the property to interpolate to the value.\n     * @param condition defines the trigger related conditions\n     * @param stopOtherAnimations defines if the other scene animations should be stopped when the action has been triggered\n     * @param onInterpolationDone defines a callback raised once the interpolation animation has been done\n     */\n    constructor(triggerOptions, target, propertyPath, value, duration = 1000, condition, stopOtherAnimations, onInterpolationDone) {\n        super(triggerOptions, condition);\n        /**\n         * Defines the time it will take for the property to interpolate to the value.\n         */\n        this.duration = 1000;\n        /**\n         * Observable triggered once the interpolation animation has been done.\n         */\n        this.onInterpolationDoneObservable = new Observable();\n        this.propertyPath = propertyPath;\n        this.value = value;\n        this.duration = duration;\n        this.stopOtherAnimations = stopOtherAnimations;\n        this.onInterpolationDone = onInterpolationDone;\n        this._target = this._effectiveTarget = target;\n    }\n    /** @internal */\n    _prepare() {\n        this._effectiveTarget = this._getEffectiveTarget(this._effectiveTarget, this.propertyPath);\n        this._property = this._getProperty(this.propertyPath);\n    }\n    /**\n     * Execute the action starts the value interpolation.\n     */\n    execute() {\n        const scene = this._actionManager.getScene();\n        const keys = [\n            {\n                frame: 0,\n                value: this._effectiveTarget[this._property],\n            },\n            {\n                frame: 100,\n                value: this.value,\n            },\n        ];\n        let dataType;\n        if (typeof this.value === \"number\") {\n            dataType = Animation.ANIMATIONTYPE_FLOAT;\n        }\n        else if (this.value instanceof Color3) {\n            dataType = Animation.ANIMATIONTYPE_COLOR3;\n        }\n        else if (this.value instanceof Vector3) {\n            dataType = Animation.ANIMATIONTYPE_VECTOR3;\n        }\n        else if (this.value instanceof Matrix) {\n            dataType = Animation.ANIMATIONTYPE_MATRIX;\n        }\n        else if (this.value instanceof Quaternion) {\n            dataType = Animation.ANIMATIONTYPE_QUATERNION;\n        }\n        else {\n            Logger.Warn(\"InterpolateValueAction: Unsupported type (\" + typeof this.value + \")\");\n            return;\n        }\n        const animation = new Animation(\"InterpolateValueAction\", this._property, 100 * (1000.0 / this.duration), dataType, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        animation.setKeys(keys);\n        if (this.stopOtherAnimations) {\n            scene.stopAnimation(this._effectiveTarget);\n        }\n        const wrapper = () => {\n            this.onInterpolationDoneObservable.notifyObservers(this);\n            if (this.onInterpolationDone) {\n                this.onInterpolationDone();\n            }\n        };\n        scene.beginDirectAnimation(this._effectiveTarget, [animation], 0, 100, false, 1, wrapper);\n    }\n    /**\n     * Serializes the actions and its related information.\n     * @param parent defines the object to serialize in\n     * @returns the serialized object\n     */\n    serialize(parent) {\n        return super._serialize({\n            name: \"InterpolateValueAction\",\n            properties: [\n                Action._GetTargetProperty(this._target),\n                { name: \"propertyPath\", value: this.propertyPath },\n                { name: \"value\", value: Action._SerializeValueAsString(this.value) },\n                { name: \"duration\", value: Action._SerializeValueAsString(this.duration) },\n                { name: \"stopOtherAnimations\", value: Action._SerializeValueAsString(this.stopOtherAnimations) || false },\n            ],\n        }, parent);\n    }\n}\nRegisterClass(\"BABYLON.InterpolateValueAction\", InterpolateValueAction);\n//# sourceMappingURL=interpolateValueAction.js.map","import { Animation } from \"./animation.js\";\nimport { RuntimeAnimation } from \"./runtimeAnimation.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { Scene } from \"../scene.js\";\nimport { Matrix, Quaternion, Vector3, TmpVectors } from \"../Maths/math.vector.js\";\nimport { PrecisionDate } from \"../Misc/precisionDate.js\";\nimport { Bone } from \"../Bones/bone.js\";\n/**\n * Class used to store an actual running animation\n */\nexport class Animatable {\n    /**\n     * Gets the root Animatable used to synchronize and normalize animations\n     */\n    get syncRoot() {\n        return this._syncRoot;\n    }\n    /**\n     * Gets the current frame of the first RuntimeAnimation\n     * Used to synchronize Animatables\n     */\n    get masterFrame() {\n        if (this._runtimeAnimations.length === 0) {\n            return 0;\n        }\n        return this._runtimeAnimations[0].currentFrame;\n    }\n    /**\n     * Gets or sets the animatable weight (-1.0 by default meaning not weighted)\n     */\n    get weight() {\n        return this._weight;\n    }\n    set weight(value) {\n        if (value === -1) {\n            // -1 is ok and means no weight\n            this._weight = -1;\n            return;\n        }\n        // Else weight must be in [0, 1] range\n        this._weight = Math.min(Math.max(value, 0), 1.0);\n    }\n    /**\n     * Gets or sets the speed ratio to apply to the animatable (1.0 by default)\n     */\n    get speedRatio() {\n        return this._speedRatio;\n    }\n    set speedRatio(value) {\n        for (let index = 0; index < this._runtimeAnimations.length; index++) {\n            const animation = this._runtimeAnimations[index];\n            animation._prepareForSpeedRatioChange(value);\n        }\n        this._speedRatio = value;\n        // Resync _manualJumpDelay in case goToFrame was called before speedRatio was set.\n        if (this._goToFrame !== null) {\n            this.goToFrame(this._goToFrame);\n        }\n    }\n    /**\n     * Creates a new Animatable\n     * @param scene defines the hosting scene\n     * @param target defines the target object\n     * @param fromFrame defines the starting frame number (default is 0)\n     * @param toFrame defines the ending frame number (default is 100)\n     * @param loopAnimation defines if the animation must loop (default is false)\n     * @param speedRatio defines the factor to apply to animation speed (default is 1)\n     * @param onAnimationEnd defines a callback to call when animation ends if it is not looping\n     * @param animations defines a group of animation to add to the new Animatable\n     * @param onAnimationLoop defines a callback to call when animation loops\n     * @param isAdditive defines whether the animation should be evaluated additively\n     */\n    constructor(scene, \n    /** defines the target object */\n    target, \n    /** defines the starting frame number (default is 0) */\n    fromFrame = 0, \n    /** defines the ending frame number (default is 100) */\n    toFrame = 100, \n    /** defines if the animation must loop (default is false)  */\n    loopAnimation = false, speedRatio = 1.0, \n    /** defines a callback to call when animation ends if it is not looping */\n    onAnimationEnd, animations, \n    /** defines a callback to call when animation loops */\n    onAnimationLoop, \n    /** defines whether the animation should be evaluated additively */\n    isAdditive = false) {\n        this.target = target;\n        this.fromFrame = fromFrame;\n        this.toFrame = toFrame;\n        this.loopAnimation = loopAnimation;\n        this.onAnimationEnd = onAnimationEnd;\n        this.onAnimationLoop = onAnimationLoop;\n        this.isAdditive = isAdditive;\n        this._localDelayOffset = null;\n        this._pausedDelay = null;\n        this._manualJumpDelay = null;\n        this._runtimeAnimations = new Array();\n        this._paused = false;\n        this._speedRatio = 1;\n        this._weight = -1.0;\n        this._syncRoot = null;\n        this._frameToSyncFromJump = null;\n        this._goToFrame = null;\n        /**\n         * Gets or sets a boolean indicating if the animatable must be disposed and removed at the end of the animation.\n         * This will only apply for non looping animation (default is true)\n         */\n        this.disposeOnEnd = true;\n        /**\n         * Gets a boolean indicating if the animation has started\n         */\n        this.animationStarted = false;\n        /**\n         * Observer raised when the animation ends\n         */\n        this.onAnimationEndObservable = new Observable();\n        /**\n         * Observer raised when the animation loops\n         */\n        this.onAnimationLoopObservable = new Observable();\n        this._scene = scene;\n        if (animations) {\n            this.appendAnimations(target, animations);\n        }\n        this._speedRatio = speedRatio;\n        scene._activeAnimatables.push(this);\n    }\n    // Methods\n    /**\n     * Synchronize and normalize current Animatable with a source Animatable\n     * This is useful when using animation weights and when animations are not of the same length\n     * @param root defines the root Animatable to synchronize with (null to stop synchronizing)\n     * @returns the current Animatable\n     */\n    syncWith(root) {\n        this._syncRoot = root;\n        if (root) {\n            // Make sure this animatable will animate after the root\n            const index = this._scene._activeAnimatables.indexOf(this);\n            if (index > -1) {\n                this._scene._activeAnimatables.splice(index, 1);\n                this._scene._activeAnimatables.push(this);\n            }\n        }\n        return this;\n    }\n    /**\n     * Gets the list of runtime animations\n     * @returns an array of RuntimeAnimation\n     */\n    getAnimations() {\n        return this._runtimeAnimations;\n    }\n    /**\n     * Adds more animations to the current animatable\n     * @param target defines the target of the animations\n     * @param animations defines the new animations to add\n     */\n    appendAnimations(target, animations) {\n        for (let index = 0; index < animations.length; index++) {\n            const animation = animations[index];\n            const newRuntimeAnimation = new RuntimeAnimation(target, animation, this._scene, this);\n            newRuntimeAnimation._onLoop = () => {\n                this.onAnimationLoopObservable.notifyObservers(this);\n                if (this.onAnimationLoop) {\n                    this.onAnimationLoop();\n                }\n            };\n            this._runtimeAnimations.push(newRuntimeAnimation);\n        }\n    }\n    /**\n     * Gets the source animation for a specific property\n     * @param property defines the property to look for\n     * @returns null or the source animation for the given property\n     */\n    getAnimationByTargetProperty(property) {\n        const runtimeAnimations = this._runtimeAnimations;\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            if (runtimeAnimations[index].animation.targetProperty === property) {\n                return runtimeAnimations[index].animation;\n            }\n        }\n        return null;\n    }\n    /**\n     * Gets the runtime animation for a specific property\n     * @param property defines the property to look for\n     * @returns null or the runtime animation for the given property\n     */\n    getRuntimeAnimationByTargetProperty(property) {\n        const runtimeAnimations = this._runtimeAnimations;\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            if (runtimeAnimations[index].animation.targetProperty === property) {\n                return runtimeAnimations[index];\n            }\n        }\n        return null;\n    }\n    /**\n     * Resets the animatable to its original state\n     */\n    reset() {\n        const runtimeAnimations = this._runtimeAnimations;\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            runtimeAnimations[index].reset(true);\n        }\n        this._localDelayOffset = null;\n        this._pausedDelay = null;\n    }\n    /**\n     * Allows the animatable to blend with current running animations\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#animation-blending\n     * @param blendingSpeed defines the blending speed to use\n     */\n    enableBlending(blendingSpeed) {\n        const runtimeAnimations = this._runtimeAnimations;\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            runtimeAnimations[index].animation.enableBlending = true;\n            runtimeAnimations[index].animation.blendingSpeed = blendingSpeed;\n        }\n    }\n    /**\n     * Disable animation blending\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#animation-blending\n     */\n    disableBlending() {\n        const runtimeAnimations = this._runtimeAnimations;\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            runtimeAnimations[index].animation.enableBlending = false;\n        }\n    }\n    /**\n     * Jump directly to a given frame\n     * @param frame defines the frame to jump to\n     */\n    goToFrame(frame) {\n        var _a;\n        const runtimeAnimations = this._runtimeAnimations;\n        if (runtimeAnimations[0]) {\n            const fps = runtimeAnimations[0].animation.framePerSecond;\n            this._frameToSyncFromJump = (_a = this._frameToSyncFromJump) !== null && _a !== void 0 ? _a : runtimeAnimations[0].currentFrame;\n            const delay = this.speedRatio === 0 ? 0 : (((frame - this._frameToSyncFromJump) / fps) * 1000) / this.speedRatio;\n            this._manualJumpDelay = -delay;\n        }\n        for (let index = 0; index < runtimeAnimations.length; index++) {\n            runtimeAnimations[index].goToFrame(frame);\n        }\n        this._goToFrame = frame;\n    }\n    /**\n     * Pause the animation\n     */\n    pause() {\n        if (this._paused) {\n            return;\n        }\n        this._paused = true;\n    }\n    /**\n     * Restart the animation\n     */\n    restart() {\n        this._paused = false;\n    }\n    _raiseOnAnimationEnd() {\n        if (this.onAnimationEnd) {\n            this.onAnimationEnd();\n        }\n        this.onAnimationEndObservable.notifyObservers(this);\n    }\n    /**\n     * Stop and delete the current animation\n     * @param animationName defines a string used to only stop some of the runtime animations instead of all\n     * @param targetMask - a function that determines if the animation should be stopped based on its target (all animations will be stopped if both this and animationName are empty)\n     */\n    stop(animationName, targetMask) {\n        if (animationName || targetMask) {\n            const idx = this._scene._activeAnimatables.indexOf(this);\n            if (idx > -1) {\n                const runtimeAnimations = this._runtimeAnimations;\n                for (let index = runtimeAnimations.length - 1; index >= 0; index--) {\n                    const runtimeAnimation = runtimeAnimations[index];\n                    if (animationName && runtimeAnimation.animation.name != animationName) {\n                        continue;\n                    }\n                    if (targetMask && !targetMask(runtimeAnimation.target)) {\n                        continue;\n                    }\n                    runtimeAnimation.dispose();\n                    runtimeAnimations.splice(index, 1);\n                }\n                if (runtimeAnimations.length == 0) {\n                    this._scene._activeAnimatables.splice(idx, 1);\n                    this._raiseOnAnimationEnd();\n                }\n            }\n        }\n        else {\n            const index = this._scene._activeAnimatables.indexOf(this);\n            if (index > -1) {\n                this._scene._activeAnimatables.splice(index, 1);\n                const runtimeAnimations = this._runtimeAnimations;\n                for (let index = 0; index < runtimeAnimations.length; index++) {\n                    runtimeAnimations[index].dispose();\n                }\n                this._raiseOnAnimationEnd();\n            }\n        }\n    }\n    /**\n     * Wait asynchronously for the animation to end\n     * @returns a promise which will be fulfilled when the animation ends\n     */\n    waitAsync() {\n        return new Promise((resolve) => {\n            this.onAnimationEndObservable.add(() => {\n                resolve(this);\n            }, undefined, undefined, this, true);\n        });\n    }\n    /**\n     * @internal\n     */\n    _animate(delay) {\n        if (this._paused) {\n            this.animationStarted = false;\n            if (this._pausedDelay === null) {\n                this._pausedDelay = delay;\n            }\n            return true;\n        }\n        if (this._localDelayOffset === null) {\n            this._localDelayOffset = delay;\n            this._pausedDelay = null;\n        }\n        else if (this._pausedDelay !== null) {\n            this._localDelayOffset += delay - this._pausedDelay;\n            this._pausedDelay = null;\n        }\n        if (this._manualJumpDelay !== null) {\n            this._localDelayOffset += this._manualJumpDelay;\n            this._manualJumpDelay = null;\n            this._frameToSyncFromJump = null;\n        }\n        this._goToFrame = null;\n        if (this._weight === 0) {\n            // We consider that an animation with a weight === 0 is \"actively\" paused\n            return true;\n        }\n        // Animating\n        let running = false;\n        const runtimeAnimations = this._runtimeAnimations;\n        let index;\n        for (index = 0; index < runtimeAnimations.length; index++) {\n            const animation = runtimeAnimations[index];\n            const isRunning = animation.animate(delay - this._localDelayOffset, this.fromFrame, this.toFrame, this.loopAnimation, this._speedRatio, this._weight);\n            running = running || isRunning;\n        }\n        this.animationStarted = running;\n        if (!running) {\n            if (this.disposeOnEnd) {\n                // Remove from active animatables\n                index = this._scene._activeAnimatables.indexOf(this);\n                this._scene._activeAnimatables.splice(index, 1);\n                // Dispose all runtime animations\n                for (index = 0; index < runtimeAnimations.length; index++) {\n                    runtimeAnimations[index].dispose();\n                }\n            }\n            this._raiseOnAnimationEnd();\n            if (this.disposeOnEnd) {\n                this.onAnimationEnd = null;\n                this.onAnimationLoop = null;\n                this.onAnimationLoopObservable.clear();\n                this.onAnimationEndObservable.clear();\n            }\n        }\n        return running;\n    }\n}\nScene.prototype._animate = function () {\n    if (!this.animationsEnabled) {\n        return;\n    }\n    // Getting time\n    const now = PrecisionDate.Now;\n    if (!this._animationTimeLast) {\n        if (this._pendingData.length > 0) {\n            return;\n        }\n        this._animationTimeLast = now;\n    }\n    this.deltaTime = this.useConstantAnimationDeltaTime ? 16.0 : (now - this._animationTimeLast) * this.animationTimeScale;\n    this._animationTimeLast = now;\n    const animatables = this._activeAnimatables;\n    if (animatables.length === 0) {\n        return;\n    }\n    this._animationTime += this.deltaTime;\n    const animationTime = this._animationTime;\n    for (let index = 0; index < animatables.length; index++) {\n        const animatable = animatables[index];\n        if (!animatable._animate(animationTime) && animatable.disposeOnEnd) {\n            index--; // Array was updated\n        }\n    }\n    // Late animation bindings\n    this._processLateAnimationBindings();\n};\nScene.prototype.beginWeightedAnimation = function (target, from, to, weight = 1.0, loop, speedRatio = 1.0, onAnimationEnd, animatable, targetMask, onAnimationLoop, isAdditive = false) {\n    const returnedAnimatable = this.beginAnimation(target, from, to, loop, speedRatio, onAnimationEnd, animatable, false, targetMask, onAnimationLoop, isAdditive);\n    returnedAnimatable.weight = weight;\n    return returnedAnimatable;\n};\nScene.prototype.beginAnimation = function (target, from, to, loop, speedRatio = 1.0, onAnimationEnd, animatable, stopCurrent = true, targetMask, onAnimationLoop, isAdditive = false) {\n    if (from > to && speedRatio > 0) {\n        speedRatio *= -1;\n    }\n    if (stopCurrent) {\n        this.stopAnimation(target, undefined, targetMask);\n    }\n    if (!animatable) {\n        animatable = new Animatable(this, target, from, to, loop, speedRatio, onAnimationEnd, undefined, onAnimationLoop, isAdditive);\n    }\n    const shouldRunTargetAnimations = targetMask ? targetMask(target) : true;\n    // Local animations\n    if (target.animations && shouldRunTargetAnimations) {\n        animatable.appendAnimations(target, target.animations);\n    }\n    // Children animations\n    if (target.getAnimatables) {\n        const animatables = target.getAnimatables();\n        for (let index = 0; index < animatables.length; index++) {\n            this.beginAnimation(animatables[index], from, to, loop, speedRatio, onAnimationEnd, animatable, stopCurrent, targetMask, onAnimationLoop);\n        }\n    }\n    animatable.reset();\n    return animatable;\n};\nScene.prototype.beginHierarchyAnimation = function (target, directDescendantsOnly, from, to, loop, speedRatio = 1.0, onAnimationEnd, animatable, stopCurrent = true, targetMask, onAnimationLoop, isAdditive = false) {\n    const children = target.getDescendants(directDescendantsOnly);\n    const result = [];\n    result.push(this.beginAnimation(target, from, to, loop, speedRatio, onAnimationEnd, animatable, stopCurrent, targetMask, undefined, isAdditive));\n    for (const child of children) {\n        result.push(this.beginAnimation(child, from, to, loop, speedRatio, onAnimationEnd, animatable, stopCurrent, targetMask, undefined, isAdditive));\n    }\n    return result;\n};\nScene.prototype.beginDirectAnimation = function (target, animations, from, to, loop, speedRatio, onAnimationEnd, onAnimationLoop, isAdditive = false) {\n    if (speedRatio === undefined) {\n        speedRatio = 1.0;\n    }\n    if (from > to && speedRatio > 0) {\n        speedRatio *= -1;\n    }\n    else if (to > from && speedRatio < 0) {\n        const temp = to;\n        to = from;\n        from = temp;\n    }\n    const animatable = new Animatable(this, target, from, to, loop, speedRatio, onAnimationEnd, animations, onAnimationLoop, isAdditive);\n    return animatable;\n};\nScene.prototype.beginDirectHierarchyAnimation = function (target, directDescendantsOnly, animations, from, to, loop, speedRatio, onAnimationEnd, onAnimationLoop, isAdditive = false) {\n    const children = target.getDescendants(directDescendantsOnly);\n    const result = [];\n    result.push(this.beginDirectAnimation(target, animations, from, to, loop, speedRatio, onAnimationEnd, onAnimationLoop, isAdditive));\n    for (const child of children) {\n        result.push(this.beginDirectAnimation(child, animations, from, to, loop, speedRatio, onAnimationEnd, onAnimationLoop, isAdditive));\n    }\n    return result;\n};\nScene.prototype.getAnimatableByTarget = function (target) {\n    for (let index = 0; index < this._activeAnimatables.length; index++) {\n        if (this._activeAnimatables[index].target === target) {\n            return this._activeAnimatables[index];\n        }\n    }\n    return null;\n};\nScene.prototype.getAllAnimatablesByTarget = function (target) {\n    const result = [];\n    for (let index = 0; index < this._activeAnimatables.length; index++) {\n        if (this._activeAnimatables[index].target === target) {\n            result.push(this._activeAnimatables[index]);\n        }\n    }\n    return result;\n};\n/**\n * Will stop the animation of the given target\n * @param target - the target\n * @param animationName - the name of the animation to stop (all animations will be stopped if both this and targetMask are empty)\n * @param targetMask - a function that determines if the animation should be stopped based on its target (all animations will be stopped if both this and animationName are empty)\n */\nScene.prototype.stopAnimation = function (target, animationName, targetMask) {\n    const animatables = this.getAllAnimatablesByTarget(target);\n    for (const animatable of animatables) {\n        animatable.stop(animationName, targetMask);\n    }\n};\n/**\n * Stops and removes all animations that have been applied to the scene\n */\nScene.prototype.stopAllAnimations = function () {\n    if (this._activeAnimatables) {\n        for (let i = 0; i < this._activeAnimatables.length; i++) {\n            this._activeAnimatables[i].stop();\n        }\n        this._activeAnimatables.length = 0;\n    }\n    for (const group of this.animationGroups) {\n        group.stop();\n    }\n};\nScene.prototype._registerTargetForLateAnimationBinding = function (runtimeAnimation, originalValue) {\n    const target = runtimeAnimation.target;\n    this._registeredForLateAnimationBindings.pushNoDuplicate(target);\n    if (!target._lateAnimationHolders) {\n        target._lateAnimationHolders = {};\n    }\n    if (!target._lateAnimationHolders[runtimeAnimation.targetPath]) {\n        target._lateAnimationHolders[runtimeAnimation.targetPath] = {\n            totalWeight: 0,\n            totalAdditiveWeight: 0,\n            animations: [],\n            additiveAnimations: [],\n            originalValue: originalValue,\n        };\n    }\n    if (runtimeAnimation.isAdditive) {\n        target._lateAnimationHolders[runtimeAnimation.targetPath].additiveAnimations.push(runtimeAnimation);\n        target._lateAnimationHolders[runtimeAnimation.targetPath].totalAdditiveWeight += runtimeAnimation.weight;\n    }\n    else {\n        target._lateAnimationHolders[runtimeAnimation.targetPath].animations.push(runtimeAnimation);\n        target._lateAnimationHolders[runtimeAnimation.targetPath].totalWeight += runtimeAnimation.weight;\n    }\n};\nScene.prototype._processLateAnimationBindingsForMatrices = function (holder) {\n    if (holder.totalWeight === 0 && holder.totalAdditiveWeight === 0) {\n        return holder.originalValue;\n    }\n    let normalizer = 1.0;\n    const finalPosition = TmpVectors.Vector3[0];\n    const finalScaling = TmpVectors.Vector3[1];\n    const finalQuaternion = TmpVectors.Quaternion[0];\n    let startIndex = 0;\n    const originalAnimation = holder.animations[0];\n    const originalValue = holder.originalValue;\n    let scale = 1;\n    let skipOverride = false;\n    if (holder.totalWeight < 1.0) {\n        // We need to mix the original value in\n        scale = 1.0 - holder.totalWeight;\n        originalValue.decompose(finalScaling, finalQuaternion, finalPosition);\n    }\n    else {\n        startIndex = 1;\n        // We need to normalize the weights\n        normalizer = holder.totalWeight;\n        scale = originalAnimation.weight / normalizer;\n        if (scale == 1) {\n            if (holder.totalAdditiveWeight) {\n                skipOverride = true;\n            }\n            else {\n                return originalAnimation.currentValue;\n            }\n        }\n        originalAnimation.currentValue.decompose(finalScaling, finalQuaternion, finalPosition);\n    }\n    // Add up the override animations\n    if (!skipOverride) {\n        finalScaling.scaleInPlace(scale);\n        finalPosition.scaleInPlace(scale);\n        finalQuaternion.scaleInPlace(scale);\n        for (let animIndex = startIndex; animIndex < holder.animations.length; animIndex++) {\n            const runtimeAnimation = holder.animations[animIndex];\n            if (runtimeAnimation.weight === 0) {\n                continue;\n            }\n            scale = runtimeAnimation.weight / normalizer;\n            const currentPosition = TmpVectors.Vector3[2];\n            const currentScaling = TmpVectors.Vector3[3];\n            const currentQuaternion = TmpVectors.Quaternion[1];\n            runtimeAnimation.currentValue.decompose(currentScaling, currentQuaternion, currentPosition);\n            currentScaling.scaleAndAddToRef(scale, finalScaling);\n            currentQuaternion.scaleAndAddToRef(Quaternion.Dot(finalQuaternion, currentQuaternion) > 0 ? scale : -scale, finalQuaternion);\n            currentPosition.scaleAndAddToRef(scale, finalPosition);\n        }\n        finalQuaternion.normalize();\n    }\n    // Add up the additive animations\n    for (let animIndex = 0; animIndex < holder.additiveAnimations.length; animIndex++) {\n        const runtimeAnimation = holder.additiveAnimations[animIndex];\n        if (runtimeAnimation.weight === 0) {\n            continue;\n        }\n        const currentPosition = TmpVectors.Vector3[2];\n        const currentScaling = TmpVectors.Vector3[3];\n        const currentQuaternion = TmpVectors.Quaternion[1];\n        runtimeAnimation.currentValue.decompose(currentScaling, currentQuaternion, currentPosition);\n        currentScaling.multiplyToRef(finalScaling, currentScaling);\n        Vector3.LerpToRef(finalScaling, currentScaling, runtimeAnimation.weight, finalScaling);\n        finalQuaternion.multiplyToRef(currentQuaternion, currentQuaternion);\n        Quaternion.SlerpToRef(finalQuaternion, currentQuaternion, runtimeAnimation.weight, finalQuaternion);\n        currentPosition.scaleAndAddToRef(runtimeAnimation.weight, finalPosition);\n    }\n    const workValue = originalAnimation ? originalAnimation._animationState.workValue : TmpVectors.Matrix[0].clone();\n    Matrix.ComposeToRef(finalScaling, finalQuaternion, finalPosition, workValue);\n    return workValue;\n};\nScene.prototype._processLateAnimationBindingsForQuaternions = function (holder, refQuaternion) {\n    if (holder.totalWeight === 0 && holder.totalAdditiveWeight === 0) {\n        return refQuaternion;\n    }\n    const originalAnimation = holder.animations[0];\n    const originalValue = holder.originalValue;\n    let cumulativeQuaternion = refQuaternion;\n    if (holder.totalWeight === 0 && holder.totalAdditiveWeight > 0) {\n        cumulativeQuaternion.copyFrom(originalValue);\n    }\n    else if (holder.animations.length === 1) {\n        Quaternion.SlerpToRef(originalValue, originalAnimation.currentValue, Math.min(1.0, holder.totalWeight), cumulativeQuaternion);\n        if (holder.totalAdditiveWeight === 0) {\n            return cumulativeQuaternion;\n        }\n    }\n    else if (holder.animations.length > 1) {\n        // Add up the override animations\n        let normalizer = 1.0;\n        let quaternions;\n        let weights;\n        if (holder.totalWeight < 1.0) {\n            const scale = 1.0 - holder.totalWeight;\n            quaternions = [];\n            weights = [];\n            quaternions.push(originalValue);\n            weights.push(scale);\n        }\n        else {\n            if (holder.animations.length === 2) {\n                // Slerp as soon as we can\n                Quaternion.SlerpToRef(holder.animations[0].currentValue, holder.animations[1].currentValue, holder.animations[1].weight / holder.totalWeight, refQuaternion);\n                if (holder.totalAdditiveWeight === 0) {\n                    return refQuaternion;\n                }\n            }\n            quaternions = [];\n            weights = [];\n            normalizer = holder.totalWeight;\n        }\n        for (let animIndex = 0; animIndex < holder.animations.length; animIndex++) {\n            const runtimeAnimation = holder.animations[animIndex];\n            quaternions.push(runtimeAnimation.currentValue);\n            weights.push(runtimeAnimation.weight / normalizer);\n        }\n        // https://gamedev.stackexchange.com/questions/62354/method-for-interpolation-between-3-quaternions\n        let cumulativeAmount = 0;\n        for (let index = 0; index < quaternions.length;) {\n            if (!index) {\n                Quaternion.SlerpToRef(quaternions[index], quaternions[index + 1], weights[index + 1] / (weights[index] + weights[index + 1]), refQuaternion);\n                cumulativeQuaternion = refQuaternion;\n                cumulativeAmount = weights[index] + weights[index + 1];\n                index += 2;\n                continue;\n            }\n            cumulativeAmount += weights[index];\n            Quaternion.SlerpToRef(cumulativeQuaternion, quaternions[index], weights[index] / cumulativeAmount, cumulativeQuaternion);\n            index++;\n        }\n    }\n    // Add up the additive animations\n    for (let animIndex = 0; animIndex < holder.additiveAnimations.length; animIndex++) {\n        const runtimeAnimation = holder.additiveAnimations[animIndex];\n        if (runtimeAnimation.weight === 0) {\n            continue;\n        }\n        cumulativeQuaternion.multiplyToRef(runtimeAnimation.currentValue, TmpVectors.Quaternion[0]);\n        Quaternion.SlerpToRef(cumulativeQuaternion, TmpVectors.Quaternion[0], runtimeAnimation.weight, cumulativeQuaternion);\n    }\n    return cumulativeQuaternion;\n};\nScene.prototype._processLateAnimationBindings = function () {\n    if (!this._registeredForLateAnimationBindings.length) {\n        return;\n    }\n    for (let index = 0; index < this._registeredForLateAnimationBindings.length; index++) {\n        const target = this._registeredForLateAnimationBindings.data[index];\n        for (const path in target._lateAnimationHolders) {\n            const holder = target._lateAnimationHolders[path];\n            const originalAnimation = holder.animations[0];\n            const originalValue = holder.originalValue;\n            if (originalValue === undefined || originalValue === null) {\n                continue;\n            }\n            const matrixDecomposeMode = Animation.AllowMatrixDecomposeForInterpolation && originalValue.m; // ie. data is matrix\n            let finalValue = target[path];\n            if (matrixDecomposeMode) {\n                finalValue = this._processLateAnimationBindingsForMatrices(holder);\n            }\n            else {\n                const quaternionMode = originalValue.w !== undefined;\n                if (quaternionMode) {\n                    finalValue = this._processLateAnimationBindingsForQuaternions(holder, finalValue || Quaternion.Identity());\n                }\n                else {\n                    let startIndex = 0;\n                    let normalizer = 1.0;\n                    if (holder.totalWeight < 1.0) {\n                        // We need to mix the original value in\n                        if (originalAnimation && originalValue.scale) {\n                            finalValue = originalValue.scale(1.0 - holder.totalWeight);\n                        }\n                        else if (originalAnimation) {\n                            finalValue = originalValue * (1.0 - holder.totalWeight);\n                        }\n                        else if (originalValue.clone) {\n                            finalValue = originalValue.clone();\n                        }\n                        else {\n                            finalValue = originalValue;\n                        }\n                    }\n                    else if (originalAnimation) {\n                        // We need to normalize the weights\n                        normalizer = holder.totalWeight;\n                        const scale = originalAnimation.weight / normalizer;\n                        if (scale !== 1) {\n                            if (originalAnimation.currentValue.scale) {\n                                finalValue = originalAnimation.currentValue.scale(scale);\n                            }\n                            else {\n                                finalValue = originalAnimation.currentValue * scale;\n                            }\n                        }\n                        else {\n                            finalValue = originalAnimation.currentValue;\n                        }\n                        startIndex = 1;\n                    }\n                    // Add up the override animations\n                    for (let animIndex = startIndex; animIndex < holder.animations.length; animIndex++) {\n                        const runtimeAnimation = holder.animations[animIndex];\n                        const scale = runtimeAnimation.weight / normalizer;\n                        if (!scale) {\n                            continue;\n                        }\n                        else if (runtimeAnimation.currentValue.scaleAndAddToRef) {\n                            runtimeAnimation.currentValue.scaleAndAddToRef(scale, finalValue);\n                        }\n                        else {\n                            finalValue += runtimeAnimation.currentValue * scale;\n                        }\n                    }\n                    // Add up the additive animations\n                    for (let animIndex = 0; animIndex < holder.additiveAnimations.length; animIndex++) {\n                        const runtimeAnimation = holder.additiveAnimations[animIndex];\n                        const scale = runtimeAnimation.weight;\n                        if (!scale) {\n                            continue;\n                        }\n                        else if (runtimeAnimation.currentValue.scaleAndAddToRef) {\n                            runtimeAnimation.currentValue.scaleAndAddToRef(scale, finalValue);\n                        }\n                        else {\n                            finalValue += runtimeAnimation.currentValue * scale;\n                        }\n                    }\n                }\n            }\n            target[path] = finalValue;\n        }\n        target._lateAnimationHolders = {};\n    }\n    this._registeredForLateAnimationBindings.reset();\n};\nBone.prototype.copyAnimationRange = function (source, rangeName, frameOffset, rescaleAsRequired = false, skelDimensionsRatio = null) {\n    // all animation may be coming from a library skeleton, so may need to create animation\n    if (this.animations.length === 0) {\n        this.animations.push(new Animation(this.name, \"_matrix\", source.animations[0].framePerSecond, Animation.ANIMATIONTYPE_MATRIX, 0));\n        this.animations[0].setKeys([]);\n    }\n    // get animation info / verify there is such a range from the source bone\n    const sourceRange = source.animations[0].getRange(rangeName);\n    if (!sourceRange) {\n        return false;\n    }\n    const from = sourceRange.from;\n    const to = sourceRange.to;\n    const sourceKeys = source.animations[0].getKeys();\n    // rescaling prep\n    const sourceBoneLength = source.length;\n    const sourceParent = source.getParent();\n    const parent = this.getParent();\n    const parentScalingReqd = rescaleAsRequired && sourceParent && sourceBoneLength && this.length && sourceBoneLength !== this.length;\n    const parentRatio = parentScalingReqd && parent && sourceParent ? parent.length / sourceParent.length : 1;\n    const dimensionsScalingReqd = rescaleAsRequired && !parent && skelDimensionsRatio && (skelDimensionsRatio.x !== 1 || skelDimensionsRatio.y !== 1 || skelDimensionsRatio.z !== 1);\n    const destKeys = this.animations[0].getKeys();\n    // loop vars declaration\n    let orig;\n    let origTranslation;\n    let mat;\n    for (let key = 0, nKeys = sourceKeys.length; key < nKeys; key++) {\n        orig = sourceKeys[key];\n        if (orig.frame >= from && orig.frame <= to) {\n            if (rescaleAsRequired) {\n                mat = orig.value.clone();\n                // scale based on parent ratio, when bone has parent\n                if (parentScalingReqd) {\n                    origTranslation = mat.getTranslation();\n                    mat.setTranslation(origTranslation.scaleInPlace(parentRatio));\n                    // scale based on skeleton dimension ratio when root bone, and value is passed\n                }\n                else if (dimensionsScalingReqd && skelDimensionsRatio) {\n                    origTranslation = mat.getTranslation();\n                    mat.setTranslation(origTranslation.multiplyInPlace(skelDimensionsRatio));\n                    // use original when root bone, and no data for skelDimensionsRatio\n                }\n                else {\n                    mat = orig.value;\n                }\n            }\n            else {\n                mat = orig.value;\n            }\n            destKeys.push({ frame: orig.frame + frameOffset, value: mat });\n        }\n    }\n    this.animations[0].createRange(rangeName, from + frameOffset, to + frameOffset);\n    return true;\n};\n//# sourceMappingURL=animatable.js.map","import { Vector3, Quaternion, Vector2, Matrix, TmpVectors } from \"../Maths/math.vector.js\";\nimport { Color3, Color4 } from \"../Maths/math.color.js\";\nimport { Scalar } from \"../Maths/math.scalar.js\";\nimport { SerializationHelper } from \"../Misc/decorators.js\";\nimport { RegisterClass } from \"../Misc/typeStore.js\";\nimport { AnimationKeyInterpolation } from \"./animationKey.js\";\nimport { AnimationRange } from \"./animationRange.js\";\nimport { Node } from \"../node.js\";\nimport { Size } from \"../Maths/math.size.js\";\nimport { WebRequest } from \"../Misc/webRequest.js\";\n\n/**\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport class _IAnimationState {\n}\n/**\n * Class used to store any kind of animation\n */\nexport class Animation {\n    /**\n     * @internal Internal use\n     */\n    static _PrepareAnimation(name, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction) {\n        let dataType = undefined;\n        if (!isNaN(parseFloat(from)) && isFinite(from)) {\n            dataType = Animation.ANIMATIONTYPE_FLOAT;\n        }\n        else if (from instanceof Quaternion) {\n            dataType = Animation.ANIMATIONTYPE_QUATERNION;\n        }\n        else if (from instanceof Vector3) {\n            dataType = Animation.ANIMATIONTYPE_VECTOR3;\n        }\n        else if (from instanceof Vector2) {\n            dataType = Animation.ANIMATIONTYPE_VECTOR2;\n        }\n        else if (from instanceof Color3) {\n            dataType = Animation.ANIMATIONTYPE_COLOR3;\n        }\n        else if (from instanceof Color4) {\n            dataType = Animation.ANIMATIONTYPE_COLOR4;\n        }\n        else if (from instanceof Size) {\n            dataType = Animation.ANIMATIONTYPE_SIZE;\n        }\n        if (dataType == undefined) {\n            return null;\n        }\n        const animation = new Animation(name, targetProperty, framePerSecond, dataType, loopMode);\n        const keys = [\n            { frame: 0, value: from },\n            { frame: totalFrame, value: to },\n        ];\n        animation.setKeys(keys);\n        if (easingFunction !== undefined) {\n            animation.setEasingFunction(easingFunction);\n        }\n        return animation;\n    }\n    /**\n     * Sets up an animation\n     * @param property The property to animate\n     * @param animationType The animation type to apply\n     * @param framePerSecond The frames per second of the animation\n     * @param easingFunction The easing function used in the animation\n     * @returns The created animation\n     */\n    static CreateAnimation(property, animationType, framePerSecond, easingFunction) {\n        const animation = new Animation(property + \"Animation\", property, framePerSecond, animationType, Animation.ANIMATIONLOOPMODE_CONSTANT);\n        animation.setEasingFunction(easingFunction);\n        return animation;\n    }\n    /**\n     * Create and start an animation on a node\n     * @param name defines the name of the global animation that will be run on all nodes\n     * @param target defines the target where the animation will take place\n     * @param targetProperty defines property to animate\n     * @param framePerSecond defines the number of frame per second yo use\n     * @param totalFrame defines the number of frames in total\n     * @param from defines the initial value\n     * @param to defines the final value\n     * @param loopMode defines which loop mode you want to use (off by default)\n     * @param easingFunction defines the easing function to use (linear by default)\n     * @param onAnimationEnd defines the callback to call when animation end\n     * @param scene defines the hosting scene\n     * @returns the animatable created for this animation\n     */\n    static CreateAndStartAnimation(name, target, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction, onAnimationEnd, scene) {\n        const animation = Animation._PrepareAnimation(name, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction);\n        if (!animation) {\n            return null;\n        }\n        if (target.getScene) {\n            scene = target.getScene();\n        }\n        if (!scene) {\n            return null;\n        }\n        return scene.beginDirectAnimation(target, [animation], 0, totalFrame, animation.loopMode === 1, 1.0, onAnimationEnd);\n    }\n    /**\n     * Create and start an animation on a node and its descendants\n     * @param name defines the name of the global animation that will be run on all nodes\n     * @param node defines the root node where the animation will take place\n     * @param directDescendantsOnly if true only direct descendants will be used, if false direct and also indirect (children of children, an so on in a recursive manner) descendants will be used\n     * @param targetProperty defines property to animate\n     * @param framePerSecond defines the number of frame per second to use\n     * @param totalFrame defines the number of frames in total\n     * @param from defines the initial value\n     * @param to defines the final value\n     * @param loopMode defines which loop mode you want to use (off by default)\n     * @param easingFunction defines the easing function to use (linear by default)\n     * @param onAnimationEnd defines the callback to call when an animation ends (will be called once per node)\n     * @returns the list of animatables created for all nodes\n     * @example https://www.babylonjs-playground.com/#MH0VLI\n     */\n    static CreateAndStartHierarchyAnimation(name, node, directDescendantsOnly, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction, onAnimationEnd) {\n        const animation = Animation._PrepareAnimation(name, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction);\n        if (!animation) {\n            return null;\n        }\n        const scene = node.getScene();\n        return scene.beginDirectHierarchyAnimation(node, directDescendantsOnly, [animation], 0, totalFrame, animation.loopMode === 1, 1.0, onAnimationEnd);\n    }\n    /**\n     * Creates a new animation, merges it with the existing animations and starts it\n     * @param name Name of the animation\n     * @param node Node which contains the scene that begins the animations\n     * @param targetProperty Specifies which property to animate\n     * @param framePerSecond The frames per second of the animation\n     * @param totalFrame The total number of frames\n     * @param from The frame at the beginning of the animation\n     * @param to The frame at the end of the animation\n     * @param loopMode Specifies the loop mode of the animation\n     * @param easingFunction (Optional) The easing function of the animation, which allow custom mathematical formulas for animations\n     * @param onAnimationEnd Callback to run once the animation is complete\n     * @returns Nullable animation\n     */\n    static CreateMergeAndStartAnimation(name, node, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction, onAnimationEnd) {\n        const animation = Animation._PrepareAnimation(name, targetProperty, framePerSecond, totalFrame, from, to, loopMode, easingFunction);\n        if (!animation) {\n            return null;\n        }\n        node.animations.push(animation);\n        return node.getScene().beginAnimation(node, 0, totalFrame, animation.loopMode === 1, 1.0, onAnimationEnd);\n    }\n    /**\n     * Convert the keyframes for all animations belonging to the group to be relative to a given reference frame.\n     * @param sourceAnimation defines the Animation containing keyframes to convert\n     * @param referenceFrame defines the frame that keyframes in the range will be relative to\n     * @param range defines the name of the AnimationRange belonging to the Animation to convert\n     * @param cloneOriginal defines whether or not to clone the animation and convert the clone or convert the original animation (default is false)\n     * @param clonedName defines the name of the resulting cloned Animation if cloneOriginal is true\n     * @returns a new Animation if cloneOriginal is true or the original Animation if cloneOriginal is false\n     */\n    static MakeAnimationAdditive(sourceAnimation, referenceFrame = 0, range, cloneOriginal = false, clonedName) {\n        let animation = sourceAnimation;\n        if (cloneOriginal) {\n            animation = sourceAnimation.clone();\n            animation.name = clonedName || animation.name;\n        }\n        if (!animation._keys.length) {\n            return animation;\n        }\n        referenceFrame = referenceFrame >= 0 ? referenceFrame : 0;\n        let startIndex = 0;\n        const firstKey = animation._keys[0];\n        let endIndex = animation._keys.length - 1;\n        const lastKey = animation._keys[endIndex];\n        const valueStore = {\n            referenceValue: firstKey.value,\n            referencePosition: TmpVectors.Vector3[0],\n            referenceQuaternion: TmpVectors.Quaternion[0],\n            referenceScaling: TmpVectors.Vector3[1],\n            keyPosition: TmpVectors.Vector3[2],\n            keyQuaternion: TmpVectors.Quaternion[1],\n            keyScaling: TmpVectors.Vector3[3],\n        };\n        let referenceFound = false;\n        let from = firstKey.frame;\n        let to = lastKey.frame;\n        if (range) {\n            const rangeValue = animation.getRange(range);\n            if (rangeValue) {\n                from = rangeValue.from;\n                to = rangeValue.to;\n            }\n        }\n        let fromKeyFound = firstKey.frame === from;\n        let toKeyFound = lastKey.frame === to;\n        // There's only one key, so use it\n        if (animation._keys.length === 1) {\n            const value = animation._getKeyValue(animation._keys[0]);\n            valueStore.referenceValue = value.clone ? value.clone() : value;\n            referenceFound = true;\n        }\n        // Reference frame is before the first frame, so just use the first frame\n        else if (referenceFrame <= firstKey.frame) {\n            const value = animation._getKeyValue(firstKey.value);\n            valueStore.referenceValue = value.clone ? value.clone() : value;\n            referenceFound = true;\n        }\n        // Reference frame is after the last frame, so just use the last frame\n        else if (referenceFrame >= lastKey.frame) {\n            const value = animation._getKeyValue(lastKey.value);\n            valueStore.referenceValue = value.clone ? value.clone() : value;\n            referenceFound = true;\n        }\n        // Find key bookends, create them if they don't exist\n        let index = 0;\n        while (!referenceFound || !fromKeyFound || (!toKeyFound && index < animation._keys.length - 1)) {\n            const currentKey = animation._keys[index];\n            const nextKey = animation._keys[index + 1];\n            // If reference frame wasn't found yet, check if we can interpolate to it\n            if (!referenceFound && referenceFrame >= currentKey.frame && referenceFrame <= nextKey.frame) {\n                let value;\n                if (referenceFrame === currentKey.frame) {\n                    value = animation._getKeyValue(currentKey.value);\n                }\n                else if (referenceFrame === nextKey.frame) {\n                    value = animation._getKeyValue(nextKey.value);\n                }\n                else {\n                    const animationState = {\n                        key: index,\n                        repeatCount: 0,\n                        loopMode: this.ANIMATIONLOOPMODE_CONSTANT,\n                    };\n                    value = animation._interpolate(referenceFrame, animationState);\n                }\n                valueStore.referenceValue = value.clone ? value.clone() : value;\n                referenceFound = true;\n            }\n            // If from key wasn't found yet, check if we can interpolate to it\n            if (!fromKeyFound && from >= currentKey.frame && from <= nextKey.frame) {\n                if (from === currentKey.frame) {\n                    startIndex = index;\n                }\n                else if (from === nextKey.frame) {\n                    startIndex = index + 1;\n                }\n                else {\n                    const animationState = {\n                        key: index,\n                        repeatCount: 0,\n                        loopMode: this.ANIMATIONLOOPMODE_CONSTANT,\n                    };\n                    const value = animation._interpolate(from, animationState);\n                    const key = {\n                        frame: from,\n                        value: value.clone ? value.clone() : value,\n                    };\n                    animation._keys.splice(index + 1, 0, key);\n                    startIndex = index + 1;\n                }\n                fromKeyFound = true;\n            }\n            // If to key wasn't found yet, check if we can interpolate to it\n            if (!toKeyFound && to >= currentKey.frame && to <= nextKey.frame) {\n                if (to === currentKey.frame) {\n                    endIndex = index;\n                }\n                else if (to === nextKey.frame) {\n                    endIndex = index + 1;\n                }\n                else {\n                    const animationState = {\n                        key: index,\n                        repeatCount: 0,\n                        loopMode: this.ANIMATIONLOOPMODE_CONSTANT,\n                    };\n                    const value = animation._interpolate(to, animationState);\n                    const key = {\n                        frame: to,\n                        value: value.clone ? value.clone() : value,\n                    };\n                    animation._keys.splice(index + 1, 0, key);\n                    endIndex = index + 1;\n                }\n                toKeyFound = true;\n            }\n            index++;\n        }\n        // Conjugate the quaternion\n        if (animation.dataType === Animation.ANIMATIONTYPE_QUATERNION) {\n            valueStore.referenceValue.normalize().conjugateInPlace();\n        }\n        // Decompose matrix and conjugate the quaternion\n        else if (animation.dataType === Animation.ANIMATIONTYPE_MATRIX) {\n            valueStore.referenceValue.decompose(valueStore.referenceScaling, valueStore.referenceQuaternion, valueStore.referencePosition);\n            valueStore.referenceQuaternion.normalize().conjugateInPlace();\n        }\n        // Subtract the reference value from all of the key values\n        for (index = startIndex; index <= endIndex; index++) {\n            const key = animation._keys[index];\n            // If this key was duplicated to create a frame 0 key, skip it because its value has already been updated\n            if (index && animation.dataType !== Animation.ANIMATIONTYPE_FLOAT && key.value === firstKey.value) {\n                continue;\n            }\n            switch (animation.dataType) {\n                case Animation.ANIMATIONTYPE_MATRIX:\n                    key.value.decompose(valueStore.keyScaling, valueStore.keyQuaternion, valueStore.keyPosition);\n                    valueStore.keyPosition.subtractInPlace(valueStore.referencePosition);\n                    valueStore.keyScaling.divideInPlace(valueStore.referenceScaling);\n                    valueStore.referenceQuaternion.multiplyToRef(valueStore.keyQuaternion, valueStore.keyQuaternion);\n                    Matrix.ComposeToRef(valueStore.keyScaling, valueStore.keyQuaternion, valueStore.keyPosition, key.value);\n                    break;\n                case Animation.ANIMATIONTYPE_QUATERNION:\n                    valueStore.referenceValue.multiplyToRef(key.value, key.value);\n                    break;\n                case Animation.ANIMATIONTYPE_VECTOR2:\n                case Animation.ANIMATIONTYPE_VECTOR3:\n                case Animation.ANIMATIONTYPE_COLOR3:\n                case Animation.ANIMATIONTYPE_COLOR4:\n                    key.value.subtractToRef(valueStore.referenceValue, key.value);\n                    break;\n                case Animation.ANIMATIONTYPE_SIZE:\n                    key.value.width -= valueStore.referenceValue.width;\n                    key.value.height -= valueStore.referenceValue.height;\n                    break;\n                default:\n                    key.value -= valueStore.referenceValue;\n            }\n        }\n        return animation;\n    }\n    /**\n     * Transition property of an host to the target Value\n     * @param property The property to transition\n     * @param targetValue The target Value of the property\n     * @param host The object where the property to animate belongs\n     * @param scene Scene used to run the animation\n     * @param frameRate Framerate (in frame/s) to use\n     * @param transition The transition type we want to use\n     * @param duration The duration of the animation, in milliseconds\n     * @param onAnimationEnd Callback trigger at the end of the animation\n     * @returns Nullable animation\n     */\n    static TransitionTo(property, targetValue, host, scene, frameRate, transition, duration, onAnimationEnd = null) {\n        if (duration <= 0) {\n            host[property] = targetValue;\n            if (onAnimationEnd) {\n                onAnimationEnd();\n            }\n            return null;\n        }\n        const endFrame = frameRate * (duration / 1000);\n        transition.setKeys([\n            {\n                frame: 0,\n                value: host[property].clone ? host[property].clone() : host[property],\n            },\n            {\n                frame: endFrame,\n                value: targetValue,\n            },\n        ]);\n        if (!host.animations) {\n            host.animations = [];\n        }\n        host.animations.push(transition);\n        const animation = scene.beginAnimation(host, 0, endFrame, false);\n        animation.onAnimationEnd = onAnimationEnd;\n        return animation;\n    }\n    /**\n     * Return the array of runtime animations currently using this animation\n     */\n    get runtimeAnimations() {\n        return this._runtimeAnimations;\n    }\n    /**\n     * Specifies if any of the runtime animations are currently running\n     */\n    get hasRunningRuntimeAnimations() {\n        for (const runtimeAnimation of this._runtimeAnimations) {\n            if (!runtimeAnimation.isStopped()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    /**\n     * Initializes the animation\n     * @param name Name of the animation\n     * @param targetProperty Property to animate\n     * @param framePerSecond The frames per second of the animation\n     * @param dataType The data type of the animation\n     * @param loopMode The loop mode of the animation\n     * @param enableBlending Specifies if blending should be enabled\n     */\n    constructor(\n    /**Name of the animation */\n    name, \n    /**Property to animate */\n    targetProperty, \n    /**The frames per second of the animation */\n    framePerSecond, \n    /**The data type of the animation */\n    dataType, \n    /**The loop mode of the animation */\n    loopMode, \n    /**Specifies if blending should be enabled */\n    enableBlending) {\n        this.name = name;\n        this.targetProperty = targetProperty;\n        this.framePerSecond = framePerSecond;\n        this.dataType = dataType;\n        this.loopMode = loopMode;\n        this.enableBlending = enableBlending;\n        /**\n         * Stores the easing function of the animation\n         */\n        this._easingFunction = null;\n        /**\n         * @internal Internal use only\n         */\n        this._runtimeAnimations = new Array();\n        /**\n         * The set of event that will be linked to this animation\n         */\n        this._events = new Array();\n        /**\n         * Stores the blending speed of the animation\n         */\n        this.blendingSpeed = 0.01;\n        /**\n         * Stores the animation ranges for the animation\n         */\n        this._ranges = {};\n        this.targetPropertyPath = targetProperty.split(\".\");\n        this.dataType = dataType;\n        this.loopMode = loopMode === undefined ? Animation.ANIMATIONLOOPMODE_CYCLE : loopMode;\n        this.uniqueId = Animation._UniqueIdGenerator++;\n    }\n    // Methods\n    /**\n     * Converts the animation to a string\n     * @param fullDetails support for multiple levels of logging within scene loading\n     * @returns String form of the animation\n     */\n    toString(fullDetails) {\n        let ret = \"Name: \" + this.name + \", property: \" + this.targetProperty;\n        ret += \", datatype: \" + [\"Float\", \"Vector3\", \"Quaternion\", \"Matrix\", \"Color3\", \"Vector2\"][this.dataType];\n        ret += \", nKeys: \" + (this._keys ? this._keys.length : \"none\");\n        ret += \", nRanges: \" + (this._ranges ? Object.keys(this._ranges).length : \"none\");\n        if (fullDetails) {\n            ret += \", Ranges: {\";\n            let first = true;\n            for (const name in this._ranges) {\n                if (first) {\n                    ret += \", \";\n                    first = false;\n                }\n                ret += name;\n            }\n            ret += \"}\";\n        }\n        return ret;\n    }\n    /**\n     * Add an event to this animation\n     * @param event Event to add\n     */\n    addEvent(event) {\n        this._events.push(event);\n        this._events.sort((a, b) => a.frame - b.frame);\n    }\n    /**\n     * Remove all events found at the given frame\n     * @param frame The frame to remove events from\n     */\n    removeEvents(frame) {\n        for (let index = 0; index < this._events.length; index++) {\n            if (this._events[index].frame === frame) {\n                this._events.splice(index, 1);\n                index--;\n            }\n        }\n    }\n    /**\n     * Retrieves all the events from the animation\n     * @returns Events from the animation\n     */\n    getEvents() {\n        return this._events;\n    }\n    /**\n     * Creates an animation range\n     * @param name Name of the animation range\n     * @param from Starting frame of the animation range\n     * @param to Ending frame of the animation\n     */\n    createRange(name, from, to) {\n        // check name not already in use; could happen for bones after serialized\n        if (!this._ranges[name]) {\n            this._ranges[name] = new AnimationRange(name, from, to);\n        }\n    }\n    /**\n     * Deletes an animation range by name\n     * @param name Name of the animation range to delete\n     * @param deleteFrames Specifies if the key frames for the range should also be deleted (true) or not (false)\n     */\n    deleteRange(name, deleteFrames = true) {\n        const range = this._ranges[name];\n        if (!range) {\n            return;\n        }\n        if (deleteFrames) {\n            const from = range.from;\n            const to = range.to;\n            // this loop MUST go high to low for multiple splices to work\n            for (let key = this._keys.length - 1; key >= 0; key--) {\n                if (this._keys[key].frame >= from && this._keys[key].frame <= to) {\n                    this._keys.splice(key, 1);\n                }\n            }\n        }\n        this._ranges[name] = null; // said much faster than 'delete this._range[name]'\n    }\n    /**\n     * Gets the animation range by name, or null if not defined\n     * @param name Name of the animation range\n     * @returns Nullable animation range\n     */\n    getRange(name) {\n        return this._ranges[name];\n    }\n    /**\n     * Gets the key frames from the animation\n     * @returns The key frames of the animation\n     */\n    getKeys() {\n        return this._keys;\n    }\n    /**\n     * Gets the highest frame rate of the animation\n     * @returns Highest frame rate of the animation\n     */\n    getHighestFrame() {\n        let ret = 0;\n        for (let key = 0, nKeys = this._keys.length; key < nKeys; key++) {\n            if (ret < this._keys[key].frame) {\n                ret = this._keys[key].frame;\n            }\n        }\n        return ret;\n    }\n    /**\n     * Gets the easing function of the animation\n     * @returns Easing function of the animation\n     */\n    getEasingFunction() {\n        return this._easingFunction;\n    }\n    /**\n     * Sets the easing function of the animation\n     * @param easingFunction A custom mathematical formula for animation\n     */\n    setEasingFunction(easingFunction) {\n        this._easingFunction = easingFunction;\n    }\n    /**\n     * Interpolates a scalar linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated scalar value\n     */\n    floatInterpolateFunction(startValue, endValue, gradient) {\n        return Scalar.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a scalar cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated scalar value\n     */\n    floatInterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Scalar.Hermite(startValue, outTangent, endValue, inTangent, gradient);\n    }\n    /**\n     * Interpolates a quaternion using a spherical linear interpolation\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated quaternion value\n     */\n    quaternionInterpolateFunction(startValue, endValue, gradient) {\n        return Quaternion.Slerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a quaternion cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation curve\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated quaternion value\n     */\n    quaternionInterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Quaternion.Hermite(startValue, outTangent, endValue, inTangent, gradient).normalize();\n    }\n    /**\n     * Interpolates a Vector3 linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate (value between 0 and 1)\n     * @returns Interpolated scalar value\n     */\n    vector3InterpolateFunction(startValue, endValue, gradient) {\n        return Vector3.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a Vector3 cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate (value between 0 and 1)\n     * @returns InterpolatedVector3 value\n     */\n    vector3InterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Vector3.Hermite(startValue, outTangent, endValue, inTangent, gradient);\n    }\n    /**\n     * Interpolates a Vector2 linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate (value between 0 and 1)\n     * @returns Interpolated Vector2 value\n     */\n    vector2InterpolateFunction(startValue, endValue, gradient) {\n        return Vector2.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a Vector2 cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate (value between 0 and 1)\n     * @returns Interpolated Vector2 value\n     */\n    vector2InterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Vector2.Hermite(startValue, outTangent, endValue, inTangent, gradient);\n    }\n    /**\n     * Interpolates a size linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated Size value\n     */\n    sizeInterpolateFunction(startValue, endValue, gradient) {\n        return Size.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a Color3 linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated Color3 value\n     */\n    color3InterpolateFunction(startValue, endValue, gradient) {\n        return Color3.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a Color3 cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns interpolated value\n     */\n    color3InterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Color3.Hermite(startValue, outTangent, endValue, inTangent, gradient);\n    }\n    /**\n     * Interpolates a Color4 linearly\n     * @param startValue Start value of the animation curve\n     * @param endValue End value of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns Interpolated Color3 value\n     */\n    color4InterpolateFunction(startValue, endValue, gradient) {\n        return Color4.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Interpolates a Color4 cubically\n     * @param startValue Start value of the animation curve\n     * @param outTangent End tangent of the animation\n     * @param endValue End value of the animation curve\n     * @param inTangent Start tangent of the animation curve\n     * @param gradient Scalar amount to interpolate\n     * @returns interpolated value\n     */\n    color4InterpolateFunctionWithTangents(startValue, outTangent, endValue, inTangent, gradient) {\n        return Color4.Hermite(startValue, outTangent, endValue, inTangent, gradient);\n    }\n    /**\n     * @internal Internal use only\n     */\n    _getKeyValue(value) {\n        if (typeof value === \"function\") {\n            return value();\n        }\n        return value;\n    }\n    /**\n     * Evaluate the animation value at a given frame\n     * @param currentFrame defines the frame where we want to evaluate the animation\n     * @returns the animation value\n     */\n    evaluate(currentFrame) {\n        return this._interpolate(currentFrame, {\n            key: 0,\n            repeatCount: 0,\n            loopMode: Animation.ANIMATIONLOOPMODE_CONSTANT,\n        });\n    }\n    /**\n     * @internal Internal use only\n     */\n    _interpolate(currentFrame, state) {\n        if (state.loopMode === Animation.ANIMATIONLOOPMODE_CONSTANT && state.repeatCount > 0) {\n            return state.highLimitValue.clone ? state.highLimitValue.clone() : state.highLimitValue;\n        }\n        const keys = this._keys;\n        const keysLength = keys.length;\n        let key = state.key;\n        while (key >= 0 && currentFrame < keys[key].frame) {\n            --key;\n        }\n        while (key + 1 <= keysLength - 1 && currentFrame >= keys[key + 1].frame) {\n            ++key;\n        }\n        state.key = key;\n        if (key < 0) {\n            return this._getKeyValue(keys[0].value);\n        }\n        else if (key + 1 > keysLength - 1) {\n            return this._getKeyValue(keys[keysLength - 1].value);\n        }\n        const startKey = keys[key];\n        const endKey = keys[key + 1];\n        const startValue = this._getKeyValue(startKey.value);\n        const endValue = this._getKeyValue(endKey.value);\n        if (startKey.interpolation === AnimationKeyInterpolation.STEP) {\n            if (endKey.frame > currentFrame) {\n                return startValue;\n            }\n            else {\n                return endValue;\n            }\n        }\n        const useTangent = startKey.outTangent !== undefined && endKey.inTangent !== undefined;\n        const frameDelta = endKey.frame - startKey.frame;\n        // gradient : percent of currentFrame between the frame inf and the frame sup\n        let gradient = (currentFrame - startKey.frame) / frameDelta;\n        // check for easingFunction and correction of gradient\n        const easingFunction = this.getEasingFunction();\n        if (easingFunction !== null) {\n            gradient = easingFunction.ease(gradient);\n        }\n        switch (this.dataType) {\n            // Float\n            case Animation.ANIMATIONTYPE_FLOAT: {\n                const floatValue = useTangent\n                    ? this.floatInterpolateFunctionWithTangents(startValue, startKey.outTangent * frameDelta, endValue, endKey.inTangent * frameDelta, gradient)\n                    : this.floatInterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return floatValue;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return state.offsetValue * state.repeatCount + floatValue;\n                }\n                break;\n            }\n            // Quaternion\n            case Animation.ANIMATIONTYPE_QUATERNION: {\n                const quatValue = useTangent\n                    ? this.quaternionInterpolateFunctionWithTangents(startValue, startKey.outTangent.scale(frameDelta), endValue, endKey.inTangent.scale(frameDelta), gradient)\n                    : this.quaternionInterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return quatValue;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return quatValue.addInPlace(state.offsetValue.scale(state.repeatCount));\n                }\n                return quatValue;\n            }\n            // Vector3\n            case Animation.ANIMATIONTYPE_VECTOR3: {\n                const vec3Value = useTangent\n                    ? this.vector3InterpolateFunctionWithTangents(startValue, startKey.outTangent.scale(frameDelta), endValue, endKey.inTangent.scale(frameDelta), gradient)\n                    : this.vector3InterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return vec3Value;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return vec3Value.add(state.offsetValue.scale(state.repeatCount));\n                }\n                break;\n            }\n            // Vector2\n            case Animation.ANIMATIONTYPE_VECTOR2: {\n                const vec2Value = useTangent\n                    ? this.vector2InterpolateFunctionWithTangents(startValue, startKey.outTangent.scale(frameDelta), endValue, endKey.inTangent.scale(frameDelta), gradient)\n                    : this.vector2InterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return vec2Value;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return vec2Value.add(state.offsetValue.scale(state.repeatCount));\n                }\n                break;\n            }\n            // Size\n            case Animation.ANIMATIONTYPE_SIZE: {\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return this.sizeInterpolateFunction(startValue, endValue, gradient);\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return this.sizeInterpolateFunction(startValue, endValue, gradient).add(state.offsetValue.scale(state.repeatCount));\n                }\n                break;\n            }\n            // Color3\n            case Animation.ANIMATIONTYPE_COLOR3: {\n                const color3Value = useTangent\n                    ? this.color3InterpolateFunctionWithTangents(startValue, startKey.outTangent.scale(frameDelta), endValue, endKey.inTangent.scale(frameDelta), gradient)\n                    : this.color3InterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return color3Value;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return color3Value.add(state.offsetValue.scale(state.repeatCount));\n                }\n                break;\n            }\n            // Color4\n            case Animation.ANIMATIONTYPE_COLOR4: {\n                const color4Value = useTangent\n                    ? this.color4InterpolateFunctionWithTangents(startValue, startKey.outTangent.scale(frameDelta), endValue, endKey.inTangent.scale(frameDelta), gradient)\n                    : this.color4InterpolateFunction(startValue, endValue, gradient);\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT:\n                        return color4Value;\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE:\n                        return color4Value.add(state.offsetValue.scale(state.repeatCount));\n                }\n                break;\n            }\n            // Matrix\n            case Animation.ANIMATIONTYPE_MATRIX: {\n                switch (state.loopMode) {\n                    case Animation.ANIMATIONLOOPMODE_CYCLE:\n                    case Animation.ANIMATIONLOOPMODE_CONSTANT: {\n                        if (Animation.AllowMatricesInterpolation) {\n                            return this.matrixInterpolateFunction(startValue, endValue, gradient, state.workValue);\n                        }\n                        return startValue;\n                    }\n                    case Animation.ANIMATIONLOOPMODE_RELATIVE: {\n                        return startValue;\n                    }\n                }\n                break;\n            }\n        }\n        return 0;\n    }\n    /**\n     * Defines the function to use to interpolate matrices\n     * @param startValue defines the start matrix\n     * @param endValue defines the end matrix\n     * @param gradient defines the gradient between both matrices\n     * @param result defines an optional target matrix where to store the interpolation\n     * @returns the interpolated matrix\n     */\n    matrixInterpolateFunction(startValue, endValue, gradient, result) {\n        if (Animation.AllowMatrixDecomposeForInterpolation) {\n            if (result) {\n                Matrix.DecomposeLerpToRef(startValue, endValue, gradient, result);\n                return result;\n            }\n            return Matrix.DecomposeLerp(startValue, endValue, gradient);\n        }\n        if (result) {\n            Matrix.LerpToRef(startValue, endValue, gradient, result);\n            return result;\n        }\n        return Matrix.Lerp(startValue, endValue, gradient);\n    }\n    /**\n     * Makes a copy of the animation\n     * @returns Cloned animation\n     */\n    clone() {\n        const clone = new Animation(this.name, this.targetPropertyPath.join(\".\"), this.framePerSecond, this.dataType, this.loopMode);\n        clone.enableBlending = this.enableBlending;\n        clone.blendingSpeed = this.blendingSpeed;\n        if (this._keys) {\n            clone.setKeys(this._keys);\n        }\n        if (this._ranges) {\n            clone._ranges = {};\n            for (const name in this._ranges) {\n                const range = this._ranges[name];\n                if (!range) {\n                    continue;\n                }\n                clone._ranges[name] = range.clone();\n            }\n        }\n        return clone;\n    }\n    /**\n     * Sets the key frames of the animation\n     * @param values The animation key frames to set\n     */\n    setKeys(values) {\n        this._keys = values.slice(0);\n    }\n    /**\n     * Serializes the animation to an object\n     * @returns Serialized object\n     */\n    serialize() {\n        const serializationObject = {};\n        serializationObject.name = this.name;\n        serializationObject.property = this.targetProperty;\n        serializationObject.framePerSecond = this.framePerSecond;\n        serializationObject.dataType = this.dataType;\n        serializationObject.loopBehavior = this.loopMode;\n        serializationObject.enableBlending = this.enableBlending;\n        serializationObject.blendingSpeed = this.blendingSpeed;\n        const dataType = this.dataType;\n        serializationObject.keys = [];\n        const keys = this.getKeys();\n        for (let index = 0; index < keys.length; index++) {\n            const animationKey = keys[index];\n            const key = {};\n            key.frame = animationKey.frame;\n            switch (dataType) {\n                case Animation.ANIMATIONTYPE_FLOAT:\n                    key.values = [animationKey.value];\n                    if (animationKey.inTangent !== undefined) {\n                        key.values.push(animationKey.inTangent);\n                    }\n                    if (animationKey.outTangent !== undefined) {\n                        if (animationKey.inTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        key.values.push(animationKey.outTangent);\n                    }\n                    if (animationKey.interpolation !== undefined) {\n                        if (animationKey.inTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        if (animationKey.outTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        key.values.push(animationKey.interpolation);\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_QUATERNION:\n                case Animation.ANIMATIONTYPE_MATRIX:\n                case Animation.ANIMATIONTYPE_VECTOR3:\n                case Animation.ANIMATIONTYPE_COLOR3:\n                case Animation.ANIMATIONTYPE_COLOR4:\n                    key.values = animationKey.value.asArray();\n                    if (animationKey.inTangent != undefined) {\n                        key.values.push(animationKey.inTangent.asArray());\n                    }\n                    if (animationKey.outTangent != undefined) {\n                        if (animationKey.inTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        key.values.push(animationKey.outTangent.asArray());\n                    }\n                    if (animationKey.interpolation !== undefined) {\n                        if (animationKey.inTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        if (animationKey.outTangent === undefined) {\n                            key.values.push(undefined);\n                        }\n                        key.values.push(animationKey.interpolation);\n                    }\n                    break;\n            }\n            serializationObject.keys.push(key);\n        }\n        serializationObject.ranges = [];\n        for (const name in this._ranges) {\n            const source = this._ranges[name];\n            if (!source) {\n                continue;\n            }\n            const range = {};\n            range.name = name;\n            range.from = source.from;\n            range.to = source.to;\n            serializationObject.ranges.push(range);\n        }\n        return serializationObject;\n    }\n    /**\n     * @internal\n     */\n    static _UniversalLerp(left, right, amount) {\n        const constructor = left.constructor;\n        if (constructor.Lerp) {\n            // Lerp supported\n            return constructor.Lerp(left, right, amount);\n        }\n        else if (constructor.Slerp) {\n            // Slerp supported\n            return constructor.Slerp(left, right, amount);\n        }\n        else if (left.toFixed) {\n            // Number\n            return left * (1.0 - amount) + amount * right;\n        }\n        else {\n            // Blending not supported\n            return right;\n        }\n    }\n    /**\n     * Parses an animation object and creates an animation\n     * @param parsedAnimation Parsed animation object\n     * @returns Animation object\n     */\n    static Parse(parsedAnimation) {\n        const animation = new Animation(parsedAnimation.name, parsedAnimation.property, parsedAnimation.framePerSecond, parsedAnimation.dataType, parsedAnimation.loopBehavior);\n        const dataType = parsedAnimation.dataType;\n        const keys = [];\n        let data;\n        let index;\n        if (parsedAnimation.enableBlending) {\n            animation.enableBlending = parsedAnimation.enableBlending;\n        }\n        if (parsedAnimation.blendingSpeed) {\n            animation.blendingSpeed = parsedAnimation.blendingSpeed;\n        }\n        for (index = 0; index < parsedAnimation.keys.length; index++) {\n            const key = parsedAnimation.keys[index];\n            let inTangent = undefined;\n            let outTangent = undefined;\n            let interpolation = undefined;\n            switch (dataType) {\n                case Animation.ANIMATIONTYPE_FLOAT:\n                    data = key.values[0];\n                    if (key.values.length >= 2) {\n                        inTangent = key.values[1];\n                    }\n                    if (key.values.length >= 3) {\n                        outTangent = key.values[2];\n                    }\n                    if (key.values.length >= 4) {\n                        interpolation = key.values[3];\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_QUATERNION:\n                    data = Quaternion.FromArray(key.values);\n                    if (key.values.length >= 8) {\n                        const _inTangent = Quaternion.FromArray(key.values.slice(4, 8));\n                        if (!_inTangent.equals(Quaternion.Zero())) {\n                            inTangent = _inTangent;\n                        }\n                    }\n                    if (key.values.length >= 12) {\n                        const _outTangent = Quaternion.FromArray(key.values.slice(8, 12));\n                        if (!_outTangent.equals(Quaternion.Zero())) {\n                            outTangent = _outTangent;\n                        }\n                    }\n                    if (key.values.length >= 13) {\n                        interpolation = key.values[12];\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_MATRIX:\n                    data = Matrix.FromArray(key.values);\n                    if (key.values.length >= 17) {\n                        interpolation = key.values[16];\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_COLOR3:\n                    data = Color3.FromArray(key.values);\n                    if (key.values[3]) {\n                        inTangent = Color3.FromArray(key.values[3]);\n                    }\n                    if (key.values[4]) {\n                        outTangent = Color3.FromArray(key.values[4]);\n                    }\n                    if (key.values[5]) {\n                        interpolation = key.values[5];\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_COLOR4:\n                    data = Color4.FromArray(key.values);\n                    if (key.values[4]) {\n                        inTangent = Color4.FromArray(key.values[4]);\n                    }\n                    if (key.values[5]) {\n                        outTangent = Color4.FromArray(key.values[5]);\n                    }\n                    if (key.values[6]) {\n                        interpolation = Color4.FromArray(key.values[6]);\n                    }\n                    break;\n                case Animation.ANIMATIONTYPE_VECTOR3:\n                default:\n                    data = Vector3.FromArray(key.values);\n                    if (key.values[3]) {\n                        inTangent = Vector3.FromArray(key.values[3]);\n                    }\n                    if (key.values[4]) {\n                        outTangent = Vector3.FromArray(key.values[4]);\n                    }\n                    if (key.values[5]) {\n                        interpolation = key.values[5];\n                    }\n                    break;\n            }\n            const keyData = {};\n            keyData.frame = key.frame;\n            keyData.value = data;\n            if (inTangent != undefined) {\n                keyData.inTangent = inTangent;\n            }\n            if (outTangent != undefined) {\n                keyData.outTangent = outTangent;\n            }\n            if (interpolation != undefined) {\n                keyData.interpolation = interpolation;\n            }\n            keys.push(keyData);\n        }\n        animation.setKeys(keys);\n        if (parsedAnimation.ranges) {\n            for (index = 0; index < parsedAnimation.ranges.length; index++) {\n                data = parsedAnimation.ranges[index];\n                animation.createRange(data.name, data.from, data.to);\n            }\n        }\n        return animation;\n    }\n    /**\n     * Appends the serialized animations from the source animations\n     * @param source Source containing the animations\n     * @param destination Target to store the animations\n     */\n    static AppendSerializedAnimations(source, destination) {\n        SerializationHelper.AppendSerializedAnimations(source, destination);\n    }\n    /**\n     * Creates a new animation or an array of animations from a snippet saved in a remote file\n     * @param name defines the name of the animation to create (can be null or empty to use the one from the json data)\n     * @param url defines the url to load from\n     * @returns a promise that will resolve to the new animation or an array of animations\n     */\n    static ParseFromFileAsync(name, url) {\n        return new Promise((resolve, reject) => {\n            const request = new WebRequest();\n            request.addEventListener(\"readystatechange\", () => {\n                if (request.readyState == 4) {\n                    if (request.status == 200) {\n                        let serializationObject = JSON.parse(request.responseText);\n                        if (serializationObject.animations) {\n                            serializationObject = serializationObject.animations;\n                        }\n                        if (serializationObject.length) {\n                            const output = new Array();\n                            for (const serializedAnimation of serializationObject) {\n                                output.push(this.Parse(serializedAnimation));\n                            }\n                            resolve(output);\n                        }\n                        else {\n                            const output = this.Parse(serializationObject);\n                            if (name) {\n                                output.name = name;\n                            }\n                            resolve(output);\n                        }\n                    }\n                    else {\n                        reject(\"Unable to load the animation\");\n                    }\n                }\n            });\n            request.open(\"GET\", url);\n            request.send();\n        });\n    }\n    /**\n     * Creates an animation or an array of animations from a snippet saved by the Inspector\n     * @param snippetId defines the snippet to load\n     * @returns a promise that will resolve to the new animation or a new array of animations\n     */\n    static ParseFromSnippetAsync(snippetId) {\n        return new Promise((resolve, reject) => {\n            const request = new WebRequest();\n            request.addEventListener(\"readystatechange\", () => {\n                if (request.readyState == 4) {\n                    if (request.status == 200) {\n                        const snippet = JSON.parse(JSON.parse(request.responseText).jsonPayload);\n                        if (snippet.animations) {\n                            const serializationObject = JSON.parse(snippet.animations);\n                            const outputs = new Array();\n                            for (const serializedAnimation of serializationObject.animations) {\n                                const output = this.Parse(serializedAnimation);\n                                output.snippetId = snippetId;\n                                outputs.push(output);\n                            }\n                            resolve(outputs);\n                        }\n                        else {\n                            const serializationObject = JSON.parse(snippet.animation);\n                            const output = this.Parse(serializationObject);\n                            output.snippetId = snippetId;\n                            resolve(output);\n                        }\n                    }\n                    else {\n                        reject(\"Unable to load the snippet \" + snippetId);\n                    }\n                }\n            });\n            request.open(\"GET\", this.SnippetUrl + \"/\" + snippetId.replace(/#/g, \"/\"));\n            request.send();\n        });\n    }\n}\nAnimation._UniqueIdGenerator = 0;\n/**\n * Use matrix interpolation instead of using direct key value when animating matrices\n */\nAnimation.AllowMatricesInterpolation = false;\n/**\n * When matrix interpolation is enabled, this boolean forces the system to use Matrix.DecomposeLerp instead of Matrix.Lerp. Interpolation is more precise but slower\n */\nAnimation.AllowMatrixDecomposeForInterpolation = true;\n/** Define the Url to load snippets */\nAnimation.SnippetUrl = `https://snippet.babylonjs.com`;\n// Statics\n/**\n * Float animation type\n */\nAnimation.ANIMATIONTYPE_FLOAT = 0;\n/**\n * Vector3 animation type\n */\nAnimation.ANIMATIONTYPE_VECTOR3 = 1;\n/**\n * Quaternion animation type\n */\nAnimation.ANIMATIONTYPE_QUATERNION = 2;\n/**\n * Matrix animation type\n */\nAnimation.ANIMATIONTYPE_MATRIX = 3;\n/**\n * Color3 animation type\n */\nAnimation.ANIMATIONTYPE_COLOR3 = 4;\n/**\n * Color3 animation type\n */\nAnimation.ANIMATIONTYPE_COLOR4 = 7;\n/**\n * Vector2 animation type\n */\nAnimation.ANIMATIONTYPE_VECTOR2 = 5;\n/**\n * Size animation type\n */\nAnimation.ANIMATIONTYPE_SIZE = 6;\n/**\n * Relative Loop Mode\n */\nAnimation.ANIMATIONLOOPMODE_RELATIVE = 0;\n/**\n * Cycle Loop Mode\n */\nAnimation.ANIMATIONLOOPMODE_CYCLE = 1;\n/**\n * Constant Loop Mode\n */\nAnimation.ANIMATIONLOOPMODE_CONSTANT = 2;\n/**\n * Creates an animation or an array of animations from a snippet saved by the Inspector\n * @deprecated Please use ParseFromSnippetAsync instead\n * @param snippetId defines the snippet to load\n * @returns a promise that will resolve to the new animation or a new array of animations\n */\nAnimation.CreateFromSnippetAsync = Animation.ParseFromSnippetAsync;\nRegisterClass(\"BABYLON.Animation\", Animation);\nNode._AnimationRangeFactory = (name, from, to) => new AnimationRange(name, from, to);\n//# sourceMappingURL=animation.js.map","/**\n * Composed of a frame, and an action function\n */\nexport class AnimationEvent {\n    /**\n     * Initializes the animation event\n     * @param frame The frame for which the event is triggered\n     * @param action The event to perform when triggered\n     * @param onlyOnce Specifies if the event should be triggered only once\n     */\n    constructor(\n    /** The frame for which the event is triggered **/\n    frame, \n    /** The event to perform when triggered **/\n    action, \n    /** Specifies if the event should be triggered only once**/\n    onlyOnce) {\n        this.frame = frame;\n        this.action = action;\n        this.onlyOnce = onlyOnce;\n        /**\n         * Specifies if the animation event is done\n         */\n        this.isDone = false;\n    }\n    /** @internal */\n    _clone() {\n        return new AnimationEvent(this.frame, this.action, this.onlyOnce);\n    }\n}\n//# sourceMappingURL=animationEvent.js.map","import { Animation } from \"./animation.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\nimport { Tags } from \"../Misc/tags.js\";\n/**\n * This class defines the direct association between an animation and a target\n */\nexport class TargetedAnimation {\n    /**\n     * Returns the string \"TargetedAnimation\"\n     * @returns \"TargetedAnimation\"\n     */\n    getClassName() {\n        return \"TargetedAnimation\";\n    }\n    /**\n     * Serialize the object\n     * @returns the JSON object representing the current entity\n     */\n    serialize() {\n        const serializationObject = {};\n        serializationObject.animation = this.animation.serialize();\n        serializationObject.targetId = this.target.id;\n        return serializationObject;\n    }\n}\n/**\n * Use this class to create coordinated animations on multiple targets\n */\nexport class AnimationGroup {\n    /**\n     * Gets the first frame\n     */\n    get from() {\n        return this._from;\n    }\n    /**\n     * Gets the last frame\n     */\n    get to() {\n        return this._to;\n    }\n    /**\n     * Define if the animations are started\n     */\n    get isStarted() {\n        return this._isStarted;\n    }\n    /**\n     * Gets a value indicating that the current group is playing\n     */\n    get isPlaying() {\n        return this._isStarted && !this._isPaused;\n    }\n    /**\n     * Gets or sets the speed ratio to use for all animations\n     */\n    get speedRatio() {\n        return this._speedRatio;\n    }\n    /**\n     * Gets or sets the speed ratio to use for all animations\n     */\n    set speedRatio(value) {\n        if (this._speedRatio === value) {\n            return;\n        }\n        this._speedRatio = value;\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.speedRatio = this._speedRatio;\n        }\n    }\n    /**\n     * Gets or sets if all animations should loop or not\n     */\n    get loopAnimation() {\n        return this._loopAnimation;\n    }\n    set loopAnimation(value) {\n        if (this._loopAnimation === value) {\n            return;\n        }\n        this._loopAnimation = value;\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.loopAnimation = this._loopAnimation;\n        }\n    }\n    /**\n     * Gets or sets if all animations should be evaluated additively\n     */\n    get isAdditive() {\n        return this._isAdditive;\n    }\n    set isAdditive(value) {\n        if (this._isAdditive === value) {\n            return;\n        }\n        this._isAdditive = value;\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.isAdditive = this._isAdditive;\n        }\n    }\n    /**\n     * Gets the targeted animations for this animation group\n     */\n    get targetedAnimations() {\n        return this._targetedAnimations;\n    }\n    /**\n     * returning the list of animatables controlled by this animation group.\n     */\n    get animatables() {\n        return this._animatables;\n    }\n    /**\n     * Gets the list of target animations\n     */\n    get children() {\n        return this._targetedAnimations;\n    }\n    /**\n     * Instantiates a new Animation Group.\n     * This helps managing several animations at once.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/groupAnimations\n     * @param name Defines the name of the group\n     * @param scene Defines the scene the group belongs to\n     */\n    constructor(\n    /** The name of the animation group */\n    name, scene = null) {\n        this.name = name;\n        this._targetedAnimations = new Array();\n        this._animatables = new Array();\n        this._from = Number.MAX_VALUE;\n        this._to = -Number.MAX_VALUE;\n        this._speedRatio = 1;\n        this._loopAnimation = false;\n        this._isAdditive = false;\n        /** @internal */\n        this._parentContainer = null;\n        /**\n         * This observable will notify when one animation have ended\n         */\n        this.onAnimationEndObservable = new Observable();\n        /**\n         * Observer raised when one animation loops\n         */\n        this.onAnimationLoopObservable = new Observable();\n        /**\n         * Observer raised when all animations have looped\n         */\n        this.onAnimationGroupLoopObservable = new Observable();\n        /**\n         * This observable will notify when all animations have ended.\n         */\n        this.onAnimationGroupEndObservable = new Observable();\n        /**\n         * This observable will notify when all animations have paused.\n         */\n        this.onAnimationGroupPauseObservable = new Observable();\n        /**\n         * This observable will notify when all animations are playing.\n         */\n        this.onAnimationGroupPlayObservable = new Observable();\n        /**\n         * Gets or sets an object used to store user defined information for the node\n         */\n        this.metadata = null;\n        this._animationLoopFlags = [];\n        this._scene = scene || EngineStore.LastCreatedScene;\n        this.uniqueId = this._scene.getUniqueId();\n        this._scene.addAnimationGroup(this);\n    }\n    /**\n     * Add an animation (with its target) in the group\n     * @param animation defines the animation we want to add\n     * @param target defines the target of the animation\n     * @returns the TargetedAnimation object\n     */\n    addTargetedAnimation(animation, target) {\n        const targetedAnimation = new TargetedAnimation();\n        targetedAnimation.animation = animation;\n        targetedAnimation.target = target;\n        const keys = animation.getKeys();\n        if (this._from > keys[0].frame) {\n            this._from = keys[0].frame;\n        }\n        if (this._to < keys[keys.length - 1].frame) {\n            this._to = keys[keys.length - 1].frame;\n        }\n        this._targetedAnimations.push(targetedAnimation);\n        return targetedAnimation;\n    }\n    /**\n     * This function will normalize every animation in the group to make sure they all go from beginFrame to endFrame\n     * It can add constant keys at begin or end\n     * @param beginFrame defines the new begin frame for all animations or the smallest begin frame of all animations if null (defaults to null)\n     * @param endFrame defines the new end frame for all animations or the largest end frame of all animations if null (defaults to null)\n     * @returns the animation group\n     */\n    normalize(beginFrame = null, endFrame = null) {\n        if (beginFrame == null) {\n            beginFrame = this._from;\n        }\n        if (endFrame == null) {\n            endFrame = this._to;\n        }\n        for (let index = 0; index < this._targetedAnimations.length; index++) {\n            const targetedAnimation = this._targetedAnimations[index];\n            const keys = targetedAnimation.animation.getKeys();\n            const startKey = keys[0];\n            const endKey = keys[keys.length - 1];\n            if (startKey.frame > beginFrame) {\n                const newKey = {\n                    frame: beginFrame,\n                    value: startKey.value,\n                    inTangent: startKey.inTangent,\n                    outTangent: startKey.outTangent,\n                    interpolation: startKey.interpolation,\n                };\n                keys.splice(0, 0, newKey);\n            }\n            if (endKey.frame < endFrame) {\n                const newKey = {\n                    frame: endFrame,\n                    value: endKey.value,\n                    inTangent: endKey.inTangent,\n                    outTangent: endKey.outTangent,\n                    interpolation: endKey.interpolation,\n                };\n                keys.push(newKey);\n            }\n        }\n        this._from = beginFrame;\n        this._to = endFrame;\n        return this;\n    }\n    _processLoop(animatable, targetedAnimation, index) {\n        animatable.onAnimationLoop = () => {\n            this.onAnimationLoopObservable.notifyObservers(targetedAnimation);\n            if (this._animationLoopFlags[index]) {\n                return;\n            }\n            this._animationLoopFlags[index] = true;\n            this._animationLoopCount++;\n            if (this._animationLoopCount === this._targetedAnimations.length) {\n                this.onAnimationGroupLoopObservable.notifyObservers(this);\n                this._animationLoopCount = 0;\n                this._animationLoopFlags.length = 0;\n            }\n        };\n    }\n    /**\n     * Start all animations on given targets\n     * @param loop defines if animations must loop\n     * @param speedRatio defines the ratio to apply to animation speed (1 by default)\n     * @param from defines the from key (optional)\n     * @param to defines the to key (optional)\n     * @param isAdditive defines the additive state for the resulting animatables (optional)\n     * @returns the current animation group\n     */\n    start(loop = false, speedRatio = 1, from, to, isAdditive) {\n        if (this._isStarted || this._targetedAnimations.length === 0) {\n            return this;\n        }\n        this._loopAnimation = loop;\n        this._animationLoopCount = 0;\n        this._animationLoopFlags.length = 0;\n        for (let index = 0; index < this._targetedAnimations.length; index++) {\n            const targetedAnimation = this._targetedAnimations[index];\n            const animatable = this._scene.beginDirectAnimation(targetedAnimation.target, [targetedAnimation.animation], from !== undefined ? from : this._from, to !== undefined ? to : this._to, loop, speedRatio, undefined, undefined, isAdditive !== undefined ? isAdditive : this._isAdditive);\n            animatable.onAnimationEnd = () => {\n                this.onAnimationEndObservable.notifyObservers(targetedAnimation);\n                this._checkAnimationGroupEnded(animatable);\n            };\n            this._processLoop(animatable, targetedAnimation, index);\n            this._animatables.push(animatable);\n        }\n        this._speedRatio = speedRatio;\n        this._isStarted = true;\n        this._isPaused = false;\n        this.onAnimationGroupPlayObservable.notifyObservers(this);\n        return this;\n    }\n    /**\n     * Pause all animations\n     * @returns the animation group\n     */\n    pause() {\n        if (!this._isStarted) {\n            return this;\n        }\n        this._isPaused = true;\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.pause();\n        }\n        this.onAnimationGroupPauseObservable.notifyObservers(this);\n        return this;\n    }\n    /**\n     * Play all animations to initial state\n     * This function will start() the animations if they were not started or will restart() them if they were paused\n     * @param loop defines if animations must loop\n     * @returns the animation group\n     */\n    play(loop) {\n        // only if all animatables are ready and exist\n        if (this.isStarted && this._animatables.length === this._targetedAnimations.length) {\n            if (loop !== undefined) {\n                this.loopAnimation = loop;\n            }\n            this.restart();\n        }\n        else {\n            this.stop();\n            this.start(loop, this._speedRatio);\n        }\n        this._isPaused = false;\n        return this;\n    }\n    /**\n     * Reset all animations to initial state\n     * @returns the animation group\n     */\n    reset() {\n        if (!this._isStarted) {\n            this.play();\n            this.goToFrame(0);\n            this.stop();\n            return this;\n        }\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.reset();\n        }\n        return this;\n    }\n    /**\n     * Restart animations from key 0\n     * @returns the animation group\n     */\n    restart() {\n        if (!this._isStarted) {\n            return this;\n        }\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.restart();\n        }\n        this.onAnimationGroupPlayObservable.notifyObservers(this);\n        return this;\n    }\n    /**\n     * Stop all animations\n     * @returns the animation group\n     */\n    stop() {\n        if (!this._isStarted) {\n            return this;\n        }\n        const list = this._animatables.slice();\n        for (let index = 0; index < list.length; index++) {\n            list[index].stop();\n        }\n        this._isStarted = false;\n        return this;\n    }\n    /**\n     * Set animation weight for all animatables\n     * @param weight defines the weight to use\n     * @returns the animationGroup\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#animation-weights\n     */\n    setWeightForAllAnimatables(weight) {\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.weight = weight;\n        }\n        return this;\n    }\n    /**\n     * Synchronize and normalize all animatables with a source animatable\n     * @param root defines the root animatable to synchronize with (null to stop synchronizing)\n     * @returns the animationGroup\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#animation-weights\n     */\n    syncAllAnimationsWith(root) {\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.syncWith(root);\n        }\n        return this;\n    }\n    /**\n     * Goes to a specific frame in this animation group\n     * @param frame the frame number to go to\n     * @returns the animationGroup\n     */\n    goToFrame(frame) {\n        if (!this._isStarted) {\n            return this;\n        }\n        for (let index = 0; index < this._animatables.length; index++) {\n            const animatable = this._animatables[index];\n            animatable.goToFrame(frame);\n        }\n        return this;\n    }\n    /**\n     * Dispose all associated resources\n     */\n    dispose() {\n        this._targetedAnimations.length = 0;\n        this._animatables.length = 0;\n        // Remove from scene\n        const index = this._scene.animationGroups.indexOf(this);\n        if (index > -1) {\n            this._scene.animationGroups.splice(index, 1);\n        }\n        if (this._parentContainer) {\n            const index = this._parentContainer.animationGroups.indexOf(this);\n            if (index > -1) {\n                this._parentContainer.animationGroups.splice(index, 1);\n            }\n            this._parentContainer = null;\n        }\n        this.onAnimationEndObservable.clear();\n        this.onAnimationGroupEndObservable.clear();\n        this.onAnimationGroupPauseObservable.clear();\n        this.onAnimationGroupPlayObservable.clear();\n        this.onAnimationLoopObservable.clear();\n        this.onAnimationGroupLoopObservable.clear();\n    }\n    _checkAnimationGroupEnded(animatable) {\n        // animatable should be taken out of the array\n        const idx = this._animatables.indexOf(animatable);\n        if (idx > -1) {\n            this._animatables.splice(idx, 1);\n        }\n        // all animatables were removed? animation group ended!\n        if (this._animatables.length === 0) {\n            this._isStarted = false;\n            this.onAnimationGroupEndObservable.notifyObservers(this);\n        }\n    }\n    /**\n     * Clone the current animation group and returns a copy\n     * @param newName defines the name of the new group\n     * @param targetConverter defines an optional function used to convert current animation targets to new ones\n     * @param cloneAnimations defines if the animations should be cloned or referenced\n     * @returns the new animation group\n     */\n    clone(newName, targetConverter, cloneAnimations = false) {\n        const newGroup = new AnimationGroup(newName || this.name, this._scene);\n        for (const targetAnimation of this._targetedAnimations) {\n            newGroup.addTargetedAnimation(cloneAnimations ? targetAnimation.animation.clone() : targetAnimation.animation, targetConverter ? targetConverter(targetAnimation.target) : targetAnimation.target);\n        }\n        return newGroup;\n    }\n    /**\n     * Serializes the animationGroup to an object\n     * @returns Serialized object\n     */\n    serialize() {\n        const serializationObject = {};\n        serializationObject.name = this.name;\n        serializationObject.from = this.from;\n        serializationObject.to = this.to;\n        serializationObject.targetedAnimations = [];\n        for (let targetedAnimationIndex = 0; targetedAnimationIndex < this.targetedAnimations.length; targetedAnimationIndex++) {\n            const targetedAnimation = this.targetedAnimations[targetedAnimationIndex];\n            serializationObject.targetedAnimations[targetedAnimationIndex] = targetedAnimation.serialize();\n        }\n        if (Tags && Tags.HasTags(this)) {\n            serializationObject.tags = Tags.GetTags(this);\n        }\n        // Metadata\n        if (this.metadata) {\n            serializationObject.metadata = this.metadata;\n        }\n        return serializationObject;\n    }\n    // Statics\n    /**\n     * Returns a new AnimationGroup object parsed from the source provided.\n     * @param parsedAnimationGroup defines the source\n     * @param scene defines the scene that will receive the animationGroup\n     * @returns a new AnimationGroup\n     */\n    static Parse(parsedAnimationGroup, scene) {\n        const animationGroup = new AnimationGroup(parsedAnimationGroup.name, scene);\n        for (let i = 0; i < parsedAnimationGroup.targetedAnimations.length; i++) {\n            const targetedAnimation = parsedAnimationGroup.targetedAnimations[i];\n            const animation = Animation.Parse(targetedAnimation.animation);\n            const id = targetedAnimation.targetId;\n            if (targetedAnimation.animation.property === \"influence\") {\n                // morph target animation\n                const morphTarget = scene.getMorphTargetById(id);\n                if (morphTarget) {\n                    animationGroup.addTargetedAnimation(animation, morphTarget);\n                }\n            }\n            else {\n                const targetNode = scene.getNodeById(id);\n                if (targetNode != null) {\n                    animationGroup.addTargetedAnimation(animation, targetNode);\n                }\n            }\n        }\n        if (parsedAnimationGroup.from !== null && parsedAnimationGroup.to !== null) {\n            animationGroup.normalize(parsedAnimationGroup.from, parsedAnimationGroup.to);\n        }\n        if (Tags) {\n            Tags.AddTagsTo(animationGroup, parsedAnimationGroup.tags);\n        }\n        if (parsedAnimationGroup.metadata !== undefined) {\n            animationGroup.metadata = parsedAnimationGroup.metadata;\n        }\n        return animationGroup;\n    }\n    /**\n     * Convert the keyframes for all animations belonging to the group to be relative to a given reference frame.\n     * @param sourceAnimationGroup defines the AnimationGroup containing animations to convert\n     * @param referenceFrame defines the frame that keyframes in the range will be relative to\n     * @param range defines the name of the AnimationRange belonging to the animations in the group to convert\n     * @param cloneOriginal defines whether or not to clone the group and convert the clone or convert the original group (default is false)\n     * @param clonedName defines the name of the resulting cloned AnimationGroup if cloneOriginal is true\n     * @returns a new AnimationGroup if cloneOriginal is true or the original AnimationGroup if cloneOriginal is false\n     */\n    static MakeAnimationAdditive(sourceAnimationGroup, referenceFrame = 0, range, cloneOriginal = false, clonedName) {\n        let animationGroup = sourceAnimationGroup;\n        if (cloneOriginal) {\n            animationGroup = sourceAnimationGroup.clone(clonedName || animationGroup.name);\n        }\n        const targetedAnimations = animationGroup.targetedAnimations;\n        for (let index = 0; index < targetedAnimations.length; index++) {\n            const targetedAnimation = targetedAnimations[index];\n            Animation.MakeAnimationAdditive(targetedAnimation.animation, referenceFrame, range);\n        }\n        animationGroup.isAdditive = true;\n        return animationGroup;\n    }\n    /**\n     * Returns the string \"AnimationGroup\"\n     * @returns \"AnimationGroup\"\n     */\n    getClassName() {\n        return \"AnimationGroup\";\n    }\n    /**\n     * Creates a detailed string about the object\n     * @param fullDetails defines if the output string will support multiple levels of logging within scene loading\n     * @returns a string representing the object\n     */\n    toString(fullDetails) {\n        let ret = \"Name: \" + this.name;\n        ret += \", type: \" + this.getClassName();\n        if (fullDetails) {\n            ret += \", from: \" + this._from;\n            ret += \", to: \" + this._to;\n            ret += \", isStarted: \" + this._isStarted;\n            ret += \", speedRatio: \" + this._speedRatio;\n            ret += \", targetedAnimations length: \" + this._targetedAnimations.length;\n            ret += \", animatables length: \" + this._animatables;\n        }\n        return ret;\n    }\n}\n//# sourceMappingURL=animationGroup.js.map","/**\n * Enum for the animation key frame interpolation type\n */\nexport var AnimationKeyInterpolation;\n(function (AnimationKeyInterpolation) {\n    /**\n     * Use tangents to interpolate between start and end values.\n     */\n    AnimationKeyInterpolation[AnimationKeyInterpolation[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * Do not interpolate between keys and use the start key value only. Tangents are ignored\n     */\n    AnimationKeyInterpolation[AnimationKeyInterpolation[\"STEP\"] = 1] = \"STEP\";\n})(AnimationKeyInterpolation || (AnimationKeyInterpolation = {}));\n//# sourceMappingURL=animationKey.js.map","/**\n * Represents the range of an animation\n */\nexport class AnimationRange {\n    /**\n     * Initializes the range of an animation\n     * @param name The name of the animation range\n     * @param from The starting frame of the animation\n     * @param to The ending frame of the animation\n     */\n    constructor(\n    /**The name of the animation range**/\n    name, \n    /**The starting frame of the animation */\n    from, \n    /**The ending frame of the animation*/\n    to) {\n        this.name = name;\n        this.from = from;\n        this.to = to;\n    }\n    /**\n     * Makes a copy of the animation range\n     * @returns A copy of the animation range\n     */\n    clone() {\n        return new AnimationRange(this.name, this.from, this.to);\n    }\n}\n//# sourceMappingURL=animationRange.js.map","import { BezierCurve } from \"../Maths/math.path.js\";\n/**\n * Base class used for every default easing function.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class EasingFunction {\n    constructor() {\n        this._easingMode = EasingFunction.EASINGMODE_EASEIN;\n    }\n    /**\n     * Sets the easing mode of the current function.\n     * @param easingMode Defines the willing mode (EASINGMODE_EASEIN, EASINGMODE_EASEOUT or EASINGMODE_EASEINOUT)\n     */\n    setEasingMode(easingMode) {\n        const n = Math.min(Math.max(easingMode, 0), 2);\n        this._easingMode = n;\n    }\n    /**\n     * Gets the current easing mode.\n     * @returns the easing mode\n     */\n    getEasingMode() {\n        return this._easingMode;\n    }\n    /**\n     * @internal\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    easeInCore(gradient) {\n        throw new Error(\"You must implement this method\");\n    }\n    /**\n     * Given an input gradient between 0 and 1, this returns the corresponding value\n     * of the easing function.\n     * @param gradient Defines the value between 0 and 1 we want the easing value for\n     * @returns the corresponding value on the curve defined by the easing function\n     */\n    ease(gradient) {\n        switch (this._easingMode) {\n            case EasingFunction.EASINGMODE_EASEIN:\n                return this.easeInCore(gradient);\n            case EasingFunction.EASINGMODE_EASEOUT:\n                return 1 - this.easeInCore(1 - gradient);\n        }\n        if (gradient >= 0.5) {\n            return (1 - this.easeInCore((1 - gradient) * 2)) * 0.5 + 0.5;\n        }\n        return this.easeInCore(gradient * 2) * 0.5;\n    }\n}\n/**\n * Interpolation follows the mathematical formula associated with the easing function.\n */\nEasingFunction.EASINGMODE_EASEIN = 0;\n/**\n * Interpolation follows 100% interpolation minus the output of the formula associated with the easing function.\n */\nEasingFunction.EASINGMODE_EASEOUT = 1;\n/**\n * Interpolation uses EaseIn for the first half of the animation and EaseOut for the second half.\n */\nEasingFunction.EASINGMODE_EASEINOUT = 2;\n/**\n * Easing function with a circle shape (see link below).\n * @see https://easings.net/#easeInCirc\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class CircleEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        gradient = Math.max(0, Math.min(1, gradient));\n        return 1.0 - Math.sqrt(1.0 - gradient * gradient);\n    }\n}\n/**\n * Easing function with a ease back shape (see link below).\n * @see https://easings.net/#easeInBack\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class BackEase extends EasingFunction {\n    /**\n     * Instantiates a back ease easing\n     * @see https://easings.net/#easeInBack\n     * @param amplitude Defines the amplitude of the function\n     */\n    constructor(\n    /** Defines the amplitude of the function */\n    amplitude = 1) {\n        super();\n        this.amplitude = amplitude;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        const num = Math.max(0, this.amplitude);\n        return Math.pow(gradient, 3.0) - gradient * num * Math.sin(3.1415926535897931 * gradient);\n    }\n}\n/**\n * Easing function with a bouncing shape (see link below).\n * @see https://easings.net/#easeInBounce\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class BounceEase extends EasingFunction {\n    /**\n     * Instantiates a bounce easing\n     * @see https://easings.net/#easeInBounce\n     * @param bounces Defines the number of bounces\n     * @param bounciness Defines the amplitude of the bounce\n     */\n    constructor(\n    /** Defines the number of bounces */\n    bounces = 3, \n    /** Defines the amplitude of the bounce */\n    bounciness = 2) {\n        super();\n        this.bounces = bounces;\n        this.bounciness = bounciness;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        const y = Math.max(0.0, this.bounces);\n        let bounciness = this.bounciness;\n        if (bounciness <= 1.0) {\n            bounciness = 1.001;\n        }\n        const num9 = Math.pow(bounciness, y);\n        const num5 = 1.0 - bounciness;\n        const num4 = (1.0 - num9) / num5 + num9 * 0.5;\n        const num15 = gradient * num4;\n        const num65 = Math.log(-num15 * (1.0 - bounciness) + 1.0) / Math.log(bounciness);\n        const num3 = Math.floor(num65);\n        const num13 = num3 + 1.0;\n        const num8 = (1.0 - Math.pow(bounciness, num3)) / (num5 * num4);\n        const num12 = (1.0 - Math.pow(bounciness, num13)) / (num5 * num4);\n        const num7 = (num8 + num12) * 0.5;\n        const num6 = gradient - num7;\n        const num2 = num7 - num8;\n        return (-Math.pow(1.0 / bounciness, y - num3) / (num2 * num2)) * (num6 - num2) * (num6 + num2);\n    }\n}\n/**\n * Easing function with a power of 3 shape (see link below).\n * @see https://easings.net/#easeInCubic\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class CubicEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return gradient * gradient * gradient;\n    }\n}\n/**\n * Easing function with an elastic shape (see link below).\n * @see https://easings.net/#easeInElastic\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class ElasticEase extends EasingFunction {\n    /**\n     * Instantiates an elastic easing function\n     * @see https://easings.net/#easeInElastic\n     * @param oscillations Defines the number of oscillations\n     * @param springiness Defines the amplitude of the oscillations\n     */\n    constructor(\n    /** Defines the number of oscillations*/\n    oscillations = 3, \n    /** Defines the amplitude of the oscillations*/\n    springiness = 3) {\n        super();\n        this.oscillations = oscillations;\n        this.springiness = springiness;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        let num2;\n        const num3 = Math.max(0.0, this.oscillations);\n        const num = Math.max(0.0, this.springiness);\n        if (num == 0) {\n            num2 = gradient;\n        }\n        else {\n            num2 = (Math.exp(num * gradient) - 1.0) / (Math.exp(num) - 1.0);\n        }\n        return num2 * Math.sin((6.2831853071795862 * num3 + 1.5707963267948966) * gradient);\n    }\n}\n/**\n * Easing function with an exponential shape (see link below).\n * @see https://easings.net/#easeInExpo\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class ExponentialEase extends EasingFunction {\n    /**\n     * Instantiates an exponential easing function\n     * @see https://easings.net/#easeInExpo\n     * @param exponent Defines the exponent of the function\n     */\n    constructor(\n    /** Defines the exponent of the function */\n    exponent = 2) {\n        super();\n        this.exponent = exponent;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        if (this.exponent <= 0) {\n            return gradient;\n        }\n        return (Math.exp(this.exponent * gradient) - 1.0) / (Math.exp(this.exponent) - 1.0);\n    }\n}\n/**\n * Easing function with a power shape (see link below).\n * @see https://easings.net/#easeInQuad\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class PowerEase extends EasingFunction {\n    /**\n     * Instantiates an power base easing function\n     * @see https://easings.net/#easeInQuad\n     * @param power Defines the power of the function\n     */\n    constructor(\n    /** Defines the power of the function */\n    power = 2) {\n        super();\n        this.power = power;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        const y = Math.max(0.0, this.power);\n        return Math.pow(gradient, y);\n    }\n}\n/**\n * Easing function with a power of 2 shape (see link below).\n * @see https://easings.net/#easeInQuad\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class QuadraticEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return gradient * gradient;\n    }\n}\n/**\n * Easing function with a power of 4 shape (see link below).\n * @see https://easings.net/#easeInQuart\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class QuarticEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return gradient * gradient * gradient * gradient;\n    }\n}\n/**\n * Easing function with a power of 5 shape (see link below).\n * @see https://easings.net/#easeInQuint\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class QuinticEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return gradient * gradient * gradient * gradient * gradient;\n    }\n}\n/**\n * Easing function with a sin shape (see link below).\n * @see https://easings.net/#easeInSine\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class SineEase extends EasingFunction {\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return 1.0 - Math.sin(1.5707963267948966 * (1.0 - gradient));\n    }\n}\n/**\n * Easing function with a bezier shape (see link below).\n * @see http://cubic-bezier.com/#.17,.67,.83,.67\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/advanced_animations#easing-functions\n */\nexport class BezierCurveEase extends EasingFunction {\n    /**\n     * Instantiates a bezier function\n     * @see http://cubic-bezier.com/#.17,.67,.83,.67\n     * @param x1 Defines the x component of the start tangent in the bezier curve\n     * @param y1 Defines the y component of the start tangent in the bezier curve\n     * @param x2 Defines the x component of the end tangent in the bezier curve\n     * @param y2 Defines the y component of the end tangent in the bezier curve\n     */\n    constructor(\n    /** Defines the x component of the start tangent in the bezier curve */\n    x1 = 0, \n    /** Defines the y component of the start tangent in the bezier curve */\n    y1 = 0, \n    /** Defines the x component of the end tangent in the bezier curve */\n    x2 = 1, \n    /** Defines the y component of the end tangent in the bezier curve */\n    y2 = 1) {\n        super();\n        this.x1 = x1;\n        this.y1 = y1;\n        this.x2 = x2;\n        this.y2 = y2;\n    }\n    /**\n     * @internal\n     */\n    easeInCore(gradient) {\n        return BezierCurve.Interpolate(gradient, this.x1, this.y1, this.x2, this.y2);\n    }\n}\n//# sourceMappingURL=easing.js.map","import { Quaternion, Vector3, Vector2, Matrix } from \"../Maths/math.vector.js\";\nimport { Color3 } from \"../Maths/math.color.js\";\nimport { Animation } from \"./animation.js\";\nimport { Size } from \"../Maths/math.size.js\";\n// Static values to help the garbage collector\n// Quaternion\nconst _staticOffsetValueQuaternion = Object.freeze(new Quaternion(0, 0, 0, 0));\n// Vector3\nconst _staticOffsetValueVector3 = Object.freeze(Vector3.Zero());\n// Vector2\nconst _staticOffsetValueVector2 = Object.freeze(Vector2.Zero());\n// Size\nconst _staticOffsetValueSize = Object.freeze(Size.Zero());\n// Color3\nconst _staticOffsetValueColor3 = Object.freeze(Color3.Black());\n/**\n * Defines a runtime animation\n */\nexport class RuntimeAnimation {\n    /**\n     * Gets the current frame of the runtime animation\n     */\n    get currentFrame() {\n        return this._currentFrame;\n    }\n    /**\n     * Gets the weight of the runtime animation\n     */\n    get weight() {\n        return this._weight;\n    }\n    /**\n     * Gets the current value of the runtime animation\n     */\n    get currentValue() {\n        return this._currentValue;\n    }\n    /**\n     * Gets or sets the target path of the runtime animation\n     */\n    get targetPath() {\n        return this._targetPath;\n    }\n    /**\n     * Gets the actual target of the runtime animation\n     */\n    get target() {\n        return this._currentActiveTarget;\n    }\n    /**\n     * Gets the additive state of the runtime animation\n     */\n    get isAdditive() {\n        return this._host && this._host.isAdditive;\n    }\n    /**\n     * Create a new RuntimeAnimation object\n     * @param target defines the target of the animation\n     * @param animation defines the source animation object\n     * @param scene defines the hosting scene\n     * @param host defines the initiating Animatable\n     */\n    constructor(target, animation, scene, host) {\n        this._events = new Array();\n        /**\n         * The current frame of the runtime animation\n         */\n        this._currentFrame = 0;\n        /**\n         * The original value of the runtime animation\n         */\n        this._originalValue = new Array();\n        /**\n         * The original blend value of the runtime animation\n         */\n        this._originalBlendValue = null;\n        /**\n         * The offsets cache of the runtime animation\n         */\n        this._offsetsCache = {};\n        /**\n         * The high limits cache of the runtime animation\n         */\n        this._highLimitsCache = {};\n        /**\n         * Specifies if the runtime animation has been stopped\n         */\n        this._stopped = false;\n        /**\n         * The blending factor of the runtime animation\n         */\n        this._blendingFactor = 0;\n        /**\n         * The current value of the runtime animation\n         */\n        this._currentValue = null;\n        this._currentActiveTarget = null;\n        this._directTarget = null;\n        /**\n         * The target path of the runtime animation\n         */\n        this._targetPath = \"\";\n        /**\n         * The weight of the runtime animation\n         */\n        this._weight = 1.0;\n        /**\n         * The ratio offset of the runtime animation\n         */\n        this._ratioOffset = 0;\n        /**\n         * The previous delay of the runtime animation\n         */\n        this._previousDelay = 0;\n        /**\n         * The previous ratio of the runtime animation\n         */\n        this._previousRatio = 0;\n        this._targetIsArray = false;\n        this._animation = animation;\n        this._target = target;\n        this._scene = scene;\n        this._host = host;\n        this._activeTargets = [];\n        animation._runtimeAnimations.push(this);\n        // State\n        this._animationState = {\n            key: 0,\n            repeatCount: 0,\n            loopMode: this._getCorrectLoopMode(),\n        };\n        if (this._animation.dataType === Animation.ANIMATIONTYPE_MATRIX) {\n            this._animationState.workValue = Matrix.Zero();\n        }\n        // Limits\n        this._keys = this._animation.getKeys();\n        this._minFrame = this._keys[0].frame;\n        this._maxFrame = this._keys[this._keys.length - 1].frame;\n        this._minValue = this._keys[0].value;\n        this._maxValue = this._keys[this._keys.length - 1].value;\n        // Add a start key at frame 0 if missing\n        if (this._minFrame !== 0) {\n            const newKey = { frame: 0, value: this._minValue };\n            this._keys.splice(0, 0, newKey);\n        }\n        // Check data\n        if (this._target instanceof Array) {\n            let index = 0;\n            for (const target of this._target) {\n                this._preparePath(target, index);\n                this._getOriginalValues(index);\n                index++;\n            }\n            this._targetIsArray = true;\n        }\n        else {\n            this._preparePath(this._target);\n            this._getOriginalValues();\n            this._targetIsArray = false;\n            this._directTarget = this._activeTargets[0];\n        }\n        // Cloning events locally\n        const events = animation.getEvents();\n        if (events && events.length > 0) {\n            events.forEach((e) => {\n                this._events.push(e._clone());\n            });\n        }\n        this._enableBlending = target && target.animationPropertiesOverride ? target.animationPropertiesOverride.enableBlending : this._animation.enableBlending;\n    }\n    _preparePath(target, targetIndex = 0) {\n        const targetPropertyPath = this._animation.targetPropertyPath;\n        if (targetPropertyPath.length > 1) {\n            let property = target[targetPropertyPath[0]];\n            for (let index = 1; index < targetPropertyPath.length - 1; index++) {\n                property = property[targetPropertyPath[index]];\n            }\n            this._targetPath = targetPropertyPath[targetPropertyPath.length - 1];\n            this._activeTargets[targetIndex] = property;\n        }\n        else {\n            this._targetPath = targetPropertyPath[0];\n            this._activeTargets[targetIndex] = target;\n        }\n    }\n    /**\n     * Gets the animation from the runtime animation\n     */\n    get animation() {\n        return this._animation;\n    }\n    /**\n     * Resets the runtime animation to the beginning\n     * @param restoreOriginal defines whether to restore the target property to the original value\n     */\n    reset(restoreOriginal = false) {\n        if (restoreOriginal) {\n            if (this._target instanceof Array) {\n                let index = 0;\n                for (const target of this._target) {\n                    if (this._originalValue[index] !== undefined) {\n                        this._setValue(target, this._activeTargets[index], this._originalValue[index], -1, index);\n                    }\n                    index++;\n                }\n            }\n            else {\n                if (this._originalValue[0] !== undefined) {\n                    this._setValue(this._target, this._directTarget, this._originalValue[0], -1, 0);\n                }\n            }\n        }\n        this._offsetsCache = {};\n        this._highLimitsCache = {};\n        this._currentFrame = 0;\n        this._blendingFactor = 0;\n        // Events\n        for (let index = 0; index < this._events.length; index++) {\n            this._events[index].isDone = false;\n        }\n    }\n    /**\n     * Specifies if the runtime animation is stopped\n     * @returns Boolean specifying if the runtime animation is stopped\n     */\n    isStopped() {\n        return this._stopped;\n    }\n    /**\n     * Disposes of the runtime animation\n     */\n    dispose() {\n        const index = this._animation.runtimeAnimations.indexOf(this);\n        if (index > -1) {\n            this._animation.runtimeAnimations.splice(index, 1);\n        }\n    }\n    /**\n     * Apply the interpolated value to the target\n     * @param currentValue defines the value computed by the animation\n     * @param weight defines the weight to apply to this value (Defaults to 1.0)\n     */\n    setValue(currentValue, weight) {\n        if (this._targetIsArray) {\n            for (let index = 0; index < this._target.length; index++) {\n                const target = this._target[index];\n                this._setValue(target, this._activeTargets[index], currentValue, weight, index);\n            }\n            return;\n        }\n        this._setValue(this._target, this._directTarget, currentValue, weight, 0);\n    }\n    _getOriginalValues(targetIndex = 0) {\n        let originalValue;\n        const target = this._activeTargets[targetIndex];\n        if (target.getRestPose && this._targetPath === \"_matrix\") {\n            // For bones\n            originalValue = target.getRestPose();\n        }\n        else {\n            originalValue = target[this._targetPath];\n        }\n        if (originalValue && originalValue.clone) {\n            this._originalValue[targetIndex] = originalValue.clone();\n        }\n        else {\n            this._originalValue[targetIndex] = originalValue;\n        }\n    }\n    _setValue(target, destination, currentValue, weight, targetIndex) {\n        // Set value\n        this._currentActiveTarget = destination;\n        this._weight = weight;\n        if (this._enableBlending && this._blendingFactor <= 1.0) {\n            if (!this._originalBlendValue) {\n                const originalValue = destination[this._targetPath];\n                if (originalValue.clone) {\n                    this._originalBlendValue = originalValue.clone();\n                }\n                else {\n                    this._originalBlendValue = originalValue;\n                }\n            }\n            if (this._originalBlendValue.m) {\n                // Matrix\n                if (Animation.AllowMatrixDecomposeForInterpolation) {\n                    if (this._currentValue) {\n                        Matrix.DecomposeLerpToRef(this._originalBlendValue, currentValue, this._blendingFactor, this._currentValue);\n                    }\n                    else {\n                        this._currentValue = Matrix.DecomposeLerp(this._originalBlendValue, currentValue, this._blendingFactor);\n                    }\n                }\n                else {\n                    if (this._currentValue) {\n                        Matrix.LerpToRef(this._originalBlendValue, currentValue, this._blendingFactor, this._currentValue);\n                    }\n                    else {\n                        this._currentValue = Matrix.Lerp(this._originalBlendValue, currentValue, this._blendingFactor);\n                    }\n                }\n            }\n            else {\n                this._currentValue = Animation._UniversalLerp(this._originalBlendValue, currentValue, this._blendingFactor);\n            }\n            const blendingSpeed = target && target.animationPropertiesOverride ? target.animationPropertiesOverride.blendingSpeed : this._animation.blendingSpeed;\n            this._blendingFactor += blendingSpeed;\n        }\n        else {\n            if (!this._currentValue) {\n                if (currentValue === null || currentValue === void 0 ? void 0 : currentValue.clone) {\n                    this._currentValue = currentValue.clone();\n                }\n                else {\n                    this._currentValue = currentValue;\n                }\n            }\n            else if (this._currentValue.copyFrom) {\n                this._currentValue.copyFrom(currentValue);\n            }\n            else {\n                this._currentValue = currentValue;\n            }\n        }\n        if (weight !== -1.0) {\n            this._scene._registerTargetForLateAnimationBinding(this, this._originalValue[targetIndex]);\n        }\n        else {\n            destination[this._targetPath] = this._currentValue;\n        }\n        if (target.markAsDirty) {\n            target.markAsDirty(this._animation.targetProperty);\n        }\n    }\n    /**\n     * Gets the loop pmode of the runtime animation\n     * @returns Loop Mode\n     */\n    _getCorrectLoopMode() {\n        if (this._target && this._target.animationPropertiesOverride) {\n            return this._target.animationPropertiesOverride.loopMode;\n        }\n        return this._animation.loopMode;\n    }\n    /**\n     * Move the current animation to a given frame\n     * @param frame defines the frame to move to\n     */\n    goToFrame(frame) {\n        const keys = this._animation.getKeys();\n        if (frame < keys[0].frame) {\n            frame = keys[0].frame;\n        }\n        else if (frame > keys[keys.length - 1].frame) {\n            frame = keys[keys.length - 1].frame;\n        }\n        // Need to reset animation events\n        const events = this._events;\n        if (events.length) {\n            for (let index = 0; index < events.length; index++) {\n                if (!events[index].onlyOnce) {\n                    // reset events in the future\n                    events[index].isDone = events[index].frame < frame;\n                }\n            }\n        }\n        this._currentFrame = frame;\n        const currentValue = this._animation._interpolate(frame, this._animationState);\n        this.setValue(currentValue, -1);\n    }\n    /**\n     * @internal Internal use only\n     */\n    _prepareForSpeedRatioChange(newSpeedRatio) {\n        const newRatio = (this._previousDelay * (this._animation.framePerSecond * newSpeedRatio)) / 1000.0;\n        this._ratioOffset = this._previousRatio - newRatio;\n    }\n    /**\n     * Execute the current animation\n     * @param delay defines the delay to add to the current frame\n     * @param from defines the lower bound of the animation range\n     * @param to defines the upper bound of the animation range\n     * @param loop defines if the current animation must loop\n     * @param speedRatio defines the current speed ratio\n     * @param weight defines the weight of the animation (default is -1 so no weight)\n     * @returns a boolean indicating if the animation is running\n     */\n    animate(delay, from, to, loop, speedRatio, weight = -1.0) {\n        const animation = this._animation;\n        const targetPropertyPath = animation.targetPropertyPath;\n        if (!targetPropertyPath || targetPropertyPath.length < 1) {\n            this._stopped = true;\n            return false;\n        }\n        let returnValue = true;\n        // Check limits\n        if (from < this._minFrame || from > this._maxFrame) {\n            from = this._minFrame;\n        }\n        if (to < this._minFrame || to > this._maxFrame) {\n            to = this._maxFrame;\n        }\n        const range = to - from;\n        let offsetValue;\n        // Compute ratio which represents the frame delta between from and to\n        const ratio = (delay * (animation.framePerSecond * speedRatio)) / 1000.0 + this._ratioOffset;\n        let highLimitValue = 0;\n        this._previousDelay = delay;\n        this._previousRatio = ratio;\n        if (!loop && to >= from && ratio >= range) {\n            // If we are out of range and not looping get back to caller\n            returnValue = false;\n            highLimitValue = animation._getKeyValue(this._maxValue);\n        }\n        else if (!loop && from >= to && ratio <= range) {\n            returnValue = false;\n            highLimitValue = animation._getKeyValue(this._minValue);\n        }\n        else if (this._animationState.loopMode !== Animation.ANIMATIONLOOPMODE_CYCLE) {\n            const keyOffset = to.toString() + from.toString();\n            if (!this._offsetsCache[keyOffset]) {\n                this._animationState.repeatCount = 0;\n                this._animationState.loopMode = Animation.ANIMATIONLOOPMODE_CYCLE;\n                const fromValue = animation._interpolate(from, this._animationState);\n                const toValue = animation._interpolate(to, this._animationState);\n                this._animationState.loopMode = this._getCorrectLoopMode();\n                switch (animation.dataType) {\n                    // Float\n                    case Animation.ANIMATIONTYPE_FLOAT:\n                        this._offsetsCache[keyOffset] = toValue - fromValue;\n                        break;\n                    // Quaternion\n                    case Animation.ANIMATIONTYPE_QUATERNION:\n                        this._offsetsCache[keyOffset] = toValue.subtract(fromValue);\n                        break;\n                    // Vector3\n                    case Animation.ANIMATIONTYPE_VECTOR3:\n                        this._offsetsCache[keyOffset] = toValue.subtract(fromValue);\n                        break;\n                    // Vector2\n                    case Animation.ANIMATIONTYPE_VECTOR2:\n                        this._offsetsCache[keyOffset] = toValue.subtract(fromValue);\n                        break;\n                    // Size\n                    case Animation.ANIMATIONTYPE_SIZE:\n                        this._offsetsCache[keyOffset] = toValue.subtract(fromValue);\n                        break;\n                    // Color3\n                    case Animation.ANIMATIONTYPE_COLOR3:\n                        this._offsetsCache[keyOffset] = toValue.subtract(fromValue);\n                        break;\n                    default:\n                        break;\n                }\n                this._highLimitsCache[keyOffset] = toValue;\n            }\n            highLimitValue = this._highLimitsCache[keyOffset];\n            offsetValue = this._offsetsCache[keyOffset];\n        }\n        if (offsetValue === undefined) {\n            switch (animation.dataType) {\n                // Float\n                case Animation.ANIMATIONTYPE_FLOAT:\n                    offsetValue = 0;\n                    break;\n                // Quaternion\n                case Animation.ANIMATIONTYPE_QUATERNION:\n                    offsetValue = _staticOffsetValueQuaternion;\n                    break;\n                // Vector3\n                case Animation.ANIMATIONTYPE_VECTOR3:\n                    offsetValue = _staticOffsetValueVector3;\n                    break;\n                // Vector2\n                case Animation.ANIMATIONTYPE_VECTOR2:\n                    offsetValue = _staticOffsetValueVector2;\n                    break;\n                // Size\n                case Animation.ANIMATIONTYPE_SIZE:\n                    offsetValue = _staticOffsetValueSize;\n                    break;\n                // Color3\n                case Animation.ANIMATIONTYPE_COLOR3:\n                    offsetValue = _staticOffsetValueColor3;\n            }\n        }\n        // Compute value\n        let currentFrame;\n        if (this._host && this._host.syncRoot) {\n            const syncRoot = this._host.syncRoot;\n            const hostNormalizedFrame = (syncRoot.masterFrame - syncRoot.fromFrame) / (syncRoot.toFrame - syncRoot.fromFrame);\n            currentFrame = from + (to - from) * hostNormalizedFrame;\n        }\n        else {\n            if ((ratio > 0 && from > to) || (ratio < 0 && from < to)) {\n                currentFrame = returnValue && range !== 0 ? to + (ratio % range) : from;\n            }\n            else {\n                currentFrame = returnValue && range !== 0 ? from + (ratio % range) : to;\n            }\n        }\n        const events = this._events;\n        // Reset event/state if looping\n        if ((speedRatio > 0 && this.currentFrame > currentFrame) || (speedRatio < 0 && this.currentFrame < currentFrame)) {\n            this._onLoop();\n            // Need to reset animation events\n            for (let index = 0; index < events.length; index++) {\n                if (!events[index].onlyOnce) {\n                    // reset event, the animation is looping\n                    events[index].isDone = false;\n                }\n            }\n            this._animationState.key = speedRatio > 0 ? 0 : animation.getKeys().length - 1;\n        }\n        this._currentFrame = currentFrame;\n        this._animationState.repeatCount = range === 0 ? 0 : (ratio / range) >> 0;\n        this._animationState.highLimitValue = highLimitValue;\n        this._animationState.offsetValue = offsetValue;\n        const currentValue = animation._interpolate(currentFrame, this._animationState);\n        // Set value\n        this.setValue(currentValue, weight);\n        // Check events\n        if (events.length) {\n            for (let index = 0; index < events.length; index++) {\n                // Make sure current frame has passed event frame and that event frame is within the current range\n                // Also, handle both forward and reverse animations\n                if ((range > 0 && currentFrame >= events[index].frame && events[index].frame >= from) ||\n                    (range < 0 && currentFrame <= events[index].frame && events[index].frame <= from)) {\n                    const event = events[index];\n                    if (!event.isDone) {\n                        // If event should be done only once, remove it.\n                        if (event.onlyOnce) {\n                            events.splice(index, 1);\n                            index--;\n                        }\n                        event.isDone = true;\n                        event.action(currentFrame);\n                    } // Don't do anything if the event has already be done.\n                }\n            }\n        }\n        if (!returnValue) {\n            this._stopped = true;\n        }\n        return returnValue;\n    }\n}\n//# sourceMappingURL=runtimeAnimation.js.map","import { Observable } from \"../Misc/observable.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { Engine } from \"../Engines/engine.js\";\nimport { IsWindowObjectExist } from \"../Misc/domManagement.js\";\n// Sets the default audio engine to Babylon.js\nEngine.AudioEngineFactory = (hostElement, audioContext, audioDestination) => {\n    return new AudioEngine(hostElement, audioContext, audioDestination);\n};\n/**\n * This represents the default audio engine used in babylon.\n * It is responsible to play, synchronize and analyse sounds throughout the  application.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic\n */\nexport class AudioEngine {\n    /**\n     * Gets the current AudioContext if available.\n     */\n    get audioContext() {\n        if (!this._audioContextInitialized) {\n            this._initializeAudioContext();\n        }\n        else {\n            if (!this.unlocked && !this._muteButton) {\n                this._displayMuteButton();\n            }\n        }\n        return this._audioContext;\n    }\n    /**\n     * Instantiates a new audio engine.\n     *\n     * There should be only one per page as some browsers restrict the number\n     * of audio contexts you can create.\n     * @param hostElement defines the host element where to display the mute icon if necessary\n     * @param audioContext defines the audio context to be used by the audio engine\n     * @param audioDestination defines the audio destination node to be used by audio engine\n     */\n    constructor(hostElement = null, audioContext = null, audioDestination = null) {\n        this._audioContext = null;\n        this._audioContextInitialized = false;\n        this._muteButton = null;\n        this._audioDestination = null;\n        /**\n         * Gets whether the current host supports Web Audio and thus could create AudioContexts.\n         */\n        this.canUseWebAudio = false;\n        /**\n         * Defines if Babylon should emit a warning if WebAudio is not supported.\n         * @ignoreNaming\n         */\n        // eslint-disable-next-line @typescript-eslint/naming-convention\n        this.WarnedWebAudioUnsupported = false;\n        /**\n         * Gets whether or not mp3 are supported by your browser.\n         */\n        this.isMP3supported = false;\n        /**\n         * Gets whether or not ogg are supported by your browser.\n         */\n        this.isOGGsupported = false;\n        /**\n         * Gets whether audio has been unlocked on the device.\n         * Some Browsers have strong restrictions about Audio and won t autoplay unless\n         * a user interaction has happened.\n         */\n        this.unlocked = true;\n        /**\n         * Defines if the audio engine relies on a custom unlocked button.\n         * In this case, the embedded button will not be displayed.\n         */\n        this.useCustomUnlockedButton = false;\n        /**\n         * Event raised when audio has been unlocked on the browser.\n         */\n        this.onAudioUnlockedObservable = new Observable();\n        /**\n         * Event raised when audio has been locked on the browser.\n         */\n        this.onAudioLockedObservable = new Observable();\n        this._tryToRun = false;\n        this._onResize = () => {\n            this._moveButtonToTopLeft();\n        };\n        if (!IsWindowObjectExist()) {\n            return;\n        }\n        if (typeof window.AudioContext !== \"undefined\") {\n            this.canUseWebAudio = true;\n        }\n        const audioElem = document.createElement(\"audio\");\n        this._hostElement = hostElement;\n        this._audioContext = audioContext;\n        this._audioDestination = audioDestination;\n        try {\n            if (audioElem &&\n                !!audioElem.canPlayType &&\n                (audioElem.canPlayType('audio/mpeg; codecs=\"mp3\"').replace(/^no$/, \"\") || audioElem.canPlayType(\"audio/mp3\").replace(/^no$/, \"\"))) {\n                this.isMP3supported = true;\n            }\n        }\n        catch (e) {\n            // protect error during capability check.\n        }\n        try {\n            if (audioElem && !!audioElem.canPlayType && audioElem.canPlayType('audio/ogg; codecs=\"vorbis\"').replace(/^no$/, \"\")) {\n                this.isOGGsupported = true;\n            }\n        }\n        catch (e) {\n            // protect error during capability check.\n        }\n    }\n    /**\n     * Flags the audio engine in Locked state.\n     * This happens due to new browser policies preventing audio to autoplay.\n     */\n    lock() {\n        this._triggerSuspendedState();\n    }\n    /**\n     * Unlocks the audio engine once a user action has been done on the dom.\n     * This is helpful to resume play once browser policies have been satisfied.\n     */\n    unlock() {\n        this._triggerRunningState();\n    }\n    _resumeAudioContext() {\n        let result;\n        if (this._audioContext.resume !== undefined) {\n            result = this._audioContext.resume();\n        }\n        return result || Promise.resolve();\n    }\n    _initializeAudioContext() {\n        try {\n            if (this.canUseWebAudio) {\n                if (!this._audioContext) {\n                    this._audioContext = new AudioContext();\n                }\n                // create a global volume gain node\n                this.masterGain = this._audioContext.createGain();\n                this.masterGain.gain.value = 1;\n                if (!this._audioDestination) {\n                    this._audioDestination = this._audioContext.destination;\n                }\n                this.masterGain.connect(this._audioDestination);\n                this._audioContextInitialized = true;\n                if (this._audioContext.state === \"running\") {\n                    // Do not wait for the promise to unlock.\n                    this._triggerRunningState();\n                }\n            }\n        }\n        catch (e) {\n            this.canUseWebAudio = false;\n            Logger.Error(\"Web Audio: \" + e.message);\n        }\n    }\n    _triggerRunningState() {\n        if (this._tryToRun) {\n            return;\n        }\n        this._tryToRun = true;\n        this._resumeAudioContext()\n            .then(() => {\n            this._tryToRun = false;\n            if (this._muteButton) {\n                this._hideMuteButton();\n            }\n            // Notify users that the audio stack is unlocked/unmuted\n            this.unlocked = true;\n            this.onAudioUnlockedObservable.notifyObservers(this);\n        })\n            .catch(() => {\n            this._tryToRun = false;\n            this.unlocked = false;\n        });\n    }\n    _triggerSuspendedState() {\n        this.unlocked = false;\n        this.onAudioLockedObservable.notifyObservers(this);\n        this._displayMuteButton();\n    }\n    _displayMuteButton() {\n        if (this.useCustomUnlockedButton || this._muteButton) {\n            return;\n        }\n        this._muteButton = document.createElement(\"BUTTON\");\n        this._muteButton.className = \"babylonUnmuteIcon\";\n        this._muteButton.id = \"babylonUnmuteIconBtn\";\n        this._muteButton.title = \"Unmute\";\n        const imageUrl = !window.SVGSVGElement\n            ? \"https://cdn.babylonjs.com/Assets/audio.png\"\n            : \"data:image/svg+xml;charset=UTF-8,%3Csvg%20version%3D%221.1%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%2239%22%20height%3D%2232%22%20viewBox%3D%220%200%2039%2032%22%3E%3Cpath%20fill%3D%22white%22%20d%3D%22M9.625%2018.938l-0.031%200.016h-4.953q-0.016%200-0.031-0.016v-12.453q0-0.016%200.031-0.016h4.953q0.031%200%200.031%200.016v12.453zM12.125%207.688l8.719-8.703v27.453l-8.719-8.719-0.016-0.047v-9.938zM23.359%207.875l1.406-1.406%204.219%204.203%204.203-4.203%201.422%201.406-4.219%204.219%204.219%204.203-1.484%201.359-4.141-4.156-4.219%204.219-1.406-1.422%204.219-4.203z%22%3E%3C%2Fpath%3E%3C%2Fsvg%3E\";\n        const css = \".babylonUnmuteIcon { position: absolute; left: 20px; top: 20px; height: 40px; width: 60px; background-color: rgba(51,51,51,0.7); background-image: url(\" +\n            imageUrl +\n            \");  background-size: 80%; background-repeat:no-repeat; background-position: center; background-position-y: 4px; border: none; outline: none; transition: transform 0.125s ease-out; cursor: pointer; z-index: 9999; } .babylonUnmuteIcon:hover { transform: scale(1.05) } .babylonUnmuteIcon:active { background-color: rgba(51,51,51,1) }\";\n        const style = document.createElement(\"style\");\n        style.appendChild(document.createTextNode(css));\n        document.getElementsByTagName(\"head\")[0].appendChild(style);\n        document.body.appendChild(this._muteButton);\n        this._moveButtonToTopLeft();\n        this._muteButton.addEventListener(\"touchend\", () => {\n            this._triggerRunningState();\n        }, true);\n        this._muteButton.addEventListener(\"click\", () => {\n            this._triggerRunningState();\n        }, true);\n        window.addEventListener(\"resize\", this._onResize);\n    }\n    _moveButtonToTopLeft() {\n        if (this._hostElement && this._muteButton) {\n            this._muteButton.style.top = this._hostElement.offsetTop + 20 + \"px\";\n            this._muteButton.style.left = this._hostElement.offsetLeft + 20 + \"px\";\n        }\n    }\n    _hideMuteButton() {\n        if (this._muteButton) {\n            document.body.removeChild(this._muteButton);\n            this._muteButton = null;\n        }\n    }\n    /**\n     * Destroy and release the resources associated with the audio context.\n     */\n    dispose() {\n        if (this.canUseWebAudio && this._audioContextInitialized) {\n            if (this._connectedAnalyser && this._audioContext) {\n                this._connectedAnalyser.stopDebugCanvas();\n                this._connectedAnalyser.dispose();\n                this.masterGain.disconnect();\n                this.masterGain.connect(this._audioContext.destination);\n                this._connectedAnalyser = null;\n            }\n            this.masterGain.gain.value = 1;\n        }\n        this.WarnedWebAudioUnsupported = false;\n        this._hideMuteButton();\n        window.removeEventListener(\"resize\", this._onResize);\n        this.onAudioUnlockedObservable.clear();\n        this.onAudioLockedObservable.clear();\n    }\n    /**\n     * Gets the global volume sets on the master gain.\n     * @returns the global volume if set or -1 otherwise\n     */\n    getGlobalVolume() {\n        if (this.canUseWebAudio && this._audioContextInitialized) {\n            return this.masterGain.gain.value;\n        }\n        else {\n            return -1;\n        }\n    }\n    /**\n     * Sets the global volume of your experience (sets on the master gain).\n     * @param newVolume Defines the new global volume of the application\n     */\n    setGlobalVolume(newVolume) {\n        if (this.canUseWebAudio && this._audioContextInitialized) {\n            this.masterGain.gain.value = newVolume;\n        }\n    }\n    /**\n     * Connect the audio engine to an audio analyser allowing some amazing\n     * synchronization between the sounds/music and your visualization (VuMeter for instance).\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#using-the-analyser\n     * @param analyser The analyser to connect to the engine\n     */\n    connectToAnalyser(analyser) {\n        if (this._connectedAnalyser) {\n            this._connectedAnalyser.stopDebugCanvas();\n        }\n        if (this.canUseWebAudio && this._audioContextInitialized && this._audioContext) {\n            this._connectedAnalyser = analyser;\n            this.masterGain.disconnect();\n            this._connectedAnalyser.connectAudioNodes(this.masterGain, this._audioContext.destination);\n        }\n    }\n}\n//# sourceMappingURL=audioEngine.js.map","import { Engine } from \"../Engines/engine.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\n/**\n * It could be useful to isolate your music & sounds on several tracks to better manage volume on a grouped instance of sounds.\n * It will be also used in a future release to apply effects on a specific track.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#using-sound-tracks\n */\nexport class SoundTrack {\n    /**\n     * Creates a new sound track.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#using-sound-tracks\n     * @param scene Define the scene the sound track belongs to\n     * @param options\n     */\n    constructor(scene, options = {}) {\n        /**\n         * The unique identifier of the sound track in the scene.\n         */\n        this.id = -1;\n        this._isInitialized = false;\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this._scene = scene;\n        this.soundCollection = new Array();\n        this._options = options;\n        if (!this._options.mainTrack && this._scene.soundTracks) {\n            this._scene.soundTracks.push(this);\n            this.id = this._scene.soundTracks.length - 1;\n        }\n    }\n    _initializeSoundTrackAudioGraph() {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && Engine.audioEngine.audioContext) {\n            this._outputAudioNode = Engine.audioEngine.audioContext.createGain();\n            this._outputAudioNode.connect(Engine.audioEngine.masterGain);\n            if (this._options) {\n                if (this._options.volume) {\n                    this._outputAudioNode.gain.value = this._options.volume;\n                }\n            }\n            this._isInitialized = true;\n        }\n    }\n    /**\n     * Release the sound track and its associated resources\n     */\n    dispose() {\n        if (Engine.audioEngine && Engine.audioEngine.canUseWebAudio) {\n            if (this._connectedAnalyser) {\n                this._connectedAnalyser.stopDebugCanvas();\n            }\n            while (this.soundCollection.length) {\n                this.soundCollection[0].dispose();\n            }\n            if (this._outputAudioNode) {\n                this._outputAudioNode.disconnect();\n            }\n            this._outputAudioNode = null;\n        }\n    }\n    /**\n     * Adds a sound to this sound track\n     * @param sound define the sound to add\n     * @ignoreNaming\n     */\n    addSound(sound) {\n        var _a;\n        if (!this._isInitialized) {\n            this._initializeSoundTrackAudioGraph();\n        }\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._outputAudioNode) {\n            sound.connectToSoundTrackAudioNode(this._outputAudioNode);\n        }\n        if (sound.soundTrackId) {\n            if (sound.soundTrackId === -1) {\n                this._scene.mainSoundTrack.removeSound(sound);\n            }\n            else if (this._scene.soundTracks) {\n                this._scene.soundTracks[sound.soundTrackId].removeSound(sound);\n            }\n        }\n        this.soundCollection.push(sound);\n        sound.soundTrackId = this.id;\n    }\n    /**\n     * Removes a sound to this sound track\n     * @param sound define the sound to remove\n     * @ignoreNaming\n     */\n    removeSound(sound) {\n        const index = this.soundCollection.indexOf(sound);\n        if (index !== -1) {\n            this.soundCollection.splice(index, 1);\n        }\n    }\n    /**\n     * Set a global volume for the full sound track.\n     * @param newVolume Define the new volume of the sound track\n     */\n    setVolume(newVolume) {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._outputAudioNode) {\n            this._outputAudioNode.gain.value = newVolume;\n        }\n    }\n    /**\n     * Switch the panning model to HRTF:\n     * Renders a stereo output of higher quality than equalpower — it uses a convolution with measured impulse responses from human subjects.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    switchPanningModelToHRTF() {\n        var _a;\n        if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) {\n            for (let i = 0; i < this.soundCollection.length; i++) {\n                this.soundCollection[i].switchPanningModelToHRTF();\n            }\n        }\n    }\n    /**\n     * Switch the panning model to Equal Power:\n     * Represents the equal-power panning algorithm, generally regarded as simple and efficient. equalpower is the default value.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    switchPanningModelToEqualPower() {\n        var _a;\n        if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) {\n            for (let i = 0; i < this.soundCollection.length; i++) {\n                this.soundCollection[i].switchPanningModelToEqualPower();\n            }\n        }\n    }\n    /**\n     * Connect the sound track to an audio analyser allowing some amazing\n     * synchronization between the sounds/music and your visualization (VuMeter for instance).\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#using-the-analyser\n     * @param analyser The analyser to connect to the engine\n     */\n    connectToAnalyser(analyser) {\n        var _a;\n        if (this._connectedAnalyser) {\n            this._connectedAnalyser.stopDebugCanvas();\n        }\n        this._connectedAnalyser = analyser;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._outputAudioNode) {\n            this._outputAudioNode.disconnect();\n            this._connectedAnalyser.connectAudioNodes(this._outputAudioNode, Engine.audioEngine.masterGain);\n        }\n    }\n}\n//# sourceMappingURL=soundTrack.js.map","import { Sound } from \"./sound.js\";\nimport { SoundTrack } from \"./soundTrack.js\";\nimport { Engine } from \"../Engines/engine.js\";\nimport { Matrix, Vector3 } from \"../Maths/math.vector.js\";\nimport { SceneComponentConstants } from \"../sceneComponent.js\";\nimport { Scene } from \"../scene.js\";\nimport { AbstractScene } from \"../abstractScene.js\";\nimport \"./audioEngine.js\";\nimport { PrecisionDate } from \"../Misc/precisionDate.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\n// Adds the parser to the scene parsers.\nAbstractScene.AddParser(SceneComponentConstants.NAME_AUDIO, (parsedData, scene, container, rootUrl) => {\n    var _a;\n    // TODO: add sound\n    let loadedSounds = [];\n    let loadedSound;\n    container.sounds = container.sounds || [];\n    if (parsedData.sounds !== undefined && parsedData.sounds !== null) {\n        for (let index = 0, cache = parsedData.sounds.length; index < cache; index++) {\n            const parsedSound = parsedData.sounds[index];\n            if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) {\n                if (!parsedSound.url) {\n                    parsedSound.url = parsedSound.name;\n                }\n                if (!loadedSounds[parsedSound.url]) {\n                    loadedSound = Sound.Parse(parsedSound, scene, rootUrl);\n                    loadedSounds[parsedSound.url] = loadedSound;\n                    container.sounds.push(loadedSound);\n                }\n                else {\n                    container.sounds.push(Sound.Parse(parsedSound, scene, rootUrl, loadedSounds[parsedSound.url]));\n                }\n            }\n            else {\n                container.sounds.push(new Sound(parsedSound.name, null, scene));\n            }\n        }\n    }\n    loadedSounds = [];\n});\nObject.defineProperty(Scene.prototype, \"mainSoundTrack\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        if (!this._mainSoundTrack) {\n            this._mainSoundTrack = new SoundTrack(this, { mainTrack: true });\n        }\n        return this._mainSoundTrack;\n    },\n    enumerable: true,\n    configurable: true,\n});\nScene.prototype.getSoundByName = function (name) {\n    let index;\n    for (index = 0; index < this.mainSoundTrack.soundCollection.length; index++) {\n        if (this.mainSoundTrack.soundCollection[index].name === name) {\n            return this.mainSoundTrack.soundCollection[index];\n        }\n    }\n    if (this.soundTracks) {\n        for (let sdIndex = 0; sdIndex < this.soundTracks.length; sdIndex++) {\n            for (index = 0; index < this.soundTracks[sdIndex].soundCollection.length; index++) {\n                if (this.soundTracks[sdIndex].soundCollection[index].name === name) {\n                    return this.soundTracks[sdIndex].soundCollection[index];\n                }\n            }\n        }\n    }\n    return null;\n};\nObject.defineProperty(Scene.prototype, \"audioEnabled\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        return compo.audioEnabled;\n    },\n    set: function (value) {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        if (value) {\n            compo.enableAudio();\n        }\n        else {\n            compo.disableAudio();\n        }\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(Scene.prototype, \"headphone\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        return compo.headphone;\n    },\n    set: function (value) {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        if (value) {\n            compo.switchAudioModeForHeadphones();\n        }\n        else {\n            compo.switchAudioModeForNormalSpeakers();\n        }\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(Scene.prototype, \"audioListenerPositionProvider\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        return compo.audioListenerPositionProvider;\n    },\n    set: function (value) {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        if (typeof value !== \"function\") {\n            throw new Error(\"The value passed to [Scene.audioListenerPositionProvider] must be a function that returns a Vector3\");\n        }\n        else {\n            compo.audioListenerPositionProvider = value;\n        }\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(Scene.prototype, \"audioListenerRotationProvider\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        return compo.audioListenerRotationProvider;\n    },\n    set: function (value) {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        if (typeof value !== \"function\") {\n            throw new Error(\"The value passed to [Scene.audioListenerRotationProvider] must be a function that returns a Vector3\");\n        }\n        else {\n            compo.audioListenerRotationProvider = value;\n        }\n    },\n    enumerable: true,\n    configurable: true,\n});\nObject.defineProperty(Scene.prototype, \"audioPositioningRefreshRate\", {\n    get: function () {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        return compo.audioPositioningRefreshRate;\n    },\n    set: function (value) {\n        let compo = this._getComponent(SceneComponentConstants.NAME_AUDIO);\n        if (!compo) {\n            compo = new AudioSceneComponent(this);\n            this._addComponent(compo);\n        }\n        compo.audioPositioningRefreshRate = value;\n    },\n    enumerable: true,\n    configurable: true,\n});\n/**\n * Defines the sound scene component responsible to manage any sounds\n * in a given scene.\n */\nexport class AudioSceneComponent {\n    /**\n     * Gets whether audio is enabled or not.\n     * Please use related enable/disable method to switch state.\n     */\n    get audioEnabled() {\n        return this._audioEnabled;\n    }\n    /**\n     * Gets whether audio is outputting to headphone or not.\n     * Please use the according Switch methods to change output.\n     */\n    get headphone() {\n        return this._headphone;\n    }\n    /**\n     * Creates a new instance of the component for the given scene\n     * @param scene Defines the scene to register the component in\n     */\n    constructor(scene) {\n        /**\n         * The component name helpful to identify the component in the list of scene components.\n         */\n        this.name = SceneComponentConstants.NAME_AUDIO;\n        this._audioEnabled = true;\n        this._headphone = false;\n        /**\n         * Gets or sets a refresh rate when using 3D audio positioning\n         */\n        this.audioPositioningRefreshRate = 500;\n        /**\n         * Gets or Sets a custom listener position for all sounds in the scene\n         * By default, this is the position of the first active camera\n         */\n        this.audioListenerPositionProvider = null;\n        /**\n         * Gets or Sets a custom listener rotation for all sounds in the scene\n         * By default, this is the rotation of the first active camera\n         */\n        this.audioListenerRotationProvider = null;\n        this._cachedCameraDirection = new Vector3();\n        this._cachedCameraPosition = new Vector3();\n        this._lastCheck = 0;\n        this._invertMatrixTemp = new Matrix();\n        this._cameraDirectionTemp = new Vector3();\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this.scene = scene;\n        scene.soundTracks = new Array();\n        scene.sounds = new Array();\n    }\n    /**\n     * Registers the component in a given scene\n     */\n    register() {\n        this.scene._afterRenderStage.registerStep(SceneComponentConstants.STEP_AFTERRENDER_AUDIO, this, this._afterRender);\n    }\n    /**\n     * Rebuilds the elements related to this component in case of\n     * context lost for instance.\n     */\n    rebuild() {\n        // Nothing to do here. (Not rendering related)\n    }\n    /**\n     * Serializes the component data to the specified json object\n     * @param serializationObject The object to serialize to\n     */\n    serialize(serializationObject) {\n        serializationObject.sounds = [];\n        if (this.scene.soundTracks) {\n            for (let index = 0; index < this.scene.soundTracks.length; index++) {\n                const soundtrack = this.scene.soundTracks[index];\n                for (let soundId = 0; soundId < soundtrack.soundCollection.length; soundId++) {\n                    serializationObject.sounds.push(soundtrack.soundCollection[soundId].serialize());\n                }\n            }\n        }\n    }\n    /**\n     * Adds all the elements from the container to the scene\n     * @param container the container holding the elements\n     */\n    addFromContainer(container) {\n        if (!container.sounds) {\n            return;\n        }\n        container.sounds.forEach((sound) => {\n            sound.play();\n            sound.autoplay = true;\n            this.scene.mainSoundTrack.addSound(sound);\n        });\n    }\n    /**\n     * Removes all the elements in the container from the scene\n     * @param container contains the elements to remove\n     * @param dispose if the removed element should be disposed (default: false)\n     */\n    removeFromContainer(container, dispose = false) {\n        if (!container.sounds) {\n            return;\n        }\n        container.sounds.forEach((sound) => {\n            sound.stop();\n            sound.autoplay = false;\n            this.scene.mainSoundTrack.removeSound(sound);\n            if (dispose) {\n                sound.dispose();\n            }\n        });\n    }\n    /**\n     * Disposes the component and the associated resources.\n     */\n    dispose() {\n        const scene = this.scene;\n        if (scene._mainSoundTrack) {\n            scene.mainSoundTrack.dispose();\n        }\n        if (scene.soundTracks) {\n            for (let scIndex = 0; scIndex < scene.soundTracks.length; scIndex++) {\n                scene.soundTracks[scIndex].dispose();\n            }\n        }\n    }\n    /**\n     * Disables audio in the associated scene.\n     */\n    disableAudio() {\n        const scene = this.scene;\n        this._audioEnabled = false;\n        if (Engine.audioEngine && Engine.audioEngine.audioContext) {\n            Engine.audioEngine.audioContext.suspend();\n        }\n        let i;\n        for (i = 0; i < scene.mainSoundTrack.soundCollection.length; i++) {\n            scene.mainSoundTrack.soundCollection[i].pause();\n        }\n        if (scene.soundTracks) {\n            for (i = 0; i < scene.soundTracks.length; i++) {\n                for (let j = 0; j < scene.soundTracks[i].soundCollection.length; j++) {\n                    scene.soundTracks[i].soundCollection[j].pause();\n                }\n            }\n        }\n    }\n    /**\n     * Enables audio in the associated scene.\n     */\n    enableAudio() {\n        const scene = this.scene;\n        this._audioEnabled = true;\n        if (Engine.audioEngine && Engine.audioEngine.audioContext) {\n            Engine.audioEngine.audioContext.resume();\n        }\n        let i;\n        for (i = 0; i < scene.mainSoundTrack.soundCollection.length; i++) {\n            if (scene.mainSoundTrack.soundCollection[i].isPaused) {\n                scene.mainSoundTrack.soundCollection[i].play();\n            }\n        }\n        if (scene.soundTracks) {\n            for (i = 0; i < scene.soundTracks.length; i++) {\n                for (let j = 0; j < scene.soundTracks[i].soundCollection.length; j++) {\n                    if (scene.soundTracks[i].soundCollection[j].isPaused) {\n                        scene.soundTracks[i].soundCollection[j].play();\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * Switch audio to headphone output.\n     */\n    switchAudioModeForHeadphones() {\n        const scene = this.scene;\n        this._headphone = true;\n        scene.mainSoundTrack.switchPanningModelToHRTF();\n        if (scene.soundTracks) {\n            for (let i = 0; i < scene.soundTracks.length; i++) {\n                scene.soundTracks[i].switchPanningModelToHRTF();\n            }\n        }\n    }\n    /**\n     * Switch audio to normal speakers.\n     */\n    switchAudioModeForNormalSpeakers() {\n        const scene = this.scene;\n        this._headphone = false;\n        scene.mainSoundTrack.switchPanningModelToEqualPower();\n        if (scene.soundTracks) {\n            for (let i = 0; i < scene.soundTracks.length; i++) {\n                scene.soundTracks[i].switchPanningModelToEqualPower();\n            }\n        }\n    }\n    _afterRender() {\n        const now = PrecisionDate.Now;\n        if (this._lastCheck && now - this._lastCheck < this.audioPositioningRefreshRate) {\n            return;\n        }\n        this._lastCheck = now;\n        const scene = this.scene;\n        if (!this._audioEnabled || !scene._mainSoundTrack || !scene.soundTracks || (scene._mainSoundTrack.soundCollection.length === 0 && scene.soundTracks.length === 1)) {\n            return;\n        }\n        const audioEngine = Engine.audioEngine;\n        if (!audioEngine) {\n            return;\n        }\n        if (audioEngine.audioContext) {\n            let listeningCamera = scene.activeCamera;\n            if (scene.activeCameras && scene.activeCameras.length > 0) {\n                listeningCamera = scene.activeCameras[0];\n            }\n            // A custom listener position provider was set\n            // Use the users provided position instead of camera's\n            if (this.audioListenerPositionProvider) {\n                const position = this.audioListenerPositionProvider();\n                // Set the listener position\n                audioEngine.audioContext.listener.setPosition(position.x || 0, position.y || 0, position.z || 0);\n                // Check if there is a listening camera\n            }\n            else if (listeningCamera) {\n                // Set the listener position to the listening camera global position\n                if (!this._cachedCameraPosition.equals(listeningCamera.globalPosition)) {\n                    this._cachedCameraPosition.copyFrom(listeningCamera.globalPosition);\n                    audioEngine.audioContext.listener.setPosition(listeningCamera.globalPosition.x, listeningCamera.globalPosition.y, listeningCamera.globalPosition.z);\n                }\n            }\n            // Otherwise set the listener position to 0, 0 ,0\n            else {\n                // Set the listener position\n                audioEngine.audioContext.listener.setPosition(0, 0, 0);\n            }\n            // A custom listener rotation provider was set\n            // Use the users provided rotation instead of camera's\n            if (this.audioListenerRotationProvider) {\n                const rotation = this.audioListenerRotationProvider();\n                audioEngine.audioContext.listener.setOrientation(rotation.x || 0, rotation.y || 0, rotation.z || 0, 0, 1, 0);\n                // Check if there is a listening camera\n            }\n            else if (listeningCamera) {\n                // for VR cameras\n                if (listeningCamera.rigCameras && listeningCamera.rigCameras.length > 0) {\n                    listeningCamera = listeningCamera.rigCameras[0];\n                }\n                listeningCamera.getViewMatrix().invertToRef(this._invertMatrixTemp);\n                Vector3.TransformNormalToRef(AudioSceneComponent._CameraDirection, this._invertMatrixTemp, this._cameraDirectionTemp);\n                this._cameraDirectionTemp.normalize();\n                // To avoid some errors on GearVR\n                if (!isNaN(this._cameraDirectionTemp.x) && !isNaN(this._cameraDirectionTemp.y) && !isNaN(this._cameraDirectionTemp.z)) {\n                    if (!this._cachedCameraDirection.equals(this._cameraDirectionTemp)) {\n                        this._cachedCameraDirection.copyFrom(this._cameraDirectionTemp);\n                        audioEngine.audioContext.listener.setOrientation(this._cameraDirectionTemp.x, this._cameraDirectionTemp.y, this._cameraDirectionTemp.z, 0, 1, 0);\n                    }\n                }\n            }\n            // Otherwise set the listener rotation to 0, 0 ,0\n            else {\n                // Set the listener position\n                audioEngine.audioContext.listener.setOrientation(0, 0, 0, 0, 1, 0);\n            }\n            let i;\n            for (i = 0; i < scene.mainSoundTrack.soundCollection.length; i++) {\n                const sound = scene.mainSoundTrack.soundCollection[i];\n                if (sound.useCustomAttenuation) {\n                    sound.updateDistanceFromListener();\n                }\n            }\n            if (scene.soundTracks) {\n                for (i = 0; i < scene.soundTracks.length; i++) {\n                    for (let j = 0; j < scene.soundTracks[i].soundCollection.length; j++) {\n                        const sound = scene.soundTracks[i].soundCollection[j];\n                        if (sound.useCustomAttenuation) {\n                            sound.updateDistanceFromListener();\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\nAudioSceneComponent._CameraDirection = new Vector3(0, 0, -1);\nSound._SceneComponentInitialization = (scene) => {\n    let compo = scene._getComponent(SceneComponentConstants.NAME_AUDIO);\n    if (!compo) {\n        compo = new AudioSceneComponent(scene);\n        scene._addComponent(compo);\n    }\n};\n//# sourceMappingURL=audioSceneComponent.js.map","import { Tools } from \"../Misc/tools.js\";\nimport { Observable } from \"../Misc/observable.js\";\nimport { Vector3 } from \"../Maths/math.vector.js\";\nimport { Engine } from \"../Engines/engine.js\";\nimport { Logger } from \"../Misc/logger.js\";\nimport { _WarnImport } from \"../Misc/devTools.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\n/**\n * Defines a sound that can be played in the application.\n * The sound can either be an ambient track or a simple sound played in reaction to a user action.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic\n */\nexport class Sound {\n    /**\n     * Does the sound loop after it finishes playing once.\n     */\n    get loop() {\n        return this._loop;\n    }\n    set loop(value) {\n        if (value === this._loop) {\n            return;\n        }\n        this._loop = value;\n        this.updateOptions({ loop: value });\n    }\n    /**\n     * Gets the current time for the sound.\n     */\n    get currentTime() {\n        var _a;\n        if (this._htmlAudioElement) {\n            return this._htmlAudioElement.currentTime;\n        }\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext) && (this.isPlaying || this.isPaused)) {\n            // The `_currentTime` member is only updated when the sound is paused. Add the time since the last start\n            // to get the actual current time.\n            const timeSinceLastStart = this.isPaused ? 0 : Engine.audioEngine.audioContext.currentTime - this._startTime;\n            return this._currentTime + timeSinceLastStart;\n        }\n        return 0;\n    }\n    /**\n     * Does this sound enables spatial sound.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    get spatialSound() {\n        return this._spatialSound;\n    }\n    /**\n     * Does this sound enables spatial sound.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    set spatialSound(newValue) {\n        var _a;\n        this._spatialSound = newValue;\n        if (this._spatialSound && ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && Engine.audioEngine.audioContext) {\n            this._createSpatialParameters();\n        }\n    }\n    /**\n     * Create a sound and attach it to a scene\n     * @param name Name of your sound\n     * @param urlOrArrayBuffer Url to the sound to load async or ArrayBuffer, it also works with MediaStreams and AudioBuffers\n     * @param scene defines the scene the sound belongs to\n     * @param readyToPlayCallback Provide a callback function if you'd like to load your code once the sound is ready to be played\n     * @param options Objects to provide with the current available options: autoplay, loop, volume, spatialSound, maxDistance, rolloffFactor, refDistance, distanceModel, panningModel, streaming\n     */\n    constructor(name, urlOrArrayBuffer, scene, readyToPlayCallback = null, options) {\n        var _a, _b, _c, _d, _e;\n        /**\n         * Does the sound autoplay once loaded.\n         */\n        this.autoplay = false;\n        this._loop = false;\n        /**\n         * Does the sound use a custom attenuation curve to simulate the falloff\n         * happening when the source gets further away from the camera.\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-your-own-custom-attenuation-function\n         */\n        this.useCustomAttenuation = false;\n        /**\n         * Is this sound currently played.\n         */\n        this.isPlaying = false;\n        /**\n         * Is this sound currently paused.\n         */\n        this.isPaused = false;\n        /**\n         * Define the reference distance the sound should be heard perfectly.\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n         */\n        this.refDistance = 1;\n        /**\n         * Define the roll off factor of spatial sounds.\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n         */\n        this.rolloffFactor = 1;\n        /**\n         * Define the max distance the sound should be heard (intensity just became 0 at this point).\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n         */\n        this.maxDistance = 100;\n        /**\n         * Define the distance attenuation model the sound will follow.\n         * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n         */\n        this.distanceModel = \"linear\";\n        /**\n         * Gets or sets an object used to store user defined information for the sound.\n         */\n        this.metadata = null;\n        /**\n         * Observable event when the current playing sound finishes.\n         */\n        this.onEndedObservable = new Observable();\n        this._spatialSound = false;\n        this._panningModel = \"equalpower\";\n        this._playbackRate = 1;\n        this._streaming = false;\n        this._startTime = 0;\n        this._currentTime = 0;\n        this._position = Vector3.Zero();\n        this._localDirection = new Vector3(1, 0, 0);\n        this._volume = 1;\n        this._isReadyToPlay = false;\n        this._isDirectional = false;\n        // Used if you'd like to create a directional sound.\n        // If not set, the sound will be omnidirectional\n        this._coneInnerAngle = 360;\n        this._coneOuterAngle = 360;\n        this._coneOuterGain = 0;\n        this._isOutputConnected = false;\n        this._urlType = \"Unknown\";\n        this.name = name;\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this._scene = scene;\n        Sound._SceneComponentInitialization(scene);\n        this._readyToPlayCallback = readyToPlayCallback;\n        // Default custom attenuation function is a linear attenuation\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this._customAttenuationFunction = (currentVolume, currentDistance, maxDistance, refDistance, rolloffFactor) => {\n            if (currentDistance < maxDistance) {\n                return currentVolume * (1 - currentDistance / maxDistance);\n            }\n            else {\n                return 0;\n            }\n        };\n        if (options) {\n            this.autoplay = options.autoplay || false;\n            this._loop = options.loop || false;\n            // if volume === 0, we need another way to check this option\n            if (options.volume !== undefined) {\n                this._volume = options.volume;\n            }\n            this._spatialSound = (_a = options.spatialSound) !== null && _a !== void 0 ? _a : false;\n            this.maxDistance = (_b = options.maxDistance) !== null && _b !== void 0 ? _b : 100;\n            this.useCustomAttenuation = (_c = options.useCustomAttenuation) !== null && _c !== void 0 ? _c : false;\n            this.rolloffFactor = options.rolloffFactor || 1;\n            this.refDistance = options.refDistance || 1;\n            this.distanceModel = options.distanceModel || \"linear\";\n            this._playbackRate = options.playbackRate || 1;\n            this._streaming = (_d = options.streaming) !== null && _d !== void 0 ? _d : false;\n            this._length = options.length;\n            this._offset = options.offset;\n        }\n        if (((_e = Engine.audioEngine) === null || _e === void 0 ? void 0 : _e.canUseWebAudio) && Engine.audioEngine.audioContext) {\n            this._soundGain = Engine.audioEngine.audioContext.createGain();\n            this._soundGain.gain.value = this._volume;\n            this._inputAudioNode = this._soundGain;\n            this._outputAudioNode = this._soundGain;\n            if (this._spatialSound) {\n                this._createSpatialParameters();\n            }\n            this._scene.mainSoundTrack.addSound(this);\n            let validParameter = true;\n            // if no parameter is passed, you need to call setAudioBuffer yourself to prepare the sound\n            if (urlOrArrayBuffer) {\n                try {\n                    if (typeof urlOrArrayBuffer === \"string\") {\n                        this._urlType = \"String\";\n                    }\n                    else if (urlOrArrayBuffer instanceof ArrayBuffer) {\n                        this._urlType = \"ArrayBuffer\";\n                    }\n                    else if (urlOrArrayBuffer instanceof HTMLMediaElement) {\n                        this._urlType = \"MediaElement\";\n                    }\n                    else if (urlOrArrayBuffer instanceof MediaStream) {\n                        this._urlType = \"MediaStream\";\n                    }\n                    else if (urlOrArrayBuffer instanceof AudioBuffer) {\n                        this._urlType = \"AudioBuffer\";\n                    }\n                    else if (Array.isArray(urlOrArrayBuffer)) {\n                        this._urlType = \"Array\";\n                    }\n                    let urls = [];\n                    let codecSupportedFound = false;\n                    switch (this._urlType) {\n                        case \"MediaElement\":\n                            this._streaming = true;\n                            this._isReadyToPlay = true;\n                            this._streamingSource = Engine.audioEngine.audioContext.createMediaElementSource(urlOrArrayBuffer);\n                            if (this.autoplay) {\n                                this.play(0, this._offset, this._length);\n                            }\n                            if (this._readyToPlayCallback) {\n                                this._readyToPlayCallback();\n                            }\n                            break;\n                        case \"MediaStream\":\n                            this._streaming = true;\n                            this._isReadyToPlay = true;\n                            this._streamingSource = Engine.audioEngine.audioContext.createMediaStreamSource(urlOrArrayBuffer);\n                            if (this.autoplay) {\n                                this.play(0, this._offset, this._length);\n                            }\n                            if (this._readyToPlayCallback) {\n                                this._readyToPlayCallback();\n                            }\n                            break;\n                        case \"ArrayBuffer\":\n                            if (urlOrArrayBuffer.byteLength > 0) {\n                                codecSupportedFound = true;\n                                this._soundLoaded(urlOrArrayBuffer);\n                            }\n                            break;\n                        case \"AudioBuffer\":\n                            this._audioBufferLoaded(urlOrArrayBuffer);\n                            break;\n                        case \"String\":\n                            urls.push(urlOrArrayBuffer);\n                        // eslint-disable-next-line no-fallthrough\n                        case \"Array\":\n                            if (urls.length === 0) {\n                                urls = urlOrArrayBuffer;\n                            }\n                            // If we found a supported format, we load it immediately and stop the loop\n                            for (let i = 0; i < urls.length; i++) {\n                                const url = urls[i];\n                                codecSupportedFound =\n                                    (options && options.skipCodecCheck) ||\n                                        (url.indexOf(\".mp3\", url.length - 4) !== -1 && Engine.audioEngine.isMP3supported) ||\n                                        (url.indexOf(\".ogg\", url.length - 4) !== -1 && Engine.audioEngine.isOGGsupported) ||\n                                        url.indexOf(\".wav\", url.length - 4) !== -1 ||\n                                        url.indexOf(\".m4a\", url.length - 4) !== -1 ||\n                                        url.indexOf(\".mp4\", url.length - 4) !== -1 ||\n                                        url.indexOf(\"blob:\") !== -1;\n                                if (codecSupportedFound) {\n                                    // Loading sound\n                                    if (!this._streaming) {\n                                        this._scene._loadFile(url, (data) => {\n                                            this._soundLoaded(data);\n                                        }, undefined, true, true, (exception) => {\n                                            if (exception) {\n                                                Logger.Error(\"XHR \" + exception.status + \" error on: \" + url + \".\");\n                                            }\n                                            Logger.Error(\"Sound creation aborted.\");\n                                            this._scene.mainSoundTrack.removeSound(this);\n                                        });\n                                    }\n                                    // Streaming sound using HTML5 Audio tag\n                                    else {\n                                        this._htmlAudioElement = new Audio(url);\n                                        this._htmlAudioElement.controls = false;\n                                        this._htmlAudioElement.loop = this.loop;\n                                        Tools.SetCorsBehavior(url, this._htmlAudioElement);\n                                        this._htmlAudioElement.preload = \"auto\";\n                                        this._htmlAudioElement.addEventListener(\"canplaythrough\", () => {\n                                            this._isReadyToPlay = true;\n                                            if (this.autoplay) {\n                                                this.play(0, this._offset, this._length);\n                                            }\n                                            if (this._readyToPlayCallback) {\n                                                this._readyToPlayCallback();\n                                            }\n                                        });\n                                        document.body.appendChild(this._htmlAudioElement);\n                                        this._htmlAudioElement.load();\n                                    }\n                                    break;\n                                }\n                            }\n                            break;\n                        default:\n                            validParameter = false;\n                            break;\n                    }\n                    if (!validParameter) {\n                        Logger.Error(\"Parameter must be a URL to the sound, an Array of URLs (.mp3 & .ogg) or an ArrayBuffer of the sound.\");\n                    }\n                    else {\n                        if (!codecSupportedFound) {\n                            this._isReadyToPlay = true;\n                            // Simulating a ready to play event to avoid breaking code path\n                            if (this._readyToPlayCallback) {\n                                setTimeout(() => {\n                                    if (this._readyToPlayCallback) {\n                                        this._readyToPlayCallback();\n                                    }\n                                }, 1000);\n                            }\n                        }\n                    }\n                }\n                catch (ex) {\n                    Logger.Error(\"Unexpected error. Sound creation aborted.\");\n                    this._scene.mainSoundTrack.removeSound(this);\n                }\n            }\n        }\n        else {\n            // Adding an empty sound to avoid breaking audio calls for non Web Audio browsers\n            this._scene.mainSoundTrack.addSound(this);\n            if (Engine.audioEngine && !Engine.audioEngine.WarnedWebAudioUnsupported) {\n                Logger.Error(\"Web Audio is not supported by your browser.\");\n                Engine.audioEngine.WarnedWebAudioUnsupported = true;\n            }\n            // Simulating a ready to play event to avoid breaking code for non web audio browsers\n            if (this._readyToPlayCallback) {\n                setTimeout(() => {\n                    if (this._readyToPlayCallback) {\n                        this._readyToPlayCallback();\n                    }\n                }, 1000);\n            }\n        }\n    }\n    /**\n     * Release the sound and its associated resources\n     */\n    dispose() {\n        var _a;\n        if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) {\n            if (this.isPlaying) {\n                this.stop();\n            }\n            this._isReadyToPlay = false;\n            if (this.soundTrackId === -1) {\n                this._scene.mainSoundTrack.removeSound(this);\n            }\n            else if (this._scene.soundTracks) {\n                this._scene.soundTracks[this.soundTrackId].removeSound(this);\n            }\n            if (this._soundGain) {\n                this._soundGain.disconnect();\n                this._soundGain = null;\n            }\n            if (this._soundPanner) {\n                this._soundPanner.disconnect();\n                this._soundPanner = null;\n            }\n            if (this._soundSource) {\n                this._soundSource.disconnect();\n                this._soundSource = null;\n            }\n            this._audioBuffer = null;\n            if (this._htmlAudioElement) {\n                this._htmlAudioElement.pause();\n                this._htmlAudioElement.src = \"\";\n                document.body.removeChild(this._htmlAudioElement);\n            }\n            if (this._streamingSource) {\n                this._streamingSource.disconnect();\n            }\n            if (this._connectedTransformNode && this._registerFunc) {\n                this._connectedTransformNode.unregisterAfterWorldMatrixUpdate(this._registerFunc);\n                this._connectedTransformNode = null;\n            }\n        }\n    }\n    /**\n     * Gets if the sounds is ready to be played or not.\n     * @returns true if ready, otherwise false\n     */\n    isReady() {\n        return this._isReadyToPlay;\n    }\n    /**\n     * Get the current class name.\n     * @returns current class name\n     */\n    getClassName() {\n        return \"Sound\";\n    }\n    _audioBufferLoaded(buffer) {\n        var _a;\n        if (!((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext)) {\n            return;\n        }\n        this._audioBuffer = buffer;\n        this._isReadyToPlay = true;\n        if (this.autoplay) {\n            this.play(0, this._offset, this._length);\n        }\n        if (this._readyToPlayCallback) {\n            this._readyToPlayCallback();\n        }\n    }\n    _soundLoaded(audioData) {\n        var _a;\n        if (!((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext)) {\n            return;\n        }\n        Engine.audioEngine.audioContext.decodeAudioData(audioData, (buffer) => {\n            this._audioBufferLoaded(buffer);\n        }, (err) => {\n            Logger.Error(\"Error while decoding audio data for: \" + this.name + \" / Error: \" + err);\n        });\n    }\n    /**\n     * Sets the data of the sound from an audiobuffer\n     * @param audioBuffer The audioBuffer containing the data\n     */\n    setAudioBuffer(audioBuffer) {\n        var _a;\n        if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) {\n            this._audioBuffer = audioBuffer;\n            this._isReadyToPlay = true;\n        }\n    }\n    /**\n     * Updates the current sounds options such as maxdistance, loop...\n     * @param options A JSON object containing values named as the object properties\n     */\n    updateOptions(options) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n        if (options) {\n            this.loop = (_a = options.loop) !== null && _a !== void 0 ? _a : this.loop;\n            this.maxDistance = (_b = options.maxDistance) !== null && _b !== void 0 ? _b : this.maxDistance;\n            this.useCustomAttenuation = (_c = options.useCustomAttenuation) !== null && _c !== void 0 ? _c : this.useCustomAttenuation;\n            this.rolloffFactor = (_d = options.rolloffFactor) !== null && _d !== void 0 ? _d : this.rolloffFactor;\n            this.refDistance = (_e = options.refDistance) !== null && _e !== void 0 ? _e : this.refDistance;\n            this.distanceModel = (_f = options.distanceModel) !== null && _f !== void 0 ? _f : this.distanceModel;\n            this._playbackRate = (_g = options.playbackRate) !== null && _g !== void 0 ? _g : this._playbackRate;\n            this._length = (_h = options.length) !== null && _h !== void 0 ? _h : undefined;\n            this._setOffset((_j = options.offset) !== null && _j !== void 0 ? _j : undefined);\n            this.setVolume((_k = options.volume) !== null && _k !== void 0 ? _k : this._volume);\n            this._updateSpatialParameters();\n            if (this.isPlaying) {\n                if (this._streaming && this._htmlAudioElement) {\n                    this._htmlAudioElement.playbackRate = this._playbackRate;\n                    if (this._htmlAudioElement.loop !== this.loop) {\n                        this._htmlAudioElement.loop = this.loop;\n                    }\n                }\n                else {\n                    if (this._soundSource) {\n                        this._soundSource.playbackRate.value = this._playbackRate;\n                        if (this._soundSource.loop !== this.loop) {\n                            this._soundSource.loop = this.loop;\n                        }\n                        if (this._offset !== undefined && this._soundSource.loopStart !== this._offset) {\n                            this._soundSource.loopStart = this._offset;\n                        }\n                        if (this._length !== undefined && this._length !== this._soundSource.loopEnd) {\n                            this._soundSource.loopEnd = (this._offset | 0) + this._length;\n                        }\n                    }\n                }\n            }\n        }\n    }\n    _createSpatialParameters() {\n        var _a, _b;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && Engine.audioEngine.audioContext) {\n            if (this._scene.headphone) {\n                this._panningModel = \"HRTF\";\n            }\n            this._soundPanner = (_b = this._soundPanner) !== null && _b !== void 0 ? _b : Engine.audioEngine.audioContext.createPanner();\n            if (this._soundPanner && this._outputAudioNode) {\n                this._updateSpatialParameters();\n                this._soundPanner.connect(this._outputAudioNode);\n                this._inputAudioNode = this._soundPanner;\n            }\n        }\n    }\n    _updateSpatialParameters() {\n        if (this._spatialSound && this._soundPanner) {\n            if (this.useCustomAttenuation) {\n                // Tricks to disable in a way embedded Web Audio attenuation\n                this._soundPanner.distanceModel = \"linear\";\n                this._soundPanner.maxDistance = Number.MAX_VALUE;\n                this._soundPanner.refDistance = 1;\n                this._soundPanner.rolloffFactor = 1;\n                this._soundPanner.panningModel = this._panningModel;\n            }\n            else {\n                this._soundPanner.distanceModel = this.distanceModel;\n                this._soundPanner.maxDistance = this.maxDistance;\n                this._soundPanner.refDistance = this.refDistance;\n                this._soundPanner.rolloffFactor = this.rolloffFactor;\n                this._soundPanner.panningModel = this._panningModel;\n            }\n        }\n    }\n    /**\n     * Switch the panning model to HRTF:\n     * Renders a stereo output of higher quality than equalpower — it uses a convolution with measured impulse responses from human subjects.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    switchPanningModelToHRTF() {\n        this._panningModel = \"HRTF\";\n        this._switchPanningModel();\n    }\n    /**\n     * Switch the panning model to Equal Power:\n     * Represents the equal-power panning algorithm, generally regarded as simple and efficient. equalpower is the default value.\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-a-spatial-3d-sound\n     */\n    switchPanningModelToEqualPower() {\n        this._panningModel = \"equalpower\";\n        this._switchPanningModel();\n    }\n    _switchPanningModel() {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._spatialSound && this._soundPanner) {\n            this._soundPanner.panningModel = this._panningModel;\n        }\n    }\n    /**\n     * Connect this sound to a sound track audio node like gain...\n     * @param soundTrackAudioNode the sound track audio node to connect to\n     */\n    connectToSoundTrackAudioNode(soundTrackAudioNode) {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._outputAudioNode) {\n            if (this._isOutputConnected) {\n                this._outputAudioNode.disconnect();\n            }\n            this._outputAudioNode.connect(soundTrackAudioNode);\n            this._isOutputConnected = true;\n        }\n    }\n    /**\n     * Transform this sound into a directional source\n     * @param coneInnerAngle Size of the inner cone in degree\n     * @param coneOuterAngle Size of the outer cone in degree\n     * @param coneOuterGain Volume of the sound outside the outer cone (between 0.0 and 1.0)\n     */\n    setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n        if (coneOuterAngle < coneInnerAngle) {\n            Logger.Error(\"setDirectionalCone(): outer angle of the cone must be superior or equal to the inner angle.\");\n            return;\n        }\n        this._coneInnerAngle = coneInnerAngle;\n        this._coneOuterAngle = coneOuterAngle;\n        this._coneOuterGain = coneOuterGain;\n        this._isDirectional = true;\n        if (this.isPlaying && this.loop) {\n            this.stop();\n            this.play(0, this._offset, this._length);\n        }\n    }\n    /**\n     * Gets or sets the inner angle for the directional cone.\n     */\n    get directionalConeInnerAngle() {\n        return this._coneInnerAngle;\n    }\n    /**\n     * Gets or sets the inner angle for the directional cone.\n     */\n    set directionalConeInnerAngle(value) {\n        var _a;\n        if (value != this._coneInnerAngle) {\n            if (this._coneOuterAngle < value) {\n                Logger.Error(\"directionalConeInnerAngle: outer angle of the cone must be superior or equal to the inner angle.\");\n                return;\n            }\n            this._coneInnerAngle = value;\n            if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._spatialSound && this._soundPanner) {\n                this._soundPanner.coneInnerAngle = this._coneInnerAngle;\n            }\n        }\n    }\n    /**\n     * Gets or sets the outer angle for the directional cone.\n     */\n    get directionalConeOuterAngle() {\n        return this._coneOuterAngle;\n    }\n    /**\n     * Gets or sets the outer angle for the directional cone.\n     */\n    set directionalConeOuterAngle(value) {\n        var _a;\n        if (value != this._coneOuterAngle) {\n            if (value < this._coneInnerAngle) {\n                Logger.Error(\"directionalConeOuterAngle: outer angle of the cone must be superior or equal to the inner angle.\");\n                return;\n            }\n            this._coneOuterAngle = value;\n            if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._spatialSound && this._soundPanner) {\n                this._soundPanner.coneOuterAngle = this._coneOuterAngle;\n            }\n        }\n    }\n    /**\n     * Sets the position of the emitter if spatial sound is enabled\n     * @param newPosition Defines the new position\n     */\n    setPosition(newPosition) {\n        var _a;\n        if (newPosition.equals(this._position)) {\n            return;\n        }\n        this._position.copyFrom(newPosition);\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._spatialSound && this._soundPanner && !isNaN(this._position.x) && !isNaN(this._position.y) && !isNaN(this._position.z)) {\n            this._soundPanner.positionX.value = this._position.x;\n            this._soundPanner.positionY.value = this._position.y;\n            this._soundPanner.positionZ.value = this._position.z;\n        }\n    }\n    /**\n     * Sets the local direction of the emitter if spatial sound is enabled\n     * @param newLocalDirection Defines the new local direction\n     */\n    setLocalDirectionToMesh(newLocalDirection) {\n        var _a;\n        this._localDirection = newLocalDirection;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._connectedTransformNode && this.isPlaying) {\n            this._updateDirection();\n        }\n    }\n    _updateDirection() {\n        if (!this._connectedTransformNode || !this._soundPanner) {\n            return;\n        }\n        const mat = this._connectedTransformNode.getWorldMatrix();\n        const direction = Vector3.TransformNormal(this._localDirection, mat);\n        direction.normalize();\n        this._soundPanner.orientationX.value = direction.x;\n        this._soundPanner.orientationY.value = direction.y;\n        this._soundPanner.orientationZ.value = direction.z;\n    }\n    /** @internal */\n    updateDistanceFromListener() {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._connectedTransformNode && this.useCustomAttenuation && this._soundGain && this._scene.activeCamera) {\n            const distance = this._connectedTransformNode.getDistanceToCamera(this._scene.activeCamera);\n            this._soundGain.gain.value = this._customAttenuationFunction(this._volume, distance, this.maxDistance, this.refDistance, this.rolloffFactor);\n        }\n    }\n    /**\n     * Sets a new custom attenuation function for the sound.\n     * @param callback Defines the function used for the attenuation\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#creating-your-own-custom-attenuation-function\n     */\n    setAttenuationFunction(callback) {\n        this._customAttenuationFunction = callback;\n    }\n    /**\n     * Play the sound\n     * @param time (optional) Start the sound after X seconds. Start immediately (0) by default.\n     * @param offset (optional) Start the sound at a specific time in seconds\n     * @param length (optional) Sound duration (in seconds)\n     */\n    play(time, offset, length) {\n        var _a, _b, _c, _d;\n        if (this._isReadyToPlay && this._scene.audioEnabled && ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext)) {\n            try {\n                let startTime = time ? ((_b = Engine.audioEngine) === null || _b === void 0 ? void 0 : _b.audioContext.currentTime) + time : (_c = Engine.audioEngine) === null || _c === void 0 ? void 0 : _c.audioContext.currentTime;\n                if (!this._soundSource || !this._streamingSource) {\n                    if (this._spatialSound && this._soundPanner) {\n                        if (!isNaN(this._position.x) && !isNaN(this._position.y) && !isNaN(this._position.z)) {\n                            this._soundPanner.positionX.value = this._position.x;\n                            this._soundPanner.positionY.value = this._position.y;\n                            this._soundPanner.positionZ.value = this._position.z;\n                        }\n                        if (this._isDirectional) {\n                            this._soundPanner.coneInnerAngle = this._coneInnerAngle;\n                            this._soundPanner.coneOuterAngle = this._coneOuterAngle;\n                            this._soundPanner.coneOuterGain = this._coneOuterGain;\n                            if (this._connectedTransformNode) {\n                                this._updateDirection();\n                            }\n                            else {\n                                this._soundPanner.setOrientation(this._localDirection.x, this._localDirection.y, this._localDirection.z);\n                            }\n                        }\n                    }\n                }\n                if (this._streaming) {\n                    if (!this._streamingSource) {\n                        this._streamingSource = Engine.audioEngine.audioContext.createMediaElementSource(this._htmlAudioElement);\n                        this._htmlAudioElement.onended = () => {\n                            this._onended();\n                        };\n                        this._htmlAudioElement.playbackRate = this._playbackRate;\n                    }\n                    this._streamingSource.disconnect();\n                    if (this._inputAudioNode) {\n                        this._streamingSource.connect(this._inputAudioNode);\n                    }\n                    if (this._htmlAudioElement) {\n                        // required to manage properly the new suspended default state of Chrome\n                        // When the option 'streaming: true' is used, we need first to wait for\n                        // the audio engine to be unlocked by a user gesture before trying to play\n                        // an HTML Audio element\n                        const tryToPlay = () => {\n                            var _a, _b;\n                            if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.unlocked) {\n                                const playPromise = this._htmlAudioElement.play();\n                                // In browsers that don’t yet support this functionality,\n                                // playPromise won’t be defined.\n                                if (playPromise !== undefined) {\n                                    playPromise.catch(() => {\n                                        var _a, _b;\n                                        // Automatic playback failed.\n                                        // Waiting for the audio engine to be unlocked by user click on unmute\n                                        (_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.lock();\n                                        if (this.loop || this.autoplay) {\n                                            (_b = Engine.audioEngine) === null || _b === void 0 ? void 0 : _b.onAudioUnlockedObservable.addOnce(() => {\n                                                tryToPlay();\n                                            });\n                                        }\n                                    });\n                                }\n                            }\n                            else {\n                                if (this.loop || this.autoplay) {\n                                    (_b = Engine.audioEngine) === null || _b === void 0 ? void 0 : _b.onAudioUnlockedObservable.addOnce(() => {\n                                        tryToPlay();\n                                    });\n                                }\n                            }\n                        };\n                        tryToPlay();\n                    }\n                }\n                else {\n                    const tryToPlay = () => {\n                        var _a, _b, _c, _d;\n                        if ((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext) {\n                            length = length || this._length;\n                            if (offset !== undefined) {\n                                this._setOffset(offset);\n                            }\n                            if (this._soundSource) {\n                                const oldSource = this._soundSource;\n                                oldSource.onended = () => {\n                                    oldSource.disconnect();\n                                };\n                            }\n                            this._soundSource = (_b = Engine.audioEngine) === null || _b === void 0 ? void 0 : _b.audioContext.createBufferSource();\n                            if (this._soundSource && this._inputAudioNode) {\n                                this._soundSource.buffer = this._audioBuffer;\n                                this._soundSource.connect(this._inputAudioNode);\n                                this._soundSource.loop = this.loop;\n                                if (offset !== undefined) {\n                                    this._soundSource.loopStart = offset;\n                                }\n                                if (length !== undefined) {\n                                    this._soundSource.loopEnd = (offset | 0) + length;\n                                }\n                                this._soundSource.playbackRate.value = this._playbackRate;\n                                this._soundSource.onended = () => {\n                                    this._onended();\n                                };\n                                startTime = time ? ((_c = Engine.audioEngine) === null || _c === void 0 ? void 0 : _c.audioContext.currentTime) + time : Engine.audioEngine.audioContext.currentTime;\n                                const actualOffset = ((this.isPaused ? this.currentTime : 0) + ((_d = this._offset) !== null && _d !== void 0 ? _d : 0)) % this._soundSource.buffer.duration;\n                                this._soundSource.start(startTime, actualOffset, this.loop ? undefined : length);\n                            }\n                        }\n                    };\n                    if (((_d = Engine.audioEngine) === null || _d === void 0 ? void 0 : _d.audioContext.state) === \"suspended\") {\n                        // Wait a bit for FF as context seems late to be ready.\n                        setTimeout(() => {\n                            var _a;\n                            if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext.state) === \"suspended\") {\n                                // Automatic playback failed.\n                                // Waiting for the audio engine to be unlocked by user click on unmute\n                                Engine.audioEngine.lock();\n                                if (this.loop || this.autoplay) {\n                                    Engine.audioEngine.onAudioUnlockedObservable.addOnce(() => {\n                                        tryToPlay();\n                                    });\n                                }\n                            }\n                            else {\n                                tryToPlay();\n                            }\n                        }, 500);\n                    }\n                    else {\n                        tryToPlay();\n                    }\n                }\n                this._startTime = startTime;\n                this.isPlaying = true;\n                this.isPaused = false;\n            }\n            catch (ex) {\n                Logger.Error(\"Error while trying to play audio: \" + this.name + \", \" + ex.message);\n            }\n        }\n    }\n    _onended() {\n        this.isPlaying = false;\n        this._startTime = 0;\n        this._currentTime = 0;\n        if (this.onended) {\n            this.onended();\n        }\n        this.onEndedObservable.notifyObservers(this);\n    }\n    /**\n     * Stop the sound\n     * @param time (optional) Stop the sound after X seconds. Stop immediately (0) by default.\n     */\n    stop(time) {\n        var _a;\n        if (this.isPlaying) {\n            if (this._streaming) {\n                if (this._htmlAudioElement) {\n                    this._htmlAudioElement.pause();\n                    // Test needed for Firefox or it will generate an Invalid State Error\n                    if (this._htmlAudioElement.currentTime > 0) {\n                        this._htmlAudioElement.currentTime = 0;\n                    }\n                }\n                else {\n                    this._streamingSource.disconnect();\n                }\n                this.isPlaying = false;\n            }\n            else if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext) && this._soundSource) {\n                const stopTime = time ? Engine.audioEngine.audioContext.currentTime + time : undefined;\n                this._soundSource.onended = () => {\n                    this.isPlaying = false;\n                    this.isPaused = false;\n                    this._startTime = 0;\n                    this._currentTime = 0;\n                    if (this._soundSource) {\n                        this._soundSource.onended = () => void 0;\n                    }\n                    this._onended();\n                };\n                this._soundSource.stop(stopTime);\n            }\n        }\n        else if (this.isPaused) {\n            this.isPaused = false;\n            this._startTime = 0;\n            this._currentTime = 0;\n        }\n    }\n    /**\n     * Put the sound in pause\n     */\n    pause() {\n        var _a;\n        if (this.isPlaying) {\n            if (this._streaming) {\n                if (this._htmlAudioElement) {\n                    this._htmlAudioElement.pause();\n                }\n                else {\n                    this._streamingSource.disconnect();\n                }\n                this.isPlaying = false;\n                this.isPaused = true;\n            }\n            else if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.audioContext) && this._soundSource) {\n                this._soundSource.onended = () => void 0;\n                this._soundSource.stop();\n                this.isPlaying = false;\n                this.isPaused = true;\n                this._currentTime += Engine.audioEngine.audioContext.currentTime - this._startTime;\n            }\n        }\n    }\n    /**\n     * Sets a dedicated volume for this sounds\n     * @param newVolume Define the new volume of the sound\n     * @param time Define time for gradual change to new volume\n     */\n    setVolume(newVolume, time) {\n        var _a;\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._soundGain) {\n            if (time && Engine.audioEngine.audioContext) {\n                this._soundGain.gain.cancelScheduledValues(Engine.audioEngine.audioContext.currentTime);\n                this._soundGain.gain.setValueAtTime(this._soundGain.gain.value, Engine.audioEngine.audioContext.currentTime);\n                this._soundGain.gain.linearRampToValueAtTime(newVolume, Engine.audioEngine.audioContext.currentTime + time);\n            }\n            else {\n                this._soundGain.gain.value = newVolume;\n            }\n        }\n        this._volume = newVolume;\n    }\n    /**\n     * Set the sound play back rate\n     * @param newPlaybackRate Define the playback rate the sound should be played at\n     */\n    setPlaybackRate(newPlaybackRate) {\n        this._playbackRate = newPlaybackRate;\n        if (this.isPlaying) {\n            if (this._streaming && this._htmlAudioElement) {\n                this._htmlAudioElement.playbackRate = this._playbackRate;\n            }\n            else if (this._soundSource) {\n                this._soundSource.playbackRate.value = this._playbackRate;\n            }\n        }\n    }\n    /**\n     * Gets the sound play back rate.\n     * @returns the  play back rate of the sound\n     */\n    getPlaybackRate() {\n        return this._playbackRate;\n    }\n    /**\n     * Gets the volume of the sound.\n     * @returns the volume of the sound\n     */\n    getVolume() {\n        return this._volume;\n    }\n    /**\n     * Attach the sound to a dedicated mesh\n     * @param transformNode The transform node to connect the sound with\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#attaching-a-sound-to-a-mesh\n     */\n    attachToMesh(transformNode) {\n        if (this._connectedTransformNode && this._registerFunc) {\n            this._connectedTransformNode.unregisterAfterWorldMatrixUpdate(this._registerFunc);\n            this._registerFunc = null;\n        }\n        this._connectedTransformNode = transformNode;\n        if (!this._spatialSound) {\n            this._spatialSound = true;\n            this._createSpatialParameters();\n            if (this.isPlaying && this.loop) {\n                this.stop();\n                this.play(0, this._offset, this._length);\n            }\n        }\n        this._onRegisterAfterWorldMatrixUpdate(this._connectedTransformNode);\n        this._registerFunc = (transformNode) => this._onRegisterAfterWorldMatrixUpdate(transformNode);\n        this._connectedTransformNode.registerAfterWorldMatrixUpdate(this._registerFunc);\n    }\n    /**\n     * Detach the sound from the previously attached mesh\n     * @see https://doc.babylonjs.com/features/featuresDeepDive/audio/playingSoundsMusic#attaching-a-sound-to-a-mesh\n     */\n    detachFromMesh() {\n        if (this._connectedTransformNode && this._registerFunc) {\n            this._connectedTransformNode.unregisterAfterWorldMatrixUpdate(this._registerFunc);\n            this._registerFunc = null;\n            this._connectedTransformNode = null;\n        }\n    }\n    _onRegisterAfterWorldMatrixUpdate(node) {\n        var _a;\n        if (!node.getBoundingInfo) {\n            this.setPosition(node.absolutePosition);\n        }\n        else {\n            const mesh = node;\n            const boundingInfo = mesh.getBoundingInfo();\n            this.setPosition(boundingInfo.boundingSphere.centerWorld);\n        }\n        if (((_a = Engine.audioEngine) === null || _a === void 0 ? void 0 : _a.canUseWebAudio) && this._isDirectional && this.isPlaying) {\n            this._updateDirection();\n        }\n    }\n    /**\n     * Clone the current sound in the scene.\n     * @returns the new sound clone\n     */\n    clone() {\n        if (!this._streaming) {\n            const setBufferAndRun = () => {\n                if (this._isReadyToPlay) {\n                    clonedSound._audioBuffer = this.getAudioBuffer();\n                    clonedSound._isReadyToPlay = true;\n                    if (clonedSound.autoplay) {\n                        clonedSound.play(0, this._offset, this._length);\n                    }\n                }\n                else {\n                    setTimeout(setBufferAndRun, 300);\n                }\n            };\n            const currentOptions = {\n                autoplay: this.autoplay,\n                loop: this.loop,\n                volume: this._volume,\n                spatialSound: this._spatialSound,\n                maxDistance: this.maxDistance,\n                useCustomAttenuation: this.useCustomAttenuation,\n                rolloffFactor: this.rolloffFactor,\n                refDistance: this.refDistance,\n                distanceModel: this.distanceModel,\n            };\n            const clonedSound = new Sound(this.name + \"_cloned\", new ArrayBuffer(0), this._scene, null, currentOptions);\n            if (this.useCustomAttenuation) {\n                clonedSound.setAttenuationFunction(this._customAttenuationFunction);\n            }\n            clonedSound.setPosition(this._position);\n            clonedSound.setPlaybackRate(this._playbackRate);\n            setBufferAndRun();\n            return clonedSound;\n        }\n        // Can't clone a streaming sound\n        else {\n            return null;\n        }\n    }\n    /**\n     * Gets the current underlying audio buffer containing the data\n     * @returns the audio buffer\n     */\n    getAudioBuffer() {\n        return this._audioBuffer;\n    }\n    /**\n     * Gets the WebAudio AudioBufferSourceNode, lets you keep track of and stop instances of this Sound.\n     * @returns the source node\n     */\n    getSoundSource() {\n        return this._soundSource;\n    }\n    /**\n     * Gets the WebAudio GainNode, gives you precise control over the gain of instances of this Sound.\n     * @returns the gain node\n     */\n    getSoundGain() {\n        return this._soundGain;\n    }\n    /**\n     * Serializes the Sound in a JSON representation\n     * @returns the JSON representation of the sound\n     */\n    serialize() {\n        const serializationObject = {\n            name: this.name,\n            url: this.name,\n            autoplay: this.autoplay,\n            loop: this.loop,\n            volume: this._volume,\n            spatialSound: this._spatialSound,\n            maxDistance: this.maxDistance,\n            rolloffFactor: this.rolloffFactor,\n            refDistance: this.refDistance,\n            distanceModel: this.distanceModel,\n            playbackRate: this._playbackRate,\n            panningModel: this._panningModel,\n            soundTrackId: this.soundTrackId,\n            metadata: this.metadata,\n        };\n        if (this._spatialSound) {\n            if (this._connectedTransformNode) {\n                serializationObject.connectedMeshId = this._connectedTransformNode.id;\n            }\n            serializationObject.position = this._position.asArray();\n            serializationObject.refDistance = this.refDistance;\n            serializationObject.distanceModel = this.distanceModel;\n            serializationObject.isDirectional = this._isDirectional;\n            serializationObject.localDirectionToMesh = this._localDirection.asArray();\n            serializationObject.coneInnerAngle = this._coneInnerAngle;\n            serializationObject.coneOuterAngle = this._coneOuterAngle;\n            serializationObject.coneOuterGain = this._coneOuterGain;\n        }\n        return serializationObject;\n    }\n    /**\n     * Parse a JSON representation of a sound to instantiate in a given scene\n     * @param parsedSound Define the JSON representation of the sound (usually coming from the serialize method)\n     * @param scene Define the scene the new parsed sound should be created in\n     * @param rootUrl Define the rooturl of the load in case we need to fetch relative dependencies\n     * @param sourceSound Define a sound place holder if do not need to instantiate a new one\n     * @returns the newly parsed sound\n     */\n    static Parse(parsedSound, scene, rootUrl, sourceSound) {\n        const soundName = parsedSound.name;\n        let soundUrl;\n        if (parsedSound.url) {\n            soundUrl = rootUrl + parsedSound.url;\n        }\n        else {\n            soundUrl = rootUrl + soundName;\n        }\n        const options = {\n            autoplay: parsedSound.autoplay,\n            loop: parsedSound.loop,\n            volume: parsedSound.volume,\n            spatialSound: parsedSound.spatialSound,\n            maxDistance: parsedSound.maxDistance,\n            rolloffFactor: parsedSound.rolloffFactor,\n            refDistance: parsedSound.refDistance,\n            distanceModel: parsedSound.distanceModel,\n            playbackRate: parsedSound.playbackRate,\n        };\n        let newSound;\n        if (!sourceSound) {\n            newSound = new Sound(soundName, soundUrl, scene, () => {\n                scene.removePendingData(newSound);\n            }, options);\n            scene.addPendingData(newSound);\n        }\n        else {\n            const setBufferAndRun = () => {\n                if (sourceSound._isReadyToPlay) {\n                    newSound._audioBuffer = sourceSound.getAudioBuffer();\n                    newSound._isReadyToPlay = true;\n                    if (newSound.autoplay) {\n                        newSound.play(0, newSound._offset, newSound._length);\n                    }\n                }\n                else {\n                    setTimeout(setBufferAndRun, 300);\n                }\n            };\n            newSound = new Sound(soundName, new ArrayBuffer(0), scene, null, options);\n            setBufferAndRun();\n        }\n        if (parsedSound.position) {\n            const soundPosition = Vector3.FromArray(parsedSound.position);\n            newSound.setPosition(soundPosition);\n        }\n        if (parsedSound.isDirectional) {\n            newSound.setDirectionalCone(parsedSound.coneInnerAngle || 360, parsedSound.coneOuterAngle || 360, parsedSound.coneOuterGain || 0);\n            if (parsedSound.localDirectionToMesh) {\n                const localDirectionToMesh = Vector3.FromArray(parsedSound.localDirectionToMesh);\n                newSound.setLocalDirectionToMesh(localDirectionToMesh);\n            }\n        }\n        if (parsedSound.connectedMeshId) {\n            const connectedMesh = scene.getMeshById(parsedSound.connectedMeshId);\n            if (connectedMesh) {\n                newSound.attachToMesh(connectedMesh);\n            }\n        }\n        if (parsedSound.metadata) {\n            newSound.metadata = parsedSound.metadata;\n        }\n        return newSound;\n    }\n    _setOffset(value) {\n        if (this._offset === value) {\n            return;\n        }\n        if (this.isPaused) {\n            this.stop();\n            this.isPaused = false;\n        }\n        this._offset = value;\n    }\n}\n/**\n * @internal\n */\nSound._SceneComponentInitialization = (_) => {\n    throw _WarnImport(\"AudioSceneComponent\");\n};\n//# sourceMappingURL=sound.js.map","import { Logger } from \"../Misc/logger.js\";\n/**\n * Wraps one or more Sound objects and selects one with random weight for playback.\n */\nexport class WeightedSound {\n    /**\n     * Creates a new WeightedSound from the list of sounds given.\n     * @param loop When true a Sound will be selected and played when the current playing Sound completes.\n     * @param sounds Array of Sounds that will be selected from.\n     * @param weights Array of number values for selection weights; length must equal sounds, values will be normalized to 1\n     */\n    constructor(loop, sounds, weights) {\n        /** When true a Sound will be selected and played when the current playing Sound completes. */\n        this.loop = false;\n        this._coneInnerAngle = 360;\n        this._coneOuterAngle = 360;\n        this._volume = 1;\n        /** A Sound is currently playing. */\n        this.isPlaying = false;\n        /** A Sound is currently paused. */\n        this.isPaused = false;\n        this._sounds = [];\n        this._weights = [];\n        if (sounds.length !== weights.length) {\n            throw new Error(\"Sounds length does not equal weights length\");\n        }\n        this.loop = loop;\n        this._weights = weights;\n        // Normalize the weights\n        let weightSum = 0;\n        for (const weight of weights) {\n            weightSum += weight;\n        }\n        const invWeightSum = weightSum > 0 ? 1 / weightSum : 0;\n        for (let i = 0; i < this._weights.length; i++) {\n            this._weights[i] *= invWeightSum;\n        }\n        this._sounds = sounds;\n        for (const sound of this._sounds) {\n            sound.onEndedObservable.add(() => {\n                this._onended();\n            });\n        }\n    }\n    /**\n     * The size of cone in degrees for a directional sound in which there will be no attenuation.\n     */\n    get directionalConeInnerAngle() {\n        return this._coneInnerAngle;\n    }\n    /**\n     * The size of cone in degrees for a directional sound in which there will be no attenuation.\n     */\n    set directionalConeInnerAngle(value) {\n        if (value !== this._coneInnerAngle) {\n            if (this._coneOuterAngle < value) {\n                Logger.Error(\"directionalConeInnerAngle: outer angle of the cone must be superior or equal to the inner angle.\");\n                return;\n            }\n            this._coneInnerAngle = value;\n            for (const sound of this._sounds) {\n                sound.directionalConeInnerAngle = value;\n            }\n        }\n    }\n    /**\n     * Size of cone in degrees for a directional sound outside of which there will be no sound.\n     * Listener angles between innerAngle and outerAngle will falloff linearly.\n     */\n    get directionalConeOuterAngle() {\n        return this._coneOuterAngle;\n    }\n    /**\n     * Size of cone in degrees for a directional sound outside of which there will be no sound.\n     * Listener angles between innerAngle and outerAngle will falloff linearly.\n     */\n    set directionalConeOuterAngle(value) {\n        if (value !== this._coneOuterAngle) {\n            if (value < this._coneInnerAngle) {\n                Logger.Error(\"directionalConeOuterAngle: outer angle of the cone must be superior or equal to the inner angle.\");\n                return;\n            }\n            this._coneOuterAngle = value;\n            for (const sound of this._sounds) {\n                sound.directionalConeOuterAngle = value;\n            }\n        }\n    }\n    /**\n     * Playback volume.\n     */\n    get volume() {\n        return this._volume;\n    }\n    /**\n     * Playback volume.\n     */\n    set volume(value) {\n        if (value !== this._volume) {\n            for (const sound of this._sounds) {\n                sound.setVolume(value);\n            }\n        }\n    }\n    _onended() {\n        if (this._currentIndex !== undefined) {\n            this._sounds[this._currentIndex].autoplay = false;\n        }\n        if (this.loop && this.isPlaying) {\n            this.play();\n        }\n        else {\n            this.isPlaying = false;\n        }\n    }\n    /**\n     * Suspend playback\n     */\n    pause() {\n        this.isPaused = true;\n        if (this._currentIndex !== undefined) {\n            this._sounds[this._currentIndex].pause();\n        }\n    }\n    /**\n     * Stop playback\n     */\n    stop() {\n        this.isPlaying = false;\n        if (this._currentIndex !== undefined) {\n            this._sounds[this._currentIndex].stop();\n        }\n    }\n    /**\n     * Start playback.\n     * @param startOffset Position the clip head at a specific time in seconds.\n     */\n    play(startOffset) {\n        if (!this.isPaused) {\n            this.stop();\n            const randomValue = Math.random();\n            let total = 0;\n            for (let i = 0; i < this._weights.length; i++) {\n                total += this._weights[i];\n                if (randomValue <= total) {\n                    this._currentIndex = i;\n                    break;\n                }\n            }\n        }\n        const sound = this._sounds[this._currentIndex];\n        if (sound.isReady()) {\n            sound.play(0, this.isPaused ? undefined : startOffset);\n        }\n        else {\n            sound.autoplay = true;\n        }\n        this.isPlaying = true;\n        this.isPaused = false;\n    }\n}\n//# sourceMappingURL=weightedsound.js.map","import { __decorate } from \"../tslib.es6.js\";\nimport { serialize, expandToProperty, serializeAsTexture, SerializationHelper } from \"../Misc/decorators.js\";\nimport { Vector4 } from \"../Maths/math.vector.js\";\nimport { EngineStore } from \"../Engines/engineStore.js\";\n/**\n * This class is used to animate meshes using a baked vertex animation texture\n * @see https://doc.babylonjs.com/features/featuresDeepDive/animation/baked_texture_animations\n * @since 5.0\n */\nexport class BakedVertexAnimationManager {\n    /**\n     * Creates a new BakedVertexAnimationManager\n     * @param scene defines the current scene\n     */\n    constructor(scene) {\n        this._texture = null;\n        this._isEnabled = true;\n        /**\n         * Enable or disable the vertex animation manager\n         */\n        this.isEnabled = true;\n        /**\n         * The time counter, to pick the correct animation frame.\n         */\n        this.time = 0;\n        scene = scene || EngineStore.LastCreatedScene;\n        if (!scene) {\n            return;\n        }\n        this._scene = scene;\n        this.animationParameters = new Vector4(0, 0, 0, 30);\n    }\n    /** @internal */\n    _markSubMeshesAsAttributesDirty() {\n        for (const mesh of this._scene.meshes) {\n            if (mesh.bakedVertexAnimationManager === this) {\n                mesh._markSubMeshesAsAttributesDirty();\n            }\n        }\n    }\n    /**\n     * Binds to the effect.\n     * @param effect The effect to bind to.\n     * @param useInstances True when it's an instance.\n     */\n    bind(effect, useInstances = false) {\n        if (!this._texture || !this._isEnabled) {\n            return;\n        }\n        const size = this._texture.getSize();\n        effect.setFloat2(\"bakedVertexAnimationTextureSizeInverted\", 1.0 / size.width, 1.0 / size.height);\n        effect.setFloat(\"bakedVertexAnimationTime\", this.time);\n        if (!useInstances) {\n            effect.setVector4(\"bakedVertexAnimationSettings\", this.animationParameters);\n        }\n        effect.setTexture(\"bakedVertexAnimationTexture\", this._texture);\n    }\n    /**\n     * Clone the current manager\n     * @returns a new BakedVertexAnimationManager\n     */\n    clone() {\n        const copy = new BakedVertexAnimationManager(this._scene);\n        this.copyTo(copy);\n        return copy;\n    }\n    /**\n     * Sets animation parameters.\n     * @param startFrame The first frame of the animation.\n     * @param endFrame The last frame of the animation.\n     * @param offset The offset when starting the animation.\n     * @param speedFramesPerSecond The frame rate.\n     */\n    setAnimationParameters(startFrame, endFrame, offset = 0, speedFramesPerSecond = 30) {\n        this.animationParameters = new Vector4(startFrame, endFrame, offset, speedFramesPerSecond);\n    }\n    /**\n     * Disposes the resources of the manager.\n     * @param forceDisposeTextures - Forces the disposal of all textures.\n     */\n    dispose(forceDisposeTextures) {\n        var _a;\n        if (forceDisposeTextures) {\n            (_a = this._texture) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n    }\n    /**\n     * Get the current class name useful for serialization or dynamic coding.\n     * @returns \"BakedVertexAnimationManager\"\n     */\n    getClassName() {\n        return \"BakedVertexAnimationManager\";\n    }\n    /**\n     * Makes a duplicate of the current instance into another one.\n     * @param vatMap define the instance where to copy the info\n     */\n    copyTo(vatMap) {\n        SerializationHelper.Clone(() => vatMap, this);\n    }\n    /**\n     * Serializes this vertex animation instance\n     * @returns - An object with the serialized instance.\n     */\n    serialize() {\n        return SerializationHelper.Serialize(this);\n    }\n    /**\n     * Parses a vertex animation setting from a serialized object.\n     * @param source - Serialized object.\n     * @param scene Defines the scene we are parsing for\n     * @param rootUrl Defines the rootUrl to load from\n     */\n    parse(source, scene, rootUrl) {\n        SerializationHelper.Parse(() => this, source, scene, rootUrl);\n    }\n}\n__decorate([\n    serializeAsTexture(),\n    expandToProperty(\"_markSubMeshesAsAttributesDirty\")\n], BakedVertexAnimationManager.prototype, \"texture\", void 0);\n__decorate([\n    serialize(),\n    expandToProperty(\"_markSubMeshesAsAttributesDirty\")\n], BakedVertexAnimationManager.prototype, \"isEnabled\", void 0);\n__decorate([\n    serialize()\n], BakedVertexAnimationManager.prototype, \"animationParameters\", void 0);\n__decorate([\n    serialize()\n], BakedVertexAnimationManager.prototype, \"time\", void 0);\n//# sourceMappingURL=bakedVertexAnimationManager.js.map","import { PointerEventTypes } from \"../../Events/pointerEvents.js\";\nimport { PrecisionDate } from \"../../Misc/precisionDate.js\";\nimport { Epsilon } from \"../../Maths/math.constants.js\";\n/**\n * The autoRotation behavior (AutoRotationBehavior) is designed to create a smooth rotation of an ArcRotateCamera when there is no user interaction.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/behaviors/cameraBehaviors#autorotation-behavior\n */\nexport class AutoRotationBehavior {\n    constructor() {\n        this._zoomStopsAnimation = false;\n        this._idleRotationSpeed = 0.05;\n        this._idleRotationWaitTime = 2000;\n        this._idleRotationSpinupTime = 2000;\n        this.targetAlpha = null;\n        this._isPointerDown = false;\n        this._lastFrameTime = null;\n        this._lastInteractionTime = -Infinity;\n        this._cameraRotationSpeed = 0;\n        this._lastFrameRadius = 0;\n    }\n    /**\n     * Gets the name of the behavior.\n     */\n    get name() {\n        return \"AutoRotation\";\n    }\n    /**\n     * Sets the flag that indicates if user zooming should stop animation.\n     */\n    set zoomStopsAnimation(flag) {\n        this._zoomStopsAnimation = flag;\n    }\n    /**\n     * Gets the flag that indicates if user zooming should stop animation.\n     */\n    get zoomStopsAnimation() {\n        return this._zoomStopsAnimation;\n    }\n    /**\n     * Sets the default speed at which the camera rotates around the model.\n     */\n    set idleRotationSpeed(speed) {\n        this._idleRotationSpeed = speed;\n    }\n    /**\n     * Gets the default speed at which the camera rotates around the model.\n     */\n    get idleRotationSpeed() {\n        return this._idleRotationSpeed;\n    }\n    /**\n     * Sets the time (in milliseconds) to wait after user interaction before the camera starts rotating.\n     */\n    set idleRotationWaitTime(time) {\n        this._idleRotationWaitTime = time;\n    }\n    /**\n     * Gets the time (milliseconds) to wait after user interaction before the camera starts rotating.\n     */\n    get idleRotationWaitTime() {\n        return this._idleRotationWaitTime;\n    }\n    /**\n     * Sets the time (milliseconds) to take to spin up to the full idle rotation speed.\n     */\n    set idleRotationSpinupTime(time) {\n        this._idleRotationSpinupTime = time;\n    }\n    /**\n     * Gets the time (milliseconds) to take to spin up to the full idle rotation speed.\n     */\n    get idleRotationSpinupTime() {\n        return this._idleRotationSpinupTime;\n    }\n    /**\n     * Gets a value indicating if the camera is currently rotating because of this behavior\n     */\n    get rotationInProgress() {\n        return Math.abs(this._cameraRotationSpeed) > 0;\n    }\n    /**\n     * Initializes the behavior.\n     */\n    init() {\n        // Do nothing\n    }\n    /**\n     * Attaches the behavior to its arc rotate camera.\n     * @param camera Defines the camera to attach the behavior to\n     */\n    attach(camera) {\n        this._attachedCamera = camera;\n        const scene = this._attachedCamera.getScene();\n        this._onPrePointerObservableObserver = scene.onPrePointerObservable.add((pointerInfoPre) => {\n            if (pointerInfoPre.type === PointerEventTypes.POINTERDOWN) {\n                this._isPointerDown = true;\n                return;\n            }\n            if (pointerInfoPre.type === PointerEventTypes.POINTERUP) {\n                this._isPointerDown = false;\n            }\n        });\n        this._onAfterCheckInputsObserver = camera.onAfterCheckInputsObservable.add(() => {\n            if (this._reachTargetAlpha()) {\n                return;\n            }\n            const now = PrecisionDate.Now;\n            let dt = 0;\n            if (this._lastFrameTime != null) {\n                dt = now - this._lastFrameTime;\n            }\n            this._lastFrameTime = now;\n            // Stop the animation if there is user interaction and the animation should stop for this interaction\n            this._applyUserInteraction();\n            const timeToRotation = now - this._lastInteractionTime - this._idleRotationWaitTime;\n            const scale = Math.max(Math.min(timeToRotation / this._idleRotationSpinupTime, 1), 0);\n            this._cameraRotationSpeed = this._idleRotationSpeed * scale;\n            // Step camera rotation by rotation speed\n            if (this._attachedCamera) {\n                this._attachedCamera.alpha -= this._cameraRotationSpeed * (dt / 1000);\n            }\n        });\n    }\n    /**\n     * Detaches the behavior from its current arc rotate camera.\n     */\n    detach() {\n        if (!this._attachedCamera) {\n            return;\n        }\n        const scene = this._attachedCamera.getScene();\n        if (this._onPrePointerObservableObserver) {\n            scene.onPrePointerObservable.remove(this._onPrePointerObservableObserver);\n        }\n        this._attachedCamera.onAfterCheckInputsObservable.remove(this._onAfterCheckInputsObserver);\n        this._attachedCamera = null;\n    }\n    /**\n     * Force-reset the last interaction time\n     * @param customTime an optional time that will be used instead of the current last interaction time. For example `Date.now()`\n     */\n    resetLastInteractionTime(customTime) {\n        this._lastInteractionTime = customTime !== null && customTime !== void 0 ? customTime : PrecisionDate.Now;\n    }\n    /**\n     * Returns true if camera alpha reaches the target alpha\n     * @returns true if camera alpha reaches the target alpha\n     */\n    _reachTargetAlpha() {\n        if (this._attachedCamera && this.targetAlpha) {\n            return Math.abs(this._attachedCamera.alpha - this.targetAlpha) < Epsilon;\n        }\n        return false;\n    }\n    /**\n     * Returns true if user is scrolling.\n     * @returns true if user is scrolling.\n     */\n    _userIsZooming() {\n        if (!this._attachedCamera) {\n            return false;\n        }\n        return this._attachedCamera.inertialRadiusOffset !== 0;\n    }\n    _shouldAnimationStopForInteraction() {\n        if (!this._attachedCamera) {\n            return false;\n        }\n        let zoomHasHitLimit = false;\n        if (this._lastFrameRadius === this._attachedCamera.radius && this._attachedCamera.inertialRadiusOffset !== 0) {\n            zoomHasHitLimit = true;\n        }\n        // Update the record of previous radius - works as an approx. indicator of hitting radius limits\n        this._lastFrameRadius = this._attachedCamera.radius;\n        return this._zoomStopsAnimation ? zoomHasHitLimit : this._userIsZooming();\n    }\n    /**\n     *  Applies any current user interaction to the camera. Takes into account maximum alpha rotation.\n     */\n    _applyUserInteraction() {\n        if (this._userIsMoving() && !this._shouldAnimationStopForInteraction()) {\n            this._lastInteractionTime = PrecisionDate.Now;\n        }\n    }\n    // Tools\n    _userIsMoving() {\n        if (!this._attachedCamera) {\n            return false;\n        }\n        return (this._attachedCamera.inertialAlphaOffset !== 0 ||\n            this._attachedCamera.inertialBetaOffset !== 0 ||\n            this._attachedCamera.inertialRadiusOffset !== 0 ||\n            this._attachedCamera.inertialPanningX !== 0 ||\n            this._attachedCamera.inertialPanningY !== 0 ||\n            this._isPointerDown);\n    }\n}\n//# sourceMappingURL=autoRotationBehavior.js.map","import { BackEase, EasingFunction } from \"../../Animations/easing.js\";\nimport { Animation } from \"../../Animations/animation.js\";\n/**\n * Add a bouncing effect to an ArcRotateCamera when reaching a specified minimum and maximum radius\n * @see https://doc.babylonjs.com/features/featuresDeepDive/behaviors/cameraBehaviors#bouncing-behavior\n */\nexport class BouncingBehavior {\n    constructor() {\n        /**\n         * The duration of the animation, in milliseconds\n         */\n        this.transitionDuration = 450;\n        /**\n         * Length of the distance animated by the transition when lower radius is reached\n         */\n        this.lowerRadiusTransitionRange = 2;\n        /**\n         * Length of the distance animated by the transition when upper radius is reached\n         */\n        this.upperRadiusTransitionRange = -2;\n        this._autoTransitionRange = false;\n        // Animations\n        this._radiusIsAnimating = false;\n        this._radiusBounceTransition = null;\n        this._animatables = new Array();\n    }\n    /**\n     * Gets the name of the behavior.\n     */\n    get name() {\n        return \"Bouncing\";\n    }\n    /**\n     * Gets a value indicating if the lowerRadiusTransitionRange and upperRadiusTransitionRange are defined automatically\n     */\n    get autoTransitionRange() {\n        return this._autoTransitionRange;\n    }\n    /**\n     * Sets a value indicating if the lowerRadiusTransitionRange and upperRadiusTransitionRange are defined automatically\n     * Transition ranges will be set to 5% of the bounding box diagonal in world space\n     */\n    set autoTransitionRange(value) {\n        if (this._autoTransitionRange === value) {\n            return;\n        }\n        this._autoTransitionRange = value;\n        const camera = this._attachedCamera;\n        if (!camera) {\n            return;\n        }\n        if (value) {\n            this._onMeshTargetChangedObserver = camera.onMeshTargetChangedObservable.add((mesh) => {\n                if (!mesh) {\n                    return;\n                }\n                mesh.computeWorldMatrix(true);\n                const diagonal = mesh.getBoundingInfo().diagonalLength;\n                this.lowerRadiusTransitionRange = diagonal * 0.05;\n                this.upperRadiusTransitionRange = diagonal * 0.05;\n            });\n        }\n        else if (this._onMeshTargetChangedObserver) {\n            camera.onMeshTargetChangedObservable.remove(this._onMeshTargetChangedObserver);\n        }\n    }\n    /**\n     * Initializes the behavior.\n     */\n    init() {\n        // Do nothing\n    }\n    /**\n     * Attaches the behavior to its arc rotate camera.\n     * @param camera Defines the camera to attach the behavior to\n     */\n    attach(camera) {\n        this._attachedCamera = camera;\n        this._onAfterCheckInputsObserver = camera.onAfterCheckInputsObservable.add(() => {\n            if (!this._attachedCamera) {\n                return;\n            }\n            // Add the bounce animation to the lower radius limit\n            if (this._isRadiusAtLimit(this._attachedCamera.lowerRadiusLimit)) {\n                this._applyBoundRadiusAnimation(this.lowerRadiusTransitionRange);\n            }\n            // Add the bounce animation to the upper radius limit\n            if (this._isRadiusAtLimit(this._attachedCamera.upperRadiusLimit)) {\n                this._applyBoundRadiusAnimation(this.upperRadiusTransitionRange);\n            }\n        });\n    }\n    /**\n     * Detaches the behavior from its current arc rotate camera.\n     */\n    detach() {\n        if (!this._attachedCamera) {\n            return;\n        }\n        if (this._onAfterCheckInputsObserver) {\n            this._attachedCamera.onAfterCheckInputsObservable.remove(this._onAfterCheckInputsObserver);\n        }\n        if (this._onMeshTargetChangedObserver) {\n            this._attachedCamera.onMeshTargetChangedObservable.remove(this._onMeshTargetChangedObserver);\n        }\n        this._attachedCamera = null;\n    }\n    /**\n     * Checks if the camera radius is at the specified limit. Takes into account animation locks.\n     * @param radiusLimit The limit to check against.\n     * @returns Bool to indicate if at limit.\n     */\n    _isRadiusAtLimit(radiusLimit) {\n        if (!this._attachedCamera) {\n            return false;\n        }\n        if (this._attachedCamera.radius === radiusLimit && !this._radiusIsAnimating) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Applies an animation to the radius of the camera, extending by the radiusDelta.\n     * @param radiusDelta The delta by which to animate to. Can be negative.\n     */\n    _applyBoundRadiusAnimation(radiusDelta) {\n        if (!this._attachedCamera) {\n            return;\n        }\n        if (!this._radiusBounceTransition) {\n            BouncingBehavior.EasingFunction.setEasingMode(BouncingBehavior.EasingMode);\n            this._radiusBounceTransition = Animation.CreateAnimation(\"radius\", Animation.ANIMATIONTYPE_FLOAT, 60, BouncingBehavior.EasingFunction);\n        }\n        // Prevent zoom until bounce has completed\n        this._cachedWheelPrecision = this._attachedCamera.wheelPrecision;\n        this._attachedCamera.wheelPrecision = Infinity;\n        this._attachedCamera.inertialRadiusOffset = 0;\n        // Animate to the radius limit\n        this.stopAllAnimations();\n        this._radiusIsAnimating = true;\n        const animatable = Animation.TransitionTo(\"radius\", this._attachedCamera.radius + radiusDelta, this._attachedCamera, this._attachedCamera.getScene(), 60, this._radiusBounceTransition, this.transitionDuration, () => this._clearAnimationLocks());\n        if (animatable) {\n            this._animatables.push(animatable);\n        }\n    }\n    /**\n     * Removes all animation locks. Allows new animations to be added to any of the camera properties.\n     */\n    _clearAnimationLocks() {\n        this._radiusIsAnimating = false;\n        if (this._attachedCamera) {\n            this._attachedCamera.wheelPrecision = this._cachedWheelPrecision;\n        }\n    }\n    /**\n     * Stops and removes all animations that have been applied to the camera\n     */\n    stopAllAnimations() {\n        if (this._attachedCamera) {\n            this._attachedCamera.animations = [];\n        }\n        while (this._animatables.length) {\n            this._animatables[0].onAnimationEnd = null;\n            this._animatables[0].stop();\n            this._animatables.shift();\n        }\n    }\n}\n/**\n * The easing function used by animations\n */\nBouncingBehavior.EasingFunction = new BackEase(0.3);\n/**\n * The easing mode used by animations\n */\nBouncingBehavior.EasingMode = EasingFunction.EASINGMODE_EASEOUT;\n//# sourceMappingURL=bouncingBehavior.js.map","import { ExponentialEase, EasingFunction } from \"../../Animations/easing.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { PointerEventTypes } from \"../../Events/pointerEvents.js\";\nimport { PrecisionDate } from \"../../Misc/precisionDate.js\";\nimport { Vector3, Vector2 } from \"../../Maths/math.vector.js\";\nimport { Animation } from \"../../Animations/animation.js\";\n/**\n * The framing behavior (FramingBehavior) is designed to automatically position an ArcRotateCamera when its target is set to a mesh. It is also useful if you want to prevent the camera to go under a virtual horizontal plane.\n * @see https://doc.babylonjs.com/features/featuresDeepDive/behaviors/cameraBehaviors#framing-behavior\n */\nexport class FramingBehavior {\n    constructor() {\n        /**\n         * An event triggered when the animation to zoom on target mesh has ended\n         */\n        this.onTargetFramingAnimationEndObservable = new Observable();\n        this._mode = FramingBehavior.FitFrustumSidesMode;\n        this._radiusScale = 1.0;\n        this._positionScale = 0.5;\n        this._defaultElevation = 0.3;\n        this._elevationReturnTime = 1500;\n        this._elevationReturnWaitTime = 1000;\n        this._zoomStopsAnimation = false;\n        this._framingTime = 1500;\n        /**\n         * Define if the behavior should automatically change the configured\n         * camera limits and sensibilities.\n         */\n        this.autoCorrectCameraLimitsAndSensibility = true;\n        this._isPointerDown = false;\n        this._lastInteractionTime = -Infinity;\n        // Framing control\n        this._animatables = new Array();\n        this._betaIsAnimating = false;\n    }\n    /**\n     * Gets the name of the behavior.\n     */\n    get name() {\n        return \"Framing\";\n    }\n    /**\n     * Sets the current mode used by the behavior\n     */\n    set mode(mode) {\n        this._mode = mode;\n    }\n    /**\n     * Gets current mode used by the behavior.\n     */\n    get mode() {\n        return this._mode;\n    }\n    /**\n     * Sets the scale applied to the radius (1 by default)\n     */\n    set radiusScale(radius) {\n        this._radiusScale = radius;\n    }\n    /**\n     * Gets the scale applied to the radius\n     */\n    get radiusScale() {\n        return this._radiusScale;\n    }\n    /**\n     * Sets the scale to apply on Y axis to position camera focus. 0.5 by default which means the center of the bounding box.\n     */\n    set positionScale(scale) {\n        this._positionScale = scale;\n    }\n    /**\n     * Gets the scale to apply on Y axis to position camera focus. 0.5 by default which means the center of the bounding box.\n     */\n    get positionScale() {\n        return this._positionScale;\n    }\n    /**\n     * Sets the angle above/below the horizontal plane to return to when the return to default elevation idle\n     * behaviour is triggered, in radians.\n     */\n    set defaultElevation(elevation) {\n        this._defaultElevation = elevation;\n    }\n    /**\n     * Gets the angle above/below the horizontal plane to return to when the return to default elevation idle\n     * behaviour is triggered, in radians.\n     */\n    get defaultElevation() {\n        return this._defaultElevation;\n    }\n    /**\n     * Sets the time (in milliseconds) taken to return to the default beta position.\n     * Negative value indicates camera should not return to default.\n     */\n    set elevationReturnTime(speed) {\n        this._elevationReturnTime = speed;\n    }\n    /**\n     * Gets the time (in milliseconds) taken to return to the default beta position.\n     * Negative value indicates camera should not return to default.\n     */\n    get elevationReturnTime() {\n        return this._elevationReturnTime;\n    }\n    /**\n     * Sets the delay (in milliseconds) taken before the camera returns to the default beta position.\n     */\n    set elevationReturnWaitTime(time) {\n        this._elevationReturnWaitTime = time;\n    }\n    /**\n     * Gets the delay (in milliseconds) taken before the camera returns to the default beta position.\n     */\n    get elevationReturnWaitTime() {\n        return this._elevationReturnWaitTime;\n    }\n    /**\n     * Sets the flag that indicates if user zooming should stop animation.\n     */\n    set zoomStopsAnimation(flag) {\n        this._zoomStopsAnimation = flag;\n    }\n    /**\n     * Gets the flag that indicates if user zooming should stop animation.\n     */\n    get zoomStopsAnimation() {\n        return this._zoomStopsAnimation;\n    }\n    /**\n     * Sets the transition time when framing the mesh, in milliseconds\n     */\n    set framingTime(time) {\n        this._framingTime = time;\n    }\n    /**\n     * Gets the transition time when framing the mesh, in milliseconds\n     */\n    get framingTime() {\n        return this._framingTime;\n    }\n    /**\n     * Initializes the behavior.\n     */\n    init() {\n        // Do nothing\n    }\n    /**\n     * Attaches the behavior to its arc rotate camera.\n     * @param camera Defines the camera to attach the behavior to\n     */\n    attach(camera) {\n        this._attachedCamera = camera;\n        const scene = this._attachedCamera.getScene();\n        FramingBehavior.EasingFunction.setEasingMode(FramingBehavior.EasingMode);\n        this._onPrePointerObservableObserver = scene.onPrePointerObservable.add((pointerInfoPre) => {\n            if (pointerInfoPre.type === PointerEventTypes.POINTERDOWN) {\n                this._isPointerDown = true;\n                return;\n            }\n            if (pointerInfoPre.type === PointerEventTypes.POINTERUP) {\n                this._isPointerDown = false;\n            }\n        });\n        this._onMeshTargetChangedObserver = camera.onMeshTargetChangedObservable.add((mesh) => {\n            if (mesh) {\n                this.zoomOnMesh(mesh, undefined, () => {\n                    this.onTargetFramingAnimationEndObservable.notifyObservers();\n                });\n            }\n        });\n        this._onAfterCheckInputsObserver = camera.onAfterCheckInputsObservable.add(() => {\n            // Stop the animation if there is user interaction and the animation should stop for this interaction\n            this._applyUserInteraction();\n            // Maintain the camera above the ground. If the user pulls the camera beneath the ground plane, lift it\n            // back to the default position after a given timeout\n            this._maintainCameraAboveGround();\n        });\n    }\n    /**\n     * Detaches the behavior from its current arc rotate camera.\n     */\n    detach() {\n        if (!this._attachedCamera) {\n            return;\n        }\n        const scene = this._attachedCamera.getScene();\n        if (this._onPrePointerObservableObserver) {\n            scene.onPrePointerObservable.remove(this._onPrePointerObservableObserver);\n        }\n        if (this._onAfterCheckInputsObserver) {\n            this._attachedCamera.onAfterCheckInputsObservable.remove(this._onAfterCheckInputsObserver);\n        }\n        if (this._onMeshTargetChangedObserver) {\n            this._attachedCamera.onMeshTargetChangedObservable.remove(this._onMeshTargetChangedObserver);\n        }\n        this._attachedCamera = null;\n    }\n    /**\n     * Targets the given mesh and updates zoom level accordingly.\n     * @param mesh  The mesh to target.\n     * @param focusOnOriginXZ Determines if the camera should focus on 0 in the X and Z axis instead of the mesh\n     * @param onAnimationEnd Callback triggered at the end of the framing animation\n     */\n    zoomOnMesh(mesh, focusOnOriginXZ = false, onAnimationEnd = null) {\n        mesh.computeWorldMatrix(true);\n        const boundingBox = mesh.getBoundingInfo().boundingBox;\n        this.zoomOnBoundingInfo(boundingBox.minimumWorld, boundingBox.maximumWorld, focusOnOriginXZ, onAnimationEnd);\n    }\n    /**\n     * Targets the given mesh with its children and updates zoom level accordingly.\n     * @param mesh  The mesh to target.\n     * @param focusOnOriginXZ Determines if the camera should focus on 0 in the X and Z axis instead of the mesh\n     * @param onAnimationEnd Callback triggered at the end of the framing animation\n     */\n    zoomOnMeshHierarchy(mesh, focusOnOriginXZ = false, onAnimationEnd = null) {\n        mesh.computeWorldMatrix(true);\n        const boundingBox = mesh.getHierarchyBoundingVectors(true);\n        this.zoomOnBoundingInfo(boundingBox.min, boundingBox.max, focusOnOriginXZ, onAnimationEnd);\n    }\n    /**\n     * Targets the given meshes with their children and updates zoom level accordingly.\n     * @param meshes  The mesh to target.\n     * @param focusOnOriginXZ Determines if the camera should focus on 0 in the X and Z axis instead of the mesh\n     * @param onAnimationEnd Callback triggered at the end of the framing animation\n     */\n    zoomOnMeshesHierarchy(meshes, focusOnOriginXZ = false, onAnimationEnd = null) {\n        const min = new Vector3(Number.MAX_VALUE, Number.MAX_VALUE, Number.MAX_VALUE);\n        const max = new Vector3(-Number.MAX_VALUE, -Number.MAX_VALUE, -Number.MAX_VALUE);\n        for (let i = 0; i < meshes.length; i++) {\n            const boundingInfo = meshes[i].getHierarchyBoundingVectors(true);\n            Vector3.CheckExtends(boundingInfo.min, min, max);\n            Vector3.CheckExtends(boundingInfo.max, min, max);\n        }\n        this.zoomOnBoundingInfo(min, max, focusOnOriginXZ, onAnimationEnd);\n    }\n    /**\n     * Targets the bounding box info defined by its extends and updates zoom level accordingly.\n     * @param minimumWorld Determines the smaller position of the bounding box extend\n     * @param maximumWorld Determines the bigger position of the bounding box extend\n     * @param focusOnOriginXZ Determines if the camera should focus on 0 in the X and Z axis instead of the mesh\n     * @param onAnimationEnd Callback triggered at the end of the framing animation\n     */\n    zoomOnBoundingInfo(minimumWorld, maximumWorld, focusOnOriginXZ = false, onAnimationEnd = null) {\n        let zoomTarget;\n        if (!this._attachedCamera) {\n            return;\n        }\n        // Find target by interpolating from bottom of bounding box in world-space to top via framingPositionY\n        const bottom = minimumWorld.y;\n        const top = maximumWorld.y;\n        const zoomTargetY = bottom + (top - bottom) * this._positionScale;\n        const radiusWorld = maximumWorld.subtract(minimumWorld).scale(0.5);\n        if (focusOnOriginXZ) {\n            zoomTarget = new Vector3(0, zoomTargetY, 0);\n        }\n        else {\n            const centerWorld = minimumWorld.add(radiusWorld);\n            zoomTarget = new Vector3(centerWorld.x, zoomTargetY, centerWorld.z);\n        }\n        if (!this._vectorTransition) {\n            this._vectorTransition = Animation.CreateAnimation(\"target\", Animation.ANIMATIONTYPE_VECTOR3, 60, FramingBehavior.EasingFunction);\n        }\n        this._betaIsAnimating = true;\n        let animatable = Animation.TransitionTo(\"target\", zoomTarget, this._attachedCamera, this._attachedCamera.getScene(), 60, this._vectorTransition, this._framingTime);\n        if (animatable) {\n            this._animatables.push(animatable);\n        }\n        // sets the radius and lower radius bounds\n        // Small delta ensures camera is not always at lower zoom limit.\n        let radius = 0;\n        if (this._mode === FramingBehavior.FitFrustumSidesMode) {\n            const position = this._calculateLowerRadiusFromModelBoundingSphere(minimumWorld, maximumWorld);\n            if (this.autoCorrectCameraLimitsAndSensibility) {\n                this._attachedCamera.lowerRadiusLimit = radiusWorld.length() + this._attachedCamera.minZ;\n            }\n            radius = position;\n        }\n        else if (this._mode === FramingBehavior.IgnoreBoundsSizeMode) {\n            radius = this._calculateLowerRadiusFromModelBoundingSphere(minimumWorld, maximumWorld);\n            if (this.autoCorrectCameraLimitsAndSensibility && this._attachedCamera.lowerRadiusLimit === null) {\n                this._attachedCamera.lowerRadiusLimit = this._attachedCamera.minZ;\n            }\n        }\n        // Set sensibilities\n        if (this.autoCorrectCameraLimitsAndSensibility) {\n            const extend = maximumWorld.subtract(minimumWorld).length();\n            this._attachedCamera.panningSensibility = 5000 / extend;\n            this._attachedCamera.wheelPrecision = 100 / radius;\n        }\n        // transition to new radius\n        if (!this._radiusTransition) {\n            this._radiusTransition = Animation.CreateAnimation(\"radius\", Animation.ANIMATIONTYPE_FLOAT, 60, FramingBehavior.EasingFunction);\n        }\n        animatable = Animation.TransitionTo(\"radius\", radius, this._attachedCamera, this._attachedCamera.getScene(), 60, this._radiusTransition, this._framingTime, () => {\n            this.stopAllAnimations();\n            if (onAnimationEnd) {\n                onAnimationEnd();\n            }\n            if (this._attachedCamera && this._attachedCamera.useInputToRestoreState) {\n                this._attachedCamera.storeState();\n            }\n        });\n        if (animatable) {\n            this._animatables.push(animatable);\n        }\n    }\n    /**\n     * Calculates the lowest radius for the camera based on the bounding box of the mesh.\n     * @param minimumWorld\n     * @param maximumWorld\n     * @returns The minimum distance from the primary mesh's center point at which the camera must be kept in order\n     *\t\t to fully enclose the mesh in the viewing frustum.\n     */\n    _calculateLowerRadiusFromModelBoundingSphere(minimumWorld, maximumWorld) {\n        const size = maximumWorld.subtract(minimumWorld);\n        const boxVectorGlobalDiagonal = size.length();\n        const frustumSlope = this._getFrustumSlope();\n        // Formula for setting distance\n        // (Good explanation: http://stackoverflow.com/questions/2866350/move-camera-to-fit-3d-scene)\n        const radiusWithoutFraming = boxVectorGlobalDiagonal * 0.5;\n        // Horizon distance\n        const radius = radiusWithoutFraming * this._radiusScale;\n        const distanceForHorizontalFrustum = radius * Math.sqrt(1.0 + 1.0 / (frustumSlope.x * frustumSlope.x));\n        const distanceForVerticalFrustum = radius * Math.sqrt(1.0 + 1.0 / (frustumSlope.y * frustumSlope.y));\n        let distance = Math.max(distanceForHorizontalFrustum, distanceForVerticalFrustum);\n        const camera = this._attachedCamera;\n        if (!camera) {\n            return 0;\n        }\n        if (camera.lowerRadiusLimit && this._mode === FramingBehavior.IgnoreBoundsSizeMode) {\n            // Don't exceed the requested limit\n            distance = distance < camera.lowerRadiusLimit ? camera.lowerRadiusLimit : distance;\n        }\n        // Don't exceed the upper radius limit\n        if (camera.upperRadiusLimit) {\n            distance = distance > camera.upperRadiusLimit ? camera.upperRadiusLimit : distance;\n        }\n        return distance;\n    }\n    /**\n     * Keeps the camera above the ground plane. If the user pulls the camera below the ground plane, the camera\n     * is automatically returned to its default position (expected to be above ground plane).\n     */\n    _maintainCameraAboveGround() {\n        if (this._elevationReturnTime < 0) {\n            return;\n        }\n        const timeSinceInteraction = PrecisionDate.Now - this._lastInteractionTime;\n        const defaultBeta = Math.PI * 0.5 - this._defaultElevation;\n        const limitBeta = Math.PI * 0.5;\n        // Bring the camera back up if below the ground plane\n        if (this._attachedCamera && !this._betaIsAnimating && this._attachedCamera.beta > limitBeta && timeSinceInteraction >= this._elevationReturnWaitTime) {\n            this._betaIsAnimating = true;\n            //Transition to new position\n            this.stopAllAnimations();\n            if (!this._betaTransition) {\n                this._betaTransition = Animation.CreateAnimation(\"beta\", Animation.ANIMATIONTYPE_FLOAT, 60, FramingBehavior.EasingFunction);\n            }\n            const animatabe = Animation.TransitionTo(\"beta\", defaultBeta, this._attachedCamera, this._attachedCamera.getScene(), 60, this._betaTransition, this._elevationReturnTime, () => {\n                this._clearAnimationLocks();\n                this.stopAllAnimations();\n            });\n            if (animatabe) {\n                this._animatables.push(animatabe);\n            }\n        }\n    }\n    /**\n     * Returns the frustum slope based on the canvas ratio and camera FOV\n     * @returns The frustum slope represented as a Vector2 with X and Y slopes\n     */\n    _getFrustumSlope() {\n        // Calculate the viewport ratio\n        // Aspect Ratio is Height/Width.\n        const camera = this._attachedCamera;\n        if (!camera) {\n            return Vector2.Zero();\n        }\n        const engine = camera.getScene().getEngine();\n        const aspectRatio = engine.getAspectRatio(camera);\n        // Camera FOV is the vertical field of view (top-bottom) in radians.\n        // Slope of the frustum top/bottom planes in view space, relative to the forward vector.\n        const frustumSlopeY = Math.tan(camera.fov / 2);\n        // Slope of the frustum left/right planes in view space, relative to the forward vector.\n        // Provides the amount that one side (e.g. left) of the frustum gets wider for every unit\n        // along the forward vector.\n        const frustumSlopeX = frustumSlopeY * aspectRatio;\n        return new Vector2(frustumSlopeX, frustumSlopeY);\n    }\n    /**\n     * Removes all animation locks. Allows new animations to be added to any of the arcCamera properties.\n     */\n    _clearAnimationLocks() {\n        this._betaIsAnimating = false;\n    }\n    /**\n     *  Applies any current user interaction to the camera. Takes into account maximum alpha rotation.\n     */\n    _applyUserInteraction() {\n        if (this.isUserIsMoving) {\n            this._lastInteractionTime = PrecisionDate.Now;\n            this.stopAllAnimations();\n            this._clearAnimationLocks();\n        }\n    }\n    /**\n     * Stops and removes all animations that have been applied to the camera\n     */\n    stopAllAnimations() {\n        if (this._attachedCamera) {\n            this._attachedCamera.animations = [];\n        }\n        while (this._animatables.length) {\n            if (this._animatables[0]) {\n                this._animatables[0].onAnimationEnd = null;\n                this._animatables[0].stop();\n            }\n            this._animatables.shift();\n        }\n    }\n    /**\n     * Gets a value indicating if the user is moving the camera\n     */\n    get isUserIsMoving() {\n        if (!this._attachedCamera) {\n            return false;\n        }\n        return (this._attachedCamera.inertialAlphaOffset !== 0 ||\n            this._attachedCamera.inertialBetaOffset !== 0 ||\n            this._attachedCamera.inertialRadiusOffset !== 0 ||\n            this._attachedCamera.inertialPanningX !== 0 ||\n            this._attachedCamera.inertialPanningY !== 0 ||\n            this._isPointerDown);\n    }\n}\n/**\n * The easing function used by animations\n */\nFramingBehavior.EasingFunction = new ExponentialEase();\n/**\n * The easing mode used by animations\n */\nFramingBehavior.EasingMode = EasingFunction.EASINGMODE_EASEINOUT;\n// Statics\n/**\n * The camera can move all the way towards the mesh.\n */\nFramingBehavior.IgnoreBoundsSizeMode = 0;\n/**\n * The camera is not allowed to zoom closer to the mesh than the point at which the adjusted bounding sphere touches the frustum sides\n */\nFramingBehavior.FitFrustumSidesMode = 1;\n//# sourceMappingURL=framingBehavior.js.map","import { AbstractMesh } from \"../../Meshes/abstractMesh.js\";\nimport { Scene } from \"../../scene.js\";\nimport { PointerEventTypes } from \"../../Events/pointerEvents.js\";\nimport { Vector3, Quaternion, TmpVectors } from \"../../Maths/math.vector.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Camera } from \"../../Cameras/camera.js\";\n/**\n * Base behavior for six degrees of freedom interactions in XR experiences.\n * Creates virtual meshes that are dragged around\n * And observables for position/rotation changes\n */\nexport class BaseSixDofDragBehavior {\n    constructor() {\n        this._attachedToElement = false;\n        this._virtualMeshesInfo = {};\n        this._tmpVector = new Vector3();\n        this._tmpQuaternion = new Quaternion();\n        this._dragType = {\n            NONE: 0,\n            DRAG: 1,\n            DRAG_WITH_CONTROLLER: 2,\n            NEAR_DRAG: 3,\n        };\n        this._moving = false;\n        this._dragging = this._dragType.NONE;\n        /**\n         * The list of child meshes that can receive drag events\n         * If `null`, all child meshes will receive drag event\n         */\n        this.draggableMeshes = null;\n        /**\n         * How much faster the object should move when the controller is moving towards it. This is useful to bring objects that are far away from the user to them faster. Set this to 0 to avoid any speed increase. (Default: 3)\n         */\n        this.zDragFactor = 3;\n        /**\n         * In case of multipointer interaction, all pointer ids currently active are stored here\n         */\n        this.currentDraggingPointerIds = [];\n        /**\n        /**\n         * If camera controls should be detached during the drag\n         */\n        this.detachCameraControls = true;\n        /**\n         * Fires each time a drag starts\n         */\n        this.onDragStartObservable = new Observable();\n        /**\n         * Fires each time a drag happens\n         */\n        this.onDragObservable = new Observable();\n        /**\n         *  Fires each time a drag ends (eg. mouse release after drag)\n         */\n        this.onDragEndObservable = new Observable();\n        /**\n         * Should the behavior allow simultaneous pointers to interact with the owner node.\n         */\n        this.allowMultiPointer = true;\n    }\n    /**\n     * The id of the pointer that is currently interacting with the behavior (-1 when no pointer is active)\n     */\n    get currentDraggingPointerId() {\n        if (this.currentDraggingPointerIds[0] !== undefined) {\n            return this.currentDraggingPointerIds[0];\n        }\n        return -1;\n    }\n    set currentDraggingPointerId(value) {\n        this.currentDraggingPointerIds[0] = value;\n    }\n    /**\n     * Get or set the currentDraggingPointerId\n     * @deprecated Please use currentDraggingPointerId instead\n     */\n    get currentDraggingPointerID() {\n        return this.currentDraggingPointerId;\n    }\n    set currentDraggingPointerID(currentDraggingPointerID) {\n        this.currentDraggingPointerId = currentDraggingPointerID;\n    }\n    /**\n     *  The name of the behavior\n     */\n    get name() {\n        return \"BaseSixDofDrag\";\n    }\n    /**\n     *  Returns true if the attached mesh is currently moving with this behavior\n     */\n    get isMoving() {\n        return this._moving;\n    }\n    /**\n     *  Initializes the behavior\n     */\n    init() { }\n    /**\n     * In the case of multiple active cameras, the cameraToUseForPointers should be used if set instead of active camera\n     */\n    get _pointerCamera() {\n        if (this._scene.cameraToUseForPointers) {\n            return this._scene.cameraToUseForPointers;\n        }\n        else {\n            return this._scene.activeCamera;\n        }\n    }\n    _createVirtualMeshInfo() {\n        // Setup virtual meshes to be used for dragging without dirtying the existing scene\n        const dragMesh = new AbstractMesh(\"\", BaseSixDofDragBehavior._virtualScene);\n        dragMesh.rotationQuaternion = new Quaternion();\n        const originMesh = new AbstractMesh(\"\", BaseSixDofDragBehavior._virtualScene);\n        originMesh.rotationQuaternion = new Quaternion();\n        const pivotMesh = new AbstractMesh(\"\", BaseSixDofDragBehavior._virtualScene);\n        pivotMesh.rotationQuaternion = new Quaternion();\n        return {\n            dragging: false,\n            moving: false,\n            dragMesh,\n            originMesh,\n            pivotMesh,\n            startingPivotPosition: new Vector3(),\n            startingPivotOrientation: new Quaternion(),\n            startingPosition: new Vector3(),\n            startingOrientation: new Quaternion(),\n            lastOriginPosition: new Vector3(),\n            lastDragPosition: new Vector3(),\n        };\n    }\n    _resetVirtualMeshesPosition() {\n        for (let i = 0; i < this.currentDraggingPointerIds.length; i++) {\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint());\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.rotationQuaternion);\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].startingPivotPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].pivotMesh.position);\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].startingPivotOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].pivotMesh.rotationQuaternion);\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].startingPosition.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].dragMesh.position);\n            this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].startingOrientation.copyFrom(this._virtualMeshesInfo[this.currentDraggingPointerIds[i]].dragMesh.rotationQuaternion);\n        }\n    }\n    _pointerUpdate2D(ray, pointerId, zDragFactor) {\n        if (this._pointerCamera && this._pointerCamera.cameraRigMode == Camera.RIG_MODE_NONE && !this._pointerCamera._isLeftCamera && !this._pointerCamera._isRightCamera) {\n            ray.origin.copyFrom(this._pointerCamera.globalPosition);\n            zDragFactor = 0;\n        }\n        const virtualMeshesInfo = this._virtualMeshesInfo[pointerId];\n        // Calculate controller drag distance in controller space\n        const originDragDifference = TmpVectors.Vector3[0];\n        ray.origin.subtractToRef(virtualMeshesInfo.lastOriginPosition, originDragDifference);\n        virtualMeshesInfo.lastOriginPosition.copyFrom(ray.origin);\n        const localOriginDragDifference = -Vector3.Dot(originDragDifference, ray.direction);\n        virtualMeshesInfo.originMesh.addChild(virtualMeshesInfo.dragMesh);\n        virtualMeshesInfo.originMesh.addChild(virtualMeshesInfo.pivotMesh);\n        this._applyZOffset(virtualMeshesInfo.dragMesh, localOriginDragDifference, zDragFactor);\n        this._applyZOffset(virtualMeshesInfo.pivotMesh, localOriginDragDifference, zDragFactor);\n        // Update the controller position\n        virtualMeshesInfo.originMesh.position.copyFrom(ray.origin);\n        const lookAt = TmpVectors.Vector3[0];\n        ray.origin.addToRef(ray.direction, lookAt);\n        virtualMeshesInfo.originMesh.lookAt(lookAt);\n        virtualMeshesInfo.originMesh.removeChild(virtualMeshesInfo.dragMesh);\n        virtualMeshesInfo.originMesh.removeChild(virtualMeshesInfo.pivotMesh);\n    }\n    _pointerUpdateXR(controllerAimTransform, controllerGripTransform, pointerId, zDragFactor) {\n        const virtualMeshesInfo = this._virtualMeshesInfo[pointerId];\n        virtualMeshesInfo.originMesh.position.copyFrom(controllerAimTransform.position);\n        if (this._dragging === this._dragType.NEAR_DRAG && controllerGripTransform) {\n            virtualMeshesInfo.originMesh.rotationQuaternion.copyFrom(controllerGripTransform.rotationQuaternion);\n        }\n        else {\n            virtualMeshesInfo.originMesh.rotationQuaternion.copyFrom(controllerAimTransform.rotationQuaternion);\n        }\n        virtualMeshesInfo.pivotMesh.computeWorldMatrix(true);\n        virtualMeshesInfo.dragMesh.computeWorldMatrix(true);\n        // Z scaling logic\n        if (zDragFactor !== 0) {\n            // Camera.getForwardRay modifies TmpVectors.Vector[0-3], so cache it in advance\n            const cameraForwardVec = TmpVectors.Vector3[0];\n            const originDragDirection = TmpVectors.Vector3[1];\n            cameraForwardVec.copyFrom(this._pointerCamera.getForwardRay().direction);\n            virtualMeshesInfo.originMesh.position.subtractToRef(virtualMeshesInfo.lastOriginPosition, originDragDirection);\n            virtualMeshesInfo.lastOriginPosition.copyFrom(virtualMeshesInfo.originMesh.position);\n            const controllerDragDistance = originDragDirection.length();\n            originDragDirection.normalize();\n            const cameraToDrag = TmpVectors.Vector3[2];\n            const controllerToDrag = TmpVectors.Vector3[3];\n            virtualMeshesInfo.dragMesh.absolutePosition.subtractToRef(this._pointerCamera.globalPosition, cameraToDrag);\n            virtualMeshesInfo.dragMesh.absolutePosition.subtractToRef(virtualMeshesInfo.originMesh.position, controllerToDrag);\n            const controllerToDragDistance = controllerToDrag.length();\n            cameraToDrag.normalize();\n            controllerToDrag.normalize();\n            const controllerDragScaling = Math.abs(Vector3.Dot(originDragDirection, controllerToDrag)) * Vector3.Dot(originDragDirection, cameraForwardVec);\n            let zOffsetScaling = controllerDragScaling * zDragFactor * controllerDragDistance * controllerToDragDistance;\n            // Prevent pulling the mesh through the controller\n            const minDistanceFromControllerToDragMesh = 0.01;\n            if (zOffsetScaling < 0 && minDistanceFromControllerToDragMesh - controllerToDragDistance > zOffsetScaling) {\n                zOffsetScaling = Math.min(minDistanceFromControllerToDragMesh - controllerToDragDistance, 0);\n            }\n            controllerToDrag.scaleInPlace(zOffsetScaling);\n            controllerToDrag.addToRef(virtualMeshesInfo.pivotMesh.absolutePosition, this._tmpVector);\n            virtualMeshesInfo.pivotMesh.setAbsolutePosition(this._tmpVector);\n            controllerToDrag.addToRef(virtualMeshesInfo.dragMesh.absolutePosition, this._tmpVector);\n            virtualMeshesInfo.dragMesh.setAbsolutePosition(this._tmpVector);\n        }\n    }\n    /**\n     * Attaches the scale behavior the passed in mesh\n     * @param ownerNode The mesh that will be scaled around once attached\n     */\n    attach(ownerNode) {\n        this._ownerNode = ownerNode;\n        this._scene = this._ownerNode.getScene();\n        if (!BaseSixDofDragBehavior._virtualScene) {\n            BaseSixDofDragBehavior._virtualScene = new Scene(this._scene.getEngine(), { virtual: true });\n            BaseSixDofDragBehavior._virtualScene.detachControl();\n        }\n        const pickPredicate = (m) => {\n            return this._ownerNode === m || (m.isDescendantOf(this._ownerNode) && (!this.draggableMeshes || this.draggableMeshes.indexOf(m) !== -1));\n        };\n        this._pointerObserver = this._scene.onPointerObservable.add((pointerInfo) => {\n            const pointerId = pointerInfo.event.pointerId;\n            if (!this._virtualMeshesInfo[pointerId]) {\n                this._virtualMeshesInfo[pointerId] = this._createVirtualMeshInfo();\n            }\n            const virtualMeshesInfo = this._virtualMeshesInfo[pointerId];\n            const isXRNearPointer = pointerInfo.event.pointerType === \"xr-near\";\n            if (pointerInfo.type == PointerEventTypes.POINTERDOWN) {\n                if (!virtualMeshesInfo.dragging &&\n                    pointerInfo.pickInfo &&\n                    pointerInfo.pickInfo.hit &&\n                    pointerInfo.pickInfo.pickedMesh &&\n                    pointerInfo.pickInfo.pickedPoint &&\n                    pointerInfo.pickInfo.ray &&\n                    (!isXRNearPointer || pointerInfo.pickInfo.aimTransform) &&\n                    pickPredicate(pointerInfo.pickInfo.pickedMesh)) {\n                    if (!this.allowMultiPointer && this.currentDraggingPointerIds.length > 0) {\n                        return;\n                    }\n                    if (this._pointerCamera &&\n                        this._pointerCamera.cameraRigMode === Camera.RIG_MODE_NONE &&\n                        !this._pointerCamera._isLeftCamera &&\n                        !this._pointerCamera._isRightCamera) {\n                        pointerInfo.pickInfo.ray.origin.copyFrom(this._pointerCamera.globalPosition);\n                    }\n                    this._ownerNode.computeWorldMatrix(true);\n                    const virtualMeshesInfo = this._virtualMeshesInfo[pointerId];\n                    if (isXRNearPointer) {\n                        this._dragging = pointerInfo.pickInfo.originMesh ? this._dragType.NEAR_DRAG : this._dragType.DRAG_WITH_CONTROLLER;\n                        virtualMeshesInfo.originMesh.position.copyFrom(pointerInfo.pickInfo.aimTransform.position);\n                        if (this._dragging === this._dragType.NEAR_DRAG && pointerInfo.pickInfo.gripTransform) {\n                            virtualMeshesInfo.originMesh.rotationQuaternion.copyFrom(pointerInfo.pickInfo.gripTransform.rotationQuaternion);\n                        }\n                        else {\n                            virtualMeshesInfo.originMesh.rotationQuaternion.copyFrom(pointerInfo.pickInfo.aimTransform.rotationQuaternion);\n                        }\n                    }\n                    else {\n                        this._dragging = this._dragType.DRAG;\n                        virtualMeshesInfo.originMesh.position.copyFrom(pointerInfo.pickInfo.ray.origin);\n                    }\n                    virtualMeshesInfo.lastOriginPosition.copyFrom(virtualMeshesInfo.originMesh.position);\n                    virtualMeshesInfo.dragMesh.position.copyFrom(pointerInfo.pickInfo.pickedPoint);\n                    virtualMeshesInfo.lastDragPosition.copyFrom(pointerInfo.pickInfo.pickedPoint);\n                    virtualMeshesInfo.pivotMesh.position.copyFrom(this._ownerNode.getAbsolutePivotPoint());\n                    virtualMeshesInfo.pivotMesh.rotationQuaternion.copyFrom(this._ownerNode.absoluteRotationQuaternion);\n                    virtualMeshesInfo.startingPosition.copyFrom(virtualMeshesInfo.dragMesh.position);\n                    virtualMeshesInfo.startingPivotPosition.copyFrom(virtualMeshesInfo.pivotMesh.position);\n                    virtualMeshesInfo.startingOrientation.copyFrom(virtualMeshesInfo.dragMesh.rotationQuaternion);\n                    virtualMeshesInfo.startingPivotOrientation.copyFrom(virtualMeshesInfo.pivotMesh.rotationQuaternion);\n                    if (isXRNearPointer) {\n                        virtualMeshesInfo.originMesh.addChild(virtualMeshesInfo.dragMesh);\n                        virtualMeshesInfo.originMesh.addChild(virtualMeshesInfo.pivotMesh);\n                    }\n                    else {\n                        virtualMeshesInfo.originMesh.lookAt(virtualMeshesInfo.dragMesh.position);\n                    }\n                    // Update state\n                    virtualMeshesInfo.dragging = true;\n                    if (this.currentDraggingPointerIds.indexOf(pointerId) === -1) {\n                        this.currentDraggingPointerIds.push(pointerId);\n                    }\n                    // Detach camera controls\n                    if (this.detachCameraControls && this._pointerCamera && !this._pointerCamera.leftCamera) {\n                        if (this._pointerCamera.inputs && this._pointerCamera.inputs.attachedToElement) {\n                            this._pointerCamera.detachControl();\n                            this._attachedToElement = true;\n                        }\n                        else {\n                            this._attachedToElement = false;\n                        }\n                    }\n                    this._targetDragStart(virtualMeshesInfo.pivotMesh.position, virtualMeshesInfo.pivotMesh.rotationQuaternion, pointerId);\n                    this.onDragStartObservable.notifyObservers({ position: virtualMeshesInfo.pivotMesh.position });\n                }\n            }\n            else if (pointerInfo.type == PointerEventTypes.POINTERUP || pointerInfo.type == PointerEventTypes.POINTERDOUBLETAP) {\n                const registeredPointerIndex = this.currentDraggingPointerIds.indexOf(pointerId);\n                // Update state\n                virtualMeshesInfo.dragging = false;\n                if (registeredPointerIndex !== -1) {\n                    this.currentDraggingPointerIds.splice(registeredPointerIndex, 1);\n                    if (this.currentDraggingPointerIds.length === 0) {\n                        this._moving = false;\n                        this._dragging = this._dragType.NONE;\n                        // Reattach camera controls\n                        if (this.detachCameraControls && this._attachedToElement && this._pointerCamera && !this._pointerCamera.leftCamera) {\n                            this._reattachCameraControls();\n                            this._attachedToElement = false;\n                        }\n                    }\n                    virtualMeshesInfo.originMesh.removeChild(virtualMeshesInfo.dragMesh);\n                    virtualMeshesInfo.originMesh.removeChild(virtualMeshesInfo.pivotMesh);\n                    this._targetDragEnd(pointerId);\n                    this.onDragEndObservable.notifyObservers({});\n                }\n            }\n            else if (pointerInfo.type == PointerEventTypes.POINTERMOVE) {\n                const registeredPointerIndex = this.currentDraggingPointerIds.indexOf(pointerId);\n                if (registeredPointerIndex !== -1 && virtualMeshesInfo.dragging && pointerInfo.pickInfo && (pointerInfo.pickInfo.ray || pointerInfo.pickInfo.aimTransform)) {\n                    let zDragFactor = this.zDragFactor;\n                    // 2 pointer interaction should not have a z axis drag factor\n                    // as well as near interaction\n                    if (this.currentDraggingPointerIds.length > 1 || pointerInfo.pickInfo.originMesh) {\n                        zDragFactor = 0;\n                    }\n                    this._ownerNode.computeWorldMatrix(true);\n                    if (!isXRNearPointer) {\n                        this._pointerUpdate2D(pointerInfo.pickInfo.ray, pointerId, zDragFactor);\n                    }\n                    else {\n                        this._pointerUpdateXR(pointerInfo.pickInfo.aimTransform, pointerInfo.pickInfo.gripTransform, pointerId, zDragFactor);\n                    }\n                    // Get change in rotation\n                    this._tmpQuaternion.copyFrom(virtualMeshesInfo.startingPivotOrientation);\n                    this._tmpQuaternion.x = -this._tmpQuaternion.x;\n                    this._tmpQuaternion.y = -this._tmpQuaternion.y;\n                    this._tmpQuaternion.z = -this._tmpQuaternion.z;\n                    virtualMeshesInfo.pivotMesh.absoluteRotationQuaternion.multiplyToRef(this._tmpQuaternion, this._tmpQuaternion);\n                    virtualMeshesInfo.pivotMesh.absolutePosition.subtractToRef(virtualMeshesInfo.startingPivotPosition, this._tmpVector);\n                    this.onDragObservable.notifyObservers({ delta: this._tmpVector, position: virtualMeshesInfo.pivotMesh.position, pickInfo: pointerInfo.pickInfo });\n                    // Notify herited methods and observables\n                    this._targetDrag(this._tmpVector, this._tmpQuaternion, pointerId);\n                    virtualMeshesInfo.lastDragPosition.copyFrom(virtualMeshesInfo.dragMesh.absolutePosition);\n                    this._moving = true;\n                }\n            }\n        });\n    }\n    _applyZOffset(node, localOriginDragDifference, zDragFactor) {\n        // Determine how much the controller moved to/away towards the dragged object and use this to move the object further when its further away\n        node.position.z -= node.position.z < 1 ? localOriginDragDifference * zDragFactor : localOriginDragDifference * zDragFactor * node.position.z;\n        if (node.position.z < 0) {\n            node.position.z = 0;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    _targetDragStart(worldPosition, worldRotation, pointerId) {\n        // Herited classes can override that\n    }\n    _targetDrag(worldDeltaPosition, worldDeltaRotation, pointerId) {\n        // Herited classes can override that\n    }\n    _targetDragEnd(pointerId) {\n        // Herited classes can override that\n    }\n    _reattachCameraControls() {\n        if (this._pointerCamera) {\n            // If the camera is an ArcRotateCamera, preserve the settings from the camera\n            // when reattaching control\n            if (this._pointerCamera.getClassName() === \"ArcRotateCamera\") {\n                const arcRotateCamera = this._pointerCamera;\n                arcRotateCamera.attachControl(arcRotateCamera.inputs ? arcRotateCamera.inputs.noPreventDefault : true, arcRotateCamera._useCtrlForPanning, arcRotateCamera._panningMouseButton);\n            }\n            else {\n                // preserve the settings from the camera when reattaching control\n                this._pointerCamera.attachControl(this._pointerCamera.inputs ? this._pointerCamera.inputs.noPreventDefault : true);\n            }\n        }\n    }\n    /**\n     * Detaches the behavior from the mesh\n     */\n    detach() {\n        if (this._scene) {\n            if (this.detachCameraControls && this._attachedToElement && this._pointerCamera && !this._pointerCamera.leftCamera) {\n                this._reattachCameraControls();\n                this._attachedToElement = false;\n            }\n            this._scene.onPointerObservable.remove(this._pointerObserver);\n        }\n        for (const pointerId in this._virtualMeshesInfo) {\n            this._virtualMeshesInfo[pointerId].originMesh.dispose();\n            this._virtualMeshesInfo[pointerId].dragMesh.dispose();\n        }\n        this.onDragEndObservable.clear();\n        this.onDragObservable.clear();\n        this.onDragStartObservable.clear();\n    }\n}\n//# sourceMappingURL=baseSixDofDragBehavior.js.map","import { Mesh } from \"../../Meshes/mesh.js\";\nimport { Scene } from \"../../scene.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { Vector3 } from \"../../Maths/math.vector.js\";\nimport { PointerEventTypes } from \"../../Events/pointerEvents.js\";\nimport { Ray } from \"../../Culling/ray.js\";\nimport { PivotTools } from \"../../Misc/pivotTools.js\";\nimport { CreatePlane } from \"../../Meshes/Builders/planeBuilder.js\";\n/**\n * A behavior that when attached to a mesh will allow the mesh to be dragged around the screen based on pointer events\n */\nexport class PointerDragBehavior {\n    /**\n     * Get or set the currentDraggingPointerId\n     * @deprecated Please use currentDraggingPointerId instead\n     */\n    get currentDraggingPointerID() {\n        return this.currentDraggingPointerId;\n    }\n    set currentDraggingPointerID(currentDraggingPointerID) {\n        this.currentDraggingPointerId = currentDraggingPointerID;\n    }\n    /**\n     *  If the drag behavior will react to drag events (Default: true)\n     */\n    set enabled(value) {\n        if (value != this._enabled) {\n            this.onEnabledObservable.notifyObservers(value);\n        }\n        this._enabled = value;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    /**\n     * Gets the options used by the behavior\n     */\n    get options() {\n        return this._options;\n    }\n    /**\n     * Sets the options used by the behavior\n     */\n    set options(options) {\n        this._options = options;\n    }\n    /**\n     * Creates a pointer drag behavior that can be attached to a mesh\n     * @param options The drag axis or normal of the plane that will be dragged across. If no options are specified the drag plane will always face the ray's origin (eg. camera)\n     * @param options.dragAxis\n     * @param options.dragPlaneNormal\n     */\n    constructor(options) {\n        this._useAlternatePickedPointAboveMaxDragAngleDragSpeed = -1.1;\n        this._activeDragButton = -1;\n        /**\n         * The maximum tolerated angle between the drag plane and dragging pointer rays to trigger pointer events. Set to 0 to allow any angle (default: 0)\n         */\n        this.maxDragAngle = 0;\n        /**\n         * Butttons that can be used to initiate a drag\n         */\n        this.dragButtons = [0, 1, 2];\n        /**\n         * @internal\n         */\n        this._useAlternatePickedPointAboveMaxDragAngle = false;\n        /**\n         * The id of the pointer that is currently interacting with the behavior (-1 when no pointer is active)\n         */\n        this.currentDraggingPointerId = -1;\n        /**\n         * If the behavior is currently in a dragging state\n         */\n        this.dragging = false;\n        /**\n         * The distance towards the target drag position to move each frame. This can be useful to avoid jitter. Set this to 1 for no delay. (Default: 0.2)\n         */\n        this.dragDeltaRatio = 0.2;\n        /**\n         * If the drag plane orientation should be updated during the dragging (Default: true)\n         */\n        this.updateDragPlane = true;\n        // Debug mode will display drag planes to help visualize behavior\n        this._debugMode = false;\n        this._moving = false;\n        /**\n         *  Fires each time the attached mesh is dragged with the pointer\n         *  * delta between last drag position and current drag position in world space\n         *  * dragDistance along the drag axis\n         *  * dragPlaneNormal normal of the current drag plane used during the drag\n         *  * dragPlanePoint in world space where the drag intersects the drag plane\n         *\n         *  (if validatedDrag is used, the position of the attached mesh might not equal dragPlanePoint)\n         */\n        this.onDragObservable = new Observable();\n        /**\n         *  Fires each time a drag begins (eg. mouse down on mesh)\n         *  * dragPlanePoint in world space where the drag intersects the drag plane\n         *\n         *  (if validatedDrag is used, the position of the attached mesh might not equal dragPlanePoint)\n         */\n        this.onDragStartObservable = new Observable();\n        /**\n         *  Fires each time a drag ends (eg. mouse release after drag)\n         *  * dragPlanePoint in world space where the drag intersects the drag plane\n         *\n         *  (if validatedDrag is used, the position of the attached mesh might not equal dragPlanePoint)\n         */\n        this.onDragEndObservable = new Observable();\n        /**\n         *  Fires each time behavior enabled state changes\n         */\n        this.onEnabledObservable = new Observable();\n        /**\n         *  If the attached mesh should be moved when dragged\n         */\n        this.moveAttached = true;\n        this._enabled = true;\n        /**\n         * If pointer events should start and release the drag (Default: true)\n         */\n        this.startAndReleaseDragOnPointerEvents = true;\n        /**\n         * If camera controls should be detached during the drag\n         */\n        this.detachCameraControls = true;\n        /**\n         * If set, the drag plane/axis will be rotated based on the attached mesh's world rotation (Default: true)\n         */\n        this.useObjectOrientationForDragging = true;\n        /**\n         * Predicate to determine if it is valid to move the object to a new position when it is moved\n         * @param targetPosition\n         */\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        this.validateDrag = (targetPosition) => {\n            return true;\n        };\n        this._tmpVector = new Vector3(0, 0, 0);\n        this._alternatePickedPoint = new Vector3(0, 0, 0);\n        this._worldDragAxis = new Vector3(0, 0, 0);\n        this._targetPosition = new Vector3(0, 0, 0);\n        this._attachedToElement = false;\n        this._startDragRay = new Ray(new Vector3(), new Vector3());\n        this._lastPointerRay = {};\n        this._dragDelta = new Vector3();\n        // Variables to avoid instantiation in the below method\n        this._pointA = new Vector3(0, 0, 0);\n        this._pointC = new Vector3(0, 0, 0);\n        this._localAxis = new Vector3(0, 0, 0);\n        this._lookAt = new Vector3(0, 0, 0);\n        this._options = options ? options : {};\n        let optionCount = 0;\n        if (this._options.dragAxis) {\n            optionCount++;\n        }\n        if (this._options.dragPlaneNormal) {\n            optionCount++;\n        }\n        if (optionCount > 1) {\n            throw \"Multiple drag modes specified in dragBehavior options. Only one expected\";\n        }\n    }\n    /**\n     *  The name of the behavior\n     */\n    get name() {\n        return \"PointerDrag\";\n    }\n    /**\n     *  Initializes the behavior\n     */\n    init() { }\n    /**\n     * Attaches the drag behavior the passed in mesh\n     * @param ownerNode The mesh that will be dragged around once attached\n     * @param predicate Predicate to use for pick filtering\n     */\n    attach(ownerNode, predicate) {\n        this._scene = ownerNode.getScene();\n        ownerNode.isNearGrabbable = true;\n        this.attachedNode = ownerNode;\n        // Initialize drag plane to not interfere with existing scene\n        if (!PointerDragBehavior._PlaneScene) {\n            if (this._debugMode) {\n                PointerDragBehavior._PlaneScene = this._scene;\n            }\n            else {\n                PointerDragBehavior._PlaneScene = new Scene(this._scene.getEngine(), { virtual: true });\n                PointerDragBehavior._PlaneScene.detachControl();\n                this._scene.onDisposeObservable.addOnce(() => {\n                    PointerDragBehavior._PlaneScene.dispose();\n                    PointerDragBehavior._PlaneScene = null;\n                });\n            }\n        }\n        this._dragPlane = CreatePlane(\"pointerDragPlane\", { size: this._debugMode ? 1 : 10000, updatable: false, sideOrientation: Mesh.DOUBLESIDE }, PointerDragBehavior._PlaneScene);\n        // State of the drag\n        this.lastDragPosition = new Vector3(0, 0, 0);\n        const pickPredicate = predicate\n            ? predicate\n            : (m) => {\n                return this.attachedNode == m || m.isDescendantOf(this.attachedNode);\n            };\n        this._pointerObserver = this._scene.onPointerObservable.add((pointerInfo) => {\n            if (!this.enabled) {\n                // If behavior is disabled before releaseDrag is ever called, call it now.\n                if (this._attachedToElement) {\n                    this.releaseDrag();\n                }\n                return;\n            }\n            if (pointerInfo.type == PointerEventTypes.POINTERDOWN) {\n                if (this.startAndReleaseDragOnPointerEvents &&\n                    !this.dragging &&\n                    pointerInfo.pickInfo &&\n                    pointerInfo.pickInfo.hit &&\n                    pointerInfo.pickInfo.pickedMesh &&\n                    pointerInfo.pickInfo.pickedPoint &&\n                    pointerInfo.pickInfo.ray &&\n                    pickPredicate(pointerInfo.pickInfo.pickedMesh)) {\n                    if (this._activeDragButton === -1 && this.dragButtons.indexOf(pointerInfo.event.button) !== -1) {\n                        this._activeDragButton = pointerInfo.event.button;\n                        this._activePointerInfo = pointerInfo;\n                        this._startDrag(pointerInfo.event.pointerId, pointerInfo.pickInfo.ray, pointerInfo.pickInfo.pickedPoint);\n                    }\n                }\n            }\n            else if (pointerInfo.type == PointerEventTypes.POINTERUP) {\n                if (this.startAndReleaseDragOnPointerEvents &&\n                    this.currentDraggingPointerId == pointerInfo.event.pointerId &&\n                    this._activeDragButton === pointerInfo.event.button) {\n                    this.releaseDrag();\n                }\n            }\n            else if (pointerInfo.type == PointerEventTypes.POINTERMOVE) {\n                const pointerId = pointerInfo.event.pointerId;\n                // If drag was started with anyMouseID specified, set pointerID to the next mouse that moved\n                if (this.currentDraggingPointerId === PointerDragBehavior._AnyMouseId && pointerId !== PointerDragBehavior._AnyMouseId) {\n                    const evt = pointerInfo.event;\n                    const isMouseEvent = evt.pointerType === \"mouse\" || (!this._scene.getEngine().hostInformation.isMobile && evt instanceof MouseEvent);\n                    if (isMouseEvent) {\n                        if (this._lastPointerRay[this.currentDraggingPointerId]) {\n                            this._lastPointerRay[pointerId] = this._lastPointerRay[this.currentDraggingPointerId];\n                            delete this._lastPointerRay[this.currentDraggingPointerId];\n                        }\n                        this.currentDraggingPointerId = pointerId;\n                    }\n                }\n                // Keep track of last pointer ray, this is used simulating the start of a drag in startDrag()\n                if (!this._lastPointerRay[pointerId]) {\n                    this._lastPointerRay[pointerId] = new Ray(new Vector3(), new Vector3());\n                }\n                if (pointerInfo.pickInfo && pointerInfo.pickInfo.ray) {\n                    this._lastPointerRay[pointerId].origin.copyFrom(pointerInfo.pickInfo.ray.origin);\n                    this._lastPointerRay[pointerId].direction.copyFrom(pointerInfo.pickInfo.ray.direction);\n                    if (this.currentDraggingPointerId == pointerId && this.dragging) {\n                        this._moveDrag(pointerInfo.pickInfo.ray);\n                    }\n                }\n            }\n        });\n        this._beforeRenderObserver = this._scene.onBeforeRenderObservable.add(() => {\n            if (this._moving && this.moveAttached) {\n                let needMatrixUpdate = false;\n                PivotTools._RemoveAndStorePivotPoint(this.attachedNode);\n                // Slowly move mesh to avoid jitter\n                this._targetPosition.subtractToRef(this.attachedNode.absolutePosition, this._tmpVector);\n                this._tmpVector.scaleInPlace(this.dragDeltaRatio);\n                this.attachedNode.getAbsolutePosition().addToRef(this._tmpVector, this._tmpVector);\n                if (this.validateDrag(this._tmpVector)) {\n                    this.attachedNode.setAbsolutePosition(this._tmpVector);\n                    needMatrixUpdate = true;\n                }\n                PivotTools._RestorePivotPoint(this.attachedNode);\n                if (needMatrixUpdate) {\n                    this.attachedNode.computeWorldMatrix();\n                }\n            }\n        });\n    }\n    /**\n     * Force release the drag action by code.\n     */\n    releaseDrag() {\n        if (this.dragging) {\n            this.dragging = false;\n            this.onDragEndObservable.notifyObservers({ dragPlanePoint: this.lastDragPosition, pointerId: this.currentDraggingPointerId, pointerInfo: this._activePointerInfo });\n        }\n        this.currentDraggingPointerId = -1;\n        this._activeDragButton = -1;\n        this._activePointerInfo = null;\n        this._moving = false;\n        // Reattach camera controls\n        if (this.detachCameraControls && this._attachedToElement && this._scene.activeCamera && !this._scene.activeCamera.leftCamera) {\n            if (this._scene.activeCamera.getClassName() === \"ArcRotateCamera\") {\n                const arcRotateCamera = this._scene.activeCamera;\n                arcRotateCamera.attachControl(arcRotateCamera.inputs ? arcRotateCamera.inputs.noPreventDefault : true, arcRotateCamera._useCtrlForPanning, arcRotateCamera._panningMouseButton);\n            }\n            else {\n                this._scene.activeCamera.attachControl(this._scene.activeCamera.inputs ? this._scene.activeCamera.inputs.noPreventDefault : true);\n            }\n            this._attachedToElement = false;\n        }\n    }\n    /**\n     * Simulates the start of a pointer drag event on the behavior\n     * @param pointerId pointerID of the pointer that should be simulated (Default: Any mouse pointer ID)\n     * @param fromRay initial ray of the pointer to be simulated (Default: Ray from camera to attached mesh)\n     * @param startPickedPoint picked point of the pointer to be simulated (Default: attached mesh position)\n     */\n    startDrag(pointerId = PointerDragBehavior._AnyMouseId, fromRay, startPickedPoint) {\n        this._startDrag(pointerId, fromRay, startPickedPoint);\n        let lastRay = this._lastPointerRay[pointerId];\n        if (pointerId === PointerDragBehavior._AnyMouseId) {\n            lastRay = this._lastPointerRay[Object.keys(this._lastPointerRay)[0]];\n        }\n        if (lastRay) {\n            // if there was a last pointer ray drag the object there\n            this._moveDrag(lastRay);\n        }\n    }\n    _startDrag(pointerId, fromRay, startPickedPoint) {\n        if (!this._scene.activeCamera || this.dragging || !this.attachedNode) {\n            return;\n        }\n        PivotTools._RemoveAndStorePivotPoint(this.attachedNode);\n        // Create start ray from the camera to the object\n        if (fromRay) {\n            this._startDragRay.direction.copyFrom(fromRay.direction);\n            this._startDragRay.origin.copyFrom(fromRay.origin);\n        }\n        else {\n            this._startDragRay.origin.copyFrom(this._scene.activeCamera.position);\n            this.attachedNode.getWorldMatrix().getTranslationToRef(this._tmpVector);\n            this._tmpVector.subtractToRef(this._scene.activeCamera.position, this._startDragRay.direction);\n        }\n        this._updateDragPlanePosition(this._startDragRay, startPickedPoint ? startPickedPoint : this._tmpVector);\n        const pickedPoint = this._pickWithRayOnDragPlane(this._startDragRay);\n        if (pickedPoint) {\n            this.dragging = true;\n            this.currentDraggingPointerId = pointerId;\n            this.lastDragPosition.copyFrom(pickedPoint);\n            this.onDragStartObservable.notifyObservers({ dragPlanePoint: pickedPoint, pointerId: this.currentDraggingPointerId, pointerInfo: this._activePointerInfo });\n            this._targetPosition.copyFrom(this.attachedNode.getAbsolutePosition());\n            // Detatch camera controls\n            if (this.detachCameraControls && this._scene.activeCamera && this._scene.activeCamera.inputs && !this._scene.activeCamera.leftCamera) {\n                if (this._scene.activeCamera.inputs.attachedToElement) {\n                    this._scene.activeCamera.detachControl();\n                    this._attachedToElement = true;\n                }\n                else {\n                    this._attachedToElement = false;\n                }\n            }\n        }\n        else {\n            this.releaseDrag();\n        }\n        PivotTools._RestorePivotPoint(this.attachedNode);\n    }\n    _moveDrag(ray) {\n        this._moving = true;\n        const pickedPoint = this._pickWithRayOnDragPlane(ray);\n        if (pickedPoint) {\n            PivotTools._RemoveAndStorePivotPoint(this.attachedNode);\n            if (this.updateDragPlane) {\n                this._updateDragPlanePosition(ray, pickedPoint);\n            }\n            let dragLength = 0;\n            // depending on the drag mode option drag accordingly\n            if (this._options.dragAxis) {\n                // Convert local drag axis to world if useObjectOrientationForDragging\n                this.useObjectOrientationForDragging\n                    ? Vector3.TransformCoordinatesToRef(this._options.dragAxis, this.attachedNode.getWorldMatrix().getRotationMatrix(), this._worldDragAxis)\n                    : this._worldDragAxis.copyFrom(this._options.dragAxis);\n                // Project delta drag from the drag plane onto the drag axis\n                pickedPoint.subtractToRef(this.lastDragPosition, this._tmpVector);\n                dragLength = Vector3.Dot(this._tmpVector, this._worldDragAxis);\n                this._worldDragAxis.scaleToRef(dragLength, this._dragDelta);\n            }\n            else {\n                dragLength = this._dragDelta.length();\n                pickedPoint.subtractToRef(this.lastDragPosition, this._dragDelta);\n            }\n            this._targetPosition.addInPlace(this._dragDelta);\n            this.onDragObservable.notifyObservers({\n                dragDistance: dragLength,\n                delta: this._dragDelta,\n                dragPlanePoint: pickedPoint,\n                dragPlaneNormal: this._dragPlane.forward,\n                pointerId: this.currentDraggingPointerId,\n                pointerInfo: this._activePointerInfo,\n            });\n            this.lastDragPosition.copyFrom(pickedPoint);\n            PivotTools._RestorePivotPoint(this.attachedNode);\n        }\n    }\n    _pickWithRayOnDragPlane(ray) {\n        if (!ray) {\n            return null;\n        }\n        // Calculate angle between plane normal and ray\n        let angle = Math.acos(Vector3.Dot(this._dragPlane.forward, ray.direction));\n        // Correct if ray is casted from oposite side\n        if (angle > Math.PI / 2) {\n            angle = Math.PI - angle;\n        }\n        // If the angle is too perpendicular to the plane pick another point on the plane where it is looking\n        if (this.maxDragAngle > 0 && angle > this.maxDragAngle) {\n            if (this._useAlternatePickedPointAboveMaxDragAngle) {\n                // Invert ray direction along the towards object axis\n                this._tmpVector.copyFrom(ray.direction);\n                this.attachedNode.absolutePosition.subtractToRef(ray.origin, this._alternatePickedPoint);\n                this._alternatePickedPoint.normalize();\n                this._alternatePickedPoint.scaleInPlace(this._useAlternatePickedPointAboveMaxDragAngleDragSpeed * Vector3.Dot(this._alternatePickedPoint, this._tmpVector));\n                this._tmpVector.addInPlace(this._alternatePickedPoint);\n                // Project resulting vector onto the drag plane and add it to the attached nodes absolute position to get a picked point\n                const dot = Vector3.Dot(this._dragPlane.forward, this._tmpVector);\n                this._dragPlane.forward.scaleToRef(-dot, this._alternatePickedPoint);\n                this._alternatePickedPoint.addInPlace(this._tmpVector);\n                this._alternatePickedPoint.addInPlace(this.attachedNode.absolutePosition);\n                return this._alternatePickedPoint;\n            }\n            else {\n                return null;\n            }\n        }\n        const pickResult = PointerDragBehavior._PlaneScene.pickWithRay(ray, (m) => {\n            return m == this._dragPlane;\n        });\n        if (pickResult && pickResult.hit && pickResult.pickedMesh && pickResult.pickedPoint) {\n            return pickResult.pickedPoint;\n        }\n        else {\n            return null;\n        }\n    }\n    // Position the drag plane based on the attached mesh position, for single axis rotate the plane along the axis to face the camera\n    _updateDragPlanePosition(ray, dragPlanePosition) {\n        this._pointA.copyFrom(dragPlanePosition);\n        if (this._options.dragAxis) {\n            this.useObjectOrientationForDragging\n                ? Vector3.TransformCoordinatesToRef(this._options.dragAxis, this.attachedNode.getWorldMatrix().getRotationMatrix(), this._localAxis)\n                : this._localAxis.copyFrom(this._options.dragAxis);\n            // Calculate plane normal that is the cross product of local axis and (eye-dragPlanePosition)\n            ray.origin.subtractToRef(this._pointA, this._pointC);\n            this._pointC.normalize();\n            if (Math.abs(Vector3.Dot(this._localAxis, this._pointC)) > 0.999) {\n                // the drag axis is colinear with the (eye to position) ray. The cross product will give jittered values.\n                // A new axis vector need to be computed\n                if (Math.abs(Vector3.Dot(Vector3.UpReadOnly, this._pointC)) > 0.999) {\n                    this._lookAt.copyFrom(Vector3.Right());\n                }\n                else {\n                    this._lookAt.copyFrom(Vector3.UpReadOnly);\n                }\n            }\n            else {\n                Vector3.CrossToRef(this._localAxis, this._pointC, this._lookAt);\n                // Get perpendicular line from previous result and drag axis to adjust lineB to be perpendicular to camera\n                Vector3.CrossToRef(this._localAxis, this._lookAt, this._lookAt);\n                this._lookAt.normalize();\n            }\n            this._dragPlane.position.copyFrom(this._pointA);\n            this._pointA.addToRef(this._lookAt, this._lookAt);\n            this._dragPlane.lookAt(this._lookAt);\n        }\n        else if (this._options.dragPlaneNormal) {\n            this.useObjectOrientationForDragging\n                ? Vector3.TransformCoordinatesToRef(this._options.dragPlaneNormal, this.attachedNode.getWorldMatrix().getRotationMatrix(), this._localAxis)\n                : this._localAxis.copyFrom(this._options.dragPlaneNormal);\n            this._dragPlane.position.copyFrom(this._pointA);\n            this._pointA.addToRef(this._localAxis, this._lookAt);\n            this._dragPlane.lookAt(this._lookAt);\n        }\n        else {\n            this._dragPlane.position.copyFrom(this._pointA);\n            this._dragPlane.lookAt(ray.origin);\n        }\n        // Update the position of the drag plane so it doesn't get out of sync with the node (eg. when moving back and forth quickly)\n        this._dragPlane.position.copyFrom(this.attachedNode.getAbsolutePosition());\n        this._dragPlane.computeWorldMatrix(true);\n    }\n    /**\n     *  Detaches the behavior from the mesh\n     */\n    detach() {\n        this._lastPointerRay = {};\n        if (this.attachedNode) {\n            this.attachedNode.isNearGrabbable = false;\n        }\n        if (this._pointerObserver) {\n            this._scene.onPointerObservable.remove(this._pointerObserver);\n        }\n        if (this._beforeRenderObserver) {\n            this._scene.onBeforeRenderObservable.remove(this._beforeRenderObserver);\n        }\n        if (this._dragPlane) {\n            this._dragPlane.dispose();\n        }\n        this.releaseDrag();\n    }\n}\nPointerDragBehavior._AnyMouseId = -2;\n//# sourceMappingURL=pointerDragBehavior.js.map","import { Vector3, Quaternion, Matrix, TmpVectors } from \"../../Maths/math.vector.js\";\nimport { Observable } from \"../../Misc/observable.js\";\nimport { BaseSixDofDragBehavior } from \"./baseSixDofDragBehavior.js\";\nimport { TransformNode } from \"../../Meshes/transformNode.js\";\nimport { Space } from \"../../Maths/math.axis.js\";\n/**\n * A behavior that when attached to a mesh will allow the mesh to be dragged around based on directions and origin of the pointer's ray\n */\nexport class SixDofDragBehavior extends BaseSixDofDragBehavior {\n    constructor() {\n        super(...arguments);\n        this._sceneRenderObserver = null;\n        this._targetPosition = new Vector3(0, 0, 0);\n        this._targetOrientation = new Quaternion();\n        this._targetScaling = new Vector3(1, 1, 1);\n        this._startingPosition = new Vector3(0, 0, 0);\n        this._startingOrientation = new Quaternion();\n        this._startingScaling = new Vector3(1, 1, 1);\n        /**\n         * Fires when position is updated\n         */\n        this.onPositionChangedObservable = new Observable();\n        /**\n         * The distance towards the target drag position to move each frame. This can be useful to avoid jitter. Set this to 1 for no delay. (Default: 0.2)\n         */\n        this.dragDeltaRatio = 0.2;\n        /**\n         * If the object should rotate to face the drag origin\n         */\n        this.rotateDraggedObject = true;\n        /**\n         * If `rotateDraggedObject` is set to `true`, this parameter determines if we are only rotating around the y axis (yaw)\n         */\n        this.rotateAroundYOnly = false;\n        /**\n         * Should the behavior rotate 1:1 with the motion controller, when one is used.\n         */\n        this.rotateWithMotionController = true;\n        /**\n         * Use this flag to update the target but not move the owner node towards the target\n         */\n        this.disableMovement = false;\n        /**\n         * Should the object rotate towards the camera when we start dragging it\n         */\n        this.faceCameraOnDragStart = false;\n    }\n    /**\n     *  The name of the behavior\n     */\n    get name() {\n        return \"SixDofDrag\";\n    }\n    /**\n     * Attaches the six DoF drag behavior\n     * @param ownerNode The mesh that will be dragged around once attached\n     */\n    attach(ownerNode) {\n        super.attach(ownerNode);\n        ownerNode.isNearGrabbable = true;\n        // Node that will save the owner's transform\n        this._virtualTransformNode = new TransformNode(\"virtual_sixDof\", BaseSixDofDragBehavior._virtualScene);\n        this._virtualTransformNode.rotationQuaternion = Quaternion.Identity();\n        // On every frame move towards target scaling to avoid jitter caused by vr controllers\n        this._sceneRenderObserver = ownerNode.getScene().onBeforeRenderObservable.add(() => {\n            if (this.currentDraggingPointerIds.length === 1 && this._moving && !this.disableMovement) {\n                // 1 pointer only drags mesh\n                const oldParent = ownerNode.parent;\n                ownerNode.setParent(null);\n                ownerNode.position.addInPlace(this._targetPosition.subtract(ownerNode.position).scale(this.dragDeltaRatio));\n                this.onPositionChangedObservable.notifyObservers({ position: ownerNode.absolutePosition });\n                // Only rotate the mesh if it's parent has uniform scaling\n                if (!oldParent || (oldParent.scaling && !oldParent.scaling.isNonUniformWithinEpsilon(0.001))) {\n                    Quaternion.SlerpToRef(ownerNode.rotationQuaternion, this._targetOrientation, this.dragDeltaRatio, ownerNode.rotationQuaternion);\n                }\n                ownerNode.setParent(oldParent);\n            }\n        });\n    }\n    _getPositionOffsetAround(transformationLocalOrigin, scaling, rotation) {\n        const translationMatrix = TmpVectors.Matrix[0]; // T\n        const translationMatrixInv = TmpVectors.Matrix[1]; // T'\n        const rotationMatrix = TmpVectors.Matrix[2]; // R\n        const scaleMatrix = TmpVectors.Matrix[3]; // S\n        const finalMatrix = TmpVectors.Matrix[4]; // T' x R x S x T\n        Matrix.TranslationToRef(transformationLocalOrigin.x, transformationLocalOrigin.y, transformationLocalOrigin.z, translationMatrix); // T\n        Matrix.TranslationToRef(-transformationLocalOrigin.x, -transformationLocalOrigin.y, -transformationLocalOrigin.z, translationMatrixInv); // T'\n        Matrix.FromQuaternionToRef(rotation, rotationMatrix); // R\n        Matrix.ScalingToRef(scaling, scaling, scaling, scaleMatrix);\n        translationMatrixInv.multiplyToRef(rotationMatrix, finalMatrix); // T' x R\n        finalMatrix.multiplyToRef(scaleMatrix, finalMatrix); // T' x R x S\n        finalMatrix.multiplyToRef(translationMatrix, finalMatrix); // T' x R x S x T\n        return finalMatrix.getTranslation();\n    }\n    _onePointerPositionUpdated(worldDeltaPosition, worldDeltaRotation) {\n        const pointerDelta = TmpVectors.Vector3[0];\n        pointerDelta.setAll(0);\n        if (this._dragging === this._dragType.DRAG) {\n            if (this.rotateDraggedObject) {\n                if (this.rotateAroundYOnly) {\n                    // Convert change in rotation to only y axis rotation\n                    Quaternion.RotationYawPitchRollToRef(worldDeltaRotation.toEulerAngles().y, 0, 0, TmpVectors.Quaternion[0]);\n                }\n                else {\n                    TmpVectors.Quaternion[0].copyFrom(worldDeltaRotation);\n                }\n                TmpVectors.Quaternion[0].multiplyToRef(this._startingOrientation, this._targetOrientation);\n            }\n        }\n        else if (this._dragging === this._dragType.NEAR_DRAG || (this._dragging === this._dragType.DRAG_WITH_CONTROLLER && this.rotateWithMotionController)) {\n            worldDeltaRotation.multiplyToRef(this._startingOrientation, this._targetOrientation);\n        }\n        this._targetPosition.copyFrom(this._startingPosition).addInPlace(worldDeltaPosition);\n    }\n    _twoPointersPositionUpdated() {\n        const startingPosition0 = this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].startingPosition;\n        const startingPosition1 = this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].startingPosition;\n        const startingCenter = TmpVectors.Vector3[0];\n        startingPosition0.addToRef(startingPosition1, startingCenter);\n        startingCenter.scaleInPlace(0.5);\n        const startingVector = TmpVectors.Vector3[1];\n        startingPosition1.subtractToRef(startingPosition0, startingVector);\n        const currentPosition0 = this._virtualMeshesInfo[this.currentDraggingPointerIds[0]].dragMesh.absolutePosition;\n        const currentPosition1 = this._virtualMeshesInfo[this.currentDraggingPointerIds[1]].dragMesh.absolutePosition;\n        const currentCenter = TmpVectors.Vector3[2];\n        currentPosition0.addToRef(currentPosition1, currentCenter);\n        currentCenter.scaleInPlace(0.5);\n        const currentVector = TmpVectors.Vector3[3];\n        currentPosition1.subtractToRef(currentPosition0, currentVector);\n        const scaling = currentVector.length() / startingVector.length();\n        const translation = currentCenter.subtract(startingCenter);\n        const rotationQuaternion = Quaternion.FromEulerAngles(0, Vector3.GetAngleBetweenVectorsOnPlane(startingVector.normalize(), currentVector.normalize(), Vector3.UpReadOnly), 0);\n        const oldParent = this._ownerNode.parent;\n        this._ownerNode.setParent(null);\n        const positionOffset = this._getPositionOffsetAround(startingCenter.subtract(this._virtualTransformNode.getAbsolutePivotPoint()), scaling, rotationQuaternion);\n        this._virtualTransformNode.rotationQuaternion.multiplyToRef(rotationQuaternion, this._ownerNode.rotationQuaternion);\n        this._virtualTransformNode.scaling.scaleToRef(scaling, this._ownerNode.scaling);\n        this._virtualTransformNode.position.addToRef(translation.addInPlace(positionOffset), this._ownerNode.position);\n        this.onPositionChangedObservable.notifyObservers({ position: this._ownerNode.position });\n        this._ownerNode.setParent(oldParent);\n    }\n    _targetDragStart() {\n        const pointerCount = this.currentDraggingPointerIds.length;\n        const oldParent = this._ownerNode.parent;\n        if (!this._ownerNode.rotationQuaternion) {\n            this._ownerNode.rotationQuaternion = Quaternion.RotationYawPitchRoll(this._ownerNode.rotation.y, this._ownerNode.rotation.x, this._ownerNode.rotation.z);\n        }\n        const worldPivot = this._ownerNode.getAbsolutePivotPoint();\n        this._ownerNode.setParent(null);\n        if (pointerCount === 1) {\n            this._targetPosition.copyFrom(this._ownerNode.position);\n            this._targetOrientation.copyFrom(this._ownerNode.rotationQuaternion);\n            this._targetScaling.copyFrom(this._ownerNode.scaling);\n            if (this.faceCameraOnDragStart && this._scene.activeCamera) {\n                const toCamera = TmpVectors.Vector3[0];\n                this._scene.activeCamera.position.subtractToRef(worldPivot, toCamera);\n                toCamera.normalize();\n                const quat = TmpVectors.Quaternion[0];\n                if (this._scene.useRightHandedSystem) {\n                    Quaternion.FromLookDirectionRHToRef(toCamera, new Vector3(0, 1, 0), quat);\n                }\n                else {\n                    Quaternion.FromLookDirectionLHToRef(toCamera, new Vector3(0, 1, 0), quat);\n                }\n                quat.normalize();\n                Quaternion.RotationYawPitchRollToRef(quat.toEulerAngles().y, 0, 0, TmpVectors.Quaternion[0]);\n                this._targetOrientation.copyFrom(TmpVectors.Quaternion[0]);\n            }\n            this._startingPosition.copyFrom(this._targetPosition);\n            this._startingOrientation.copyFrom(this._targetOrientation);\n            this._startingScaling.copyFrom(this._targetScaling);\n        }\n        else if (pointerCount === 2) {\n            this._virtualTransformNode.setPivotPoint(new Vector3(0, 0, 0), Space.LOCAL);\n            this._virtualTransformNode.position.copyFrom(this._ownerNode.position);\n            this._virtualTransformNode.scaling.copyFrom(this._ownerNode.scaling);\n            this._virtualTransformNode.rotationQuaternion.copyFrom(this._ownerNode.rotationQuaternion);\n            this._virtualTransformNode.setPivotPoint(worldPivot, Space.WORLD);\n            this._resetVirtualMeshesPosition();\n        }\n        this._ownerNode.setParent(oldParent);\n    }\n    _targetDrag(worldDeltaPosition, worldDeltaRotation) {\n        if (this.currentDraggingPointerIds.length === 1) {\n            this._onePointerPositionUpdated(worldDeltaPosition, worldDeltaRotation);\n        }\n        else if (this.currentDraggingPointerIds.length === 2) {\n            this._twoPointersPositionUpdated();\n        }\n    }\n    _targetDragEnd() {\n        if (this.currentDraggingPointerIds.length === 1) {\n            // We still have 1 active pointer, we must simulate a dragstart with a reseted position/orientation\n            this._resetVirtualMeshesPosition();\n            const previousFaceCameraFlag = this.faceCameraOnDragStart;\n            this.faceCameraOnDragStart = false;\n            this._targetDragStart();\n            this.faceCameraOnDragStart = previousFaceCameraFlag;\n        }\n    }\n    /**\n     *  Detaches the behavior from the mesh\n     */\n    detach() {\n        super.detach();\n        if (this._ownerNode) {\n            this._ownerNode.isNearGrabbable = false;\n            this._ownerNode.getScene().onBeforeRenderObservable.remove(this._sceneRenderObserver);\n        }\n        if (this._virtualTransformNode) {\n            this._virtualTransformNode.dispose();\n        }\n    }\n}\n//# sourceMappingURL=sixDofDragBehavior.js.map","import { WebXRFeatureName } from \"../../XR/webXRFeaturesManager.js\";\nimport { WebXRHandJoint } from \"../../XR/features/WebXRHandTracking.js\";\nimport { Quaternion, TmpVectors, Vector3 } from \"../../Maths/math.vector.js\";\nimport { Tools } from \"../../Misc/tools.js\";\n/**\n * Zones around the hand\n */\nexport var HandConstraintZone;\n(function (HandConstraintZone) {\n    /**\n     * Above finger tips\n     */\n    HandConstraintZone[HandConstraintZone[\"ABOVE_FINGER_TIPS\"] = 0] = \"ABOVE_FINGER_TIPS\";\n    /**\n     * Next to the thumb\n     */\n    HandConstraintZone[HandConstraintZone[\"RADIAL_SIDE\"] = 1] = \"RADIAL_SIDE\";\n    /**\n     * Next to the pinky finger\n     */\n    HandConstraintZone[HandConstraintZone[\"ULNAR_SIDE\"] = 2] = \"ULNAR_SIDE\";\n    /**\n     * Below the wrist\n     */\n    HandConstraintZone[HandConstraintZone[\"BELOW_WRIST\"] = 3] = \"BELOW_WRIST\";\n})(HandConstraintZone || (HandConstraintZone = {}));\n/**\n * Orientations for the hand zones and for the attached node\n */\nexport var HandConstraintOrientation;\n(function (HandConstraintOrientation) {\n    /**\n     * Orientation is towards the camera\n     */\n    HandConstraintOrientation[HandConstraintOrientation[\"LOOK_AT_CAMERA\"] = 0] = \"LOOK_AT_CAMERA\";\n    /**\n     * Orientation is determined by the rotation of the palm\n     */\n    HandConstraintOrientation[HandConstraintOrientation[\"HAND_ROTATION\"] = 1] = \"HAND_ROTATION\";\n})(HandConstraintOrientation || (HandConstraintOrientation = {}));\n/**\n * Orientations for the hand zones and for the attached node\n */\nexport var HandConstraintVisibility;\n(function (HandConstraintVisibility) {\n    /**\n     * Constraint is always visible\n     */\n    HandConstraintVisibility[HandConstraintVisibility[\"ALWAYS_VISIBLE\"] = 0] = \"ALWAYS_VISIBLE\";\n    /**\n     * Constraint is only visible when the palm is up\n     */\n    HandConstraintVisibility[HandConstraintVisibility[\"PALM_UP\"] = 1] = \"PALM_UP\";\n    /**\n     * Constraint is only visible when the user is looking at the constraint.\n     * Uses XR Eye Tracking if enabled/available, otherwise uses camera direction\n     */\n    HandConstraintVisibility[HandConstraintVisibility[\"GAZE_FOCUS\"] = 2] = \"GAZE_FOCUS\";\n    /**\n     * Constraint is only visible when the palm is up and the user is looking at it\n     */\n    HandConstraintVisibility[HandConstraintVisibility[\"PALM_AND_GAZE\"] = 3] = \"PALM_AND_GAZE\";\n})(HandConstraintVisibility || (HandConstraintVisibility = {}));\n/**\n * Hand constraint behavior that makes the attached `TransformNode` follow hands in XR experiences.\n * @since 5.0.0\n */\nexport class HandConstraintBehavior {\n    /**\n     * Builds a hand constraint behavior\n     */\n    constructor() {\n        this._sceneRenderObserver = null;\n        this._zoneAxis = {};\n        /**\n         * Sets the HandConstraintVisibility level for the hand constraint\n         */\n        this.handConstraintVisibility = HandConstraintVisibility.PALM_AND_GAZE;\n        /**\n         * A number from 0.0 to 1.0, marking how restricted the direction the palm faces is for the attached node to be enabled.\n         * A 1 means the palm must be directly facing the user before the node is enabled, a 0 means it is always enabled.\n         * Used with HandConstraintVisibility.PALM_UP\n         */\n        this.palmUpStrictness = 0.95;\n        /**\n         * The radius in meters around the center of the hand that the user must gaze inside for the attached node to be enabled and appear.\n         * Used with HandConstraintVisibility.GAZE_FOCUS\n         */\n        this.gazeProximityRadius = 0.15;\n        /**\n         * Offset distance from the hand in meters\n         */\n        this.targetOffset = 0.1;\n        /**\n         * Where to place the node regarding the center of the hand.\n         */\n        this.targetZone = HandConstraintZone.ULNAR_SIDE;\n        /**\n         * Orientation mode of the 4 zones around the hand\n         */\n        this.zoneOrientationMode = HandConstraintOrientation.HAND_ROTATION;\n        /**\n         * Orientation mode of the node attached to this behavior\n         */\n        this.nodeOrientationMode = HandConstraintOrientation.HAND_ROTATION;\n        /**\n         * Set the hand this behavior should follow. If set to \"none\", it will follow any visible hand (prioritising the left one).\n         */\n        this.handedness = \"none\";\n        /**\n         * Rate of interpolation of position and rotation of the attached node.\n         * Higher values will give a slower interpolation.\n         */\n        this.lerpTime = 100;\n        // For a right hand\n        this._zoneAxis[HandConstraintZone.ABOVE_FINGER_TIPS] = new Vector3(0, 1, 0);\n        this._zoneAxis[HandConstraintZone.RADIAL_SIDE] = new Vector3(-1, 0, 0);\n        this._zoneAxis[HandConstraintZone.ULNAR_SIDE] = new Vector3(1, 0, 0);\n        this._zoneAxis[HandConstraintZone.BELOW_WRIST] = new Vector3(0, -1, 0);\n    }\n    /** gets or sets behavior's name */\n    get name() {\n        return \"HandConstraint\";\n    }\n    /** Enable the behavior */\n    enable() {\n        this._node.setEnabled(true);\n    }\n    /** Disable the behavior */\n    disable() {\n        this._node.setEnabled(false);\n    }\n    _getHandPose() {\n        if (!this._handTracking) {\n            return null;\n        }\n        // Retrieve any available hand, starting by the left\n        let hand;\n        if (this.handedness === \"none\") {\n            hand = this._handTracking.getHandByHandedness(\"left\") || this._handTracking.getHandByHandedness(\"right\");\n        }\n        else {\n            hand = this._handTracking.getHandByHandedness(this.handedness);\n        }\n        if (hand) {\n            const pinkyMetacarpal = hand.getJointMesh(WebXRHandJoint.PINKY_FINGER_METACARPAL);\n            const middleMetacarpal = hand.getJointMesh(WebXRHandJoint.MIDDLE_FINGER_METACARPAL);\n            const wrist = hand.getJointMesh(WebXRHandJoint.WRIST);\n            if (wrist && middleMetacarpal && pinkyMetacarpal) {\n                const handPose = { position: middleMetacarpal.absolutePosition, quaternion: new Quaternion(), id: hand.xrController.uniqueId };\n                // palm forward\n                const up = TmpVectors.Vector3[0];\n                const forward = TmpVectors.Vector3[1];\n                const left = TmpVectors.Vector3[2];\n                up.copyFrom(middleMetacarpal.absolutePosition).subtractInPlace(wrist.absolutePosition).normalize();\n                forward.copyFrom(pinkyMetacarpal.absolutePosition).subtractInPlace(middleMetacarpal.absolutePosition).normalize();\n                // Create vectors for a rotation quaternion, where forward points out from the palm\n                Vector3.CrossToRef(up, forward, forward);\n                Vector3.CrossToRef(forward, up, left);\n                Quaternion.FromLookDirectionLHToRef(forward, up, handPose.quaternion);\n                return handPose;\n            }\n        }\n        return null;\n    }\n    /**\n     * Initializes the hand constraint behavior\n     */\n    init() { }\n    /**\n     * Attaches the hand constraint to a `TransformNode`\n     * @param node defines the node to attach the behavior to\n     */\n    attach(node) {\n        this._node = node;\n        this._scene = node.getScene();\n        if (!this._node.rotationQuaternion) {\n            this._node.rotationQuaternion = Quaternion.RotationYawPitchRoll(this._node.rotation.y, this._node.rotation.x, this._node.rotation.z);\n        }\n        let lastTick = Date.now();\n        this._sceneRenderObserver = this._scene.onBeforeRenderObservable.add(() => {\n            const pose = this._getHandPose();\n            this._node.reservedDataStore = this._node.reservedDataStore || {};\n            this._node.reservedDataStore.nearInteraction = this._node.reservedDataStore.nearInteraction || {};\n            this._node.reservedDataStore.nearInteraction.excludedControllerId = null;\n            if (pose) {\n                const zoneOffset = TmpVectors.Vector3[0];\n                const camera = this._scene.activeCamera;\n                zoneOffset.copyFrom(this._zoneAxis[this.targetZone]);\n                const cameraLookAtQuaternion = TmpVectors.Quaternion[0];\n                if (camera && (this.zoneOrientationMode === HandConstraintOrientation.LOOK_AT_CAMERA || this.nodeOrientationMode === HandConstraintOrientation.LOOK_AT_CAMERA)) {\n                    const toCamera = TmpVectors.Vector3[1];\n                    toCamera.copyFrom(camera.position).subtractInPlace(pose.position).normalize();\n                    if (this._scene.useRightHandedSystem) {\n                        Quaternion.FromLookDirectionRHToRef(toCamera, Vector3.UpReadOnly, cameraLookAtQuaternion);\n                    }\n                    else {\n                        Quaternion.FromLookDirectionLHToRef(toCamera, Vector3.UpReadOnly, cameraLookAtQuaternion);\n                    }\n                }\n                if (this.zoneOrientationMode === HandConstraintOrientation.HAND_ROTATION) {\n                    pose.quaternion.toRotationMatrix(TmpVectors.Matrix[0]);\n                }\n                else {\n                    cameraLookAtQuaternion.toRotationMatrix(TmpVectors.Matrix[0]);\n                }\n                Vector3.TransformNormalToRef(zoneOffset, TmpVectors.Matrix[0], zoneOffset);\n                zoneOffset.scaleInPlace(this.targetOffset);\n                const targetPosition = TmpVectors.Vector3[2];\n                const targetRotation = TmpVectors.Quaternion[1];\n                targetPosition.copyFrom(pose.position).addInPlace(zoneOffset);\n                if (this.nodeOrientationMode === HandConstraintOrientation.HAND_ROTATION) {\n                    targetRotation.copyFrom(pose.quaternion);\n                }\n                else {\n                    targetRotation.copyFrom(cameraLookAtQuaternion);\n                }\n                const elapsed = Date.now() - lastTick;\n                Vector3.SmoothToRef(this._node.position, targetPosition, elapsed, this.lerpTime, this._node.position);\n                Quaternion.SmoothToRef(this._node.rotationQuaternion, targetRotation, elapsed, this.lerpTime, this._node.rotationQuaternion);\n                this._node.reservedDataStore.nearInteraction.excludedControllerId = pose.id;\n            }\n            this._setVisibility(pose);\n            lastTick = Date.now();\n        });\n    }\n    _setVisibility(pose) {\n        let palmVisible = true;\n        let gazeVisible = true;\n        const camera = this._scene.activeCamera;\n        if (camera) {\n            const cameraForward = camera.getForwardRay();\n            if (this.handConstraintVisibility === HandConstraintVisibility.GAZE_FOCUS || this.handConstraintVisibility === HandConstraintVisibility.PALM_AND_GAZE) {\n                gazeVisible = false;\n                let gaze;\n                if (this._eyeTracking) {\n                    gaze = this._eyeTracking.getEyeGaze();\n                }\n                gaze = gaze || cameraForward;\n                const gazeToBehavior = TmpVectors.Vector3[0];\n                if (pose) {\n                    pose.position.subtractToRef(gaze.origin, gazeToBehavior);\n                }\n                else {\n                    this._node.getAbsolutePosition().subtractToRef(gaze.origin, gazeToBehavior);\n                }\n                const projectedDistance = Vector3.Dot(gazeToBehavior, gaze.direction);\n                const projectedSquared = projectedDistance * projectedDistance;\n                if (projectedDistance > 0) {\n                    const radiusSquared = gazeToBehavior.lengthSquared() - projectedSquared;\n                    if (radiusSquared < this.gazeProximityRadius * this.gazeProximityRadius) {\n                        gazeVisible = true;\n                    }\n                }\n            }\n            if (this.handConstraintVisibility === HandConstraintVisibility.PALM_UP || this.handConstraintVisibility === HandConstraintVisibility.PALM_AND_GAZE) {\n                palmVisible = false;\n                if (pose) {\n                    const palmDirection = TmpVectors.Vector3[0];\n                    Vector3.LeftHandedForwardReadOnly.rotateByQuaternionToRef(pose.quaternion, palmDirection);\n                    if (Vector3.Dot(palmDirection, cameraForward.direction) > this.palmUpStrictness * 2 - 1) {\n                        palmVisible = true;\n                    }\n                }\n            }\n        }\n        this._node.setEnabled(palmVisible && gazeVisible);\n    }\n    /**\n     * Detaches the behavior from the `TransformNode`\n     */\n    detach() {\n        this._scene.onBeforeRenderObservable.remove(this._sceneRenderObserver);\n    }\n    /**\n     * Links the behavior to the XR experience in which to retrieve hand transform information.\n     * @param xr xr experience\n     */\n    linkToXRExperience(xr) {\n        const featuresManager = xr.featuresManager ? xr.featuresManager : xr;\n        if (!featuresManager) {\n            Tools.Error(\"XR features manager must be available or provided directly for the Hand Menu to work\");\n        }\n        else {\n            try {\n                this._eyeTracking = featuresManager.getEnabledFeature(WebXRFeatureName.EYE_TRACKING);\n            }\n            catch (_a) { }\n            try {\n                this._handTracking = featuresManager.getEnabledFeature(WebXRFeatureName.HAND_TRACKING);\n            }\n            catch (_b) {\n                Tools.Error(\"Hand tracking must be enabled for the Hand Menu to work\");\n            }\n        }\n    }\n}\n//# sourceMappingURL=handConstraintBehavior.js.map"],"names":["module","exports","utils","settle","cookies","buildURL","buildFullPath","parseHeaders","isURLSameOrigin","transitionalDefaults","AxiosError","CanceledError","parseProtocol","config","Promise","resolve","reject","onCanceled","requestData","data","requestHeaders","headers","responseType","done","cancelToken","unsubscribe","signal","removeEventListener","isFormData","isStandardBrowserEnv","request","XMLHttpRequest","auth","username","password","unescape","encodeURIComponent","Authorization","btoa","fullPath","baseURL","url","onloadend","responseHeaders","getAllResponseHeaders","response","responseText","status","statusText","value","err","open","method","toUpperCase","params","paramsSerializer","timeout","onreadystatechange","readyState","responseURL","indexOf","setTimeout","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","transitional","clarifyTimeoutError","ETIMEDOUT","xsrfValue","withCredentials","xsrfCookieName","read","undefined","xsrfHeaderName","forEach","val","key","toLowerCase","setRequestHeader","isUndefined","onDownloadProgress","addEventListener","onUploadProgress","upload","cancel","type","abort","subscribe","aborted","protocol","ERR_BAD_REQUEST","send","bind","Axios","mergeConfig","axios","createInstance","defaultConfig","context","instance","prototype","extend","create","instanceConfig","CancelToken","isCancel","VERSION","toFormData","Cancel","all","promises","spread","isAxiosError","executor","TypeError","resolvePromise","this","promise","token","then","_listeners","i","l","length","onfulfilled","_resolve","message","reason","throwIfRequested","listener","push","index","splice","source","c","call","ERR_CANCELED","name","inherits","__CANCEL__","InterceptorManager","dispatchRequest","validator","validators","defaults","interceptors","configOrUrl","assertOptions","silentJSONParsing","boolean","forcedJSONParsing","requestInterceptorChain","synchronousRequestInterceptors","interceptor","runWhen","synchronous","unshift","fulfilled","rejected","responseInterceptorChain","chain","Array","apply","concat","shift","newConfig","onFulfilled","onRejected","error","getUri","generateHTTPMethod","isForm","code","Error","toJSON","description","number","fileName","lineNumber","columnNumber","stack","descriptors","Object","defineProperties","defineProperty","from","customProps","axiosError","toFlatObject","obj","assign","handlers","use","options","eject","id","fn","h","isAbsoluteURL","combineURLs","requestedURL","transformData","throwIfCancellationRequested","transformRequest","merge","common","adapter","transformResponse","config1","config2","getMergedValue","target","isPlainObject","isArray","slice","mergeDeepProperties","prop","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","keys","configValue","validateStatus","ERR_BAD_RESPONSE","Math","floor","fns","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","process","toString","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isFileList","isObjectPayload","isObject","contentType","_FormData","env","FormData","rawValue","parser","encoder","isString","JSON","parse","trim","e","stringify","stringifySafely","strictJSONParsing","maxContentLength","maxBodyLength","thisArg","args","arguments","encode","replace","serializedParams","parts","v","isDate","toISOString","join","hashmarkIndex","relativeURL","write","expires","path","domain","secure","cookie","isNumber","Date","toGMTString","document","match","RegExp","decodeURIComponent","remove","now","test","payload","originURL","msie","navigator","userAgent","urlParsingNode","createElement","resolveURL","href","setAttribute","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","normalizedName","ignoreDuplicateOf","split","line","substr","exec","callback","arr","formData","convertValue","isTypedArray","Blob","Buffer","build","parentKey","fullKey","endsWith","toArray","el","append","pop","thing","deprecatedWarnings","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","schema","allowUnknown","ERR_BAD_OPTION_VALUE","result","ERR_BAD_OPTION","cache","kindOf","str","kindOfTest","getPrototypeOf","isFunction","hasOwnProperty","TypedArray","Uint8Array","constructor","pattern","ArrayBuffer","isView","pipe","product","assignValue","a","b","stripBOM","content","charCodeAt","superConstructor","props","sourceObj","destObj","filter","merged","getOwnPropertyNames","searchString","position","String","lastIndex","_applyDecoratedDescriptor","property","decorators","descriptor","_context","_context2","_context3","enumerable","configurable","initializer","writable","decorator","_classPrivateFieldBase","receiver","privateKey","_classPrivateFieldKey","_defineProperty","_initializerDefineProperty","AbstractActionManager","hoverCursor","actions","isRecursive","HasTriggers","t","Triggers","HasPickTriggers","tAsInt","parseInt","static","trigger","Action","triggerOptions","condition","onBeforeExecuteObservable","parameter","_triggerParameter","_nextActiveAction","_condition","_prepare","getTriggerParameter","setTriggerParameter","_evaluateConditionForCurrentFrame","currentRenderId","_actionManager","getScene","getRenderId","_evaluationId","_currentResult","isValid","_executeCurrent","evt","notifyObservers","execute","skipToNextActiveAction","_child","action","_getProperty","propertyPath","_getEffectiveTarget","serialize","parent","_serialize","serializedAction","serializationObject","children","properties","serializedCondition","_SerializeValueAsString","x","y","z","r","g","_GetTargetProperty","targetType","_isMesh","_isLight","_isCamera","_isMaterial","_isScene","ActionEvent","pointerX","pointerY","meshUnderPointer","sourceEvent","additionalData","scene","prim","pointerPos","ActionManager","super","_scene","actionManagers","dispose","hasSpecificTriggers","triggers","hasSpecificTriggers2","triggerA","triggerB","hasSpecificTrigger","parameterPredicate","hasPointerTriggers","OnPickTrigger","OnPointerOutTrigger","hasPickTriggers","OnPickUpTrigger","registerAction","OnEveryFrameTrigger","actionManager","_registeredActions","unregisterAction","processTrigger","OnKeyUpTrigger","OnKeyDownTrigger","keyCode","lowerCase","unicode","charCode","fromCharCode","root","triggerObject","GetTriggerName","Node","mesh","_meshId","parsedActions","object","parseParameter","floatValue","parseFloat","isNaN","effectiveTarget","values","traverse","parsedAction","combineArray","detached","parameters","combine","j","NothingTrigger","getMaterialByName","getNodeByName","getSoundByName","param","newAction","internalClassType","instantiate","nothing","triggerParams","getMeshByName","getMeshById","OnLeftPickTrigger","OnRightPickTrigger","OnCenterPickTrigger","OnPickDownTrigger","OnDoublePickTrigger","OnPickOutTrigger","OnLongPressTrigger","OnPointerOverTrigger","OnIntersectionEnterTrigger","OnIntersectionExitTrigger","Condition","ValueCondition","IsEqual","_IsEqual","IsDifferent","_IsDifferent","IsGreater","_IsGreater","IsLesser","_IsLesser","operator","_target","_effectiveTarget","_property","check","equals","GetOperatorName","predicate","state","SwitchBooleanAction","SetStateAction","SetValueAction","markAsDirty","IncrementValueAction","PlayAnimationAction","to","loop","beginAnimation","StopAnimationAction","stopAnimation","DoNothingAction","CombineAction","enableChildrenConditions","ExecuteCodeAction","func","SetParentAction","_parent","invertParentWorldMatrix","getWorldMatrix","clone","invert","PlaySoundAction","sound","_sound","play","StopSoundAction","stop","InterpolateValueAction","duration","stopOtherAnimations","onInterpolationDone","onInterpolationDoneObservable","frame","dataType","animation","setKeys","beginDirectAnimation","Animatable","syncRoot","_syncRoot","masterFrame","_runtimeAnimations","currentFrame","weight","_weight","min","max","speedRatio","_speedRatio","_prepareForSpeedRatioChange","_goToFrame","goToFrame","fromFrame","toFrame","loopAnimation","onAnimationEnd","animations","onAnimationLoop","isAdditive","_localDelayOffset","_pausedDelay","_manualJumpDelay","_paused","_frameToSyncFromJump","disposeOnEnd","animationStarted","onAnimationEndObservable","onAnimationLoopObservable","appendAnimations","_activeAnimatables","syncWith","getAnimations","newRuntimeAnimation","_onLoop","getAnimationByTargetProperty","runtimeAnimations","targetProperty","getRuntimeAnimationByTargetProperty","reset","enableBlending","blendingSpeed","disableBlending","_a","fps","framePerSecond","delay","pause","restart","_raiseOnAnimationEnd","animationName","targetMask","idx","runtimeAnimation","waitAsync","add","_animate","running","isRunning","animate","clear","animationsEnabled","_animationTimeLast","_pendingData","deltaTime","useConstantAnimationDeltaTime","animationTimeScale","animatables","_animationTime","animationTime","animatable","_processLateAnimationBindings","returnedAnimatable","stopCurrent","shouldRunTargetAnimations","getAnimatables","directDescendantsOnly","getDescendants","child","temp","getAllAnimatablesByTarget","group","animationGroups","originalValue","_registeredForLateAnimationBindings","pushNoDuplicate","_lateAnimationHolders","targetPath","totalWeight","totalAdditiveWeight","additiveAnimations","holder","normalizer","finalPosition","finalScaling","finalQuaternion","startIndex","originalAnimation","scale","skipOverride","decompose","currentValue","scaleInPlace","animIndex","currentPosition","currentScaling","currentQuaternion","scaleAndAddToRef","normalize","multiplyToRef","workValue","_animationState","refQuaternion","cumulativeQuaternion","copyFrom","quaternions","weights","cumulativeAmount","matrixDecomposeMode","m","finalValue","_processLateAnimationBindingsForMatrices","w","_processLateAnimationBindingsForQuaternions","rangeName","frameOffset","rescaleAsRequired","skelDimensionsRatio","sourceRange","getRange","sourceKeys","getKeys","sourceBoneLength","sourceParent","getParent","parentScalingReqd","parentRatio","dimensionsScalingReqd","destKeys","orig","origTranslation","mat","nKeys","getTranslation","setTranslation","multiplyInPlace","createRange","Animation","totalFrame","loopMode","easingFunction","isFinite","ANIMATIONTYPE_FLOAT","ANIMATIONTYPE_QUATERNION","ANIMATIONTYPE_VECTOR3","ANIMATIONTYPE_VECTOR2","ANIMATIONTYPE_COLOR3","ANIMATIONTYPE_COLOR4","ANIMATIONTYPE_SIZE","setEasingFunction","animationType","ANIMATIONLOOPMODE_CONSTANT","_PrepareAnimation","node","beginDirectHierarchyAnimation","sourceAnimation","referenceFrame","range","cloneOriginal","clonedName","_keys","firstKey","endIndex","lastKey","valueStore","referenceValue","referencePosition","referenceQuaternion","referenceScaling","keyPosition","keyQuaternion","keyScaling","referenceFound","rangeValue","fromKeyFound","toKeyFound","_getKeyValue","currentKey","nextKey","animationState","repeatCount","_interpolate","conjugateInPlace","ANIMATIONTYPE_MATRIX","subtractInPlace","divideInPlace","subtractToRef","width","height","targetValue","frameRate","transition","endFrame","hasRunningRuntimeAnimations","isStopped","_easingFunction","_events","_ranges","targetPropertyPath","ANIMATIONLOOPMODE_CYCLE","uniqueId","_UniqueIdGenerator","fullDetails","ret","first","addEvent","event","sort","removeEvents","getEvents","deleteRange","deleteFrames","getHighestFrame","getEasingFunction","floatInterpolateFunction","startValue","endValue","gradient","floatInterpolateFunctionWithTangents","outTangent","inTangent","quaternionInterpolateFunction","quaternionInterpolateFunctionWithTangents","vector3InterpolateFunction","vector3InterpolateFunctionWithTangents","vector2InterpolateFunction","vector2InterpolateFunctionWithTangents","sizeInterpolateFunction","color3InterpolateFunction","color3InterpolateFunctionWithTangents","color4InterpolateFunction","color4InterpolateFunctionWithTangents","evaluate","highLimitValue","keysLength","startKey","endKey","interpolation","useTangent","frameDelta","ease","ANIMATIONLOOPMODE_RELATIVE","offsetValue","quatValue","addInPlace","vec3Value","vec2Value","color3Value","color4Value","AllowMatricesInterpolation","matrixInterpolateFunction","AllowMatrixDecomposeForInterpolation","loopBehavior","animationKey","asArray","ranges","left","right","amount","Lerp","Slerp","toFixed","parsedAnimation","_inTangent","_outTangent","keyData","destination","output","serializedAnimation","Parse","snippetId","snippet","jsonPayload","outputs","SnippetUrl","CreateFromSnippetAsync","ParseFromSnippetAsync","N","AnimationEvent","onlyOnce","isDone","_clone","TargetedAnimation","getClassName","targetId","AnimationGroup","_from","_to","isStarted","_isStarted","isPlaying","_isPaused","_animatables","_loopAnimation","_isAdditive","targetedAnimations","_targetedAnimations","Number","MAX_VALUE","_parentContainer","onAnimationGroupLoopObservable","onAnimationGroupEndObservable","onAnimationGroupPauseObservable","onAnimationGroupPlayObservable","metadata","_animationLoopFlags","getUniqueId","addAnimationGroup","addTargetedAnimation","targetedAnimation","beginFrame","newKey","_processLoop","_animationLoopCount","start","_checkAnimationGroupEnded","list","setWeightForAllAnimatables","syncAllAnimationsWith","newName","targetConverter","cloneAnimations","newGroup","targetAnimation","targetedAnimationIndex","tags","parsedAnimationGroup","animationGroup","morphTarget","getMorphTargetById","targetNode","getNodeById","sourceAnimationGroup","AnimationKeyInterpolation","AnimationRange","EasingFunction","_easingMode","EASINGMODE_EASEIN","setEasingMode","easingMode","n","getEasingMode","easeInCore","EASINGMODE_EASEOUT","EASINGMODE_EASEINOUT","CircleEase","sqrt","BackEase","amplitude","num","pow","sin","ExponentialEase","exponent","exp","QuadraticEase","SineEase","_staticOffsetValueQuaternion","freeze","_staticOffsetValueVector3","_staticOffsetValueVector2","_staticOffsetValueSize","_staticOffsetValueColor3","RuntimeAnimation","_currentFrame","_currentValue","_targetPath","_currentActiveTarget","_host","_originalValue","_originalBlendValue","_offsetsCache","_highLimitsCache","_stopped","_blendingFactor","_directTarget","_ratioOffset","_previousDelay","_previousRatio","_targetIsArray","_animation","_activeTargets","_getCorrectLoopMode","_minFrame","_maxFrame","_minValue","_maxValue","_preparePath","_getOriginalValues","events","_enableBlending","animationPropertiesOverride","targetIndex","restoreOriginal","_setValue","setValue","getRestPose","_registerTargetForLateAnimationBinding","newSpeedRatio","newRatio","returnValue","ratio","keyOffset","fromValue","toValue","subtract","hostElement","audioContext","audioDestination","AudioEngine","_audioContextInitialized","unlocked","_muteButton","_displayMuteButton","_initializeAudioContext","_audioContext","_audioDestination","canUseWebAudio","WarnedWebAudioUnsupported","isMP3supported","isOGGsupported","useCustomUnlockedButton","onAudioUnlockedObservable","onAudioLockedObservable","_tryToRun","_onResize","_moveButtonToTopLeft","AudioContext","audioElem","_hostElement","canPlayType","lock","_triggerSuspendedState","unlock","_triggerRunningState","_resumeAudioContext","resume","masterGain","createGain","gain","connect","_hideMuteButton","catch","className","title","css","SVGSVGElement","style","appendChild","createTextNode","getElementsByTagName","body","top","offsetTop","offsetLeft","removeChild","_connectedAnalyser","stopDebugCanvas","disconnect","getGlobalVolume","setGlobalVolume","newVolume","connectToAnalyser","analyser","connectAudioNodes","SoundTrack","_isInitialized","soundCollection","_options","mainTrack","soundTracks","_initializeSoundTrackAudioGraph","_outputAudioNode","volume","addSound","connectToSoundTrackAudioNode","soundTrackId","mainSoundTrack","removeSound","setVolume","switchPanningModelToHRTF","switchPanningModelToEqualPower","parsedData","container","rootUrl","loadedSound","loadedSounds","sounds","parsedSound","get","compo","_getComponent","AudioSceneComponent","_addComponent","_mainSoundTrack","sdIndex","audioEnabled","set","enableAudio","disableAudio","headphone","switchAudioModeForHeadphones","switchAudioModeForNormalSpeakers","audioListenerPositionProvider","audioListenerRotationProvider","audioPositioningRefreshRate","_audioEnabled","_headphone","_cachedCameraDirection","_cachedCameraPosition","_lastCheck","_invertMatrixTemp","_cameraDirectionTemp","register","_afterRenderStage","registerStep","_afterRender","rebuild","soundtrack","soundId","addFromContainer","autoplay","removeFromContainer","scIndex","isPaused","audioEngine","listeningCamera","activeCamera","activeCameras","setPosition","globalPosition","rotation","setOrientation","rigCameras","getViewMatrix","invertToRef","_CameraDirection","useCustomAttenuation","updateDistanceFromListener","Sound","_loop","updateOptions","currentTime","_htmlAudioElement","timeSinceLastStart","_startTime","_currentTime","spatialSound","_spatialSound","newValue","_createSpatialParameters","urlOrArrayBuffer","readyToPlayCallback","_b","_c","_d","_e","refDistance","rolloffFactor","maxDistance","distanceModel","onEndedObservable","_panningModel","_playbackRate","_streaming","_position","_localDirection","_volume","_isReadyToPlay","_isDirectional","_coneInnerAngle","_coneOuterAngle","_coneOuterGain","_isOutputConnected","_urlType","_SceneComponentInitialization","_readyToPlayCallback","_customAttenuationFunction","currentVolume","currentDistance","playbackRate","streaming","_length","_offset","offset","_soundGain","_inputAudioNode","validParameter","HTMLMediaElement","MediaStream","AudioBuffer","urls","codecSupportedFound","_streamingSource","byteLength","_soundLoaded","_audioBufferLoaded","skipCodecCheck","Audio","controls","preload","load","_loadFile","exception","ex","_soundPanner","_soundSource","_audioBuffer","src","_connectedTransformNode","_registerFunc","unregisterAfterWorldMatrixUpdate","isReady","audioData","setAudioBuffer","audioBuffer","_f","_g","_h","_j","_k","_setOffset","_updateSpatialParameters","loopStart","loopEnd","panningModel","_switchPanningModel","soundTrackAudioNode","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","directionalConeInnerAngle","directionalConeOuterAngle","newPosition","positionX","positionY","positionZ","setLocalDirectionToMesh","newLocalDirection","_updateDirection","direction","orientationX","orientationY","orientationZ","distance","getDistanceToCamera","setAttenuationFunction","time","startTime","onended","_onended","tryToPlay","playPromise","addOnce","oldSource","createBufferSource","actualOffset","stopTime","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","setPlaybackRate","newPlaybackRate","getPlaybackRate","getVolume","attachToMesh","transformNode","_onRegisterAfterWorldMatrixUpdate","registerAfterWorldMatrixUpdate","detachFromMesh","getBoundingInfo","boundingInfo","boundingSphere","centerWorld","absolutePosition","setBufferAndRun","clonedSound","getAudioBuffer","currentOptions","getSoundSource","getSoundGain","connectedMeshId","isDirectional","localDirectionToMesh","sourceSound","soundName","soundUrl","newSound","removePendingData","addPendingData","soundPosition","connectedMesh","_","WeightedSound","_sounds","_weights","weightSum","invWeightSum","_currentIndex","startOffset","randomValue","random","total","BakedVertexAnimationManager","_texture","_isEnabled","isEnabled","animationParameters","_markSubMeshesAsAttributesDirty","meshes","bakedVertexAnimationManager","effect","useInstances","size","getSize","setFloat2","setFloat","setVector4","setTexture","copy","copyTo","setAnimationParameters","startFrame","speedFramesPerSecond","forceDisposeTextures","vatMap","AutoRotationBehavior","_zoomStopsAnimation","_idleRotationSpeed","_idleRotationWaitTime","_idleRotationSpinupTime","targetAlpha","_isPointerDown","_lastFrameTime","_lastInteractionTime","Infinity","_cameraRotationSpeed","_lastFrameRadius","zoomStopsAnimation","flag","idleRotationSpeed","speed","idleRotationWaitTime","idleRotationSpinupTime","rotationInProgress","abs","init","attach","camera","_attachedCamera","_onPrePointerObservableObserver","onPrePointerObservable","pointerInfoPre","_onAfterCheckInputsObserver","onAfterCheckInputsObservable","_reachTargetAlpha","dt","_applyUserInteraction","timeToRotation","alpha","detach","resetLastInteractionTime","customTime","_userIsZooming","inertialRadiusOffset","_shouldAnimationStopForInteraction","zoomHasHitLimit","radius","_userIsMoving","inertialAlphaOffset","inertialBetaOffset","inertialPanningX","inertialPanningY","BouncingBehavior","transitionDuration","lowerRadiusTransitionRange","upperRadiusTransitionRange","_autoTransitionRange","_radiusIsAnimating","_radiusBounceTransition","autoTransitionRange","_onMeshTargetChangedObserver","onMeshTargetChangedObservable","computeWorldMatrix","diagonal","diagonalLength","_isRadiusAtLimit","lowerRadiusLimit","_applyBoundRadiusAnimation","upperRadiusLimit","radiusLimit","radiusDelta","EasingMode","_cachedWheelPrecision","wheelPrecision","stopAllAnimations","_clearAnimationLocks","FramingBehavior","onTargetFramingAnimationEndObservable","_mode","FitFrustumSidesMode","_radiusScale","_positionScale","_defaultElevation","_elevationReturnTime","_elevationReturnWaitTime","_framingTime","autoCorrectCameraLimitsAndSensibility","_betaIsAnimating","mode","radiusScale","positionScale","defaultElevation","elevation","elevationReturnTime","elevationReturnWaitTime","framingTime","zoomOnMesh","_maintainCameraAboveGround","focusOnOriginXZ","boundingBox","zoomOnBoundingInfo","minimumWorld","maximumWorld","zoomOnMeshHierarchy","getHierarchyBoundingVectors","zoomOnMeshesHierarchy","zoomTarget","bottom","zoomTargetY","radiusWorld","_vectorTransition","_calculateLowerRadiusFromModelBoundingSphere","minZ","IgnoreBoundsSizeMode","panningSensibility","_radiusTransition","useInputToRestoreState","storeState","boxVectorGlobalDiagonal","frustumSlope","_getFrustumSlope","distanceForHorizontalFrustum","distanceForVerticalFrustum","timeSinceInteraction","defaultBeta","PI","limitBeta","beta","_betaTransition","animatabe","aspectRatio","getEngine","getAspectRatio","frustumSlopeY","tan","fov","frustumSlopeX","isUserIsMoving","BaseSixDofDragBehavior","_attachedToElement","_virtualMeshesInfo","_tmpVector","_tmpQuaternion","_dragType","NONE","DRAG","DRAG_WITH_CONTROLLER","NEAR_DRAG","_moving","_dragging","draggableMeshes","zDragFactor","currentDraggingPointerIds","detachCameraControls","onDragStartObservable","onDragObservable","onDragEndObservable","allowMultiPointer","currentDraggingPointerId","currentDraggingPointerID","isMoving","_pointerCamera","cameraToUseForPointers","_createVirtualMeshInfo","dragMesh","_virtualScene","rotationQuaternion","originMesh","pivotMesh","dragging","moving","startingPivotPosition","startingPivotOrientation","startingPosition","startingOrientation","lastOriginPosition","lastDragPosition","_resetVirtualMeshesPosition","_ownerNode","getAbsolutePivotPoint","_pointerUpdate2D","ray","pointerId","cameraRigMode","_isLeftCamera","_isRightCamera","origin","virtualMeshesInfo","originDragDifference","localOriginDragDifference","addChild","_applyZOffset","lookAt","addToRef","_pointerUpdateXR","controllerAimTransform","controllerGripTransform","cameraForwardVec","originDragDirection","getForwardRay","controllerDragDistance","cameraToDrag","controllerToDrag","controllerToDragDistance","zOffsetScaling","minDistanceFromControllerToDragMesh","setAbsolutePosition","ownerNode","virtual","detachControl","pickPredicate","isDescendantOf","_pointerObserver","onPointerObservable","pointerInfo","isXRNearPointer","pointerType","pickInfo","hit","pickedMesh","pickedPoint","aimTransform","gripTransform","absoluteRotationQuaternion","leftCamera","inputs","attachedToElement","_targetDragStart","registeredPointerIndex","_reattachCameraControls","_targetDragEnd","delta","_targetDrag","worldPosition","worldRotation","worldDeltaPosition","worldDeltaRotation","arcRotateCamera","attachControl","noPreventDefault","_useCtrlForPanning","_panningMouseButton","PointerDragBehavior","enabled","_enabled","onEnabledObservable","_useAlternatePickedPointAboveMaxDragAngleDragSpeed","_activeDragButton","maxDragAngle","dragButtons","_useAlternatePickedPointAboveMaxDragAngle","dragDeltaRatio","updateDragPlane","_debugMode","moveAttached","startAndReleaseDragOnPointerEvents","useObjectOrientationForDragging","validateDrag","targetPosition","_alternatePickedPoint","_worldDragAxis","_targetPosition","_startDragRay","_lastPointerRay","_dragDelta","_pointA","_pointC","_localAxis","_lookAt","optionCount","dragAxis","dragPlaneNormal","isNearGrabbable","attachedNode","_PlaneScene","onDisposeObservable","_dragPlane","updatable","sideOrientation","button","_activePointerInfo","_startDrag","releaseDrag","_AnyMouseId","hostInformation","isMobile","MouseEvent","_moveDrag","_beforeRenderObserver","onBeforeRenderObservable","needMatrixUpdate","getAbsolutePosition","dragPlanePoint","startDrag","fromRay","startPickedPoint","lastRay","getTranslationToRef","_updateDragPlanePosition","_pickWithRayOnDragPlane","dragLength","getRotationMatrix","scaleToRef","dragDistance","forward","angle","acos","dot","pickResult","pickWithRay","dragPlanePosition","SixDofDragBehavior","_sceneRenderObserver","_targetOrientation","_targetScaling","_startingPosition","_startingOrientation","_startingScaling","onPositionChangedObservable","rotateDraggedObject","rotateAroundYOnly","rotateWithMotionController","disableMovement","faceCameraOnDragStart","_virtualTransformNode","oldParent","setParent","scaling","isNonUniformWithinEpsilon","_getPositionOffsetAround","transformationLocalOrigin","translationMatrix","translationMatrixInv","rotationMatrix","scaleMatrix","finalMatrix","_onePointerPositionUpdated","setAll","toEulerAngles","_twoPointersPositionUpdated","startingPosition0","startingPosition1","startingCenter","startingVector","currentPosition0","currentPosition1","currentCenter","currentVector","translation","positionOffset","pointerCount","worldPivot","toCamera","quat","useRightHandedSystem","setPivotPoint","previousFaceCameraFlag","HandConstraintZone","HandConstraintOrientation","HandConstraintVisibility"],"sourceRoot":""}